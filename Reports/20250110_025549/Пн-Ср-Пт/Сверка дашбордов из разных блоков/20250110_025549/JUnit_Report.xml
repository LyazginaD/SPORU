<?xml version="1.0" encoding="UTF-8"?>
<testsuites name="Сверка дашбордов из разных блоков" time="7428.272" tests="5" failures="4" errors="0">
   <testsuite name="Сверка дашбордов из разных блоков" tests="5" failures="4" errors="0" time="7428.272" skipped="0" timestamp="10-01-2025T02:55:54" hostname="liazgina-di - UVV-WS904-D.ot.ru" id="Test Suites/Пн-Ср-Пт/Сверка дашбордов из разных блоков">
      <properties>
         <property name="deviceName" value=""/>
         <property name="devicePlatform"/>
         <property name="logFolder" value="C:\\Users\\LIAZGINA-DI\\git\\SPORU\\Reports\\20250110_025549\\\u041F\u043D-\u0421\u0440-\u041F\u0442\\\u0421\u0432\u0435\u0440\u043A\u0430 \u0434\u0430\u0448\u0431\u043E\u0440\u0434\u043E\u0432 \u0438\u0437 \u0440\u0430\u0437\u043D\u044B\u0445 \u0431\u043B\u043E\u043A\u043E\u0432\\20250110_025549"/>
         <property name="logFiles" value="C:\\Users\\LIAZGINA-DI\\git\\SPORU\\Reports\\20250110_025549\\\u041F\u043D-\u0421\u0440-\u041F\u0442\\\u0421\u0432\u0435\u0440\u043A\u0430 \u0434\u0430\u0448\u0431\u043E\u0440\u0434\u043E\u0432 \u0438\u0437 \u0440\u0430\u0437\u043D\u044B\u0445 \u0431\u043B\u043E\u043A\u043E\u0432\\20250110_025549\\execution0.log, C:\\Users\\LIAZGINA-DI\\git\\SPORU\\Reports\\20250110_025549\\\u041F\u043D-\u0421\u0440-\u041F\u0442\\\u0421\u0432\u0435\u0440\u043A\u0430 \u0434\u0430\u0448\u0431\u043E\u0440\u0434\u043E\u0432 \u0438\u0437 \u0440\u0430\u0437\u043D\u044B\u0445 \u0431\u043B\u043E\u043A\u043E\u0432\\20250110_025549\\execution1.log, C:\\Users\\LIAZGINA-DI\\git\\SPORU\\Reports\\20250110_025549\\\u041F\u043D-\u0421\u0440-\u041F\u0442\\\u0421\u0432\u0435\u0440\u043A\u0430 \u0434\u0430\u0448\u0431\u043E\u0440\u0434\u043E\u0432 \u0438\u0437 \u0440\u0430\u0437\u043D\u044B\u0445 \u0431\u043B\u043E\u043A\u043E\u0432\\20250110_025549\\execution2.log"/>
         <property name="attachments" value="C:\\Users\\LIAZGINA-DI\\git\\SPORU\\Reports\\20250110_025549\\\u041F\u043D-\u0421\u0440-\u041F\u0442\\\u0421\u0432\u0435\u0440\u043A\u0430 \u0434\u0430\u0448\u0431\u043E\u0440\u0434\u043E\u0432 \u0438\u0437 \u0440\u0430\u0437\u043D\u044B\u0445 \u0431\u043B\u043E\u043A\u043E\u0432\\20250110_025549\\1736467468889.png"/>
         <property name="hostName" value="liazgina-di - UVV-WS904-D.ot.ru"/>
         <property name="os" value="Windows 10 64bit"/>
         <property name="katalonVersion" value="9.5.0.217"/>
         <property name="browser" value="Chrome 131.0.0.0"/>
         <property name="hostAddress" value="192.168.0.19"/>
         <property name="sessionId" value="848aea2c7ce69b1aef66aa8d2e1ef2be"/>
         <property name="seleniumVersion" value="3.141.59"/>
         <property name="proxyInformation" value="ProxyInformation { proxyOption=NO_PROXY, proxyServerType=HTTP, username=, password=********, proxyServerAddress=, proxyServerPort=0, executionList=&quot;&quot;, isApplyToDesiredCapabilities=true }"/>
         <property name="platform" value="Windows 10"/>
      </properties>
      <testcase name="Test Cases/Сверки дашбордов/Выполнение бизнес-плана сверка дашбордов" time="905.104" classname="Test Cases/Сверки дашбордов/Выполнение бизнес-плана сверка дашбордов" status="FAILED">
         <failure type="FAILED" message="Test Cases/Сверки дашбордов/Выполнение бизнес-плана сверка дашбордов FAILED.&#xa;Reason:&#xa;com.kms.katalon.core.exception.StepFailedException: Unable to verify object is present (Root cause: com.kms.katalon.core.exception.StepFailedException: Unable to verify object is present&#xa;	at com.kms.katalon.core.webui.keyword.internal.WebUIKeywordMain.stepFailed(WebUIKeywordMain.groovy:64)&#xa;	at com.kms.katalon.core.webui.keyword.internal.WebUIKeywordMain.runKeyword(WebUIKeywordMain.groovy:26)&#xa;	at com.kms.katalon.core.webui.keyword.builtin.VerifyElementPresentKeyword.verifyElementPresent(VerifyElementPresentKeyword.groovy:92)&#xa;	at com.kms.katalon.core.webui.keyword.builtin.VerifyElementPresentKeyword.execute(VerifyElementPresentKeyword.groovy:68)&#xa;	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:74)&#xa;	at com.kms.katalon.core.webui.keyword.WebUiBuiltInKeywords.verifyElementPresent(WebUiBuiltInKeywords.groovy:1503)&#xa;	at Выполнение бизнес-плана сверка дашбордов.GetAllPAOData(Выполнение бизнес-плана сверка дашбордов:862)&#xa;	at Выполнение бизнес-плана сверка дашбордов.run(Выполнение бизнес-плана сверка дашбордов:362)&#xa;	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)&#xa;	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)&#xa;	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:448)&#xa;	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:439)&#xa;	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:418)&#xa;	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:410)&#xa;	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:285)&#xa;	at com.kms.katalon.core.common.CommonExecutor.accessTestCaseMainPhase(CommonExecutor.java:65)&#xa;	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:150)&#xa;	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:106)&#xa;	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:180)&#xa;	at TempTestSuite1736466949911.run(TempTestSuite1736466949911.groovy:35)&#xa;	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#xa;	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)&#xa;	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#xa;Caused by: java.lang.IllegalArgumentException: Object is null&#xa;	at com.kms.katalon.core.helper.KeywordHelper.checkTestObjectParameter(KeywordHelper.java:33)&#xa;	at com.kms.katalon.core.webui.keyword.builtin.VerifyElementPresentKeyword$_verifyElementPresent_closure1.doCall(VerifyElementPresentKeyword.groovy:76)&#xa;	at com.kms.katalon.core.webui.keyword.builtin.VerifyElementPresentKeyword$_verifyElementPresent_closure1.call(VerifyElementPresentKeyword.groovy)&#xa;	at com.kms.katalon.core.webui.keyword.internal.WebUIKeywordMain.runKeyword(WebUIKeywordMain.groovy:20)&#xa;	at com.kms.katalon.core.webui.keyword.builtin.VerifyElementPresentKeyword.verifyElementPresent(VerifyElementPresentKeyword.groovy:92)&#xa;	at com.kms.katalon.core.webui.keyword.builtin.VerifyElementPresentKeyword.execute(VerifyElementPresentKeyword.groovy:68)&#xa;	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:74)&#xa;	at com.kms.katalon.core.webui.keyword.WebUiBuiltInKeywords.verifyElementPresent(WebUiBuiltInKeywords.groovy:1503)&#xa;	at Script1719299571342.GetAllPAOData(Script1719299571342.groovy:862)&#xa;	at Script1719299571342.run(Script1719299571342.groovy:362)&#xa;	... 15 more&#xa;)&#xa;	at com.kms.katalon.core.keyword.internal.KeywordMain.stepFailed(KeywordMain.groovy:39)&#xa;	at com.kms.katalon.core.webui.keyword.internal.WebUIKeywordMain.stepFailed(WebUIKeywordMain.groovy:64)&#xa;	at com.kms.katalon.core.webui.keyword.internal.WebUIKeywordMain.runKeyword(WebUIKeywordMain.groovy:26)&#xa;	at com.kms.katalon.core.webui.keyword.builtin.VerifyElementPresentKeyword.verifyElementPresent(VerifyElementPresentKeyword.groovy:92)&#xa;	at com.kms.katalon.core.webui.keyword.builtin.VerifyElementPresentKeyword.execute(VerifyElementPresentKeyword.groovy:68)&#xa;	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:74)&#xa;	at com.kms.katalon.core.webui.keyword.WebUiBuiltInKeywords.verifyElementPresent(WebUiBuiltInKeywords.groovy:1503)&#xa;	at Выполнение бизнес-плана сверка дашбордов.GetAllPAOData(Выполнение бизнес-плана сверка дашбордов:862)&#xa;	at Выполнение бизнес-плана сверка дашбордов.run(Выполнение бизнес-плана сверка дашбордов:362)&#xa;	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)&#xa;	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)&#xa;	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:448)&#xa;	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:439)&#xa;	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:418)&#xa;	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:410)&#xa;	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:285)&#xa;	at com.kms.katalon.core.common.CommonExecutor.accessTestCaseMainPhase(CommonExecutor.java:65)&#xa;	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:150)&#xa;	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:106)&#xa;	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:180)&#xa;	at TempTestSuite1736466949911.run(TempTestSuite1736466949911.groovy:35)&#xa;	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#xa;	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)&#xa;	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#xa;Caused by: com.kms.katalon.core.exception.StepFailedException: Unable to verify object is present&#xa;	... 23 more&#xa;Caused by: java.lang.IllegalArgumentException: Object is null&#xa;	at com.kms.katalon.core.helper.KeywordHelper.checkTestObjectParameter(KeywordHelper.java:33)&#xa;	at com.kms.katalon.core.webui.keyword.builtin.VerifyElementPresentKeyword$_verifyElementPresent_closure1.doCall(VerifyElementPresentKeyword.groovy:76)&#xa;	at com.kms.katalon.core.webui.keyword.builtin.VerifyElementPresentKeyword$_verifyElementPresent_closure1.call(VerifyElementPresentKeyword.groovy)&#xa;	at com.kms.katalon.core.webui.keyword.internal.WebUIKeywordMain.runKeyword(WebUIKeywordMain.groovy:20)&#xa;	... 21 more&#xa;"/>
         <system-out><![CDATA[10-01-2025T02:55:54 - [TEST_CASE][FAILED] - Test Cases/Сверки дашбордов/Выполнение бизнес-плана сверка дашбордов: Test Cases/Сверки дашбордов/Выполнение бизнес-плана сверка дашбордов FAILED.
Reason:
com.kms.katalon.core.exception.StepFailedException: Unable to verify object is present (Root cause: com.kms.katalon.core.exception.StepFailedException: Unable to verify object is present
	at com.kms.katalon.core.webui.keyword.internal.WebUIKeywordMain.stepFailed(WebUIKeywordMain.groovy:64)
	at com.kms.katalon.core.webui.keyword.internal.WebUIKeywordMain.runKeyword(WebUIKeywordMain.groovy:26)
	at com.kms.katalon.core.webui.keyword.builtin.VerifyElementPresentKeyword.verifyElementPresent(VerifyElementPresentKeyword.groovy:92)
	at com.kms.katalon.core.webui.keyword.builtin.VerifyElementPresentKeyword.execute(VerifyElementPresentKeyword.groovy:68)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:74)
	at com.kms.katalon.core.webui.keyword.WebUiBuiltInKeywords.verifyElementPresent(WebUiBuiltInKeywords.groovy:1503)
	at Выполнение бизнес-плана сверка дашбордов.GetAllPAOData(Выполнение бизнес-плана сверка дашбордов:862)
	at Выполнение бизнес-плана сверка дашбордов.run(Выполнение бизнес-плана сверка дашбордов:362)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:448)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:439)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:418)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:410)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:285)
	at com.kms.katalon.core.common.CommonExecutor.accessTestCaseMainPhase(CommonExecutor.java:65)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:150)
	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:106)
	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:180)
	at TempTestSuite1736466949911.run(TempTestSuite1736466949911.groovy:35)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
Caused by: java.lang.IllegalArgumentException: Object is null
	at com.kms.katalon.core.helper.KeywordHelper.checkTestObjectParameter(KeywordHelper.java:33)
	at com.kms.katalon.core.webui.keyword.builtin.VerifyElementPresentKeyword$_verifyElementPresent_closure1.doCall(VerifyElementPresentKeyword.groovy:76)
	at com.kms.katalon.core.webui.keyword.builtin.VerifyElementPresentKeyword$_verifyElementPresent_closure1.call(VerifyElementPresentKeyword.groovy)
	at com.kms.katalon.core.webui.keyword.internal.WebUIKeywordMain.runKeyword(WebUIKeywordMain.groovy:20)
	at com.kms.katalon.core.webui.keyword.builtin.VerifyElementPresentKeyword.verifyElementPresent(VerifyElementPresentKeyword.groovy:92)
	at com.kms.katalon.core.webui.keyword.builtin.VerifyElementPresentKeyword.execute(VerifyElementPresentKeyword.groovy:68)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:74)
	at com.kms.katalon.core.webui.keyword.WebUiBuiltInKeywords.verifyElementPresent(WebUiBuiltInKeywords.groovy:1503)
	at Script1719299571342.GetAllPAOData(Script1719299571342.groovy:862)
	at Script1719299571342.run(Script1719299571342.groovy:362)
	... 15 more
)
	at com.kms.katalon.core.keyword.internal.KeywordMain.stepFailed(KeywordMain.groovy:39)
	at com.kms.katalon.core.webui.keyword.internal.WebUIKeywordMain.stepFailed(WebUIKeywordMain.groovy:64)
	at com.kms.katalon.core.webui.keyword.internal.WebUIKeywordMain.runKeyword(WebUIKeywordMain.groovy:26)
	at com.kms.katalon.core.webui.keyword.builtin.VerifyElementPresentKeyword.verifyElementPresent(VerifyElementPresentKeyword.groovy:92)
	at com.kms.katalon.core.webui.keyword.builtin.VerifyElementPresentKeyword.execute(VerifyElementPresentKeyword.groovy:68)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:74)
	at com.kms.katalon.core.webui.keyword.WebUiBuiltInKeywords.verifyElementPresent(WebUiBuiltInKeywords.groovy:1503)
	at Выполнение бизнес-плана сверка дашбордов.GetAllPAOData(Выполнение бизнес-плана сверка дашбордов:862)
	at Выполнение бизнес-плана сверка дашбордов.run(Выполнение бизнес-плана сверка дашбордов:362)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:448)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:439)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:418)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:410)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:285)
	at com.kms.katalon.core.common.CommonExecutor.accessTestCaseMainPhase(CommonExecutor.java:65)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:150)
	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:106)
	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:180)
	at TempTestSuite1736466949911.run(TempTestSuite1736466949911.groovy:35)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
Caused by: com.kms.katalon.core.exception.StepFailedException: Unable to verify object is present
	... 23 more
Caused by: java.lang.IllegalArgumentException: Object is null
	at com.kms.katalon.core.helper.KeywordHelper.checkTestObjectParameter(KeywordHelper.java:33)
	at com.kms.katalon.core.webui.keyword.builtin.VerifyElementPresentKeyword$_verifyElementPresent_closure1.doCall(VerifyElementPresentKeyword.groovy:76)
	at com.kms.katalon.core.webui.keyword.builtin.VerifyElementPresentKeyword$_verifyElementPresent_closure1.call(VerifyElementPresentKeyword.groovy)
	at com.kms.katalon.core.webui.keyword.internal.WebUIKeywordMain.runKeyword(WebUIKeywordMain.groovy:20)
	... 21 more


10-01-2025T02:55:56 - [TEST_STEP][PASSED] - date = new java.util.Date(): null

10-01-2025T02:55:56 - [TEST_STEP][PASSED] - todaysDate = date.format("dd.MM.yyyy"): null

10-01-2025T02:55:56 - [TEST_STEP][PASSED] - blockNum = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T02:55:56 - [TEST_STEP][PASSED] - path = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T02:55:56 - [TEST_STEP][PASSED] - typeOfData = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T02:55:56 - [TEST_STEP][PASSED] - i = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T02:55:56 - [TEST_STEP][PASSED] - dZO = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T02:55:56 - [TEST_STEP][PASSED] - vidget = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T02:55:56 - [TEST_STEP][PASSED] - tabR = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T02:55:56 - [TEST_STEP][PASSED] - tabB = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T02:55:56 - [TEST_STEP][PASSED] - o1R = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T02:55:56 - [TEST_STEP][PASSED] - o1B = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T02:55:56 - [TEST_STEP][PASSED] - PercPlanR = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T02:55:56 - [TEST_STEP][PASSED] - PercPlanB = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T02:55:56 - [TEST_STEP][PASSED] - PercFactR = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T02:55:56 - [TEST_STEP][PASSED] - PercFactB = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T02:55:56 - [TEST_STEP][PASSED] - pRR = "ПАО Россети/": null

10-01-2025T02:55:56 - [TEST_STEP][PASSED] - fR = "Россети ФСК ЕЭС/": null

10-01-2025T02:55:56 - [TEST_STEP][PASSED] - tyR = "АО "Тываэнерго"/": null

10-01-2025T02:55:56 - [TEST_STEP][PASSED] - chR = "Чеченэнерго": null

10-01-2025T02:55:56 - [TEST_STEP][PASSED] - vR = "Россети Волга/": null

10-01-2025T02:55:56 - [TEST_STEP][PASSED] - kR = "Россети Кубань/": null

10-01-2025T02:55:56 - [TEST_STEP][PASSED] - lR = "Россети Ленэнерго (ГК)/": null

10-01-2025T02:55:56 - [TEST_STEP][PASSED] - mR = "Россети Московский регион/": null

10-01-2025T02:55:56 - [TEST_STEP][PASSED] - sKR = "Россети Северный Кавказ (ГК)/": null

10-01-2025T02:55:56 - [TEST_STEP][PASSED] - sZR = "Россети Северо-Запад/": null

10-01-2025T02:55:56 - [TEST_STEP][PASSED] - siR = "Россети Сибирь (ГК)/": null

10-01-2025T02:55:56 - [TEST_STEP][PASSED] - tomR = "Россети Томск/": null

10-01-2025T02:55:56 - [TEST_STEP][PASSED] - tyumR = "Россети Тюмень/": null

10-01-2025T02:55:56 - [TEST_STEP][PASSED] - urR = "Россети Урал (ГК)/": null

10-01-2025T02:55:56 - [TEST_STEP][PASSED] - cenR = "Россети Центр (ГК)/": null

10-01-2025T02:55:56 - [TEST_STEP][PASSED] - cIPR = "Россети Центр и Приволжье (ГК)/": null

10-01-2025T02:55:56 - [TEST_STEP][PASSED] - ugR = "Россети Юг (ГК)/": null

10-01-2025T02:55:56 - [TEST_STEP][PASSED] - yR = "Россети Янтарь/": null

10-01-2025T02:55:56 - [TEST_STEP][PASSED] - pRB = "ПАО Россети/": null

10-01-2025T02:55:56 - [TEST_STEP][PASSED] - fB = "Россети ФСК ЕЭС/": null

10-01-2025T02:55:56 - [TEST_STEP][PASSED] - tyB = "АО "Тываэнерго"/": null

10-01-2025T02:55:56 - [TEST_STEP][PASSED] - chB = "Чеченэнерго": null

10-01-2025T02:55:56 - [TEST_STEP][PASSED] - vB = "Россети Волга/": null

10-01-2025T02:55:56 - [TEST_STEP][PASSED] - kB = "Россети Кубань/": null

10-01-2025T02:55:56 - [TEST_STEP][PASSED] - lB = "Россети Ленэнерго (ГК)/": null

10-01-2025T02:55:56 - [TEST_STEP][PASSED] - mB = "Россети Московский регион/": null

10-01-2025T02:55:56 - [TEST_STEP][PASSED] - sKB = "Россети Северный Кавказ (ГК)/": null

10-01-2025T02:55:56 - [TEST_STEP][PASSED] - sZB = "Россети Северо-Запад/": null

10-01-2025T02:55:56 - [TEST_STEP][PASSED] - siB = "Россети Сибирь (ГК)/": null

10-01-2025T02:55:56 - [TEST_STEP][PASSED] - tomB = "Россети Томск/": null

10-01-2025T02:55:56 - [TEST_STEP][PASSED] - tyumB = "Россети Тюмень/": null

10-01-2025T02:55:56 - [TEST_STEP][PASSED] - urB = "Россети Урал (ГК)/": null

10-01-2025T02:55:56 - [TEST_STEP][PASSED] - cenB = "Россети Центр (ГК)/": null

10-01-2025T02:55:56 - [TEST_STEP][PASSED] - cIPB = "Россети Центр и Приволжье (ГК)/": null

10-01-2025T02:55:56 - [TEST_STEP][PASSED] - ugB = "Россети Юг (ГК)/": null

10-01-2025T02:55:56 - [TEST_STEP][PASSED] - yB = "Россети Янтарь/": null

10-01-2025T02:55:56 - [TEST_STEP][PASSED] - VseDZO = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T02:55:56 - [TEST_STEP][PASSED] - a = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T02:55:56 - [TEST_STEP][PASSED] - b = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T02:55:56 - [TEST_STEP][PASSED] - dZONum = 0: null

10-01-2025T02:55:56 - [TEST_STEP][PASSED] - x = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T02:55:56 - [TEST_STEP][PASSED] - blockNum = 1: null

10-01-2025T02:55:56 - [TEST_STEP][PASSED] - path = "Object Repository/Выполнение бизнес-плана/": null

10-01-2025T02:55:56 - [TEST_STEP][PASSED] - Script1719299571342.Presettings(blockNum, path): null

10-01-2025T02:55:56 - [TEST_STEP][PASSED] - blockNumber = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T02:55:56 - [TEST_STEP][PASSED] - urlText = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T02:55:56 - [TEST_STEP][PASSED] - searchWord = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T02:55:56 - [TEST_STEP][PASSED] - i = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T02:55:56 - [TEST_STEP][PASSED] - ii = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T02:55:56 - [TEST_STEP][PASSED] - openBrowser(""): Browser is opened with url: ''

10-01-2025T02:55:57 - [MESSAGE][INFO] - Starting 'Chrome' driver

10-01-2025T02:55:57 - [MESSAGE][INFO] - Action delay is set to 0 milliseconds

10-01-2025T02:56:00 - [MESSAGE][PASSED] - Browser is opened with url: ''

10-01-2025T02:56:00 - [TEST_STEP][PASSED] - if (blockNum == 1): null

10-01-2025T02:56:00 - [TEST_STEP][PASSED] - path = "Object Repository/Выполнение бизнес-плана/": null

10-01-2025T02:56:00 - [TEST_STEP][PASSED] - blockNumber = 1: null

10-01-2025T02:56:00 - [TEST_STEP][PASSED] - navigateToUrl(findTestData("PlanFact").getValue(10, blockNumber)): Navigate to 'https://bi.rosseti.digital/viewer?dashboardGuid=d154a8eaf6824e2b9de1bb04dd061c18&sheetGuid=1305e8ce744049e1abdacea1ea397a26&fit=true' successfully

10-01-2025T02:56:05 - [MESSAGE][PASSED] - Navigate to 'https://bi.rosseti.digital/viewer?dashboardGuid=d154a8eaf6824e2b9de1bb04dd061c18&sheetGuid=1305e8ce744049e1abdacea1ea397a26&fit=true' successfully

10-01-2025T02:56:05 - [TEST_STEP][PASSED] - urlText = getText(findTestObject("Страница авторизации/Text")): Text of object 'Object Repository/Страница авторизации/Text' is: 'Вход'

10-01-2025T02:56:07 - [MESSAGE][PASSED] - Text of object 'Object Repository/Страница авторизации/Text' is: 'Вход'

10-01-2025T02:56:07 - [TEST_STEP][PASSED] - delay(10): Delayed 10 second(s)

10-01-2025T02:56:17 - [MESSAGE][PASSED] - Delayed 10 second(s)

10-01-2025T02:56:17 - [TEST_STEP][PASSED] - searchWord = "Вход": null

10-01-2025T02:56:17 - [TEST_STEP][PASSED] - if (urlText.contains(searchWord) == false): null

10-01-2025T02:56:17 - [TEST_STEP][PASSED] - setText(findTestObject("Страница авторизации/input__username"), findTestData("PlanFact").getValue(8, 1)): Text 'liazgina-di' is set on object 'Object Repository/Страница авторизации/input__username'

10-01-2025T02:56:18 - [MESSAGE][PASSED] - Text 'liazgina-di' is set on object 'Object Repository/Страница авторизации/input__username'

10-01-2025T02:56:18 - [TEST_STEP][PASSED] - setText(findTestObject("Страница авторизации/input__password"), findTestData("PlanFact").getValue(9, 1)): Text ')$%5srZ8o688Dm#q' is set on object 'Object Repository/Страница авторизации/input__password'

10-01-2025T02:56:19 - [MESSAGE][PASSED] - Text ')$%5srZ8o688Dm#q' is set on object 'Object Repository/Страница авторизации/input__password'

10-01-2025T02:56:19 - [TEST_STEP][PASSED] - click(findTestObject("Страница авторизации/button_")): Object: 'Object Repository/Страница авторизации/button_' is clicked on

10-01-2025T02:56:20 - [MESSAGE][PASSED] - Object: 'Object Repository/Страница авторизации/button_' is clicked on

10-01-2025T02:56:20 - [TEST_STEP][PASSED] - delay(50): Delayed 50 second(s)

10-01-2025T02:57:10 - [MESSAGE][PASSED] - Delayed 50 second(s)

10-01-2025T02:57:10 - [TEST_STEP][PASSED] - searchWord = "ДЗО": null

10-01-2025T02:57:10 - [TEST_STEP][PASSED] - urlText = getText(findTestObject("Страница авторизации/Text")): Text of object 'Object Repository/Страница авторизации/Text' is: 'ДЗО 
Все
Период
1, 2, 3 кв., Октябрь, Ноябрь 2024 года
Отклонения фактического уровня потерь от бизнес-плана, п.п.
-0.07
3.10
3.73
-0.05
0.16
-0.52
-0.27
АО «Тываэнерго»
АО «Чеченэнерго»
Россети Северный Кавказ
Россети Сибирь
Россети Тюмень
Россети Центр (ГК)
Россети Центр и Приволжье (ГК)
-1
0
1
2
3
4
5
6
7

Уровень потерь электроэнергии
АО «Тываэнерго»
АО «Чеченэнерго»
Россети Северный Кавказ
Россети Сибирь
Россети Тюмень
Россети Центр (ГК)
Россети Центр и Приволжье (ГК)
0
10
20
30
40
50
60
70
21.24
|
33.23
23.32
7.14
|
2.54
10.32
|
7.17
|
21.17
36.33
|
27.05
|
7.09
2.70
|
9.80
6.90
п.п.
0.04
Итого
0
0.02
0.04
0.06
%
5.56 5.56
5.52 5.52
План
Факт
1
100


Статус данных
Просьба обратить внимание
— все данные не занесены
Факт
План
Итого – Факт
Отпуск в сеть 230 146 370
Отпуск из сети 209 300 970
Потери 20 845 400
Итого – План
Отпуск в сеть 225 220 588
Отпуск из сети 205 622 267
Потери 19 598 321
Выполнение бизнес-плана в части показателя «Уровень потерь электроэнергии»
Показатели баланса электроэнергии по ДЗО – Факт 
642 168 3 631 955 20 651 499 52 412 668 47 865 721 55 088 893 50 521 486
506 218 2 312 442 15 078 002 48 697 705 46 573 769 49 682 043 47 031 337
135 950 1 319 513 5 573 496 3 714 964 1 291 953 5 406 850 3 490 149
Показатели баланса электроэнергии по ДЗО – План
608 287 3 403 997 19 485 633 50 003 068 49 871 651 53 713 338 48 819 116
479 095 2 272 993 14 949 980 46 434 624 48 605 475 48 149 456 45 313 619
129 192 1 131 004 4 535 653 3 568 444 1 266 176 5 563 882 3 505 497'

10-01-2025T02:57:41 - [MESSAGE][PASSED] - Text of object 'Object Repository/Страница авторизации/Text' is: 'ДЗО 
Все
Период
1, 2, 3 кв., Октябрь, Ноябрь 2024 года
Отклонения фактического уровня потерь от бизнес-плана, п.п.
-0.07
3.10
3.73
-0.05
0.16
-0.52
-0.27
АО «Тываэнерго»
АО «Чеченэнерго»
Россети Северный Кавказ
Россети Сибирь
Россети Тюмень
Россети Центр (ГК)
Россети Центр и Приволжье (ГК)
-1
0
1
2
3
4
5
6
7

Уровень потерь электроэнергии
АО «Тываэнерго»
АО «Чеченэнерго»
Россети Северный Кавказ
Россети Сибирь
Россети Тюмень
Россети Центр (ГК)
Россети Центр и Приволжье (ГК)
0
10
20
30
40
50
60
70
21.24
|
33.23
23.32
7.14
|
2.54
10.32
|
7.17
|
21.17
36.33
|
27.05
|
7.09
2.70
|
9.80
6.90
п.п.
0.04
Итого
0
0.02
0.04
0.06
%
5.56 5.56
5.52 5.52
План
Факт
1
100


Статус данных
Просьба обратить внимание
— все данные не занесены
Факт
План
Итого – Факт
Отпуск в сеть 230 146 370
Отпуск из сети 209 300 970
Потери 20 845 400
Итого – План
Отпуск в сеть 225 220 588
Отпуск из сети 205 622 267
Потери 19 598 321
Выполнение бизнес-плана в части показателя «Уровень потерь электроэнергии»
Показатели баланса электроэнергии по ДЗО – Факт 
642 168 3 631 955 20 651 499 52 412 668 47 865 721 55 088 893 50 521 486
506 218 2 312 442 15 078 002 48 697 705 46 573 769 49 682 043 47 031 337
135 950 1 319 513 5 573 496 3 714 964 1 291 953 5 406 850 3 490 149
Показатели баланса электроэнергии по ДЗО – План
608 287 3 403 997 19 485 633 50 003 068 49 871 651 53 713 338 48 819 116
479 095 2 272 993 14 949 980 46 434 624 48 605 475 48 149 456 45 313 619
129 192 1 131 004 4 535 653 3 568 444 1 266 176 5 563 882 3 505 497'

10-01-2025T02:57:41 - [TEST_STEP][PASSED] - if (urlText.contains("ошибка") || urlText.contains(searchWord) == false): null

10-01-2025T02:57:41 - [TEST_STEP][PASSED] - Script1719299571342.ZakrytOpoveshenie(): null

10-01-2025T02:57:41 - [TEST_STEP][PASSED] - opoveshenie = getText(findTestObject("Выполнение бизнес-плана/Просьба обратить внимание")): Text of object 'Object Repository/Выполнение бизнес-плана/Просьба обратить внимание' is: 'Просьба обратить внимание'

10-01-2025T02:57:46 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выполнение бизнес-плана/Просьба обратить внимание' is: 'Просьба обратить внимание'

10-01-2025T02:57:46 - [TEST_STEP][PASSED] - if (opoveshenie == "Просьба обратить внимание"): Object: 'Object Repository/Выполнение бизнес-плана/Закрыть оповещение' is clicked on

10-01-2025T02:57:46 - [TEST_STEP][PASSED] - click(findTestObject("Выполнение бизнес-плана/Закрыть оповещение")): Object: 'Object Repository/Выполнение бизнес-плана/Закрыть оповещение' is clicked on

10-01-2025T02:57:47 - [MESSAGE][PASSED] - Object: 'Object Repository/Выполнение бизнес-плана/Закрыть оповещение' is clicked on

10-01-2025T02:57:47 - [TEST_STEP][PASSED] - click(findTestObject(path + "Фильтр Дата")): Object: 'Object Repository/Выполнение бизнес-плана/Фильтр Дата' is clicked on

10-01-2025T02:57:48 - [MESSAGE][PASSED] - Object: 'Object Repository/Выполнение бизнес-плана/Фильтр Дата' is clicked on

10-01-2025T02:57:48 - [TEST_STEP][PASSED] - click(findTestObject(path + "Снять выделение в фильтре Дата")): Object: 'Object Repository/Выполнение бизнес-плана/Снять выделение в фильтре Дата' is clicked on

10-01-2025T02:57:48 - [MESSAGE][PASSED] - Object: 'Object Repository/Выполнение бизнес-плана/Снять выделение в фильтре Дата' is clicked on

10-01-2025T02:57:48 - [TEST_STEP][PASSED] - click(findTestObject(path + "Применить в фильтре Дата")): Object: 'Object Repository/Выполнение бизнес-плана/Применить в фильтре Дата' is clicked on

10-01-2025T02:57:49 - [MESSAGE][PASSED] - Object: 'Object Repository/Выполнение бизнес-плана/Применить в фильтре Дата' is clicked on

10-01-2025T02:57:49 - [TEST_STEP][PASSED] - delay(50): Delayed 50 second(s)

10-01-2025T02:58:39 - [MESSAGE][PASSED] - Delayed 50 second(s)

10-01-2025T02:58:39 - [TEST_STEP][PASSED] - Script1719299571342.ZakrytOpoveshenie(): null

10-01-2025T02:58:39 - [TEST_STEP][PASSED] - opoveshenie = getText(findTestObject("Выполнение бизнес-плана/Просьба обратить внимание")): Text of object 'Object Repository/Выполнение бизнес-плана/Просьба обратить внимание' is: 'Просьба обратить внимание'

10-01-2025T02:58:39 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выполнение бизнес-плана/Просьба обратить внимание' is: 'Просьба обратить внимание'

10-01-2025T02:58:39 - [TEST_STEP][PASSED] - if (opoveshenie == "Просьба обратить внимание"): Object: 'Object Repository/Выполнение бизнес-плана/Закрыть оповещение' is clicked on

10-01-2025T02:58:39 - [TEST_STEP][PASSED] - click(findTestObject("Выполнение бизнес-плана/Закрыть оповещение")): Object: 'Object Repository/Выполнение бизнес-плана/Закрыть оповещение' is clicked on

10-01-2025T02:58:40 - [MESSAGE][PASSED] - Object: 'Object Repository/Выполнение бизнес-плана/Закрыть оповещение' is clicked on

10-01-2025T02:58:40 - [TEST_STEP][PASSED] - click(findTestObject(path + "Фильтр Дата")): Object: 'Object Repository/Выполнение бизнес-плана/Фильтр Дата' is clicked on

10-01-2025T02:58:40 - [MESSAGE][PASSED] - Object: 'Object Repository/Выполнение бизнес-плана/Фильтр Дата' is clicked on

10-01-2025T02:58:40 - [TEST_STEP][PASSED] - scrollToElement(findTestObject(path + "2024 список"), 30): Scroll to object 'Object Repository/Выполнение бизнес-плана/2024 список' successfully

10-01-2025T02:58:41 - [MESSAGE][PASSED] - Scroll to object 'Object Repository/Выполнение бизнес-плана/2024 список' successfully

10-01-2025T02:58:41 - [TEST_STEP][PASSED] - click(findTestObject(path + "2024 список")): Object: 'Object Repository/Выполнение бизнес-плана/2024 список' is clicked on

10-01-2025T02:58:41 - [MESSAGE][PASSED] - Object: 'Object Repository/Выполнение бизнес-плана/2024 список' is clicked on

10-01-2025T02:58:41 - [TEST_STEP][PASSED] - scrollToElement(findTestObject(path + "1 квартал 2024 список"), 30): Scroll to object 'Object Repository/Выполнение бизнес-плана/1 квартал 2024 список' successfully

10-01-2025T02:58:41 - [MESSAGE][PASSED] - Scroll to object 'Object Repository/Выполнение бизнес-плана/1 квартал 2024 список' successfully

10-01-2025T02:58:41 - [TEST_STEP][PASSED] - click(findTestObject(path + "1 квартал 2024 список")): Object: 'Object Repository/Выполнение бизнес-плана/1 квартал 2024 список' is clicked on

10-01-2025T02:58:42 - [MESSAGE][PASSED] - Object: 'Object Repository/Выполнение бизнес-плана/1 квартал 2024 список' is clicked on

10-01-2025T02:58:42 - [TEST_STEP][PASSED] - click(findTestObject(path + "Январь 2024")): Object: 'Object Repository/Выполнение бизнес-плана/Январь 2024' is clicked on

10-01-2025T02:58:42 - [MESSAGE][PASSED] - Object: 'Object Repository/Выполнение бизнес-плана/Январь 2024' is clicked on

10-01-2025T02:58:42 - [TEST_STEP][PASSED] - click(findTestObject(path + "Февраль 2024")): Object: 'Object Repository/Выполнение бизнес-плана/Февраль 2024' is clicked on

10-01-2025T02:58:43 - [MESSAGE][PASSED] - Object: 'Object Repository/Выполнение бизнес-плана/Февраль 2024' is clicked on

10-01-2025T02:58:43 - [TEST_STEP][PASSED] - click(findTestObject(path + "Март 2024")): Object: 'Object Repository/Выполнение бизнес-плана/Март 2024' is clicked on

10-01-2025T02:58:43 - [MESSAGE][PASSED] - Object: 'Object Repository/Выполнение бизнес-плана/Март 2024' is clicked on

10-01-2025T02:58:43 - [TEST_STEP][PASSED] - scrollToElement(findTestObject(path + "2 квартал 2024"), 30): Scroll to object 'Object Repository/Выполнение бизнес-плана/2 квартал 2024' successfully

10-01-2025T02:58:44 - [MESSAGE][PASSED] - Scroll to object 'Object Repository/Выполнение бизнес-плана/2 квартал 2024' successfully

10-01-2025T02:58:44 - [TEST_STEP][PASSED] - click(findTestObject(path + "2 квартал 2024")): Object: 'Object Repository/Выполнение бизнес-плана/2 квартал 2024' is clicked on

10-01-2025T02:58:44 - [MESSAGE][PASSED] - Object: 'Object Repository/Выполнение бизнес-плана/2 квартал 2024' is clicked on

10-01-2025T02:58:44 - [TEST_STEP][PASSED] - scrollToElement(findTestObject(path + "3 квартал 2024 список"), 30): Scroll to object 'Object Repository/Выполнение бизнес-плана/3 квартал 2024 список' successfully

10-01-2025T02:58:45 - [MESSAGE][PASSED] - Scroll to object 'Object Repository/Выполнение бизнес-плана/3 квартал 2024 список' successfully

10-01-2025T02:58:45 - [TEST_STEP][PASSED] - click(findTestObject(path + "3 квартал 2024")): Object: 'Object Repository/Выполнение бизнес-плана/3 квартал 2024' is clicked on

10-01-2025T02:58:45 - [MESSAGE][PASSED] - Object: 'Object Repository/Выполнение бизнес-плана/3 квартал 2024' is clicked on

10-01-2025T02:58:45 - [TEST_STEP][PASSED] - scrollToElement(findTestObject(path + "4 квартал 2024 список"), 30): Scroll to object 'Object Repository/Выполнение бизнес-плана/4 квартал 2024 список' successfully

10-01-2025T02:58:46 - [MESSAGE][PASSED] - Scroll to object 'Object Repository/Выполнение бизнес-плана/4 квартал 2024 список' successfully

10-01-2025T02:58:46 - [TEST_STEP][PASSED] - click(findTestObject(path + "4 квартал 2024 список")): Object: 'Object Repository/Выполнение бизнес-плана/4 квартал 2024 список' is clicked on

10-01-2025T02:58:46 - [MESSAGE][PASSED] - Object: 'Object Repository/Выполнение бизнес-плана/4 квартал 2024 список' is clicked on

10-01-2025T02:58:46 - [TEST_STEP][PASSED] - scrollToElement(findTestObject(path + "Октябрь 2024"), 30): Scroll to object 'Object Repository/Выполнение бизнес-плана/Октябрь 2024' successfully

10-01-2025T02:58:46 - [MESSAGE][PASSED] - Scroll to object 'Object Repository/Выполнение бизнес-плана/Октябрь 2024' successfully

10-01-2025T02:58:46 - [TEST_STEP][PASSED] - click(findTestObject(path + "Октябрь 2024")): Object: 'Object Repository/Выполнение бизнес-плана/Октябрь 2024' is clicked on

10-01-2025T02:58:47 - [MESSAGE][PASSED] - Object: 'Object Repository/Выполнение бизнес-плана/Октябрь 2024' is clicked on

10-01-2025T02:58:47 - [TEST_STEP][PASSED] - scrollToElement(findTestObject(path + "Ноябрь 2024"), 30): Scroll to object 'Object Repository/Выполнение бизнес-плана/Ноябрь 2024' successfully

10-01-2025T02:58:47 - [MESSAGE][PASSED] - Scroll to object 'Object Repository/Выполнение бизнес-плана/Ноябрь 2024' successfully

10-01-2025T02:58:47 - [TEST_STEP][PASSED] - click(findTestObject(path + "Ноябрь 2024")): Object: 'Object Repository/Выполнение бизнес-плана/Ноябрь 2024' is clicked on

10-01-2025T02:58:47 - [MESSAGE][PASSED] - Object: 'Object Repository/Выполнение бизнес-плана/Ноябрь 2024' is clicked on

10-01-2025T02:58:47 - [TEST_STEP][PASSED] - scrollToElement(findTestObject(path + "Заголовок дашборда"), 30): Scroll to object 'Object Repository/Выполнение бизнес-плана/Заголовок дашборда' successfully

10-01-2025T02:58:48 - [MESSAGE][PASSED] - Scroll to object 'Object Repository/Выполнение бизнес-плана/Заголовок дашборда' successfully

10-01-2025T02:58:48 - [TEST_STEP][PASSED] - click(findTestObject(path + "Применить в фильтре Дата")): Object: 'Object Repository/Выполнение бизнес-плана/Применить в фильтре Дата' is clicked on

10-01-2025T02:58:49 - [MESSAGE][PASSED] - Object: 'Object Repository/Выполнение бизнес-плана/Применить в фильтре Дата' is clicked on

10-01-2025T02:58:49 - [TEST_STEP][PASSED] - delay(30): Delayed 30 second(s)

10-01-2025T02:59:19 - [MESSAGE][PASSED] - Delayed 30 second(s)

10-01-2025T02:59:19 - [TEST_STEP][PASSED] - Script1719299571342.ZakrytOpoveshenie(): null

10-01-2025T02:59:19 - [TEST_STEP][PASSED] - opoveshenie = getText(findTestObject("Выполнение бизнес-плана/Просьба обратить внимание")): Text of object 'Object Repository/Выполнение бизнес-плана/Просьба обратить внимание' is: 'Просьба обратить внимание'

10-01-2025T02:59:22 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выполнение бизнес-плана/Просьба обратить внимание' is: 'Просьба обратить внимание'

10-01-2025T02:59:22 - [TEST_STEP][PASSED] - if (opoveshenie == "Просьба обратить внимание"): Object: 'Object Repository/Выполнение бизнес-плана/Закрыть оповещение' is clicked on

10-01-2025T02:59:22 - [TEST_STEP][PASSED] - click(findTestObject("Выполнение бизнес-плана/Закрыть оповещение")): Object: 'Object Repository/Выполнение бизнес-плана/Закрыть оповещение' is clicked on

10-01-2025T02:59:23 - [MESSAGE][PASSED] - Object: 'Object Repository/Выполнение бизнес-плана/Закрыть оповещение' is clicked on

10-01-2025T02:59:23 - [TEST_STEP][PASSED] - click(findTestObject(path + "Фильтр ДЗО")): Object: 'Object Repository/Выполнение бизнес-плана/Фильтр ДЗО' is clicked on

10-01-2025T02:59:23 - [MESSAGE][PASSED] - Object: 'Object Repository/Выполнение бизнес-плана/Фильтр ДЗО' is clicked on

10-01-2025T02:59:23 - [TEST_STEP][PASSED] - click(findTestObject(path + "Снять выделение в фильтре ДЗО")): Object: 'Object Repository/Выполнение бизнес-плана/Снять выделение в фильтре ДЗО' is clicked on

10-01-2025T02:59:24 - [MESSAGE][PASSED] - Object: 'Object Repository/Выполнение бизнес-плана/Снять выделение в фильтре ДЗО' is clicked on

10-01-2025T02:59:24 - [TEST_STEP][PASSED] - click(findTestObject(path + "ПАО Россети")): Object: 'Object Repository/Выполнение бизнес-плана/ПАО Россети' is clicked on

10-01-2025T02:59:24 - [MESSAGE][PASSED] - Object: 'Object Repository/Выполнение бизнес-плана/ПАО Россети' is clicked on

10-01-2025T02:59:24 - [TEST_STEP][PASSED] - click(findTestObject(path + "Применить в фильтре ДЗО")): Object: 'Object Repository/Выполнение бизнес-плана/Применить в фильтре ДЗО' is clicked on

10-01-2025T02:59:25 - [MESSAGE][PASSED] - Object: 'Object Repository/Выполнение бизнес-плана/Применить в фильтре ДЗО' is clicked on

10-01-2025T02:59:25 - [TEST_STEP][PASSED] - delay(30): Delayed 30 second(s)

10-01-2025T02:59:55 - [MESSAGE][PASSED] - Delayed 30 second(s)

10-01-2025T02:59:55 - [TEST_STEP][PASSED] - VseDZO = getText(findTestObject(path + "Список ДЗО")): Text of object 'Object Repository/Выполнение бизнес-плана/Список ДЗО' is: '-0.07
3.10
3.73
-0.05
0.16
-0.52
-0.27
АО «Тываэнерго»
АО «Чеченэнерго»
Россети Северный Кавказ
Россети Сибирь
Россети Тюмень
Россети Центр (ГК)
Россети Центр и Приволжье (ГК)
-1
0
1
2
3
4
5
6
7'

10-01-2025T02:59:56 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выполнение бизнес-плана/Список ДЗО' is: '-0.07
3.10
3.73
-0.05
0.16
-0.52
-0.27
АО «Тываэнерго»
АО «Чеченэнерго»
Россети Северный Кавказ
Россети Сибирь
Россети Тюмень
Россети Центр (ГК)
Россети Центр и Приволжье (ГК)
-1
0
1
2
3
4
5
6
7'

10-01-2025T02:59:56 - [TEST_STEP][PASSED] - pRR = GetAllPAOData(path, dZONum, VseDZO, z = "ПАО Россети/"): null

10-01-2025T02:59:56 - [TEST_STEP][PASSED] - path2 = "Значения со страницы Выполнение бизнес-плана/Table Data/": null

10-01-2025T02:59:56 - [TEST_STEP][PASSED] - ii = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T02:59:56 - [TEST_STEP][PASSED] - i1 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T02:59:56 - [TEST_STEP][PASSED] - z = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T02:59:56 - [TEST_STEP][PASSED] - z1 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T02:59:56 - [TEST_STEP][PASSED] - println("path: " + path): null

10-01-2025T02:59:56 - [TEST_STEP][PASSED] - z = getText(findTestObject(path + "Итого")).replaceAll("[\r?
|
]", "/"): Text of object 'Object Repository/Выполнение бизнес-плана/Итого' is: '%
5.56 5.56
5.52 5.52
План
Факт
1
100'

10-01-2025T02:59:56 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выполнение бизнес-плана/Итого' is: '%
5.56 5.56
5.52 5.52
План
Факт
1
100'

10-01-2025T02:59:56 - [TEST_STEP][PASSED] - ii = z.indexOf("%") + 2: null

10-01-2025T02:59:56 - [TEST_STEP][PASSED] - if (ii > -1): null

10-01-2025T02:59:56 - [TEST_STEP][PASSED] - z = z.substring(ii, z.length()): null

10-01-2025T02:59:56 - [TEST_STEP][PASSED] - println(z): null

10-01-2025T02:59:56 - [TEST_STEP][PASSED] - ii = z.indexOf("/1/100") - 1: null

10-01-2025T02:59:56 - [TEST_STEP][PASSED] - if (ii > -1): null

10-01-2025T02:59:56 - [TEST_STEP][PASSED] - z = z.substring(0, ii): null

10-01-2025T02:59:56 - [TEST_STEP][PASSED] - println(z): null

10-01-2025T02:59:56 - [TEST_STEP][PASSED] - ii = z.indexOf("План"): null

10-01-2025T02:59:56 - [TEST_STEP][PASSED] - if (ii > -1): null

10-01-2025T02:59:56 - [TEST_STEP][PASSED] - z = z.substring(0, ii): null

10-01-2025T02:59:56 - [TEST_STEP][PASSED] - println(z): null

10-01-2025T02:59:56 - [TEST_STEP][PASSED] - ii = z.indexOf("/") + 1: null

10-01-2025T02:59:56 - [TEST_STEP][PASSED] - z1 = z.substring(0, ii): null

10-01-2025T02:59:56 - [TEST_STEP][PASSED] - println(z1): null

10-01-2025T02:59:56 - [TEST_STEP][PASSED] - z = z.substring(ii, z.length()): null

10-01-2025T02:59:56 - [TEST_STEP][PASSED] - println(z): null

10-01-2025T02:59:56 - [TEST_STEP][PASSED] - ii = z1.length() / 2: null

10-01-2025T02:59:56 - [TEST_STEP][PASSED] - z1 = replaceAll("[\r?
|
]", "/").trim(): null

10-01-2025T02:59:56 - [TEST_STEP][PASSED] - println(z1): null

10-01-2025T02:59:56 - [TEST_STEP][PASSED] - ii = z.length() / 2: null

10-01-2025T02:59:56 - [TEST_STEP][PASSED] - z = replace("/", "").trim(): null

10-01-2025T02:59:56 - [TEST_STEP][PASSED] - println(z): null

10-01-2025T02:59:56 - [TEST_STEP][PASSED] - x = x + z1 + "/" + z: null

10-01-2025T02:59:56 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T02:59:56 - [TEST_STEP][PASSED] - if (verifyElementPresent(findTestObject(path + "Таблица Итого-Факт"), 30)): null

10-01-2025T02:59:56 - [MESSAGE][PASSED] - Object 'Object Repository/Выполнение бизнес-плана/Таблица Итого-Факт' is present

10-01-2025T02:59:56 - [TEST_STEP][PASSED] - z = replaceAll("\s+", "").replaceAll("[а-яА-Я]", ""): Text of object 'Object Repository/Выполнение бизнес-плана/Таблица Итого-Факт' is: 'Отпуск в сеть 230 146 370
Отпуск из сети 209 300 970
Потери 20 845 400'

10-01-2025T02:59:57 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выполнение бизнес-плана/Таблица Итого-Факт' is: 'Отпуск в сеть 230 146 370
Отпуск из сети 209 300 970
Потери 20 845 400'

10-01-2025T02:59:57 - [TEST_STEP][PASSED] - println(z): null

10-01-2025T02:59:57 - [TEST_STEP][PASSED] - x = x + "/" + z: null

10-01-2025T02:59:57 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T02:59:57 - [TEST_STEP][PASSED] - click(findTestObject(path + "Кнопка План")): Object: 'Object Repository/Выполнение бизнес-плана/Кнопка План' is clicked on

10-01-2025T02:59:57 - [MESSAGE][PASSED] - Object: 'Object Repository/Выполнение бизнес-плана/Кнопка План' is clicked on

10-01-2025T02:59:57 - [TEST_STEP][PASSED] - z = replaceAll("\s+", "").replaceAll("[а-яА-Я]", ""): Text of object 'Object Repository/Выполнение бизнес-плана/Таблица Итого-План' is: 'Отпуск в сеть 225 220 588
Отпуск из сети 205 622 267
Потери 19 598 321'

10-01-2025T02:59:57 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выполнение бизнес-плана/Таблица Итого-План' is: 'Отпуск в сеть 225 220 588
Отпуск из сети 205 622 267
Потери 19 598 321'

10-01-2025T02:59:57 - [TEST_STEP][PASSED] - x = x + "/" + z: null

10-01-2025T02:59:57 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T02:59:57 - [TEST_STEP][PASSED] - click(findTestObject(path + "Кнопка Факт")): Object: 'Object Repository/Выполнение бизнес-плана/Кнопка Факт' is clicked on

10-01-2025T02:59:58 - [MESSAGE][PASSED] - Object: 'Object Repository/Выполнение бизнес-плана/Кнопка Факт' is clicked on

10-01-2025T02:59:58 - [TEST_STEP][PASSED] - return x: null

10-01-2025T02:59:58 - [TEST_STEP][PASSED] - println("pRR: " + pRR): null

10-01-2025T02:59:58 - [TEST_STEP][PASSED] - i = VseDZO.indexOf("ЕЭС"): null

10-01-2025T02:59:58 - [TEST_STEP][PASSED] - if (i > -1): null

10-01-2025T02:59:58 - [TEST_STEP][PASSED] - else: null

10-01-2025T02:59:58 - [TEST_STEP][PASSED] - fR = fR + "нет данных/нет данных/нет данных/нет данных/нет данных/нет данных/нет данных/нет данных/нет данных": null

10-01-2025T02:59:58 - [TEST_STEP][PASSED] - println("fR: " + fR): null

10-01-2025T02:59:58 - [TEST_STEP][PASSED] - i = VseDZO.indexOf("Тываэнерго"): null

10-01-2025T02:59:58 - [TEST_STEP][PASSED] - if (i > -1): null

10-01-2025T02:59:58 - [TEST_STEP][PASSED] - dZONum = dZONum + 1: null

10-01-2025T02:59:58 - [TEST_STEP][PASSED] - tyR = GetAllData(path, dZONum, VseDZO, x = "АО "Тываэнерго"/"): null

10-01-2025T02:59:58 - [TEST_STEP][PASSED] - ii = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T02:59:58 - [TEST_STEP][PASSED] - i1 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T02:59:58 - [TEST_STEP][PASSED] - z = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T02:59:58 - [TEST_STEP][PASSED] - path2 = "Значения со страницы Выполнение бизнес-плана/Table Data/": null

10-01-2025T02:59:58 - [TEST_STEP][PASSED] - println("path: " + path): null

10-01-2025T02:59:58 - [TEST_STEP][PASSED] - println("dZONum: " + dZONum): null

10-01-2025T02:59:58 - [TEST_STEP][PASSED] - z = getText(findTestObject(path + "spanPlan" + dZONum)): Text of object 'Object Repository/Выполнение бизнес-плана/spanPlan1' is: '21.24
|'

10-01-2025T02:59:58 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выполнение бизнес-плана/spanPlan1' is: '21.24
|'

10-01-2025T02:59:58 - [TEST_STEP][PASSED] - println(z): null

10-01-2025T02:59:58 - [TEST_STEP][PASSED] - ii = z.indexOf("|"): null

10-01-2025T02:59:58 - [TEST_STEP][PASSED] - if (ii > -1): null

10-01-2025T02:59:58 - [TEST_STEP][PASSED] - z = z.substring(0, z.length() - 1): null

10-01-2025T02:59:58 - [TEST_STEP][PASSED] - println(z): null

10-01-2025T02:59:58 - [TEST_STEP][PASSED] - z = z.replaceAll("\s+", ""): null

10-01-2025T02:59:58 - [TEST_STEP][PASSED] - z = z.replace("[\r?
|
]", "/"): null

10-01-2025T02:59:58 - [TEST_STEP][PASSED] - println(z): null

10-01-2025T02:59:58 - [TEST_STEP][PASSED] - x = x + z: null

10-01-2025T02:59:58 - [TEST_STEP][PASSED] - z = getText(findTestObject(path + "spanFact" + dZONum)): Text of object 'Object Repository/Выполнение бизнес-плана/spanFact1' is: '21.17'

10-01-2025T02:59:58 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выполнение бизнес-плана/spanFact1' is: '21.17'

10-01-2025T02:59:58 - [TEST_STEP][PASSED] - ii = z.indexOf("|"): null

10-01-2025T02:59:58 - [TEST_STEP][PASSED] - if (ii > -1): null

10-01-2025T02:59:58 - [TEST_STEP][PASSED] - x = x + "/" + z: null

10-01-2025T02:59:58 - [TEST_STEP][PASSED] - z = getText(findTestObject(path + path2 + "Факт Отпуск в сеть за отчётный период " + dZONum)).replaceAll("\s+", ""): Text of object 'Object Repository/Выполнение бизнес-плана/Значения со страницы Выполнение бизнес-плана/Table Data/Факт Отпуск в сеть за отчётный период 1' is: '642 168'

10-01-2025T02:59:59 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выполнение бизнес-плана/Значения со страницы Выполнение бизнес-плана/Table Data/Факт Отпуск в сеть за отчётный период 1' is: '642 168'

10-01-2025T02:59:59 - [TEST_STEP][PASSED] - x = x + "/" + z: null

10-01-2025T02:59:59 - [TEST_STEP][PASSED] - z = getText(findTestObject(path + path2 + "Факт Отпуск из сети за отчётный период " + dZONum)).replaceAll("\s+", ""): Text of object 'Object Repository/Выполнение бизнес-плана/Значения со страницы Выполнение бизнес-плана/Table Data/Факт Отпуск из сети за отчётный период 1' is: '506 218'

10-01-2025T02:59:59 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выполнение бизнес-плана/Значения со страницы Выполнение бизнес-плана/Table Data/Факт Отпуск из сети за отчётный период 1' is: '506 218'

10-01-2025T02:59:59 - [TEST_STEP][PASSED] - x = x + "/" + z: null

10-01-2025T02:59:59 - [TEST_STEP][PASSED] - z = getText(findTestObject(path + path2 + "Факт Потери за отчётный период " + dZONum)).replaceAll("\s+", ""): Text of object 'Object Repository/Выполнение бизнес-плана/Значения со страницы Выполнение бизнес-плана/Table Data/Факт Потери за отчётный период 1' is: '135 950'

10-01-2025T02:59:59 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выполнение бизнес-плана/Значения со страницы Выполнение бизнес-плана/Table Data/Факт Потери за отчётный период 1' is: '135 950'

10-01-2025T02:59:59 - [TEST_STEP][PASSED] - x = x + "/" + z: null

10-01-2025T02:59:59 - [TEST_STEP][PASSED] - z = getText(findTestObject(path + path2 + "План Отпуск в сеть за отчётный период " + dZONum)).replaceAll("\s+", ""): Text of object 'Object Repository/Выполнение бизнес-плана/Значения со страницы Выполнение бизнес-плана/Table Data/План Отпуск в сеть за отчётный период 1' is: '608 287'

10-01-2025T03:00:00 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выполнение бизнес-плана/Значения со страницы Выполнение бизнес-плана/Table Data/План Отпуск в сеть за отчётный период 1' is: '608 287'

10-01-2025T03:00:00 - [TEST_STEP][PASSED] - x = x + "/" + z: null

10-01-2025T03:00:00 - [TEST_STEP][PASSED] - z = getText(findTestObject(path + path2 + "План Отпуск из сети за отчётный период " + dZONum)).replaceAll("\s+", ""): Text of object 'Object Repository/Выполнение бизнес-плана/Значения со страницы Выполнение бизнес-плана/Table Data/План Отпуск из сети за отчётный период 1' is: '479 095'

10-01-2025T03:00:00 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выполнение бизнес-плана/Значения со страницы Выполнение бизнес-плана/Table Data/План Отпуск из сети за отчётный период 1' is: '479 095'

10-01-2025T03:00:00 - [TEST_STEP][PASSED] - x = x + "/" + z: null

10-01-2025T03:00:00 - [TEST_STEP][PASSED] - z = getText(findTestObject(path + path2 + "План Потери за отчётный период " + dZONum)).replaceAll("\s+", ""): Text of object 'Object Repository/Выполнение бизнес-плана/Значения со страницы Выполнение бизнес-плана/Table Data/План Потери за отчётный период 1' is: '129 192'

10-01-2025T03:00:00 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выполнение бизнес-плана/Значения со страницы Выполнение бизнес-плана/Table Data/План Потери за отчётный период 1' is: '129 192'

10-01-2025T03:00:00 - [TEST_STEP][PASSED] - x = x + "/" + z: null

10-01-2025T03:00:00 - [TEST_STEP][PASSED] - z = getText(findTestObject(path + "Список ДЗО")).replaceAll("[\r?
|
]", "/"): Text of object 'Object Repository/Выполнение бизнес-плана/Список ДЗО' is: '-0.07
3.10
3.73
-0.05
0.16
-0.52
-0.27
АО «Тываэнерго»
АО «Чеченэнерго»
Россети Северный Кавказ
Россети Сибирь
Россети Тюмень
Россети Центр (ГК)
Россети Центр и Приволжье (ГК)
-1
0
1
2
3
4
5
6
7'

10-01-2025T03:00:01 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выполнение бизнес-плана/Список ДЗО' is: '-0.07
3.10
3.73
-0.05
0.16
-0.52
-0.27
АО «Тываэнерго»
АО «Чеченэнерго»
Россети Северный Кавказ
Россети Сибирь
Россети Тюмень
Россети Центр (ГК)
Россети Центр и Приволжье (ГК)
-1
0
1
2
3
4
5
6
7'

10-01-2025T03:00:01 - [TEST_STEP][PASSED] - for ([ii = 1, ii < dZONum, (ii++)]): null

10-01-2025T03:00:01 - [TEST_STEP][PASSED] - i1 = z.indexOf("/"): null

10-01-2025T03:00:01 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:00:01 - [TEST_STEP][PASSED] - z = z.substring(0, i1): null

10-01-2025T03:00:01 - [TEST_STEP][PASSED] - z = z.replace(",", "."): null

10-01-2025T03:00:01 - [TEST_STEP][PASSED] - println(z): null

10-01-2025T03:00:01 - [TEST_STEP][PASSED] - x = x + "/" + z: null

10-01-2025T03:00:01 - [TEST_STEP][PASSED] - x = x.replaceAll("[\r?
|
]", ""): null

10-01-2025T03:00:01 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:00:01 - [TEST_STEP][PASSED] - return x: null

10-01-2025T03:00:01 - [TEST_STEP][PASSED] - println("tyR: " + tyR): null

10-01-2025T03:00:01 - [TEST_STEP][PASSED] - i = VseDZO.indexOf("Чеченэнерго"): null

10-01-2025T03:00:01 - [TEST_STEP][PASSED] - if (i > -1): null

10-01-2025T03:00:01 - [TEST_STEP][PASSED] - dZONum = dZONum + 1: null

10-01-2025T03:00:01 - [TEST_STEP][PASSED] - chR = GetAllData(path, dZONum, VseDZO, x = "АО "Чеченэнерго"/"): null

10-01-2025T03:00:01 - [TEST_STEP][PASSED] - ii = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:00:01 - [TEST_STEP][PASSED] - i1 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:00:01 - [TEST_STEP][PASSED] - z = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:00:01 - [TEST_STEP][PASSED] - path2 = "Значения со страницы Выполнение бизнес-плана/Table Data/": null

10-01-2025T03:00:01 - [TEST_STEP][PASSED] - println("path: " + path): null

10-01-2025T03:00:01 - [TEST_STEP][PASSED] - println("dZONum: " + dZONum): null

10-01-2025T03:00:01 - [TEST_STEP][PASSED] - z = getText(findTestObject(path + "spanPlan" + dZONum)): Text of object 'Object Repository/Выполнение бизнес-плана/spanPlan2' is: '33.23'

10-01-2025T03:00:01 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выполнение бизнес-плана/spanPlan2' is: '33.23'

10-01-2025T03:00:01 - [TEST_STEP][PASSED] - println(z): null

10-01-2025T03:00:01 - [TEST_STEP][PASSED] - ii = z.indexOf("|"): null

10-01-2025T03:00:01 - [TEST_STEP][PASSED] - if (ii > -1): null

10-01-2025T03:00:01 - [TEST_STEP][PASSED] - z = z.replaceAll("\s+", ""): null

10-01-2025T03:00:01 - [TEST_STEP][PASSED] - z = z.replace("[\r?
|
]", "/"): null

10-01-2025T03:00:01 - [TEST_STEP][PASSED] - println(z): null

10-01-2025T03:00:01 - [TEST_STEP][PASSED] - x = x + z: null

10-01-2025T03:00:01 - [TEST_STEP][PASSED] - z = getText(findTestObject(path + "spanFact" + dZONum)): Text of object 'Object Repository/Выполнение бизнес-плана/spanFact2' is: '36.33
|'

10-01-2025T03:00:01 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выполнение бизнес-плана/spanFact2' is: '36.33
|'

10-01-2025T03:00:01 - [TEST_STEP][PASSED] - ii = z.indexOf("|"): null

10-01-2025T03:00:01 - [TEST_STEP][PASSED] - if (ii > -1): null

10-01-2025T03:00:01 - [TEST_STEP][PASSED] - z = length() - 1).replace("[\r?
|
]", "/"): null

10-01-2025T03:00:01 - [TEST_STEP][PASSED] - x = x + "/" + z: null

10-01-2025T03:00:01 - [TEST_STEP][PASSED] - z = getText(findTestObject(path + path2 + "Факт Отпуск в сеть за отчётный период " + dZONum)).replaceAll("\s+", ""): Text of object 'Object Repository/Выполнение бизнес-плана/Значения со страницы Выполнение бизнес-плана/Table Data/Факт Отпуск в сеть за отчётный период 2' is: '3 631 955'

10-01-2025T03:00:02 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выполнение бизнес-плана/Значения со страницы Выполнение бизнес-плана/Table Data/Факт Отпуск в сеть за отчётный период 2' is: '3 631 955'

10-01-2025T03:00:02 - [TEST_STEP][PASSED] - x = x + "/" + z: null

10-01-2025T03:00:02 - [TEST_STEP][PASSED] - z = getText(findTestObject(path + path2 + "Факт Отпуск из сети за отчётный период " + dZONum)).replaceAll("\s+", ""): Text of object 'Object Repository/Выполнение бизнес-плана/Значения со страницы Выполнение бизнес-плана/Table Data/Факт Отпуск из сети за отчётный период 2' is: '2 312 442'

10-01-2025T03:00:02 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выполнение бизнес-плана/Значения со страницы Выполнение бизнес-плана/Table Data/Факт Отпуск из сети за отчётный период 2' is: '2 312 442'

10-01-2025T03:00:02 - [TEST_STEP][PASSED] - x = x + "/" + z: null

10-01-2025T03:00:02 - [TEST_STEP][PASSED] - z = getText(findTestObject(path + path2 + "Факт Потери за отчётный период " + dZONum)).replaceAll("\s+", ""): Text of object 'Object Repository/Выполнение бизнес-плана/Значения со страницы Выполнение бизнес-плана/Table Data/Факт Потери за отчётный период 2' is: '1 319 513'

10-01-2025T03:00:02 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выполнение бизнес-плана/Значения со страницы Выполнение бизнес-плана/Table Data/Факт Потери за отчётный период 2' is: '1 319 513'

10-01-2025T03:00:02 - [TEST_STEP][PASSED] - x = x + "/" + z: null

10-01-2025T03:00:02 - [TEST_STEP][PASSED] - z = getText(findTestObject(path + path2 + "План Отпуск в сеть за отчётный период " + dZONum)).replaceAll("\s+", ""): Text of object 'Object Repository/Выполнение бизнес-плана/Значения со страницы Выполнение бизнес-плана/Table Data/План Отпуск в сеть за отчётный период 2' is: '3 403 997'

10-01-2025T03:00:02 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выполнение бизнес-плана/Значения со страницы Выполнение бизнес-плана/Table Data/План Отпуск в сеть за отчётный период 2' is: '3 403 997'

10-01-2025T03:00:02 - [TEST_STEP][PASSED] - x = x + "/" + z: null

10-01-2025T03:00:02 - [TEST_STEP][PASSED] - z = getText(findTestObject(path + path2 + "План Отпуск из сети за отчётный период " + dZONum)).replaceAll("\s+", ""): Text of object 'Object Repository/Выполнение бизнес-плана/Значения со страницы Выполнение бизнес-плана/Table Data/План Отпуск из сети за отчётный период 2' is: '2 272 993'

10-01-2025T03:00:03 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выполнение бизнес-плана/Значения со страницы Выполнение бизнес-плана/Table Data/План Отпуск из сети за отчётный период 2' is: '2 272 993'

10-01-2025T03:00:03 - [TEST_STEP][PASSED] - x = x + "/" + z: null

10-01-2025T03:00:03 - [TEST_STEP][PASSED] - z = getText(findTestObject(path + path2 + "План Потери за отчётный период " + dZONum)).replaceAll("\s+", ""): Text of object 'Object Repository/Выполнение бизнес-плана/Значения со страницы Выполнение бизнес-плана/Table Data/План Потери за отчётный период 2' is: '1 131 004'

10-01-2025T03:00:03 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выполнение бизнес-плана/Значения со страницы Выполнение бизнес-плана/Table Data/План Потери за отчётный период 2' is: '1 131 004'

10-01-2025T03:00:03 - [TEST_STEP][PASSED] - x = x + "/" + z: null

10-01-2025T03:00:03 - [TEST_STEP][PASSED] - z = getText(findTestObject(path + "Список ДЗО")).replaceAll("[\r?
|
]", "/"): Text of object 'Object Repository/Выполнение бизнес-плана/Список ДЗО' is: '-0.07
3.10
3.73
-0.05
0.16
-0.52
-0.27
АО «Тываэнерго»
АО «Чеченэнерго»
Россети Северный Кавказ
Россети Сибирь
Россети Тюмень
Россети Центр (ГК)
Россети Центр и Приволжье (ГК)
-1
0
1
2
3
4
5
6
7'

10-01-2025T03:00:03 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выполнение бизнес-плана/Список ДЗО' is: '-0.07
3.10
3.73
-0.05
0.16
-0.52
-0.27
АО «Тываэнерго»
АО «Чеченэнерго»
Россети Северный Кавказ
Россети Сибирь
Россети Тюмень
Россети Центр (ГК)
Россети Центр и Приволжье (ГК)
-1
0
1
2
3
4
5
6
7'

10-01-2025T03:00:03 - [TEST_STEP][PASSED] - for ([ii = 1, ii < dZONum, (ii++)]): null

10-01-2025T03:00:03 - [TEST_STEP][PASSED] - i1 = z.indexOf("/") + 1: null

10-01-2025T03:00:03 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:00:03 - [TEST_STEP][PASSED] - z = z.substring(i1, z.length()): null

10-01-2025T03:00:03 - [TEST_STEP][PASSED] - i1 = z.indexOf("/"): null

10-01-2025T03:00:03 - [TEST_STEP][PASSED] - i1 = z.indexOf("/"): null

10-01-2025T03:00:03 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:00:03 - [TEST_STEP][PASSED] - z = z.substring(0, i1): null

10-01-2025T03:00:03 - [TEST_STEP][PASSED] - z = z.replace(",", "."): null

10-01-2025T03:00:03 - [TEST_STEP][PASSED] - println(z): null

10-01-2025T03:00:03 - [TEST_STEP][PASSED] - x = x + "/" + z: null

10-01-2025T03:00:03 - [TEST_STEP][PASSED] - x = x.replaceAll("[\r?
|
]", ""): null

10-01-2025T03:00:03 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:00:03 - [TEST_STEP][PASSED] - return x: null

10-01-2025T03:00:03 - [TEST_STEP][PASSED] - println("chR: " + chR): null

10-01-2025T03:00:03 - [TEST_STEP][PASSED] - i = VseDZO.indexOf("Волга"): null

10-01-2025T03:00:03 - [TEST_STEP][PASSED] - if (i > -1): null

10-01-2025T03:00:03 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:00:03 - [TEST_STEP][PASSED] - vR = vR + "нет данных/нет данных/нет данных/нет данных/нет данных/нет данных/нет данных/нет данных/нет данных": null

10-01-2025T03:00:03 - [TEST_STEP][PASSED] - println("vR: " + vR): null

10-01-2025T03:00:03 - [TEST_STEP][PASSED] - i = VseDZO.indexOf("Кубань"): null

10-01-2025T03:00:03 - [TEST_STEP][PASSED] - if (i > -1): null

10-01-2025T03:00:03 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:00:03 - [TEST_STEP][PASSED] - kR = kR + "нет данных/нет данных/нет данных/нет данных/нет данных/нет данных/нет данных/нет данных/нет данных": null

10-01-2025T03:00:03 - [TEST_STEP][PASSED] - println("kR: " + kR): null

10-01-2025T03:00:03 - [TEST_STEP][PASSED] - i = VseDZO.indexOf("Ленэнерго"): null

10-01-2025T03:00:03 - [TEST_STEP][PASSED] - if (i > -1): null

10-01-2025T03:00:03 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:00:03 - [TEST_STEP][PASSED] - lR = lR + "нет данных/нет данных/нет данных/нет данных/нет данных/нет данных/нет данных/нет данных/нет данных": null

10-01-2025T03:00:03 - [TEST_STEP][PASSED] - println("lR: " + lR): null

10-01-2025T03:00:03 - [TEST_STEP][PASSED] - i = VseDZO.indexOf("Московский"): null

10-01-2025T03:00:03 - [TEST_STEP][PASSED] - if (i > -1): null

10-01-2025T03:00:03 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:00:03 - [TEST_STEP][PASSED] - mR = mR + "нет данных/нет данных/нет данных/нет данных/нет данных/нет данных/нет данных/нет данных/нет данных": null

10-01-2025T03:00:03 - [TEST_STEP][PASSED] - println("mR: " + mR): null

10-01-2025T03:00:03 - [TEST_STEP][PASSED] - i = VseDZO.indexOf("Кавказ"): null

10-01-2025T03:00:03 - [TEST_STEP][PASSED] - if (i > -1): null

10-01-2025T03:00:03 - [TEST_STEP][PASSED] - dZONum = dZONum + 1: null

10-01-2025T03:00:03 - [TEST_STEP][PASSED] - sKR = GetAllData(path, dZONum, VseDZO, x = "Россети Северный Кавказ (ГК)/"): null

10-01-2025T03:00:03 - [TEST_STEP][PASSED] - ii = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:00:03 - [TEST_STEP][PASSED] - i1 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:00:03 - [TEST_STEP][PASSED] - z = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:00:03 - [TEST_STEP][PASSED] - path2 = "Значения со страницы Выполнение бизнес-плана/Table Data/": null

10-01-2025T03:00:03 - [TEST_STEP][PASSED] - println("path: " + path): null

10-01-2025T03:00:03 - [TEST_STEP][PASSED] - println("dZONum: " + dZONum): null

10-01-2025T03:00:03 - [TEST_STEP][PASSED] - z = getText(findTestObject(path + "spanPlan" + dZONum)): Text of object 'Object Repository/Выполнение бизнес-плана/spanPlan3' is: '23.32'

10-01-2025T03:00:04 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выполнение бизнес-плана/spanPlan3' is: '23.32'

10-01-2025T03:00:04 - [TEST_STEP][PASSED] - println(z): null

10-01-2025T03:00:04 - [TEST_STEP][PASSED] - ii = z.indexOf("|"): null

10-01-2025T03:00:04 - [TEST_STEP][PASSED] - if (ii > -1): null

10-01-2025T03:00:04 - [TEST_STEP][PASSED] - z = z.replaceAll("\s+", ""): null

10-01-2025T03:00:04 - [TEST_STEP][PASSED] - z = z.replace("[\r?
|
]", "/"): null

10-01-2025T03:00:04 - [TEST_STEP][PASSED] - println(z): null

10-01-2025T03:00:04 - [TEST_STEP][PASSED] - x = x + z: null

10-01-2025T03:00:04 - [TEST_STEP][PASSED] - z = getText(findTestObject(path + "spanFact" + dZONum)): Text of object 'Object Repository/Выполнение бизнес-плана/spanFact3' is: '27.05
|'

10-01-2025T03:00:04 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выполнение бизнес-плана/spanFact3' is: '27.05
|'

10-01-2025T03:00:04 - [TEST_STEP][PASSED] - ii = z.indexOf("|"): null

10-01-2025T03:00:04 - [TEST_STEP][PASSED] - if (ii > -1): null

10-01-2025T03:00:04 - [TEST_STEP][PASSED] - z = length() - 1).replace("[\r?
|
]", "/"): null

10-01-2025T03:00:04 - [TEST_STEP][PASSED] - x = x + "/" + z: null

10-01-2025T03:00:04 - [TEST_STEP][PASSED] - z = getText(findTestObject(path + path2 + "Факт Отпуск в сеть за отчётный период " + dZONum)).replaceAll("\s+", ""): Text of object 'Object Repository/Выполнение бизнес-плана/Значения со страницы Выполнение бизнес-плана/Table Data/Факт Отпуск в сеть за отчётный период 3' is: '20 651 499'

10-01-2025T03:00:04 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выполнение бизнес-плана/Значения со страницы Выполнение бизнес-плана/Table Data/Факт Отпуск в сеть за отчётный период 3' is: '20 651 499'

10-01-2025T03:00:04 - [TEST_STEP][PASSED] - x = x + "/" + z: null

10-01-2025T03:00:04 - [TEST_STEP][PASSED] - z = getText(findTestObject(path + path2 + "Факт Отпуск из сети за отчётный период " + dZONum)).replaceAll("\s+", ""): Text of object 'Object Repository/Выполнение бизнес-плана/Значения со страницы Выполнение бизнес-плана/Table Data/Факт Отпуск из сети за отчётный период 3' is: '15 078 002'

10-01-2025T03:00:05 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выполнение бизнес-плана/Значения со страницы Выполнение бизнес-плана/Table Data/Факт Отпуск из сети за отчётный период 3' is: '15 078 002'

10-01-2025T03:00:05 - [TEST_STEP][PASSED] - x = x + "/" + z: null

10-01-2025T03:00:05 - [TEST_STEP][PASSED] - z = getText(findTestObject(path + path2 + "Факт Потери за отчётный период " + dZONum)).replaceAll("\s+", ""): Text of object 'Object Repository/Выполнение бизнес-плана/Значения со страницы Выполнение бизнес-плана/Table Data/Факт Потери за отчётный период 3' is: '5 573 496'

10-01-2025T03:00:05 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выполнение бизнес-плана/Значения со страницы Выполнение бизнес-плана/Table Data/Факт Потери за отчётный период 3' is: '5 573 496'

10-01-2025T03:00:05 - [TEST_STEP][PASSED] - x = x + "/" + z: null

10-01-2025T03:00:05 - [TEST_STEP][PASSED] - z = getText(findTestObject(path + path2 + "План Отпуск в сеть за отчётный период " + dZONum)).replaceAll("\s+", ""): Text of object 'Object Repository/Выполнение бизнес-плана/Значения со страницы Выполнение бизнес-плана/Table Data/План Отпуск в сеть за отчётный период 3' is: '19 485 633'

10-01-2025T03:00:05 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выполнение бизнес-плана/Значения со страницы Выполнение бизнес-плана/Table Data/План Отпуск в сеть за отчётный период 3' is: '19 485 633'

10-01-2025T03:00:05 - [TEST_STEP][PASSED] - x = x + "/" + z: null

10-01-2025T03:00:05 - [TEST_STEP][PASSED] - z = getText(findTestObject(path + path2 + "План Отпуск из сети за отчётный период " + dZONum)).replaceAll("\s+", ""): Text of object 'Object Repository/Выполнение бизнес-плана/Значения со страницы Выполнение бизнес-плана/Table Data/План Отпуск из сети за отчётный период 3' is: '14 949 980'

10-01-2025T03:00:06 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выполнение бизнес-плана/Значения со страницы Выполнение бизнес-плана/Table Data/План Отпуск из сети за отчётный период 3' is: '14 949 980'

10-01-2025T03:00:06 - [TEST_STEP][PASSED] - x = x + "/" + z: null

10-01-2025T03:00:06 - [TEST_STEP][PASSED] - z = getText(findTestObject(path + path2 + "План Потери за отчётный период " + dZONum)).replaceAll("\s+", ""): Text of object 'Object Repository/Выполнение бизнес-плана/Значения со страницы Выполнение бизнес-плана/Table Data/План Потери за отчётный период 3' is: '4 535 653'

10-01-2025T03:00:06 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выполнение бизнес-плана/Значения со страницы Выполнение бизнес-плана/Table Data/План Потери за отчётный период 3' is: '4 535 653'

10-01-2025T03:00:06 - [TEST_STEP][PASSED] - x = x + "/" + z: null

10-01-2025T03:00:06 - [TEST_STEP][PASSED] - z = getText(findTestObject(path + "Список ДЗО")).replaceAll("[\r?
|
]", "/"): Text of object 'Object Repository/Выполнение бизнес-плана/Список ДЗО' is: '-0.07
3.10
3.73
-0.05
0.16
-0.52
-0.27
АО «Тываэнерго»
АО «Чеченэнерго»
Россети Северный Кавказ
Россети Сибирь
Россети Тюмень
Россети Центр (ГК)
Россети Центр и Приволжье (ГК)
-1
0
1
2
3
4
5
6
7'

10-01-2025T03:00:06 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выполнение бизнес-плана/Список ДЗО' is: '-0.07
3.10
3.73
-0.05
0.16
-0.52
-0.27
АО «Тываэнерго»
АО «Чеченэнерго»
Россети Северный Кавказ
Россети Сибирь
Россети Тюмень
Россети Центр (ГК)
Россети Центр и Приволжье (ГК)
-1
0
1
2
3
4
5
6
7'

10-01-2025T03:00:06 - [TEST_STEP][PASSED] - for ([ii = 1, ii < dZONum, (ii++)]): null

10-01-2025T03:00:06 - [TEST_STEP][PASSED] - i1 = z.indexOf("/") + 1: null

10-01-2025T03:00:06 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:00:06 - [TEST_STEP][PASSED] - z = z.substring(i1, z.length()): null

10-01-2025T03:00:06 - [TEST_STEP][PASSED] - i1 = z.indexOf("/"): null

10-01-2025T03:00:06 - [TEST_STEP][PASSED] - i1 = z.indexOf("/") + 1: null

10-01-2025T03:00:06 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:00:06 - [TEST_STEP][PASSED] - z = z.substring(i1, z.length()): null

10-01-2025T03:00:06 - [TEST_STEP][PASSED] - i1 = z.indexOf("/"): null

10-01-2025T03:00:06 - [TEST_STEP][PASSED] - i1 = z.indexOf("/"): null

10-01-2025T03:00:06 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:00:06 - [TEST_STEP][PASSED] - z = z.substring(0, i1): null

10-01-2025T03:00:06 - [TEST_STEP][PASSED] - z = z.replace(",", "."): null

10-01-2025T03:00:06 - [TEST_STEP][PASSED] - println(z): null

10-01-2025T03:00:06 - [TEST_STEP][PASSED] - x = x + "/" + z: null

10-01-2025T03:00:06 - [TEST_STEP][PASSED] - x = x.replaceAll("[\r?
|
]", ""): null

10-01-2025T03:00:06 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:00:06 - [TEST_STEP][PASSED] - return x: null

10-01-2025T03:00:06 - [TEST_STEP][PASSED] - println("sKR: " + sKR): null

10-01-2025T03:00:06 - [TEST_STEP][PASSED] - i = VseDZO.indexOf("Запад"): null

10-01-2025T03:00:06 - [TEST_STEP][PASSED] - if (i > -1): null

10-01-2025T03:00:06 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:00:06 - [TEST_STEP][PASSED] - sZR = sZR + "нет данных/нет данных/нет данных/нет данных/нет данных/нет данных/нет данных/нет данных/нет данных": null

10-01-2025T03:00:06 - [TEST_STEP][PASSED] - println("sZR: " + sZR): null

10-01-2025T03:00:06 - [TEST_STEP][PASSED] - i = VseDZO.indexOf("Сибирь"): null

10-01-2025T03:00:06 - [TEST_STEP][PASSED] - if (i > -1): null

10-01-2025T03:00:06 - [TEST_STEP][PASSED] - dZONum = dZONum + 1: null

10-01-2025T03:00:06 - [TEST_STEP][PASSED] - siR = GetAllData(path, dZONum, VseDZO, x = "Россети Сибирь (ГК)/"): null

10-01-2025T03:00:06 - [TEST_STEP][PASSED] - ii = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:00:06 - [TEST_STEP][PASSED] - i1 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:00:06 - [TEST_STEP][PASSED] - z = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:00:06 - [TEST_STEP][PASSED] - path2 = "Значения со страницы Выполнение бизнес-плана/Table Data/": null

10-01-2025T03:00:06 - [TEST_STEP][PASSED] - println("path: " + path): null

10-01-2025T03:00:06 - [TEST_STEP][PASSED] - println("dZONum: " + dZONum): null

10-01-2025T03:00:06 - [TEST_STEP][PASSED] - z = getText(findTestObject(path + "spanPlan" + dZONum)): Text of object 'Object Repository/Выполнение бизнес-плана/spanPlan4' is: '7.14
|'

10-01-2025T03:00:07 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выполнение бизнес-плана/spanPlan4' is: '7.14
|'

10-01-2025T03:00:07 - [TEST_STEP][PASSED] - println(z): null

10-01-2025T03:00:07 - [TEST_STEP][PASSED] - ii = z.indexOf("|"): null

10-01-2025T03:00:07 - [TEST_STEP][PASSED] - if (ii > -1): null

10-01-2025T03:00:07 - [TEST_STEP][PASSED] - z = z.substring(0, z.length() - 1): null

10-01-2025T03:00:07 - [TEST_STEP][PASSED] - println(z): null

10-01-2025T03:00:07 - [TEST_STEP][PASSED] - z = z.replaceAll("\s+", ""): null

10-01-2025T03:00:07 - [TEST_STEP][PASSED] - z = z.replace("[\r?
|
]", "/"): null

10-01-2025T03:00:07 - [TEST_STEP][PASSED] - println(z): null

10-01-2025T03:00:07 - [TEST_STEP][PASSED] - x = x + z: null

10-01-2025T03:00:07 - [TEST_STEP][PASSED] - z = getText(findTestObject(path + "spanFact" + dZONum)): Text of object 'Object Repository/Выполнение бизнес-плана/spanFact4' is: '7.09'

10-01-2025T03:00:07 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выполнение бизнес-плана/spanFact4' is: '7.09'

10-01-2025T03:00:07 - [TEST_STEP][PASSED] - ii = z.indexOf("|"): null

10-01-2025T03:00:07 - [TEST_STEP][PASSED] - if (ii > -1): null

10-01-2025T03:00:07 - [TEST_STEP][PASSED] - x = x + "/" + z: null

10-01-2025T03:00:07 - [TEST_STEP][PASSED] - z = getText(findTestObject(path + path2 + "Факт Отпуск в сеть за отчётный период " + dZONum)).replaceAll("\s+", ""): Text of object 'Object Repository/Выполнение бизнес-плана/Значения со страницы Выполнение бизнес-плана/Table Data/Факт Отпуск в сеть за отчётный период 4' is: '52 412 668'

10-01-2025T03:00:07 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выполнение бизнес-плана/Значения со страницы Выполнение бизнес-плана/Table Data/Факт Отпуск в сеть за отчётный период 4' is: '52 412 668'

10-01-2025T03:00:07 - [TEST_STEP][PASSED] - x = x + "/" + z: null

10-01-2025T03:00:07 - [TEST_STEP][PASSED] - z = getText(findTestObject(path + path2 + "Факт Отпуск из сети за отчётный период " + dZONum)).replaceAll("\s+", ""): Text of object 'Object Repository/Выполнение бизнес-плана/Значения со страницы Выполнение бизнес-плана/Table Data/Факт Отпуск из сети за отчётный период 4' is: '48 697 705'

10-01-2025T03:00:07 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выполнение бизнес-плана/Значения со страницы Выполнение бизнес-плана/Table Data/Факт Отпуск из сети за отчётный период 4' is: '48 697 705'

10-01-2025T03:00:07 - [TEST_STEP][PASSED] - x = x + "/" + z: null

10-01-2025T03:00:07 - [TEST_STEP][PASSED] - z = getText(findTestObject(path + path2 + "Факт Потери за отчётный период " + dZONum)).replaceAll("\s+", ""): Text of object 'Object Repository/Выполнение бизнес-плана/Значения со страницы Выполнение бизнес-плана/Table Data/Факт Потери за отчётный период 4' is: '3 714 964'

10-01-2025T03:00:08 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выполнение бизнес-плана/Значения со страницы Выполнение бизнес-плана/Table Data/Факт Потери за отчётный период 4' is: '3 714 964'

10-01-2025T03:00:08 - [TEST_STEP][PASSED] - x = x + "/" + z: null

10-01-2025T03:00:08 - [TEST_STEP][PASSED] - z = getText(findTestObject(path + path2 + "План Отпуск в сеть за отчётный период " + dZONum)).replaceAll("\s+", ""): Text of object 'Object Repository/Выполнение бизнес-плана/Значения со страницы Выполнение бизнес-плана/Table Data/План Отпуск в сеть за отчётный период 4' is: '50 003 068'

10-01-2025T03:00:08 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выполнение бизнес-плана/Значения со страницы Выполнение бизнес-плана/Table Data/План Отпуск в сеть за отчётный период 4' is: '50 003 068'

10-01-2025T03:00:08 - [TEST_STEP][PASSED] - x = x + "/" + z: null

10-01-2025T03:00:08 - [TEST_STEP][PASSED] - z = getText(findTestObject(path + path2 + "План Отпуск из сети за отчётный период " + dZONum)).replaceAll("\s+", ""): Text of object 'Object Repository/Выполнение бизнес-плана/Значения со страницы Выполнение бизнес-плана/Table Data/План Отпуск из сети за отчётный период 4' is: '46 434 624'

10-01-2025T03:00:08 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выполнение бизнес-плана/Значения со страницы Выполнение бизнес-плана/Table Data/План Отпуск из сети за отчётный период 4' is: '46 434 624'

10-01-2025T03:00:08 - [TEST_STEP][PASSED] - x = x + "/" + z: null

10-01-2025T03:00:08 - [TEST_STEP][PASSED] - z = getText(findTestObject(path + path2 + "План Потери за отчётный период " + dZONum)).replaceAll("\s+", ""): Text of object 'Object Repository/Выполнение бизнес-плана/Значения со страницы Выполнение бизнес-плана/Table Data/План Потери за отчётный период 4' is: '3 568 444'

10-01-2025T03:00:09 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выполнение бизнес-плана/Значения со страницы Выполнение бизнес-плана/Table Data/План Потери за отчётный период 4' is: '3 568 444'

10-01-2025T03:00:09 - [TEST_STEP][PASSED] - x = x + "/" + z: null

10-01-2025T03:00:09 - [TEST_STEP][PASSED] - z = getText(findTestObject(path + "Список ДЗО")).replaceAll("[\r?
|
]", "/"): Text of object 'Object Repository/Выполнение бизнес-плана/Список ДЗО' is: '-0.07
3.10
3.73
-0.05
0.16
-0.52
-0.27
АО «Тываэнерго»
АО «Чеченэнерго»
Россети Северный Кавказ
Россети Сибирь
Россети Тюмень
Россети Центр (ГК)
Россети Центр и Приволжье (ГК)
-1
0
1
2
3
4
5
6
7'

10-01-2025T03:00:09 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выполнение бизнес-плана/Список ДЗО' is: '-0.07
3.10
3.73
-0.05
0.16
-0.52
-0.27
АО «Тываэнерго»
АО «Чеченэнерго»
Россети Северный Кавказ
Россети Сибирь
Россети Тюмень
Россети Центр (ГК)
Россети Центр и Приволжье (ГК)
-1
0
1
2
3
4
5
6
7'

10-01-2025T03:00:09 - [TEST_STEP][PASSED] - for ([ii = 1, ii < dZONum, (ii++)]): null

10-01-2025T03:00:09 - [TEST_STEP][PASSED] - i1 = z.indexOf("/") + 1: null

10-01-2025T03:00:09 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:00:09 - [TEST_STEP][PASSED] - z = z.substring(i1, z.length()): null

10-01-2025T03:00:09 - [TEST_STEP][PASSED] - i1 = z.indexOf("/"): null

10-01-2025T03:00:09 - [TEST_STEP][PASSED] - i1 = z.indexOf("/") + 1: null

10-01-2025T03:00:09 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:00:09 - [TEST_STEP][PASSED] - z = z.substring(i1, z.length()): null

10-01-2025T03:00:09 - [TEST_STEP][PASSED] - i1 = z.indexOf("/"): null

10-01-2025T03:00:09 - [TEST_STEP][PASSED] - i1 = z.indexOf("/") + 1: null

10-01-2025T03:00:09 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:00:09 - [TEST_STEP][PASSED] - z = z.substring(i1, z.length()): null

10-01-2025T03:00:09 - [TEST_STEP][PASSED] - i1 = z.indexOf("/"): null

10-01-2025T03:00:09 - [TEST_STEP][PASSED] - i1 = z.indexOf("/"): null

10-01-2025T03:00:09 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:00:09 - [TEST_STEP][PASSED] - z = z.substring(0, i1): null

10-01-2025T03:00:09 - [TEST_STEP][PASSED] - z = z.replace(",", "."): null

10-01-2025T03:00:09 - [TEST_STEP][PASSED] - println(z): null

10-01-2025T03:00:09 - [TEST_STEP][PASSED] - x = x + "/" + z: null

10-01-2025T03:00:09 - [TEST_STEP][PASSED] - x = x.replaceAll("[\r?
|
]", ""): null

10-01-2025T03:00:09 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:00:09 - [TEST_STEP][PASSED] - return x: null

10-01-2025T03:00:09 - [TEST_STEP][PASSED] - println("siR: " + siR): null

10-01-2025T03:00:09 - [TEST_STEP][PASSED] - i = VseDZO.indexOf("Томск"): null

10-01-2025T03:00:09 - [TEST_STEP][PASSED] - if (i > -1): null

10-01-2025T03:00:09 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:00:09 - [TEST_STEP][PASSED] - tomR = tomR + "нет данных/нет данных/нет данных/нет данных/нет данных/нет данных/нет данных/нет данных/нет данных": null

10-01-2025T03:00:09 - [TEST_STEP][PASSED] - println("tomR: " + tomR): null

10-01-2025T03:00:09 - [TEST_STEP][PASSED] - i = VseDZO.indexOf("Тюмень"): null

10-01-2025T03:00:09 - [TEST_STEP][PASSED] - if (i > -1): null

10-01-2025T03:00:09 - [TEST_STEP][PASSED] - dZONum = dZONum + 1: null

10-01-2025T03:00:09 - [TEST_STEP][PASSED] - tyumR = GetAllData(path, dZONum, VseDZO, x = "Россети Тюмень/"): null

10-01-2025T03:00:09 - [TEST_STEP][PASSED] - ii = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:00:09 - [TEST_STEP][PASSED] - i1 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:00:09 - [TEST_STEP][PASSED] - z = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:00:09 - [TEST_STEP][PASSED] - path2 = "Значения со страницы Выполнение бизнес-плана/Table Data/": null

10-01-2025T03:00:09 - [TEST_STEP][PASSED] - println("path: " + path): null

10-01-2025T03:00:09 - [TEST_STEP][PASSED] - println("dZONum: " + dZONum): null

10-01-2025T03:00:09 - [TEST_STEP][PASSED] - z = getText(findTestObject(path + "spanPlan" + dZONum)): Text of object 'Object Repository/Выполнение бизнес-плана/spanPlan5' is: '2.54'

10-01-2025T03:00:09 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выполнение бизнес-плана/spanPlan5' is: '2.54'

10-01-2025T03:00:09 - [TEST_STEP][PASSED] - println(z): null

10-01-2025T03:00:09 - [TEST_STEP][PASSED] - ii = z.indexOf("|"): null

10-01-2025T03:00:09 - [TEST_STEP][PASSED] - if (ii > -1): null

10-01-2025T03:00:09 - [TEST_STEP][PASSED] - z = z.replaceAll("\s+", ""): null

10-01-2025T03:00:09 - [TEST_STEP][PASSED] - z = z.replace("[\r?
|
]", "/"): null

10-01-2025T03:00:09 - [TEST_STEP][PASSED] - println(z): null

10-01-2025T03:00:09 - [TEST_STEP][PASSED] - x = x + z: null

10-01-2025T03:00:09 - [TEST_STEP][PASSED] - z = getText(findTestObject(path + "spanFact" + dZONum)): Text of object 'Object Repository/Выполнение бизнес-плана/spanFact5' is: '2.70
|'

10-01-2025T03:00:10 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выполнение бизнес-плана/spanFact5' is: '2.70
|'

10-01-2025T03:00:10 - [TEST_STEP][PASSED] - ii = z.indexOf("|"): null

10-01-2025T03:00:10 - [TEST_STEP][PASSED] - if (ii > -1): null

10-01-2025T03:00:10 - [TEST_STEP][PASSED] - z = length() - 1).replace("[\r?
|
]", "/"): null

10-01-2025T03:00:10 - [TEST_STEP][PASSED] - x = x + "/" + z: null

10-01-2025T03:00:10 - [TEST_STEP][PASSED] - z = getText(findTestObject(path + path2 + "Факт Отпуск в сеть за отчётный период " + dZONum)).replaceAll("\s+", ""): Text of object 'Object Repository/Выполнение бизнес-плана/Значения со страницы Выполнение бизнес-плана/Table Data/Факт Отпуск в сеть за отчётный период 5' is: '47 865 721'

10-01-2025T03:00:10 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выполнение бизнес-плана/Значения со страницы Выполнение бизнес-плана/Table Data/Факт Отпуск в сеть за отчётный период 5' is: '47 865 721'

10-01-2025T03:00:10 - [TEST_STEP][PASSED] - x = x + "/" + z: null

10-01-2025T03:00:10 - [TEST_STEP][PASSED] - z = getText(findTestObject(path + path2 + "Факт Отпуск из сети за отчётный период " + dZONum)).replaceAll("\s+", ""): Text of object 'Object Repository/Выполнение бизнес-плана/Значения со страницы Выполнение бизнес-плана/Table Data/Факт Отпуск из сети за отчётный период 5' is: '46 573 769'

10-01-2025T03:00:10 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выполнение бизнес-плана/Значения со страницы Выполнение бизнес-плана/Table Data/Факт Отпуск из сети за отчётный период 5' is: '46 573 769'

10-01-2025T03:00:10 - [TEST_STEP][PASSED] - x = x + "/" + z: null

10-01-2025T03:00:10 - [TEST_STEP][PASSED] - z = getText(findTestObject(path + path2 + "Факт Потери за отчётный период " + dZONum)).replaceAll("\s+", ""): Text of object 'Object Repository/Выполнение бизнес-плана/Значения со страницы Выполнение бизнес-плана/Table Data/Факт Потери за отчётный период 5' is: '1 291 953'

10-01-2025T03:00:11 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выполнение бизнес-плана/Значения со страницы Выполнение бизнес-плана/Table Data/Факт Потери за отчётный период 5' is: '1 291 953'

10-01-2025T03:00:11 - [TEST_STEP][PASSED] - x = x + "/" + z: null

10-01-2025T03:00:11 - [TEST_STEP][PASSED] - z = getText(findTestObject(path + path2 + "План Отпуск в сеть за отчётный период " + dZONum)).replaceAll("\s+", ""): Text of object 'Object Repository/Выполнение бизнес-плана/Значения со страницы Выполнение бизнес-плана/Table Data/План Отпуск в сеть за отчётный период 5' is: '49 871 651'

10-01-2025T03:00:11 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выполнение бизнес-плана/Значения со страницы Выполнение бизнес-плана/Table Data/План Отпуск в сеть за отчётный период 5' is: '49 871 651'

10-01-2025T03:00:11 - [TEST_STEP][PASSED] - x = x + "/" + z: null

10-01-2025T03:00:11 - [TEST_STEP][PASSED] - z = getText(findTestObject(path + path2 + "План Отпуск из сети за отчётный период " + dZONum)).replaceAll("\s+", ""): Text of object 'Object Repository/Выполнение бизнес-плана/Значения со страницы Выполнение бизнес-плана/Table Data/План Отпуск из сети за отчётный период 5' is: '48 605 475'

10-01-2025T03:00:11 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выполнение бизнес-плана/Значения со страницы Выполнение бизнес-плана/Table Data/План Отпуск из сети за отчётный период 5' is: '48 605 475'

10-01-2025T03:00:11 - [TEST_STEP][PASSED] - x = x + "/" + z: null

10-01-2025T03:00:11 - [TEST_STEP][PASSED] - z = getText(findTestObject(path + path2 + "План Потери за отчётный период " + dZONum)).replaceAll("\s+", ""): Text of object 'Object Repository/Выполнение бизнес-плана/Значения со страницы Выполнение бизнес-плана/Table Data/План Потери за отчётный период 5' is: '1 266 176'

10-01-2025T03:00:12 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выполнение бизнес-плана/Значения со страницы Выполнение бизнес-плана/Table Data/План Потери за отчётный период 5' is: '1 266 176'

10-01-2025T03:00:12 - [TEST_STEP][PASSED] - x = x + "/" + z: null

10-01-2025T03:00:12 - [TEST_STEP][PASSED] - z = getText(findTestObject(path + "Список ДЗО")).replaceAll("[\r?
|
]", "/"): Text of object 'Object Repository/Выполнение бизнес-плана/Список ДЗО' is: '-0.07
3.10
3.73
-0.05
0.16
-0.52
-0.27
АО «Тываэнерго»
АО «Чеченэнерго»
Россети Северный Кавказ
Россети Сибирь
Россети Тюмень
Россети Центр (ГК)
Россети Центр и Приволжье (ГК)
-1
0
1
2
3
4
5
6
7'

10-01-2025T03:00:12 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выполнение бизнес-плана/Список ДЗО' is: '-0.07
3.10
3.73
-0.05
0.16
-0.52
-0.27
АО «Тываэнерго»
АО «Чеченэнерго»
Россети Северный Кавказ
Россети Сибирь
Россети Тюмень
Россети Центр (ГК)
Россети Центр и Приволжье (ГК)
-1
0
1
2
3
4
5
6
7'

10-01-2025T03:00:12 - [TEST_STEP][PASSED] - for ([ii = 1, ii < dZONum, (ii++)]): null

10-01-2025T03:00:12 - [TEST_STEP][PASSED] - i1 = z.indexOf("/") + 1: null

10-01-2025T03:00:12 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:00:12 - [TEST_STEP][PASSED] - z = z.substring(i1, z.length()): null

10-01-2025T03:00:12 - [TEST_STEP][PASSED] - i1 = z.indexOf("/"): null

10-01-2025T03:00:12 - [TEST_STEP][PASSED] - i1 = z.indexOf("/") + 1: null

10-01-2025T03:00:12 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:00:12 - [TEST_STEP][PASSED] - z = z.substring(i1, z.length()): null

10-01-2025T03:00:12 - [TEST_STEP][PASSED] - i1 = z.indexOf("/"): null

10-01-2025T03:00:12 - [TEST_STEP][PASSED] - i1 = z.indexOf("/") + 1: null

10-01-2025T03:00:12 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:00:12 - [TEST_STEP][PASSED] - z = z.substring(i1, z.length()): null

10-01-2025T03:00:12 - [TEST_STEP][PASSED] - i1 = z.indexOf("/"): null

10-01-2025T03:00:12 - [TEST_STEP][PASSED] - i1 = z.indexOf("/") + 1: null

10-01-2025T03:00:12 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:00:12 - [TEST_STEP][PASSED] - z = z.substring(i1, z.length()): null

10-01-2025T03:00:12 - [TEST_STEP][PASSED] - i1 = z.indexOf("/"): null

10-01-2025T03:00:12 - [TEST_STEP][PASSED] - i1 = z.indexOf("/"): null

10-01-2025T03:00:12 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:00:12 - [TEST_STEP][PASSED] - z = z.substring(0, i1): null

10-01-2025T03:00:12 - [TEST_STEP][PASSED] - z = z.replace(",", "."): null

10-01-2025T03:00:12 - [TEST_STEP][PASSED] - println(z): null

10-01-2025T03:00:12 - [TEST_STEP][PASSED] - x = x + "/" + z: null

10-01-2025T03:00:12 - [TEST_STEP][PASSED] - x = x.replaceAll("[\r?
|
]", ""): null

10-01-2025T03:00:12 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:00:12 - [TEST_STEP][PASSED] - return x: null

10-01-2025T03:00:12 - [TEST_STEP][PASSED] - println("tyumR: " + tyumR): null

10-01-2025T03:00:12 - [TEST_STEP][PASSED] - i = VseDZO.indexOf("Урал"): null

10-01-2025T03:00:12 - [TEST_STEP][PASSED] - if (i > -1): null

10-01-2025T03:00:12 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:00:12 - [TEST_STEP][PASSED] - urR = urR + "нет данных/нет данных/нет данных/нет данных/нет данных/нет данных/нет данных/нет данных/нет данных": null

10-01-2025T03:00:12 - [TEST_STEP][PASSED] - println("urR: " + urR): null

10-01-2025T03:00:12 - [TEST_STEP][PASSED] - i = VseDZO.indexOf("Центр"): null

10-01-2025T03:00:12 - [TEST_STEP][PASSED] - if (i > -1): null

10-01-2025T03:00:12 - [TEST_STEP][PASSED] - dZONum = dZONum + 1: null

10-01-2025T03:00:12 - [TEST_STEP][PASSED] - cenR = GetAllData(path, dZONum, VseDZO, x = "Россети Центр (ГК)/"): null

10-01-2025T03:00:12 - [TEST_STEP][PASSED] - ii = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:00:12 - [TEST_STEP][PASSED] - i1 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:00:12 - [TEST_STEP][PASSED] - z = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:00:12 - [TEST_STEP][PASSED] - path2 = "Значения со страницы Выполнение бизнес-плана/Table Data/": null

10-01-2025T03:00:12 - [TEST_STEP][PASSED] - println("path: " + path): null

10-01-2025T03:00:12 - [TEST_STEP][PASSED] - println("dZONum: " + dZONum): null

10-01-2025T03:00:12 - [TEST_STEP][PASSED] - z = getText(findTestObject(path + "spanPlan" + dZONum)): Text of object 'Object Repository/Выполнение бизнес-плана/spanPlan6' is: '10.32
|'

10-01-2025T03:00:12 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выполнение бизнес-плана/spanPlan6' is: '10.32
|'

10-01-2025T03:00:12 - [TEST_STEP][PASSED] - println(z): null

10-01-2025T03:00:12 - [TEST_STEP][PASSED] - ii = z.indexOf("|"): null

10-01-2025T03:00:12 - [TEST_STEP][PASSED] - if (ii > -1): null

10-01-2025T03:00:12 - [TEST_STEP][PASSED] - z = z.substring(0, z.length() - 1): null

10-01-2025T03:00:12 - [TEST_STEP][PASSED] - println(z): null

10-01-2025T03:00:12 - [TEST_STEP][PASSED] - z = z.replaceAll("\s+", ""): null

10-01-2025T03:00:12 - [TEST_STEP][PASSED] - z = z.replace("[\r?
|
]", "/"): null

10-01-2025T03:00:12 - [TEST_STEP][PASSED] - println(z): null

10-01-2025T03:00:12 - [TEST_STEP][PASSED] - x = x + z: null

10-01-2025T03:00:12 - [TEST_STEP][PASSED] - z = getText(findTestObject(path + "spanFact" + dZONum)): Text of object 'Object Repository/Выполнение бизнес-плана/spanFact6' is: '9.80'

10-01-2025T03:00:12 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выполнение бизнес-плана/spanFact6' is: '9.80'

10-01-2025T03:00:12 - [TEST_STEP][PASSED] - ii = z.indexOf("|"): null

10-01-2025T03:00:12 - [TEST_STEP][PASSED] - if (ii > -1): null

10-01-2025T03:00:12 - [TEST_STEP][PASSED] - x = x + "/" + z: null

10-01-2025T03:00:12 - [TEST_STEP][PASSED] - z = getText(findTestObject(path + path2 + "Факт Отпуск в сеть за отчётный период " + dZONum)).replaceAll("\s+", ""): Text of object 'Object Repository/Выполнение бизнес-плана/Значения со страницы Выполнение бизнес-плана/Table Data/Факт Отпуск в сеть за отчётный период 6' is: '55 088 893'

10-01-2025T03:00:13 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выполнение бизнес-плана/Значения со страницы Выполнение бизнес-плана/Table Data/Факт Отпуск в сеть за отчётный период 6' is: '55 088 893'

10-01-2025T03:00:13 - [TEST_STEP][PASSED] - x = x + "/" + z: null

10-01-2025T03:00:13 - [TEST_STEP][PASSED] - z = getText(findTestObject(path + path2 + "Факт Отпуск из сети за отчётный период " + dZONum)).replaceAll("\s+", ""): Text of object 'Object Repository/Выполнение бизнес-плана/Значения со страницы Выполнение бизнес-плана/Table Data/Факт Отпуск из сети за отчётный период 6' is: '49 682 043'

10-01-2025T03:00:13 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выполнение бизнес-плана/Значения со страницы Выполнение бизнес-плана/Table Data/Факт Отпуск из сети за отчётный период 6' is: '49 682 043'

10-01-2025T03:00:13 - [TEST_STEP][PASSED] - x = x + "/" + z: null

10-01-2025T03:00:13 - [TEST_STEP][PASSED] - z = getText(findTestObject(path + path2 + "Факт Потери за отчётный период " + dZONum)).replaceAll("\s+", ""): Text of object 'Object Repository/Выполнение бизнес-плана/Значения со страницы Выполнение бизнес-плана/Table Data/Факт Потери за отчётный период 6' is: '5 406 850'

10-01-2025T03:00:13 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выполнение бизнес-плана/Значения со страницы Выполнение бизнес-плана/Table Data/Факт Потери за отчётный период 6' is: '5 406 850'

10-01-2025T03:00:13 - [TEST_STEP][PASSED] - x = x + "/" + z: null

10-01-2025T03:00:13 - [TEST_STEP][PASSED] - z = getText(findTestObject(path + path2 + "План Отпуск в сеть за отчётный период " + dZONum)).replaceAll("\s+", ""): Text of object 'Object Repository/Выполнение бизнес-плана/Значения со страницы Выполнение бизнес-плана/Table Data/План Отпуск в сеть за отчётный период 6' is: '53 713 338'

10-01-2025T03:00:14 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выполнение бизнес-плана/Значения со страницы Выполнение бизнес-плана/Table Data/План Отпуск в сеть за отчётный период 6' is: '53 713 338'

10-01-2025T03:00:14 - [TEST_STEP][PASSED] - x = x + "/" + z: null

10-01-2025T03:00:14 - [TEST_STEP][PASSED] - z = getText(findTestObject(path + path2 + "План Отпуск из сети за отчётный период " + dZONum)).replaceAll("\s+", ""): Text of object 'Object Repository/Выполнение бизнес-плана/Значения со страницы Выполнение бизнес-плана/Table Data/План Отпуск из сети за отчётный период 6' is: '48 149 456'

10-01-2025T03:00:14 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выполнение бизнес-плана/Значения со страницы Выполнение бизнес-плана/Table Data/План Отпуск из сети за отчётный период 6' is: '48 149 456'

10-01-2025T03:00:14 - [TEST_STEP][PASSED] - x = x + "/" + z: null

10-01-2025T03:00:14 - [TEST_STEP][PASSED] - z = getText(findTestObject(path + path2 + "План Потери за отчётный период " + dZONum)).replaceAll("\s+", ""): Text of object 'Object Repository/Выполнение бизнес-плана/Значения со страницы Выполнение бизнес-плана/Table Data/План Потери за отчётный период 6' is: '5 563 882'

10-01-2025T03:00:14 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выполнение бизнес-плана/Значения со страницы Выполнение бизнес-плана/Table Data/План Потери за отчётный период 6' is: '5 563 882'

10-01-2025T03:00:14 - [TEST_STEP][PASSED] - x = x + "/" + z: null

10-01-2025T03:00:14 - [TEST_STEP][PASSED] - z = getText(findTestObject(path + "Список ДЗО")).replaceAll("[\r?
|
]", "/"): Text of object 'Object Repository/Выполнение бизнес-плана/Список ДЗО' is: '-0.07
3.10
3.73
-0.05
0.16
-0.52
-0.27
АО «Тываэнерго»
АО «Чеченэнерго»
Россети Северный Кавказ
Россети Сибирь
Россети Тюмень
Россети Центр (ГК)
Россети Центр и Приволжье (ГК)
-1
0
1
2
3
4
5
6
7'

10-01-2025T03:00:15 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выполнение бизнес-плана/Список ДЗО' is: '-0.07
3.10
3.73
-0.05
0.16
-0.52
-0.27
АО «Тываэнерго»
АО «Чеченэнерго»
Россети Северный Кавказ
Россети Сибирь
Россети Тюмень
Россети Центр (ГК)
Россети Центр и Приволжье (ГК)
-1
0
1
2
3
4
5
6
7'

10-01-2025T03:00:15 - [TEST_STEP][PASSED] - for ([ii = 1, ii < dZONum, (ii++)]): null

10-01-2025T03:00:15 - [TEST_STEP][PASSED] - i1 = z.indexOf("/") + 1: null

10-01-2025T03:00:15 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:00:15 - [TEST_STEP][PASSED] - z = z.substring(i1, z.length()): null

10-01-2025T03:00:15 - [TEST_STEP][PASSED] - i1 = z.indexOf("/"): null

10-01-2025T03:00:15 - [TEST_STEP][PASSED] - i1 = z.indexOf("/") + 1: null

10-01-2025T03:00:15 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:00:15 - [TEST_STEP][PASSED] - z = z.substring(i1, z.length()): null

10-01-2025T03:00:15 - [TEST_STEP][PASSED] - i1 = z.indexOf("/"): null

10-01-2025T03:00:15 - [TEST_STEP][PASSED] - i1 = z.indexOf("/") + 1: null

10-01-2025T03:00:15 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:00:15 - [TEST_STEP][PASSED] - z = z.substring(i1, z.length()): null

10-01-2025T03:00:15 - [TEST_STEP][PASSED] - i1 = z.indexOf("/"): null

10-01-2025T03:00:15 - [TEST_STEP][PASSED] - i1 = z.indexOf("/") + 1: null

10-01-2025T03:00:15 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:00:15 - [TEST_STEP][PASSED] - z = z.substring(i1, z.length()): null

10-01-2025T03:00:15 - [TEST_STEP][PASSED] - i1 = z.indexOf("/"): null

10-01-2025T03:00:15 - [TEST_STEP][PASSED] - i1 = z.indexOf("/") + 1: null

10-01-2025T03:00:15 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:00:15 - [TEST_STEP][PASSED] - z = z.substring(i1, z.length()): null

10-01-2025T03:00:15 - [TEST_STEP][PASSED] - i1 = z.indexOf("/"): null

10-01-2025T03:00:15 - [TEST_STEP][PASSED] - i1 = z.indexOf("/"): null

10-01-2025T03:00:15 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:00:15 - [TEST_STEP][PASSED] - z = z.substring(0, i1): null

10-01-2025T03:00:15 - [TEST_STEP][PASSED] - z = z.replace(",", "."): null

10-01-2025T03:00:15 - [TEST_STEP][PASSED] - println(z): null

10-01-2025T03:00:15 - [TEST_STEP][PASSED] - x = x + "/" + z: null

10-01-2025T03:00:15 - [TEST_STEP][PASSED] - x = x.replaceAll("[\r?
|
]", ""): null

10-01-2025T03:00:15 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:00:15 - [TEST_STEP][PASSED] - return x: null

10-01-2025T03:00:15 - [TEST_STEP][PASSED] - println("cenR: " + cenR): null

10-01-2025T03:00:15 - [TEST_STEP][PASSED] - i = VseDZO.indexOf("Приволжье"): null

10-01-2025T03:00:15 - [TEST_STEP][PASSED] - if (i > -1): null

10-01-2025T03:00:15 - [TEST_STEP][PASSED] - dZONum = dZONum + 1: null

10-01-2025T03:00:15 - [TEST_STEP][PASSED] - cIPR = GetAllData(path, dZONum, VseDZO, x = "Россети Центр и Приволжье (ГК)/"): null

10-01-2025T03:00:15 - [TEST_STEP][PASSED] - ii = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:00:15 - [TEST_STEP][PASSED] - i1 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:00:15 - [TEST_STEP][PASSED] - z = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:00:15 - [TEST_STEP][PASSED] - path2 = "Значения со страницы Выполнение бизнес-плана/Table Data/": null

10-01-2025T03:00:15 - [TEST_STEP][PASSED] - println("path: " + path): null

10-01-2025T03:00:15 - [TEST_STEP][PASSED] - println("dZONum: " + dZONum): null

10-01-2025T03:00:15 - [TEST_STEP][PASSED] - z = getText(findTestObject(path + "spanPlan" + dZONum)): Text of object 'Object Repository/Выполнение бизнес-плана/spanPlan7' is: '7.17
|'

10-01-2025T03:00:15 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выполнение бизнес-плана/spanPlan7' is: '7.17
|'

10-01-2025T03:00:15 - [TEST_STEP][PASSED] - println(z): null

10-01-2025T03:00:15 - [TEST_STEP][PASSED] - ii = z.indexOf("|"): null

10-01-2025T03:00:15 - [TEST_STEP][PASSED] - if (ii > -1): null

10-01-2025T03:00:15 - [TEST_STEP][PASSED] - z = z.substring(0, z.length() - 1): null

10-01-2025T03:00:15 - [TEST_STEP][PASSED] - println(z): null

10-01-2025T03:00:15 - [TEST_STEP][PASSED] - z = z.replaceAll("\s+", ""): null

10-01-2025T03:00:15 - [TEST_STEP][PASSED] - z = z.replace("[\r?
|
]", "/"): null

10-01-2025T03:00:15 - [TEST_STEP][PASSED] - println(z): null

10-01-2025T03:00:15 - [TEST_STEP][PASSED] - x = x + z: null

10-01-2025T03:00:15 - [TEST_STEP][PASSED] - z = getText(findTestObject(path + "spanFact" + dZONum)): Text of object 'Object Repository/Выполнение бизнес-плана/spanFact7' is: '6.90'

10-01-2025T03:00:15 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выполнение бизнес-плана/spanFact7' is: '6.90'

10-01-2025T03:00:15 - [TEST_STEP][PASSED] - ii = z.indexOf("|"): null

10-01-2025T03:00:15 - [TEST_STEP][PASSED] - if (ii > -1): null

10-01-2025T03:00:15 - [TEST_STEP][PASSED] - x = x + "/" + z: null

10-01-2025T03:00:15 - [TEST_STEP][PASSED] - z = getText(findTestObject(path + path2 + "Факт Отпуск в сеть за отчётный период " + dZONum)).replaceAll("\s+", ""): Text of object 'Object Repository/Выполнение бизнес-плана/Значения со страницы Выполнение бизнес-плана/Table Data/Факт Отпуск в сеть за отчётный период 7' is: '50 521 486'

10-01-2025T03:00:16 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выполнение бизнес-плана/Значения со страницы Выполнение бизнес-плана/Table Data/Факт Отпуск в сеть за отчётный период 7' is: '50 521 486'

10-01-2025T03:00:16 - [TEST_STEP][PASSED] - x = x + "/" + z: null

10-01-2025T03:00:16 - [TEST_STEP][PASSED] - z = getText(findTestObject(path + path2 + "Факт Отпуск из сети за отчётный период " + dZONum)).replaceAll("\s+", ""): Text of object 'Object Repository/Выполнение бизнес-плана/Значения со страницы Выполнение бизнес-плана/Table Data/Факт Отпуск из сети за отчётный период 7' is: '47 031 337'

10-01-2025T03:00:16 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выполнение бизнес-плана/Значения со страницы Выполнение бизнес-плана/Table Data/Факт Отпуск из сети за отчётный период 7' is: '47 031 337'

10-01-2025T03:00:16 - [TEST_STEP][PASSED] - x = x + "/" + z: null

10-01-2025T03:00:16 - [TEST_STEP][PASSED] - z = getText(findTestObject(path + path2 + "Факт Потери за отчётный период " + dZONum)).replaceAll("\s+", ""): Text of object 'Object Repository/Выполнение бизнес-плана/Значения со страницы Выполнение бизнес-плана/Table Data/Факт Потери за отчётный период 7' is: '3 490 149'

10-01-2025T03:00:16 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выполнение бизнес-плана/Значения со страницы Выполнение бизнес-плана/Table Data/Факт Потери за отчётный период 7' is: '3 490 149'

10-01-2025T03:00:16 - [TEST_STEP][PASSED] - x = x + "/" + z: null

10-01-2025T03:00:16 - [TEST_STEP][PASSED] - z = getText(findTestObject(path + path2 + "План Отпуск в сеть за отчётный период " + dZONum)).replaceAll("\s+", ""): Text of object 'Object Repository/Выполнение бизнес-плана/Значения со страницы Выполнение бизнес-плана/Table Data/План Отпуск в сеть за отчётный период 7' is: '48 819 116'

10-01-2025T03:00:17 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выполнение бизнес-плана/Значения со страницы Выполнение бизнес-плана/Table Data/План Отпуск в сеть за отчётный период 7' is: '48 819 116'

10-01-2025T03:00:17 - [TEST_STEP][PASSED] - x = x + "/" + z: null

10-01-2025T03:00:17 - [TEST_STEP][PASSED] - z = getText(findTestObject(path + path2 + "План Отпуск из сети за отчётный период " + dZONum)).replaceAll("\s+", ""): Text of object 'Object Repository/Выполнение бизнес-плана/Значения со страницы Выполнение бизнес-плана/Table Data/План Отпуск из сети за отчётный период 7' is: '45 313 619'

10-01-2025T03:00:17 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выполнение бизнес-плана/Значения со страницы Выполнение бизнес-плана/Table Data/План Отпуск из сети за отчётный период 7' is: '45 313 619'

10-01-2025T03:00:17 - [TEST_STEP][PASSED] - x = x + "/" + z: null

10-01-2025T03:00:17 - [TEST_STEP][PASSED] - z = getText(findTestObject(path + path2 + "План Потери за отчётный период " + dZONum)).replaceAll("\s+", ""): Text of object 'Object Repository/Выполнение бизнес-плана/Значения со страницы Выполнение бизнес-плана/Table Data/План Потери за отчётный период 7' is: '3 505 497'

10-01-2025T03:00:17 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выполнение бизнес-плана/Значения со страницы Выполнение бизнес-плана/Table Data/План Потери за отчётный период 7' is: '3 505 497'

10-01-2025T03:00:17 - [TEST_STEP][PASSED] - x = x + "/" + z: null

10-01-2025T03:00:17 - [TEST_STEP][PASSED] - z = getText(findTestObject(path + "Список ДЗО")).replaceAll("[\r?
|
]", "/"): Text of object 'Object Repository/Выполнение бизнес-плана/Список ДЗО' is: '-0.07
3.10
3.73
-0.05
0.16
-0.52
-0.27
АО «Тываэнерго»
АО «Чеченэнерго»
Россети Северный Кавказ
Россети Сибирь
Россети Тюмень
Россети Центр (ГК)
Россети Центр и Приволжье (ГК)
-1
0
1
2
3
4
5
6
7'

10-01-2025T03:00:18 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выполнение бизнес-плана/Список ДЗО' is: '-0.07
3.10
3.73
-0.05
0.16
-0.52
-0.27
АО «Тываэнерго»
АО «Чеченэнерго»
Россети Северный Кавказ
Россети Сибирь
Россети Тюмень
Россети Центр (ГК)
Россети Центр и Приволжье (ГК)
-1
0
1
2
3
4
5
6
7'

10-01-2025T03:00:18 - [TEST_STEP][PASSED] - for ([ii = 1, ii < dZONum, (ii++)]): null

10-01-2025T03:00:18 - [TEST_STEP][PASSED] - i1 = z.indexOf("/") + 1: null

10-01-2025T03:00:18 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:00:18 - [TEST_STEP][PASSED] - z = z.substring(i1, z.length()): null

10-01-2025T03:00:18 - [TEST_STEP][PASSED] - i1 = z.indexOf("/"): null

10-01-2025T03:00:18 - [TEST_STEP][PASSED] - i1 = z.indexOf("/") + 1: null

10-01-2025T03:00:18 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:00:18 - [TEST_STEP][PASSED] - z = z.substring(i1, z.length()): null

10-01-2025T03:00:18 - [TEST_STEP][PASSED] - i1 = z.indexOf("/"): null

10-01-2025T03:00:18 - [TEST_STEP][PASSED] - i1 = z.indexOf("/") + 1: null

10-01-2025T03:00:18 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:00:18 - [TEST_STEP][PASSED] - z = z.substring(i1, z.length()): null

10-01-2025T03:00:18 - [TEST_STEP][PASSED] - i1 = z.indexOf("/"): null

10-01-2025T03:00:18 - [TEST_STEP][PASSED] - i1 = z.indexOf("/") + 1: null

10-01-2025T03:00:18 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:00:18 - [TEST_STEP][PASSED] - z = z.substring(i1, z.length()): null

10-01-2025T03:00:18 - [TEST_STEP][PASSED] - i1 = z.indexOf("/"): null

10-01-2025T03:00:18 - [TEST_STEP][PASSED] - i1 = z.indexOf("/") + 1: null

10-01-2025T03:00:18 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:00:18 - [TEST_STEP][PASSED] - z = z.substring(i1, z.length()): null

10-01-2025T03:00:18 - [TEST_STEP][PASSED] - i1 = z.indexOf("/"): null

10-01-2025T03:00:18 - [TEST_STEP][PASSED] - i1 = z.indexOf("/") + 1: null

10-01-2025T03:00:18 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:00:18 - [TEST_STEP][PASSED] - z = z.substring(i1, z.length()): null

10-01-2025T03:00:18 - [TEST_STEP][PASSED] - i1 = z.indexOf("/"): null

10-01-2025T03:00:18 - [TEST_STEP][PASSED] - i1 = z.indexOf("/"): null

10-01-2025T03:00:18 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:00:18 - [TEST_STEP][PASSED] - z = z.substring(0, i1): null

10-01-2025T03:00:18 - [TEST_STEP][PASSED] - z = z.replace(",", "."): null

10-01-2025T03:00:18 - [TEST_STEP][PASSED] - println(z): null

10-01-2025T03:00:18 - [TEST_STEP][PASSED] - x = x + "/" + z: null

10-01-2025T03:00:18 - [TEST_STEP][PASSED] - x = x.replaceAll("[\r?
|
]", ""): null

10-01-2025T03:00:18 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:00:18 - [TEST_STEP][PASSED] - return x: null

10-01-2025T03:00:18 - [TEST_STEP][PASSED] - println("cIPR: " + cIPR): null

10-01-2025T03:00:18 - [TEST_STEP][PASSED] - i = VseDZO.indexOf("Юг"): null

10-01-2025T03:00:18 - [TEST_STEP][PASSED] - if (i > -1): null

10-01-2025T03:00:18 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:00:18 - [TEST_STEP][PASSED] - ugR = ugR + "нет данных/нет данных/нет данных/нет данных/нет данных/нет данных/нет данных/нет данных/нет данных": null

10-01-2025T03:00:18 - [TEST_STEP][PASSED] - println("ugR: " + ugR): null

10-01-2025T03:00:18 - [TEST_STEP][PASSED] - i = VseDZO.indexOf("Янтарь"): null

10-01-2025T03:00:18 - [TEST_STEP][PASSED] - if (i > -1): null

10-01-2025T03:00:18 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:00:18 - [TEST_STEP][PASSED] - yR = yR + "нет данных/нет данных/нет данных/нет данных/нет данных/нет данных/нет данных/нет данных/нет данных": null

10-01-2025T03:00:18 - [TEST_STEP][PASSED] - println("yR: " + yR): null

10-01-2025T03:00:18 - [TEST_STEP][PASSED] - blockNum = 2: null

10-01-2025T03:00:18 - [TEST_STEP][PASSED] - path = "Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/": null

10-01-2025T03:00:18 - [TEST_STEP][PASSED] - Script1719299571342.Presettings(blockNum, path): null

10-01-2025T03:00:18 - [TEST_STEP][PASSED] - blockNumber = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:00:18 - [TEST_STEP][PASSED] - urlText = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:00:18 - [TEST_STEP][PASSED] - searchWord = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:00:18 - [TEST_STEP][PASSED] - i = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:00:18 - [TEST_STEP][PASSED] - ii = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:00:18 - [TEST_STEP][PASSED] - openBrowser(""): Browser is opened with url: ''

10-01-2025T03:00:18 - [MESSAGE][WARNING] - A browser is already opened. Closing browser and opening a new one

10-01-2025T03:00:18 - [MESSAGE][INFO] - Starting 'Chrome' driver

10-01-2025T03:00:18 - [MESSAGE][INFO] - Action delay is set to 0 milliseconds

10-01-2025T03:00:19 - [MESSAGE][PASSED] - Browser is opened with url: ''

10-01-2025T03:00:19 - [TEST_STEP][PASSED] - if (blockNum == 1): null

10-01-2025T03:00:19 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:00:19 - [TEST_STEP][PASSED] - path = "Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/": null

10-01-2025T03:00:19 - [TEST_STEP][PASSED] - blockNumber = 4: null

10-01-2025T03:00:19 - [TEST_STEP][PASSED] - navigateToUrl(findTestData("PlanFact").getValue(10, blockNumber)): Navigate to 'https://bi.rosseti.digital/viewer?dashboardGuid=5ed11b2f4eb2434fa5c5ff1537a71532&sheetGuid=0d90a67b6f664f58b2e6cf8ff5d9a66c&fit=true' successfully

10-01-2025T03:00:25 - [MESSAGE][PASSED] - Navigate to 'https://bi.rosseti.digital/viewer?dashboardGuid=5ed11b2f4eb2434fa5c5ff1537a71532&sheetGuid=0d90a67b6f664f58b2e6cf8ff5d9a66c&fit=true' successfully

10-01-2025T03:00:25 - [TEST_STEP][PASSED] - urlText = getText(findTestObject("Страница авторизации/Text")): Text of object 'Object Repository/Страница авторизации/Text' is: 'Вход'

10-01-2025T03:00:26 - [MESSAGE][PASSED] - Text of object 'Object Repository/Страница авторизации/Text' is: 'Вход'

10-01-2025T03:00:26 - [TEST_STEP][PASSED] - delay(10): Delayed 10 second(s)

10-01-2025T03:00:36 - [MESSAGE][PASSED] - Delayed 10 second(s)

10-01-2025T03:00:36 - [TEST_STEP][PASSED] - searchWord = "Вход": null

10-01-2025T03:00:36 - [TEST_STEP][PASSED] - if (urlText.contains(searchWord) == false): null

10-01-2025T03:00:36 - [TEST_STEP][PASSED] - setText(findTestObject("Страница авторизации/input__username"), findTestData("PlanFact").getValue(8, 1)): Text 'liazgina-di' is set on object 'Object Repository/Страница авторизации/input__username'

10-01-2025T03:00:37 - [MESSAGE][PASSED] - Text 'liazgina-di' is set on object 'Object Repository/Страница авторизации/input__username'

10-01-2025T03:00:37 - [TEST_STEP][PASSED] - setText(findTestObject("Страница авторизации/input__password"), findTestData("PlanFact").getValue(9, 1)): Text ')$%5srZ8o688Dm#q' is set on object 'Object Repository/Страница авторизации/input__password'

10-01-2025T03:00:38 - [MESSAGE][PASSED] - Text ')$%5srZ8o688Dm#q' is set on object 'Object Repository/Страница авторизации/input__password'

10-01-2025T03:00:38 - [TEST_STEP][PASSED] - click(findTestObject("Страница авторизации/button_")): Object: 'Object Repository/Страница авторизации/button_' is clicked on

10-01-2025T03:00:39 - [MESSAGE][PASSED] - Object: 'Object Repository/Страница авторизации/button_' is clicked on

10-01-2025T03:00:39 - [TEST_STEP][PASSED] - delay(50): Delayed 50 second(s)

10-01-2025T03:01:29 - [MESSAGE][PASSED] - Delayed 50 second(s)

10-01-2025T03:01:29 - [TEST_STEP][PASSED] - searchWord = "ДЗО": null

10-01-2025T03:01:29 - [TEST_STEP][PASSED] - urlText = getText(findTestObject("Страница авторизации/Text")): Text of object 'Object Repository/Страница авторизации/Text' is: 'ДЗО 
ПАО Россети - РаспредКомплекс - Россети Урал (ГК) - Свердловэнерго
Период
1, 2, 3 кв., Октябрь, Ноябрь 2024 года

Показатели баланса электроэнергии по ДЗО – Факт
27 418 968 0
26 296 800 0
1 122 169 0
Итого
п.п.
-0.06
-0.075
-0.05
-0.025
0
Итого
%
4.38 4.38
4.31 4.31
1
100

Выполнение бизнес-плана в части показателя «Уровень потерь электроэнергии»
Итого – Факт
Отпуск в сеть 27 418 968
Отпуск из сети 26 296 800
Потери 1 122 169
Статус данных
Просьба обратить внимание
— данные занесены не полностью
Показатели баланса электроэнергии по ДЗО – План
34 568 632 0
33 041 000 0
1 527 632 0
Факт
План
Итого – План
Отпуск в сеть 26 753 244
Отпуск из сети 25 627 190
Потери 1 126 055
Отклонения фактического уровня потерь от бизнес-плана, п.п. 
-0.10
Россети Урал (ГК)
-1
0
1
2
3
4
5
6
7
Уровень потерь электроэнергии '

10-01-2025T03:02:00 - [MESSAGE][PASSED] - Text of object 'Object Repository/Страница авторизации/Text' is: 'ДЗО 
ПАО Россети - РаспредКомплекс - Россети Урал (ГК) - Свердловэнерго
Период
1, 2, 3 кв., Октябрь, Ноябрь 2024 года

Показатели баланса электроэнергии по ДЗО – Факт
27 418 968 0
26 296 800 0
1 122 169 0
Итого
п.п.
-0.06
-0.075
-0.05
-0.025
0
Итого
%
4.38 4.38
4.31 4.31
1
100

Выполнение бизнес-плана в части показателя «Уровень потерь электроэнергии»
Итого – Факт
Отпуск в сеть 27 418 968
Отпуск из сети 26 296 800
Потери 1 122 169
Статус данных
Просьба обратить внимание
— данные занесены не полностью
Показатели баланса электроэнергии по ДЗО – План
34 568 632 0
33 041 000 0
1 527 632 0
Факт
План
Итого – План
Отпуск в сеть 26 753 244
Отпуск из сети 25 627 190
Потери 1 126 055
Отклонения фактического уровня потерь от бизнес-плана, п.п. 
-0.10
Россети Урал (ГК)
-1
0
1
2
3
4
5
6
7
Уровень потерь электроэнергии '

10-01-2025T03:02:00 - [TEST_STEP][PASSED] - if (urlText.contains("ошибка") || urlText.contains(searchWord) == false): null

10-01-2025T03:02:00 - [TEST_STEP][PASSED] - Script1719299571342.ZakrytOpoveshenie(): null

10-01-2025T03:02:00 - [TEST_STEP][PASSED] - opoveshenie = getText(findTestObject("Выполнение бизнес-плана/Просьба обратить внимание")): Text of object 'Object Repository/Выполнение бизнес-плана/Просьба обратить внимание' is: 'Просьба обратить внимание'

10-01-2025T03:02:23 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выполнение бизнес-плана/Просьба обратить внимание' is: 'Просьба обратить внимание'

10-01-2025T03:02:23 - [TEST_STEP][PASSED] - if (opoveshenie == "Просьба обратить внимание"): Object: 'Object Repository/Выполнение бизнес-плана/Закрыть оповещение' is clicked on

10-01-2025T03:02:23 - [TEST_STEP][PASSED] - click(findTestObject("Выполнение бизнес-плана/Закрыть оповещение")): Object: 'Object Repository/Выполнение бизнес-плана/Закрыть оповещение' is clicked on

10-01-2025T03:02:23 - [MESSAGE][PASSED] - Object: 'Object Repository/Выполнение бизнес-плана/Закрыть оповещение' is clicked on

10-01-2025T03:02:23 - [TEST_STEP][PASSED] - click(findTestObject(path + "Фильтр Дата")): Object: 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Фильтр Дата' is clicked on

10-01-2025T03:02:24 - [MESSAGE][PASSED] - Object: 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Фильтр Дата' is clicked on

10-01-2025T03:02:24 - [TEST_STEP][PASSED] - click(findTestObject(path + "Снять выделение в фильтре Дата")): Object: 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Снять выделение в фильтре Дата' is clicked on

10-01-2025T03:02:24 - [MESSAGE][PASSED] - Object: 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Снять выделение в фильтре Дата' is clicked on

10-01-2025T03:02:24 - [TEST_STEP][PASSED] - click(findTestObject(path + "Применить в фильтре Дата")): Object: 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Применить в фильтре Дата' is clicked on

10-01-2025T03:02:25 - [MESSAGE][PASSED] - Object: 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Применить в фильтре Дата' is clicked on

10-01-2025T03:02:25 - [TEST_STEP][PASSED] - delay(50): Delayed 50 second(s)

10-01-2025T03:03:15 - [MESSAGE][PASSED] - Delayed 50 second(s)

10-01-2025T03:03:15 - [TEST_STEP][PASSED] - Script1719299571342.ZakrytOpoveshenie(): null

10-01-2025T03:03:15 - [TEST_STEP][PASSED] - opoveshenie = getText(findTestObject("Выполнение бизнес-плана/Просьба обратить внимание")): Text of object 'Object Repository/Выполнение бизнес-плана/Просьба обратить внимание' is: 'Просьба обратить внимание'

10-01-2025T03:03:15 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выполнение бизнес-плана/Просьба обратить внимание' is: 'Просьба обратить внимание'

10-01-2025T03:03:15 - [TEST_STEP][PASSED] - if (opoveshenie == "Просьба обратить внимание"): Object: 'Object Repository/Выполнение бизнес-плана/Закрыть оповещение' is clicked on

10-01-2025T03:03:16 - [TEST_STEP][PASSED] - click(findTestObject("Выполнение бизнес-плана/Закрыть оповещение")): Object: 'Object Repository/Выполнение бизнес-плана/Закрыть оповещение' is clicked on

10-01-2025T03:03:16 - [MESSAGE][PASSED] - Object: 'Object Repository/Выполнение бизнес-плана/Закрыть оповещение' is clicked on

10-01-2025T03:03:16 - [TEST_STEP][PASSED] - click(findTestObject(path + "Фильтр Дата")): Object: 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Фильтр Дата' is clicked on

10-01-2025T03:03:16 - [MESSAGE][PASSED] - Object: 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Фильтр Дата' is clicked on

10-01-2025T03:03:16 - [TEST_STEP][PASSED] - scrollToElement(findTestObject(path + "2024 список"), 30): Scroll to object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/2024 список' successfully

10-01-2025T03:03:17 - [MESSAGE][PASSED] - Scroll to object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/2024 список' successfully

10-01-2025T03:03:17 - [TEST_STEP][PASSED] - click(findTestObject(path + "2024 список")): Object: 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/2024 список' is clicked on

10-01-2025T03:03:17 - [MESSAGE][PASSED] - Object: 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/2024 список' is clicked on

10-01-2025T03:03:17 - [TEST_STEP][PASSED] - scrollToElement(findTestObject(path + "1 квартал 2024 список"), 30): Scroll to object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/1 квартал 2024 список' successfully

10-01-2025T03:03:18 - [MESSAGE][PASSED] - Scroll to object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/1 квартал 2024 список' successfully

10-01-2025T03:03:18 - [TEST_STEP][PASSED] - click(findTestObject(path + "1 квартал 2024 список")): Object: 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/1 квартал 2024 список' is clicked on

10-01-2025T03:03:18 - [MESSAGE][PASSED] - Object: 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/1 квартал 2024 список' is clicked on

10-01-2025T03:03:18 - [TEST_STEP][PASSED] - click(findTestObject(path + "Январь 2024")): Object: 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Январь 2024' is clicked on

10-01-2025T03:03:18 - [MESSAGE][PASSED] - Object: 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Январь 2024' is clicked on

10-01-2025T03:03:18 - [TEST_STEP][PASSED] - click(findTestObject(path + "Февраль 2024")): Object: 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Февраль 2024' is clicked on

10-01-2025T03:03:19 - [MESSAGE][PASSED] - Object: 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Февраль 2024' is clicked on

10-01-2025T03:03:19 - [TEST_STEP][PASSED] - click(findTestObject(path + "Март 2024")): Object: 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Март 2024' is clicked on

10-01-2025T03:03:19 - [MESSAGE][PASSED] - Object: 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Март 2024' is clicked on

10-01-2025T03:03:19 - [TEST_STEP][PASSED] - scrollToElement(findTestObject(path + "2 квартал 2024"), 30): Scroll to object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/2 квартал 2024' successfully

10-01-2025T03:03:20 - [MESSAGE][PASSED] - Scroll to object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/2 квартал 2024' successfully

10-01-2025T03:03:20 - [TEST_STEP][PASSED] - click(findTestObject(path + "2 квартал 2024")): Object: 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/2 квартал 2024' is clicked on

10-01-2025T03:03:20 - [MESSAGE][PASSED] - Object: 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/2 квартал 2024' is clicked on

10-01-2025T03:03:20 - [TEST_STEP][PASSED] - scrollToElement(findTestObject(path + "3 квартал 2024 список"), 30): Scroll to object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/3 квартал 2024 список' successfully

10-01-2025T03:03:21 - [MESSAGE][PASSED] - Scroll to object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/3 квартал 2024 список' successfully

10-01-2025T03:03:21 - [TEST_STEP][PASSED] - click(findTestObject(path + "3 квартал 2024")): Object: 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/3 квартал 2024' is clicked on

10-01-2025T03:03:21 - [MESSAGE][PASSED] - Object: 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/3 квартал 2024' is clicked on

10-01-2025T03:03:21 - [TEST_STEP][PASSED] - scrollToElement(findTestObject(path + "4 квартал 2024 список"), 30): Scroll to object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/4 квартал 2024 список' successfully

10-01-2025T03:03:22 - [MESSAGE][PASSED] - Scroll to object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/4 квартал 2024 список' successfully

10-01-2025T03:03:22 - [TEST_STEP][PASSED] - click(findTestObject(path + "4 квартал 2024 список")): Object: 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/4 квартал 2024 список' is clicked on

10-01-2025T03:03:22 - [MESSAGE][PASSED] - Object: 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/4 квартал 2024 список' is clicked on

10-01-2025T03:03:22 - [TEST_STEP][PASSED] - scrollToElement(findTestObject(path + "Октябрь 2024"), 30): Scroll to object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Октябрь 2024' successfully

10-01-2025T03:03:22 - [MESSAGE][PASSED] - Scroll to object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Октябрь 2024' successfully

10-01-2025T03:03:22 - [TEST_STEP][PASSED] - click(findTestObject(path + "Октябрь 2024")): Object: 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Октябрь 2024' is clicked on

10-01-2025T03:03:23 - [MESSAGE][PASSED] - Object: 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Октябрь 2024' is clicked on

10-01-2025T03:03:23 - [TEST_STEP][PASSED] - scrollToElement(findTestObject(path + "Ноябрь 2024"), 30): Scroll to object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Ноябрь 2024' successfully

10-01-2025T03:03:23 - [MESSAGE][PASSED] - Scroll to object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Ноябрь 2024' successfully

10-01-2025T03:03:23 - [TEST_STEP][PASSED] - click(findTestObject(path + "Ноябрь 2024")): Object: 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Ноябрь 2024' is clicked on

10-01-2025T03:03:23 - [MESSAGE][PASSED] - Object: 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Ноябрь 2024' is clicked on

10-01-2025T03:03:23 - [TEST_STEP][PASSED] - scrollToElement(findTestObject(path + "Заголовок дашборда"), 30): Scroll to object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Заголовок дашборда' successfully

10-01-2025T03:03:24 - [MESSAGE][PASSED] - Scroll to object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Заголовок дашборда' successfully

10-01-2025T03:03:24 - [TEST_STEP][PASSED] - click(findTestObject(path + "Применить в фильтре Дата")): Object: 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Применить в фильтре Дата' is clicked on

10-01-2025T03:03:25 - [MESSAGE][PASSED] - Object: 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Применить в фильтре Дата' is clicked on

10-01-2025T03:03:25 - [TEST_STEP][PASSED] - delay(30): Delayed 30 second(s)

10-01-2025T03:03:55 - [MESSAGE][PASSED] - Delayed 30 second(s)

10-01-2025T03:03:55 - [TEST_STEP][PASSED] - Script1719299571342.ZakrytOpoveshenie(): null

10-01-2025T03:03:55 - [TEST_STEP][PASSED] - opoveshenie = getText(findTestObject("Выполнение бизнес-плана/Просьба обратить внимание")): Text of object 'Object Repository/Выполнение бизнес-плана/Просьба обратить внимание' is: 'Просьба обратить внимание'

10-01-2025T03:03:55 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выполнение бизнес-плана/Просьба обратить внимание' is: 'Просьба обратить внимание'

10-01-2025T03:03:55 - [TEST_STEP][PASSED] - if (opoveshenie == "Просьба обратить внимание"): Object: 'Object Repository/Выполнение бизнес-плана/Закрыть оповещение' is clicked on

10-01-2025T03:03:55 - [TEST_STEP][PASSED] - click(findTestObject("Выполнение бизнес-плана/Закрыть оповещение")): Object: 'Object Repository/Выполнение бизнес-плана/Закрыть оповещение' is clicked on

10-01-2025T03:03:56 - [MESSAGE][PASSED] - Object: 'Object Repository/Выполнение бизнес-плана/Закрыть оповещение' is clicked on

10-01-2025T03:03:56 - [TEST_STEP][PASSED] - click(findTestObject(path + "Фильтр ДЗО")): Object: 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Фильтр ДЗО' is clicked on

10-01-2025T03:03:56 - [MESSAGE][PASSED] - Object: 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Фильтр ДЗО' is clicked on

10-01-2025T03:03:56 - [TEST_STEP][PASSED] - click(findTestObject(path + "Снять выделение в фильтре ДЗО")): Object: 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Снять выделение в фильтре ДЗО' is clicked on

10-01-2025T03:03:56 - [MESSAGE][PASSED] - Object: 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Снять выделение в фильтре ДЗО' is clicked on

10-01-2025T03:03:56 - [TEST_STEP][PASSED] - click(findTestObject(path + "ПАО Россети")): Object: 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/ПАО Россети' is clicked on

10-01-2025T03:03:57 - [MESSAGE][PASSED] - Object: 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/ПАО Россети' is clicked on

10-01-2025T03:03:57 - [TEST_STEP][PASSED] - click(findTestObject(path + "Применить в фильтре ДЗО")): Object: 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Применить в фильтре ДЗО' is clicked on

10-01-2025T03:03:58 - [MESSAGE][PASSED] - Object: 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Применить в фильтре ДЗО' is clicked on

10-01-2025T03:03:58 - [TEST_STEP][PASSED] - delay(30): Delayed 30 second(s)

10-01-2025T03:04:28 - [MESSAGE][PASSED] - Delayed 30 second(s)

10-01-2025T03:04:28 - [TEST_STEP][PASSED] - pRB = GetAllPAOData(path, dZONum, VseDZO, z = "ПАО Россети/"): null

10-01-2025T03:04:28 - [TEST_STEP][PASSED] - path2 = "Значения со страницы Выполнение бизнес-плана/Table Data/": null

10-01-2025T03:04:28 - [TEST_STEP][PASSED] - ii = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:04:28 - [TEST_STEP][PASSED] - i1 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:04:28 - [TEST_STEP][PASSED] - z = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:04:28 - [TEST_STEP][PASSED] - z1 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:04:28 - [TEST_STEP][PASSED] - println("path: " + path): null

10-01-2025T03:04:28 - [TEST_STEP][PASSED] - z = getText(findTestObject(path + "Итого")).replaceAll("[\r?
|
]", "/"): Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Итого' is: 'Итого
%
5.97 5.97
8.12 8.12
1
100'

10-01-2025T03:04:28 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Итого' is: 'Итого
%
5.97 5.97
8.12 8.12
1
100'

10-01-2025T03:04:28 - [TEST_STEP][PASSED] - ii = z.indexOf("%") + 2: null

10-01-2025T03:04:28 - [TEST_STEP][PASSED] - if (ii > -1): null

10-01-2025T03:04:28 - [TEST_STEP][PASSED] - z = z.substring(ii, z.length()): null

10-01-2025T03:04:28 - [TEST_STEP][PASSED] - println(z): null

10-01-2025T03:04:28 - [TEST_STEP][PASSED] - ii = z.indexOf("/1/100") - 1: null

10-01-2025T03:04:28 - [TEST_STEP][PASSED] - if (ii > -1): null

10-01-2025T03:04:28 - [TEST_STEP][PASSED] - z = z.substring(0, ii): null

10-01-2025T03:04:28 - [TEST_STEP][PASSED] - println(z): null

10-01-2025T03:04:28 - [TEST_STEP][PASSED] - ii = z.indexOf("План"): null

10-01-2025T03:04:28 - [TEST_STEP][PASSED] - if (ii > -1): null

10-01-2025T03:04:28 - [TEST_STEP][PASSED] - ii = z.indexOf("/") + 1: null

10-01-2025T03:04:28 - [TEST_STEP][PASSED] - z1 = z.substring(0, ii): null

10-01-2025T03:04:28 - [TEST_STEP][PASSED] - println(z1): null

10-01-2025T03:04:28 - [TEST_STEP][PASSED] - z = z.substring(ii, z.length()): null

10-01-2025T03:04:28 - [TEST_STEP][PASSED] - println(z): null

10-01-2025T03:04:28 - [TEST_STEP][PASSED] - ii = z1.length() / 2: null

10-01-2025T03:04:28 - [TEST_STEP][PASSED] - z1 = replaceAll("[\r?
|
]", "/").trim(): null

10-01-2025T03:04:28 - [TEST_STEP][PASSED] - println(z1): null

10-01-2025T03:04:28 - [TEST_STEP][PASSED] - ii = z.length() / 2: null

10-01-2025T03:04:28 - [TEST_STEP][PASSED] - z = replace("/", "").trim(): null

10-01-2025T03:04:28 - [TEST_STEP][PASSED] - println(z): null

10-01-2025T03:04:28 - [TEST_STEP][PASSED] - x = x + z1 + "/" + z: null

10-01-2025T03:04:28 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:04:28 - [TEST_STEP][FAILED] - if (verifyElementPresent(findTestObject(path + "Таблица Итого-Факт"), 30)): Unable to verify object is present (Root cause: com.kms.katalon.core.exception.StepFailedException: Unable to verify object is present
	at com.kms.katalon.core.webui.keyword.internal.WebUIKeywordMain.stepFailed(WebUIKeywordMain.groovy:64)
	at com.kms.katalon.core.webui.keyword.internal.WebUIKeywordMain.runKeyword(WebUIKeywordMain.groovy:26)
	at com.kms.katalon.core.webui.keyword.builtin.VerifyElementPresentKeyword.verifyElementPresent(VerifyElementPresentKeyword.groovy:92)
	at com.kms.katalon.core.webui.keyword.builtin.VerifyElementPresentKeyword.execute(VerifyElementPresentKeyword.groovy:68)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:74)
	at com.kms.katalon.core.webui.keyword.WebUiBuiltInKeywords.verifyElementPresent(WebUiBuiltInKeywords.groovy:1503)
	at Выполнение бизнес-плана сверка дашбордов.GetAllPAOData(Выполнение бизнес-плана сверка дашбордов:862)
	at Выполнение бизнес-плана сверка дашбордов.run(Выполнение бизнес-плана сверка дашбордов:362)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:448)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:439)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:418)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:410)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:285)
	at com.kms.katalon.core.common.CommonExecutor.accessTestCaseMainPhase(CommonExecutor.java:65)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:150)
	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:106)
	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:180)
	at TempTestSuite1736466949911.run(TempTestSuite1736466949911.groovy:35)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
Caused by: java.lang.IllegalArgumentException: Object is null
	at com.kms.katalon.core.helper.KeywordHelper.checkTestObjectParameter(KeywordHelper.java:33)
	at com.kms.katalon.core.webui.keyword.builtin.VerifyElementPresentKeyword$_verifyElementPresent_closure1.doCall(VerifyElementPresentKeyword.groovy:76)
	at com.kms.katalon.core.webui.keyword.builtin.VerifyElementPresentKeyword$_verifyElementPresent_closure1.call(VerifyElementPresentKeyword.groovy)
	at com.kms.katalon.core.webui.keyword.internal.WebUIKeywordMain.runKeyword(WebUIKeywordMain.groovy:20)
	at com.kms.katalon.core.webui.keyword.builtin.VerifyElementPresentKeyword.verifyElementPresent(VerifyElementPresentKeyword.groovy:92)
	at com.kms.katalon.core.webui.keyword.builtin.VerifyElementPresentKeyword.execute(VerifyElementPresentKeyword.groovy:68)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:74)
	at com.kms.katalon.core.webui.keyword.WebUiBuiltInKeywords.verifyElementPresent(WebUiBuiltInKeywords.groovy:1503)
	at Script1719299571342.GetAllPAOData(Script1719299571342.groovy:862)
	at Script1719299571342.run(Script1719299571342.groovy:362)
	... 15 more
)

10-01-2025T03:04:28 - [MESSAGE][WARNING] - Test object with id 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Таблица Итого-Факт' does not exist

10-01-2025T03:04:28 - [MESSAGE][WARNING] - Test object with id 'Object Repository/' does not exist

10-01-2025T03:04:29 - [MESSAGE][FAILED] - Unable to verify object is present (Root cause: com.kms.katalon.core.exception.StepFailedException: Unable to verify object is present
	at com.kms.katalon.core.webui.keyword.internal.WebUIKeywordMain.stepFailed(WebUIKeywordMain.groovy:64)
	at com.kms.katalon.core.webui.keyword.internal.WebUIKeywordMain.runKeyword(WebUIKeywordMain.groovy:26)
	at com.kms.katalon.core.webui.keyword.builtin.VerifyElementPresentKeyword.verifyElementPresent(VerifyElementPresentKeyword.groovy:92)
	at com.kms.katalon.core.webui.keyword.builtin.VerifyElementPresentKeyword.execute(VerifyElementPresentKeyword.groovy:68)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:74)
	at com.kms.katalon.core.webui.keyword.WebUiBuiltInKeywords.verifyElementPresent(WebUiBuiltInKeywords.groovy:1503)
	at Выполнение бизнес-плана сверка дашбордов.GetAllPAOData(Выполнение бизнес-плана сверка дашбордов:862)
	at Выполнение бизнес-плана сверка дашбордов.run(Выполнение бизнес-плана сверка дашбордов:362)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:448)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:439)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:418)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:410)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:285)
	at com.kms.katalon.core.common.CommonExecutor.accessTestCaseMainPhase(CommonExecutor.java:65)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:150)
	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:106)
	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:180)
	at TempTestSuite1736466949911.run(TempTestSuite1736466949911.groovy:35)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
Caused by: java.lang.IllegalArgumentException: Object is null
	at com.kms.katalon.core.helper.KeywordHelper.checkTestObjectParameter(KeywordHelper.java:33)
	at com.kms.katalon.core.webui.keyword.builtin.VerifyElementPresentKeyword$_verifyElementPresent_closure1.doCall(VerifyElementPresentKeyword.groovy:76)
	at com.kms.katalon.core.webui.keyword.builtin.VerifyElementPresentKeyword$_verifyElementPresent_closure1.call(VerifyElementPresentKeyword.groovy)
	at com.kms.katalon.core.webui.keyword.internal.WebUIKeywordMain.runKeyword(WebUIKeywordMain.groovy:20)
	at com.kms.katalon.core.webui.keyword.builtin.VerifyElementPresentKeyword.verifyElementPresent(VerifyElementPresentKeyword.groovy:92)
	at com.kms.katalon.core.webui.keyword.builtin.VerifyElementPresentKeyword.execute(VerifyElementPresentKeyword.groovy:68)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:74)
	at com.kms.katalon.core.webui.keyword.WebUiBuiltInKeywords.verifyElementPresent(WebUiBuiltInKeywords.groovy:1503)
	at Script1719299571342.GetAllPAOData(Script1719299571342.groovy:862)
	at Script1719299571342.run(Script1719299571342.groovy:362)
	... 15 more
)
[[ATTACHMENT|C:\\Users\\LIAZGINA-DI\\git\\SPORU\\Reports\\20250110_025549\\\u041F\u043D-\u0421\u0440-\u041F\u0442\\\u0421\u0432\u0435\u0440\u043A\u0430 \u0434\u0430\u0448\u0431\u043E\u0440\u0434\u043E\u0432 \u0438\u0437 \u0440\u0430\u0437\u043D\u044B\u0445 \u0431\u043B\u043E\u043A\u043E\u0432\\20250110_025549\\1736467468889.png]]

10-01-2025T03:04:29 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:04:29 - [TEST_STEP][PASSED] - z = getText(findTestObject(path + "Факт Отпуск в сеть за отчётный период ПАО Россети")).replaceAll("\s+", ""): Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Факт Отпуск в сеть за отчётный период ПАО Россети' is: '564 981 141'

10-01-2025T03:04:29 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Факт Отпуск в сеть за отчётный период ПАО Россети' is: '564 981 141'

10-01-2025T03:04:29 - [TEST_STEP][PASSED] - x = x + "/" + z: null

10-01-2025T03:04:29 - [TEST_STEP][PASSED] - z = getText(findTestObject(path + "Факт Отпуск из сети за отчётный период ПАО Россети")).replaceAll("\s+", ""): Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Факт Отпуск из сети за отчётный период ПАО Россети' is: '519 906 785'

10-01-2025T03:04:29 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Факт Отпуск из сети за отчётный период ПАО Россети' is: '519 906 785'

10-01-2025T03:04:29 - [TEST_STEP][PASSED] - x = x + "/" + z: null

10-01-2025T03:04:29 - [TEST_STEP][PASSED] - z = getText(findTestObject(path + "Факт Потери за отчётный период ПАО Россети")).replaceAll("\s+", ""): Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Факт Потери за отчётный период ПАО Россети' is: '45 074 356'

10-01-2025T03:04:29 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Факт Потери за отчётный период ПАО Россети' is: '45 074 356'

10-01-2025T03:04:29 - [TEST_STEP][PASSED] - x = x + "/" + z: null

10-01-2025T03:04:29 - [TEST_STEP][PASSED] - z = getText(findTestObject(path + "План Отпуск в сеть за отчётный период ПАО Россети")).replaceAll("\s+", ""): Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/План Отпуск в сеть за отчётный период ПАО Россети' is: '1 100 265 867'

10-01-2025T03:04:30 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/План Отпуск в сеть за отчётный период ПАО Россети' is: '1 100 265 867'

10-01-2025T03:04:30 - [TEST_STEP][PASSED] - x = x + "/" + z: null

10-01-2025T03:04:30 - [TEST_STEP][PASSED] - z = getText(findTestObject(path + "План Отпуск из сети за отчётный период ПАО Россети")).replaceAll("\s+", ""): Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/План Отпуск из сети за отчётный период ПАО Россети' is: '1 036 078 304'

10-01-2025T03:04:30 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/План Отпуск из сети за отчётный период ПАО Россети' is: '1 036 078 304'

10-01-2025T03:04:30 - [TEST_STEP][PASSED] - x = x + "/" + z: null

10-01-2025T03:04:30 - [TEST_STEP][PASSED] - z = getText(findTestObject(path + "План Потери за отчётный период ПАО Россети")).replaceAll("\s+", ""): Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/План Потери за отчётный период ПАО Россети' is: '64 187 564'

10-01-2025T03:04:30 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/План Потери за отчётный период ПАО Россети' is: '64 187 564'

10-01-2025T03:04:30 - [TEST_STEP][PASSED] - x = x + "/" + z: null

10-01-2025T03:04:30 - [TEST_STEP][PASSED] - return x: null

10-01-2025T03:04:30 - [TEST_STEP][PASSED] - println("pRB: " + pRB): null

10-01-2025T03:04:30 - [TEST_STEP][PASSED] - VseDZO = getText(findTestObject(path + "Список ДЗО")): Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Список ДЗО' is: '-0.22
-0.07
3.10
-0.38
-0.73
-0.02
0.19
3.73
-0.43
-0.05
-0.03
0.16
-0.17
-0.52
-0.27
-0.49
-0.02
Россети ФСКЕЭС
АО«Тываэнерго»
АО«Чеченэнерго»
РоссетиВолга
РоссетиКубань
РоссетиЛенэнерго(ГК)
РоссетиМосковскийрегион
РоссетиСеверныйКавказ
РоссетиСеверо-Запад
РоссетиСибирь
РоссетиТомск
РоссетиТюмень
Россети Урал(ГК)
РоссетиЦентр (ГК)
РоссетиЦентр иПриволжье(ГК)
Россети Юг(ГК)
РоссетиЯнтарь
-2
0
2
4
6
8'

10-01-2025T03:04:31 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Список ДЗО' is: '-0.22
-0.07
3.10
-0.38
-0.73
-0.02
0.19
3.73
-0.43
-0.05
-0.03
0.16
-0.17
-0.52
-0.27
-0.49
-0.02
Россети ФСКЕЭС
АО«Тываэнерго»
АО«Чеченэнерго»
РоссетиВолга
РоссетиКубань
РоссетиЛенэнерго(ГК)
РоссетиМосковскийрегион
РоссетиСеверныйКавказ
РоссетиСеверо-Запад
РоссетиСибирь
РоссетиТомск
РоссетиТюмень
Россети Урал(ГК)
РоссетиЦентр (ГК)
РоссетиЦентр иПриволжье(ГК)
Россети Юг(ГК)
РоссетиЯнтарь
-2
0
2
4
6
8'

10-01-2025T03:04:31 - [TEST_STEP][PASSED] - dZONum = 0: null

10-01-2025T03:04:31 - [TEST_STEP][PASSED] - i = VseDZO.indexOf("ЕЭС"): null

10-01-2025T03:04:31 - [TEST_STEP][PASSED] - if (i > -1): null

10-01-2025T03:04:31 - [TEST_STEP][PASSED] - dZONum = dZONum + 1: null

10-01-2025T03:04:31 - [TEST_STEP][PASSED] - fB = GetAllData(path, dZONum, VseDZO, x = "Россети ФСК ЕЭС/"): null

10-01-2025T03:04:31 - [TEST_STEP][PASSED] - ii = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:04:31 - [TEST_STEP][PASSED] - i1 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:04:31 - [TEST_STEP][PASSED] - z = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:04:31 - [TEST_STEP][PASSED] - path2 = "Значения со страницы Выполнение бизнес-плана/Table Data/": null

10-01-2025T03:04:31 - [TEST_STEP][PASSED] - println("path: " + path): null

10-01-2025T03:04:31 - [TEST_STEP][PASSED] - println("dZONum: " + dZONum): null

10-01-2025T03:04:31 - [TEST_STEP][PASSED] - z = getText(findTestObject(path + "spanPlan" + dZONum)): Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/spanPlan1' is: '3.90
|'

10-01-2025T03:04:31 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/spanPlan1' is: '3.90
|'

10-01-2025T03:04:31 - [TEST_STEP][PASSED] - println(z): null

10-01-2025T03:04:31 - [TEST_STEP][PASSED] - ii = z.indexOf("|"): null

10-01-2025T03:04:31 - [TEST_STEP][PASSED] - if (ii > -1): null

10-01-2025T03:04:31 - [TEST_STEP][PASSED] - z = z.substring(0, z.length() - 1): null

10-01-2025T03:04:31 - [TEST_STEP][PASSED] - println(z): null

10-01-2025T03:04:31 - [TEST_STEP][PASSED] - z = z.replaceAll("\s+", ""): null

10-01-2025T03:04:31 - [TEST_STEP][PASSED] - z = z.replace("[\r?
|
]", "/"): null

10-01-2025T03:04:31 - [TEST_STEP][PASSED] - println(z): null

10-01-2025T03:04:31 - [TEST_STEP][PASSED] - x = x + z: null

10-01-2025T03:04:31 - [TEST_STEP][PASSED] - z = getText(findTestObject(path + "spanFact" + dZONum)): Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/spanFact1' is: '3.68'

10-01-2025T03:04:31 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/spanFact1' is: '3.68'

10-01-2025T03:04:31 - [TEST_STEP][PASSED] - ii = z.indexOf("|"): null

10-01-2025T03:04:31 - [TEST_STEP][PASSED] - if (ii > -1): null

10-01-2025T03:04:31 - [TEST_STEP][PASSED] - x = x + "/" + z: null

10-01-2025T03:04:31 - [TEST_STEP][PASSED] - z = getText(findTestObject(path + path2 + "Факт Отпуск в сеть за отчётный период " + dZONum)).replaceAll("\s+", ""): Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Значения со страницы Выполнение бизнес-плана/Table Data/Факт Отпуск в сеть за отчётный период 1' is: '569 816 774'

10-01-2025T03:04:32 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Значения со страницы Выполнение бизнес-плана/Table Data/Факт Отпуск в сеть за отчётный период 1' is: '569 816 774'

10-01-2025T03:04:32 - [TEST_STEP][PASSED] - x = x + "/" + z: null

10-01-2025T03:04:32 - [TEST_STEP][PASSED] - z = getText(findTestObject(path + path2 + "Факт Отпуск из сети за отчётный период " + dZONum)).replaceAll("\s+", ""): Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Значения со страницы Выполнение бизнес-плана/Table Data/Факт Отпуск из сети за отчётный период 1' is: '549 615 412'

10-01-2025T03:04:32 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Значения со страницы Выполнение бизнес-плана/Table Data/Факт Отпуск из сети за отчётный период 1' is: '549 615 412'

10-01-2025T03:04:32 - [TEST_STEP][PASSED] - x = x + "/" + z: null

10-01-2025T03:04:32 - [TEST_STEP][PASSED] - z = getText(findTestObject(path + path2 + "Факт Потери за отчётный период " + dZONum)).replaceAll("\s+", ""): Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Значения со страницы Выполнение бизнес-плана/Table Data/Факт Потери за отчётный период 1' is: '20 201 362'

10-01-2025T03:04:32 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Значения со страницы Выполнение бизнес-плана/Table Data/Факт Потери за отчётный период 1' is: '20 201 362'

10-01-2025T03:04:32 - [TEST_STEP][PASSED] - x = x + "/" + z: null

10-01-2025T03:04:32 - [TEST_STEP][PASSED] - z = getText(findTestObject(path + path2 + "План Отпуск в сеть за отчётный период " + dZONum)).replaceAll("\s+", ""): Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Значения со страницы Выполнение бизнес-плана/Table Data/План Отпуск в сеть за отчётный период 1' is: '552 921 070'

10-01-2025T03:04:33 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Значения со страницы Выполнение бизнес-плана/Table Data/План Отпуск в сеть за отчётный период 1' is: '552 921 070'

10-01-2025T03:04:33 - [TEST_STEP][PASSED] - x = x + "/" + z: null

10-01-2025T03:04:33 - [TEST_STEP][PASSED] - z = getText(findTestObject(path + path2 + "План Отпуск из сети за отчётный период " + dZONum)).replaceAll("\s+", ""): Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Значения со страницы Выполнение бизнес-плана/Table Data/План Отпуск из сети за отчётный период 1' is: '532 181 995'

10-01-2025T03:04:33 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Значения со страницы Выполнение бизнес-плана/Table Data/План Отпуск из сети за отчётный период 1' is: '532 181 995'

10-01-2025T03:04:33 - [TEST_STEP][PASSED] - x = x + "/" + z: null

10-01-2025T03:04:33 - [TEST_STEP][PASSED] - z = getText(findTestObject(path + path2 + "План Потери за отчётный период " + dZONum)).replaceAll("\s+", ""): Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Значения со страницы Выполнение бизнес-плана/Table Data/План Потери за отчётный период 1' is: '20 739 075'

10-01-2025T03:04:33 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Значения со страницы Выполнение бизнес-плана/Table Data/План Потери за отчётный период 1' is: '20 739 075'

10-01-2025T03:04:33 - [TEST_STEP][PASSED] - x = x + "/" + z: null

10-01-2025T03:04:33 - [TEST_STEP][PASSED] - z = getText(findTestObject(path + "Список ДЗО")).replaceAll("[\r?
|
]", "/"): Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Список ДЗО' is: '-0.22
-0.07
3.10
-0.38
-0.73
-0.02
0.19
3.73
-0.43
-0.05
-0.03
0.16
-0.17
-0.52
-0.27
-0.49
-0.02
Россети ФСКЕЭС
АО«Тываэнерго»
АО«Чеченэнерго»
РоссетиВолга
РоссетиКубань
РоссетиЛенэнерго(ГК)
РоссетиМосковскийрегион
РоссетиСеверныйКавказ
РоссетиСеверо-Запад
РоссетиСибирь
РоссетиТомск
РоссетиТюмень
Россети Урал(ГК)
РоссетиЦентр (ГК)
РоссетиЦентр иПриволжье(ГК)
Россети Юг(ГК)
РоссетиЯнтарь
-2
0
2
4
6
8'

10-01-2025T03:04:33 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Список ДЗО' is: '-0.22
-0.07
3.10
-0.38
-0.73
-0.02
0.19
3.73
-0.43
-0.05
-0.03
0.16
-0.17
-0.52
-0.27
-0.49
-0.02
Россети ФСКЕЭС
АО«Тываэнерго»
АО«Чеченэнерго»
РоссетиВолга
РоссетиКубань
РоссетиЛенэнерго(ГК)
РоссетиМосковскийрегион
РоссетиСеверныйКавказ
РоссетиСеверо-Запад
РоссетиСибирь
РоссетиТомск
РоссетиТюмень
Россети Урал(ГК)
РоссетиЦентр (ГК)
РоссетиЦентр иПриволжье(ГК)
Россети Юг(ГК)
РоссетиЯнтарь
-2
0
2
4
6
8'

10-01-2025T03:04:33 - [TEST_STEP][PASSED] - for ([ii = 1, ii < dZONum, (ii++)]): null

10-01-2025T03:04:33 - [TEST_STEP][PASSED] - i1 = z.indexOf("/"): null

10-01-2025T03:04:33 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:04:33 - [TEST_STEP][PASSED] - z = z.substring(0, i1): null

10-01-2025T03:04:33 - [TEST_STEP][PASSED] - z = z.replace(",", "."): null

10-01-2025T03:04:33 - [TEST_STEP][PASSED] - println(z): null

10-01-2025T03:04:33 - [TEST_STEP][PASSED] - x = x + "/" + z: null

10-01-2025T03:04:33 - [TEST_STEP][PASSED] - x = x.replaceAll("[\r?
|
]", ""): null

10-01-2025T03:04:33 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:04:33 - [TEST_STEP][PASSED] - return x: null

10-01-2025T03:04:33 - [TEST_STEP][PASSED] - println("fB: " + fB): null

10-01-2025T03:04:33 - [TEST_STEP][PASSED] - i = VseDZO.indexOf("Тываэнерго"): null

10-01-2025T03:04:33 - [TEST_STEP][PASSED] - if (i > -1): null

10-01-2025T03:04:33 - [TEST_STEP][PASSED] - dZONum = dZONum + 1: null

10-01-2025T03:04:33 - [TEST_STEP][PASSED] - tyB = GetAllData(path, dZONum, VseDZO, x = "АО "Тываэнерго"/"): null

10-01-2025T03:04:33 - [TEST_STEP][PASSED] - ii = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:04:33 - [TEST_STEP][PASSED] - i1 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:04:33 - [TEST_STEP][PASSED] - z = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:04:33 - [TEST_STEP][PASSED] - path2 = "Значения со страницы Выполнение бизнес-плана/Table Data/": null

10-01-2025T03:04:33 - [TEST_STEP][PASSED] - println("path: " + path): null

10-01-2025T03:04:33 - [TEST_STEP][PASSED] - println("dZONum: " + dZONum): null

10-01-2025T03:04:33 - [TEST_STEP][PASSED] - z = getText(findTestObject(path + "spanPlan" + dZONum)): Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/spanPlan2' is: '21.24
|'

10-01-2025T03:04:34 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/spanPlan2' is: '21.24
|'

10-01-2025T03:04:34 - [TEST_STEP][PASSED] - println(z): null

10-01-2025T03:04:34 - [TEST_STEP][PASSED] - ii = z.indexOf("|"): null

10-01-2025T03:04:34 - [TEST_STEP][PASSED] - if (ii > -1): null

10-01-2025T03:04:34 - [TEST_STEP][PASSED] - z = z.substring(0, z.length() - 1): null

10-01-2025T03:04:34 - [TEST_STEP][PASSED] - println(z): null

10-01-2025T03:04:34 - [TEST_STEP][PASSED] - z = z.replaceAll("\s+", ""): null

10-01-2025T03:04:34 - [TEST_STEP][PASSED] - z = z.replace("[\r?
|
]", "/"): null

10-01-2025T03:04:34 - [TEST_STEP][PASSED] - println(z): null

10-01-2025T03:04:34 - [TEST_STEP][PASSED] - x = x + z: null

10-01-2025T03:04:34 - [TEST_STEP][PASSED] - z = getText(findTestObject(path + "spanFact" + dZONum)): Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/spanFact2' is: '21.17'

10-01-2025T03:04:34 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/spanFact2' is: '21.17'

10-01-2025T03:04:34 - [TEST_STEP][PASSED] - ii = z.indexOf("|"): null

10-01-2025T03:04:34 - [TEST_STEP][PASSED] - if (ii > -1): null

10-01-2025T03:04:34 - [TEST_STEP][PASSED] - x = x + "/" + z: null

10-01-2025T03:04:34 - [TEST_STEP][PASSED] - z = getText(findTestObject(path + path2 + "Факт Отпуск в сеть за отчётный период " + dZONum)).replaceAll("\s+", ""): Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Значения со страницы Выполнение бизнес-плана/Table Data/Факт Отпуск в сеть за отчётный период 2' is: '642 168'

10-01-2025T03:04:34 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Значения со страницы Выполнение бизнес-плана/Table Data/Факт Отпуск в сеть за отчётный период 2' is: '642 168'

10-01-2025T03:04:34 - [TEST_STEP][PASSED] - x = x + "/" + z: null

10-01-2025T03:04:34 - [TEST_STEP][PASSED] - z = getText(findTestObject(path + path2 + "Факт Отпуск из сети за отчётный период " + dZONum)).replaceAll("\s+", ""): Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Значения со страницы Выполнение бизнес-плана/Table Data/Факт Отпуск из сети за отчётный период 2' is: '506 218'

10-01-2025T03:04:35 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Значения со страницы Выполнение бизнес-плана/Table Data/Факт Отпуск из сети за отчётный период 2' is: '506 218'

10-01-2025T03:04:35 - [TEST_STEP][PASSED] - x = x + "/" + z: null

10-01-2025T03:04:35 - [TEST_STEP][PASSED] - z = getText(findTestObject(path + path2 + "Факт Потери за отчётный период " + dZONum)).replaceAll("\s+", ""): Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Значения со страницы Выполнение бизнес-плана/Table Data/Факт Потери за отчётный период 2' is: '135 950'

10-01-2025T03:04:35 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Значения со страницы Выполнение бизнес-плана/Table Data/Факт Потери за отчётный период 2' is: '135 950'

10-01-2025T03:04:35 - [TEST_STEP][PASSED] - x = x + "/" + z: null

10-01-2025T03:04:35 - [TEST_STEP][PASSED] - z = getText(findTestObject(path + path2 + "План Отпуск в сеть за отчётный период " + dZONum)).replaceAll("\s+", ""): Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Значения со страницы Выполнение бизнес-плана/Table Data/План Отпуск в сеть за отчётный период 2' is: '608 287'

10-01-2025T03:04:35 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Значения со страницы Выполнение бизнес-плана/Table Data/План Отпуск в сеть за отчётный период 2' is: '608 287'

10-01-2025T03:04:35 - [TEST_STEP][PASSED] - x = x + "/" + z: null

10-01-2025T03:04:35 - [TEST_STEP][PASSED] - z = getText(findTestObject(path + path2 + "План Отпуск из сети за отчётный период " + dZONum)).replaceAll("\s+", ""): Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Значения со страницы Выполнение бизнес-плана/Table Data/План Отпуск из сети за отчётный период 2' is: '479 095'

10-01-2025T03:04:36 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Значения со страницы Выполнение бизнес-плана/Table Data/План Отпуск из сети за отчётный период 2' is: '479 095'

10-01-2025T03:04:36 - [TEST_STEP][PASSED] - x = x + "/" + z: null

10-01-2025T03:04:36 - [TEST_STEP][PASSED] - z = getText(findTestObject(path + path2 + "План Потери за отчётный период " + dZONum)).replaceAll("\s+", ""): Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Значения со страницы Выполнение бизнес-плана/Table Data/План Потери за отчётный период 2' is: '129 192'

10-01-2025T03:04:36 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Значения со страницы Выполнение бизнес-плана/Table Data/План Потери за отчётный период 2' is: '129 192'

10-01-2025T03:04:36 - [TEST_STEP][PASSED] - x = x + "/" + z: null

10-01-2025T03:04:36 - [TEST_STEP][PASSED] - z = getText(findTestObject(path + "Список ДЗО")).replaceAll("[\r?
|
]", "/"): Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Список ДЗО' is: '-0.22
-0.07
3.10
-0.38
-0.73
-0.02
0.19
3.73
-0.43
-0.05
-0.03
0.16
-0.17
-0.52
-0.27
-0.49
-0.02
Россети ФСКЕЭС
АО«Тываэнерго»
АО«Чеченэнерго»
РоссетиВолга
РоссетиКубань
РоссетиЛенэнерго(ГК)
РоссетиМосковскийрегион
РоссетиСеверныйКавказ
РоссетиСеверо-Запад
РоссетиСибирь
РоссетиТомск
РоссетиТюмень
Россети Урал(ГК)
РоссетиЦентр (ГК)
РоссетиЦентр иПриволжье(ГК)
Россети Юг(ГК)
РоссетиЯнтарь
-2
0
2
4
6
8'

10-01-2025T03:04:36 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Список ДЗО' is: '-0.22
-0.07
3.10
-0.38
-0.73
-0.02
0.19
3.73
-0.43
-0.05
-0.03
0.16
-0.17
-0.52
-0.27
-0.49
-0.02
Россети ФСКЕЭС
АО«Тываэнерго»
АО«Чеченэнерго»
РоссетиВолга
РоссетиКубань
РоссетиЛенэнерго(ГК)
РоссетиМосковскийрегион
РоссетиСеверныйКавказ
РоссетиСеверо-Запад
РоссетиСибирь
РоссетиТомск
РоссетиТюмень
Россети Урал(ГК)
РоссетиЦентр (ГК)
РоссетиЦентр иПриволжье(ГК)
Россети Юг(ГК)
РоссетиЯнтарь
-2
0
2
4
6
8'

10-01-2025T03:04:36 - [TEST_STEP][PASSED] - for ([ii = 1, ii < dZONum, (ii++)]): null

10-01-2025T03:04:36 - [TEST_STEP][PASSED] - i1 = z.indexOf("/") + 1: null

10-01-2025T03:04:36 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:04:36 - [TEST_STEP][PASSED] - z = z.substring(i1, z.length()): null

10-01-2025T03:04:36 - [TEST_STEP][PASSED] - i1 = z.indexOf("/"): null

10-01-2025T03:04:36 - [TEST_STEP][PASSED] - i1 = z.indexOf("/"): null

10-01-2025T03:04:36 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:04:36 - [TEST_STEP][PASSED] - z = z.substring(0, i1): null

10-01-2025T03:04:36 - [TEST_STEP][PASSED] - z = z.replace(",", "."): null

10-01-2025T03:04:36 - [TEST_STEP][PASSED] - println(z): null

10-01-2025T03:04:36 - [TEST_STEP][PASSED] - x = x + "/" + z: null

10-01-2025T03:04:36 - [TEST_STEP][PASSED] - x = x.replaceAll("[\r?
|
]", ""): null

10-01-2025T03:04:36 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:04:36 - [TEST_STEP][PASSED] - return x: null

10-01-2025T03:04:36 - [TEST_STEP][PASSED] - println("tyB: " + tyB): null

10-01-2025T03:04:36 - [TEST_STEP][PASSED] - i = VseDZO.indexOf("Чеченэнерго"): null

10-01-2025T03:04:36 - [TEST_STEP][PASSED] - if (i > -1): null

10-01-2025T03:04:36 - [TEST_STEP][PASSED] - dZONum = dZONum + 1: null

10-01-2025T03:04:36 - [TEST_STEP][PASSED] - chB = GetAllData(path, dZONum, VseDZO, x = "АО "Чеченэнерго"/"): null

10-01-2025T03:04:36 - [TEST_STEP][PASSED] - ii = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:04:36 - [TEST_STEP][PASSED] - i1 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:04:36 - [TEST_STEP][PASSED] - z = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:04:36 - [TEST_STEP][PASSED] - path2 = "Значения со страницы Выполнение бизнес-плана/Table Data/": null

10-01-2025T03:04:36 - [TEST_STEP][PASSED] - println("path: " + path): null

10-01-2025T03:04:36 - [TEST_STEP][PASSED] - println("dZONum: " + dZONum): null

10-01-2025T03:04:36 - [TEST_STEP][PASSED] - z = getText(findTestObject(path + "spanPlan" + dZONum)): Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/spanPlan3' is: '33.23'

10-01-2025T03:04:37 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/spanPlan3' is: '33.23'

10-01-2025T03:04:37 - [TEST_STEP][PASSED] - println(z): null

10-01-2025T03:04:37 - [TEST_STEP][PASSED] - ii = z.indexOf("|"): null

10-01-2025T03:04:37 - [TEST_STEP][PASSED] - if (ii > -1): null

10-01-2025T03:04:37 - [TEST_STEP][PASSED] - z = z.replaceAll("\s+", ""): null

10-01-2025T03:04:37 - [TEST_STEP][PASSED] - z = z.replace("[\r?
|
]", "/"): null

10-01-2025T03:04:37 - [TEST_STEP][PASSED] - println(z): null

10-01-2025T03:04:37 - [TEST_STEP][PASSED] - x = x + z: null

10-01-2025T03:04:37 - [TEST_STEP][PASSED] - z = getText(findTestObject(path + "spanFact" + dZONum)): Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/spanFact3' is: '36.33
|'

10-01-2025T03:04:37 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/spanFact3' is: '36.33
|'

10-01-2025T03:04:37 - [TEST_STEP][PASSED] - ii = z.indexOf("|"): null

10-01-2025T03:04:37 - [TEST_STEP][PASSED] - if (ii > -1): null

10-01-2025T03:04:37 - [TEST_STEP][PASSED] - z = length() - 1).replace("[\r?
|
]", "/"): null

10-01-2025T03:04:37 - [TEST_STEP][PASSED] - x = x + "/" + z: null

10-01-2025T03:04:37 - [TEST_STEP][PASSED] - z = getText(findTestObject(path + path2 + "Факт Отпуск в сеть за отчётный период " + dZONum)).replaceAll("\s+", ""): Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Значения со страницы Выполнение бизнес-плана/Table Data/Факт Отпуск в сеть за отчётный период 3' is: '3 631 955'

10-01-2025T03:04:37 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Значения со страницы Выполнение бизнес-плана/Table Data/Факт Отпуск в сеть за отчётный период 3' is: '3 631 955'

10-01-2025T03:04:37 - [TEST_STEP][PASSED] - x = x + "/" + z: null

10-01-2025T03:04:37 - [TEST_STEP][PASSED] - z = getText(findTestObject(path + path2 + "Факт Отпуск из сети за отчётный период " + dZONum)).replaceAll("\s+", ""): Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Значения со страницы Выполнение бизнес-плана/Table Data/Факт Отпуск из сети за отчётный период 3' is: '2 312 442'

10-01-2025T03:04:38 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Значения со страницы Выполнение бизнес-плана/Table Data/Факт Отпуск из сети за отчётный период 3' is: '2 312 442'

10-01-2025T03:04:38 - [TEST_STEP][PASSED] - x = x + "/" + z: null

10-01-2025T03:04:38 - [TEST_STEP][PASSED] - z = getText(findTestObject(path + path2 + "Факт Потери за отчётный период " + dZONum)).replaceAll("\s+", ""): Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Значения со страницы Выполнение бизнес-плана/Table Data/Факт Потери за отчётный период 3' is: '1 319 513'

10-01-2025T03:04:38 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Значения со страницы Выполнение бизнес-плана/Table Data/Факт Потери за отчётный период 3' is: '1 319 513'

10-01-2025T03:04:38 - [TEST_STEP][PASSED] - x = x + "/" + z: null

10-01-2025T03:04:38 - [TEST_STEP][PASSED] - z = getText(findTestObject(path + path2 + "План Отпуск в сеть за отчётный период " + dZONum)).replaceAll("\s+", ""): Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Значения со страницы Выполнение бизнес-плана/Table Data/План Отпуск в сеть за отчётный период 3' is: '3 403 997'

10-01-2025T03:04:38 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Значения со страницы Выполнение бизнес-плана/Table Data/План Отпуск в сеть за отчётный период 3' is: '3 403 997'

10-01-2025T03:04:38 - [TEST_STEP][PASSED] - x = x + "/" + z: null

10-01-2025T03:04:38 - [TEST_STEP][PASSED] - z = getText(findTestObject(path + path2 + "План Отпуск из сети за отчётный период " + dZONum)).replaceAll("\s+", ""): Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Значения со страницы Выполнение бизнес-плана/Table Data/План Отпуск из сети за отчётный период 3' is: '2 272 993'

10-01-2025T03:04:38 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Значения со страницы Выполнение бизнес-плана/Table Data/План Отпуск из сети за отчётный период 3' is: '2 272 993'

10-01-2025T03:04:38 - [TEST_STEP][PASSED] - x = x + "/" + z: null

10-01-2025T03:04:38 - [TEST_STEP][PASSED] - z = getText(findTestObject(path + path2 + "План Потери за отчётный период " + dZONum)).replaceAll("\s+", ""): Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Значения со страницы Выполнение бизнес-плана/Table Data/План Потери за отчётный период 3' is: '1 131 004'

10-01-2025T03:04:39 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Значения со страницы Выполнение бизнес-плана/Table Data/План Потери за отчётный период 3' is: '1 131 004'

10-01-2025T03:04:39 - [TEST_STEP][PASSED] - x = x + "/" + z: null

10-01-2025T03:04:39 - [TEST_STEP][PASSED] - z = getText(findTestObject(path + "Список ДЗО")).replaceAll("[\r?
|
]", "/"): Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Список ДЗО' is: '-0.22
-0.07
3.10
-0.38
-0.73
-0.02
0.19
3.73
-0.43
-0.05
-0.03
0.16
-0.17
-0.52
-0.27
-0.49
-0.02
Россети ФСКЕЭС
АО«Тываэнерго»
АО«Чеченэнерго»
РоссетиВолга
РоссетиКубань
РоссетиЛенэнерго(ГК)
РоссетиМосковскийрегион
РоссетиСеверныйКавказ
РоссетиСеверо-Запад
РоссетиСибирь
РоссетиТомск
РоссетиТюмень
Россети Урал(ГК)
РоссетиЦентр (ГК)
РоссетиЦентр иПриволжье(ГК)
Россети Юг(ГК)
РоссетиЯнтарь
-2
0
2
4
6
8'

10-01-2025T03:04:39 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Список ДЗО' is: '-0.22
-0.07
3.10
-0.38
-0.73
-0.02
0.19
3.73
-0.43
-0.05
-0.03
0.16
-0.17
-0.52
-0.27
-0.49
-0.02
Россети ФСКЕЭС
АО«Тываэнерго»
АО«Чеченэнерго»
РоссетиВолга
РоссетиКубань
РоссетиЛенэнерго(ГК)
РоссетиМосковскийрегион
РоссетиСеверныйКавказ
РоссетиСеверо-Запад
РоссетиСибирь
РоссетиТомск
РоссетиТюмень
Россети Урал(ГК)
РоссетиЦентр (ГК)
РоссетиЦентр иПриволжье(ГК)
Россети Юг(ГК)
РоссетиЯнтарь
-2
0
2
4
6
8'

10-01-2025T03:04:39 - [TEST_STEP][PASSED] - for ([ii = 1, ii < dZONum, (ii++)]): null

10-01-2025T03:04:39 - [TEST_STEP][PASSED] - i1 = z.indexOf("/") + 1: null

10-01-2025T03:04:39 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:04:39 - [TEST_STEP][PASSED] - z = z.substring(i1, z.length()): null

10-01-2025T03:04:39 - [TEST_STEP][PASSED] - i1 = z.indexOf("/"): null

10-01-2025T03:04:39 - [TEST_STEP][PASSED] - i1 = z.indexOf("/") + 1: null

10-01-2025T03:04:39 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:04:39 - [TEST_STEP][PASSED] - z = z.substring(i1, z.length()): null

10-01-2025T03:04:39 - [TEST_STEP][PASSED] - i1 = z.indexOf("/"): null

10-01-2025T03:04:39 - [TEST_STEP][PASSED] - i1 = z.indexOf("/"): null

10-01-2025T03:04:39 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:04:39 - [TEST_STEP][PASSED] - z = z.substring(0, i1): null

10-01-2025T03:04:39 - [TEST_STEP][PASSED] - z = z.replace(",", "."): null

10-01-2025T03:04:39 - [TEST_STEP][PASSED] - println(z): null

10-01-2025T03:04:39 - [TEST_STEP][PASSED] - x = x + "/" + z: null

10-01-2025T03:04:39 - [TEST_STEP][PASSED] - x = x.replaceAll("[\r?
|
]", ""): null

10-01-2025T03:04:39 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:04:39 - [TEST_STEP][PASSED] - return x: null

10-01-2025T03:04:39 - [TEST_STEP][PASSED] - println("chB: " + chB): null

10-01-2025T03:04:39 - [TEST_STEP][PASSED] - i = VseDZO.indexOf("Волга"): null

10-01-2025T03:04:39 - [TEST_STEP][PASSED] - if (i > -1): null

10-01-2025T03:04:39 - [TEST_STEP][PASSED] - dZONum = dZONum + 1: null

10-01-2025T03:04:39 - [TEST_STEP][PASSED] - vB = GetAllData(path, dZONum, VseDZO, x = "Россети Волга/"): null

10-01-2025T03:04:39 - [TEST_STEP][PASSED] - ii = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:04:39 - [TEST_STEP][PASSED] - i1 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:04:39 - [TEST_STEP][PASSED] - z = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:04:39 - [TEST_STEP][PASSED] - path2 = "Значения со страницы Выполнение бизнес-плана/Table Data/": null

10-01-2025T03:04:39 - [TEST_STEP][PASSED] - println("path: " + path): null

10-01-2025T03:04:39 - [TEST_STEP][PASSED] - println("dZONum: " + dZONum): null

10-01-2025T03:04:39 - [TEST_STEP][PASSED] - z = getText(findTestObject(path + "spanPlan" + dZONum)): Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/spanPlan4' is: '5.53
|'

10-01-2025T03:04:39 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/spanPlan4' is: '5.53
|'

10-01-2025T03:04:39 - [TEST_STEP][PASSED] - println(z): null

10-01-2025T03:04:39 - [TEST_STEP][PASSED] - ii = z.indexOf("|"): null

10-01-2025T03:04:39 - [TEST_STEP][PASSED] - if (ii > -1): null

10-01-2025T03:04:39 - [TEST_STEP][PASSED] - z = z.substring(0, z.length() - 1): null

10-01-2025T03:04:39 - [TEST_STEP][PASSED] - println(z): null

10-01-2025T03:04:39 - [TEST_STEP][PASSED] - z = z.replaceAll("\s+", ""): null

10-01-2025T03:04:39 - [TEST_STEP][PASSED] - z = z.replace("[\r?
|
]", "/"): null

10-01-2025T03:04:39 - [TEST_STEP][PASSED] - println(z): null

10-01-2025T03:04:39 - [TEST_STEP][PASSED] - x = x + z: null

10-01-2025T03:04:39 - [TEST_STEP][PASSED] - z = getText(findTestObject(path + "spanFact" + dZONum)): Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/spanFact4' is: '5.14'

10-01-2025T03:04:40 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/spanFact4' is: '5.14'

10-01-2025T03:04:40 - [TEST_STEP][PASSED] - ii = z.indexOf("|"): null

10-01-2025T03:04:40 - [TEST_STEP][PASSED] - if (ii > -1): null

10-01-2025T03:04:40 - [TEST_STEP][PASSED] - x = x + "/" + z: null

10-01-2025T03:04:40 - [TEST_STEP][PASSED] - z = getText(findTestObject(path + path2 + "Факт Отпуск в сеть за отчётный период " + dZONum)).replaceAll("\s+", ""): Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Значения со страницы Выполнение бизнес-плана/Table Data/Факт Отпуск в сеть за отчётный период 4' is: '48 927 820'

10-01-2025T03:04:40 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Значения со страницы Выполнение бизнес-плана/Table Data/Факт Отпуск в сеть за отчётный период 4' is: '48 927 820'

10-01-2025T03:04:40 - [TEST_STEP][PASSED] - x = x + "/" + z: null

10-01-2025T03:04:40 - [TEST_STEP][PASSED] - z = getText(findTestObject(path + path2 + "Факт Отпуск из сети за отчётный период " + dZONum)).replaceAll("\s+", ""): Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Значения со страницы Выполнение бизнес-плана/Table Data/Факт Отпуск из сети за отчётный период 4' is: '46 410 515'

10-01-2025T03:04:40 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Значения со страницы Выполнение бизнес-плана/Table Data/Факт Отпуск из сети за отчётный период 4' is: '46 410 515'

10-01-2025T03:04:40 - [TEST_STEP][PASSED] - x = x + "/" + z: null

10-01-2025T03:04:40 - [TEST_STEP][PASSED] - z = getText(findTestObject(path + path2 + "Факт Потери за отчётный период " + dZONum)).replaceAll("\s+", ""): Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Значения со страницы Выполнение бизнес-плана/Table Data/Факт Потери за отчётный период 4' is: '2 517 305'

10-01-2025T03:04:41 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Значения со страницы Выполнение бизнес-плана/Table Data/Факт Потери за отчётный период 4' is: '2 517 305'

10-01-2025T03:04:41 - [TEST_STEP][PASSED] - x = x + "/" + z: null

10-01-2025T03:04:41 - [TEST_STEP][PASSED] - z = getText(findTestObject(path + path2 + "План Отпуск в сеть за отчётный период " + dZONum)).replaceAll("\s+", ""): Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Значения со страницы Выполнение бизнес-плана/Table Data/План Отпуск в сеть за отчётный период 4' is: '51 671 180'

10-01-2025T03:04:41 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Значения со страницы Выполнение бизнес-плана/Table Data/План Отпуск в сеть за отчётный период 4' is: '51 671 180'

10-01-2025T03:04:41 - [TEST_STEP][PASSED] - x = x + "/" + z: null

10-01-2025T03:04:41 - [TEST_STEP][PASSED] - z = getText(findTestObject(path + path2 + "План Отпуск из сети за отчётный период " + dZONum)).replaceAll("\s+", ""): Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Значения со страницы Выполнение бизнес-плана/Table Data/План Отпуск из сети за отчётный период 4' is: '48 776 338'

10-01-2025T03:04:41 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Значения со страницы Выполнение бизнес-плана/Table Data/План Отпуск из сети за отчётный период 4' is: '48 776 338'

10-01-2025T03:04:41 - [TEST_STEP][PASSED] - x = x + "/" + z: null

10-01-2025T03:04:41 - [TEST_STEP][PASSED] - z = getText(findTestObject(path + path2 + "План Потери за отчётный период " + dZONum)).replaceAll("\s+", ""): Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Значения со страницы Выполнение бизнес-плана/Table Data/План Потери за отчётный период 4' is: '2 894 842'

10-01-2025T03:04:42 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Значения со страницы Выполнение бизнес-плана/Table Data/План Потери за отчётный период 4' is: '2 894 842'

10-01-2025T03:04:42 - [TEST_STEP][PASSED] - x = x + "/" + z: null

10-01-2025T03:04:42 - [TEST_STEP][PASSED] - z = getText(findTestObject(path + "Список ДЗО")).replaceAll("[\r?
|
]", "/"): Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Список ДЗО' is: '-0.22
-0.07
3.10
-0.38
-0.73
-0.02
0.19
3.73
-0.43
-0.05
-0.03
0.16
-0.17
-0.52
-0.27
-0.49
-0.02
Россети ФСКЕЭС
АО«Тываэнерго»
АО«Чеченэнерго»
РоссетиВолга
РоссетиКубань
РоссетиЛенэнерго(ГК)
РоссетиМосковскийрегион
РоссетиСеверныйКавказ
РоссетиСеверо-Запад
РоссетиСибирь
РоссетиТомск
РоссетиТюмень
Россети Урал(ГК)
РоссетиЦентр (ГК)
РоссетиЦентр иПриволжье(ГК)
Россети Юг(ГК)
РоссетиЯнтарь
-2
0
2
4
6
8'

10-01-2025T03:04:42 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Список ДЗО' is: '-0.22
-0.07
3.10
-0.38
-0.73
-0.02
0.19
3.73
-0.43
-0.05
-0.03
0.16
-0.17
-0.52
-0.27
-0.49
-0.02
Россети ФСКЕЭС
АО«Тываэнерго»
АО«Чеченэнерго»
РоссетиВолга
РоссетиКубань
РоссетиЛенэнерго(ГК)
РоссетиМосковскийрегион
РоссетиСеверныйКавказ
РоссетиСеверо-Запад
РоссетиСибирь
РоссетиТомск
РоссетиТюмень
Россети Урал(ГК)
РоссетиЦентр (ГК)
РоссетиЦентр иПриволжье(ГК)
Россети Юг(ГК)
РоссетиЯнтарь
-2
0
2
4
6
8'

10-01-2025T03:04:42 - [TEST_STEP][PASSED] - for ([ii = 1, ii < dZONum, (ii++)]): null

10-01-2025T03:04:42 - [TEST_STEP][PASSED] - i1 = z.indexOf("/") + 1: null

10-01-2025T03:04:42 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:04:42 - [TEST_STEP][PASSED] - z = z.substring(i1, z.length()): null

10-01-2025T03:04:42 - [TEST_STEP][PASSED] - i1 = z.indexOf("/"): null

10-01-2025T03:04:42 - [TEST_STEP][PASSED] - i1 = z.indexOf("/") + 1: null

10-01-2025T03:04:42 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:04:42 - [TEST_STEP][PASSED] - z = z.substring(i1, z.length()): null

10-01-2025T03:04:42 - [TEST_STEP][PASSED] - i1 = z.indexOf("/"): null

10-01-2025T03:04:42 - [TEST_STEP][PASSED] - i1 = z.indexOf("/") + 1: null

10-01-2025T03:04:42 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:04:42 - [TEST_STEP][PASSED] - z = z.substring(i1, z.length()): null

10-01-2025T03:04:42 - [TEST_STEP][PASSED] - i1 = z.indexOf("/"): null

10-01-2025T03:04:42 - [TEST_STEP][PASSED] - i1 = z.indexOf("/"): null

10-01-2025T03:04:42 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:04:42 - [TEST_STEP][PASSED] - z = z.substring(0, i1): null

10-01-2025T03:04:42 - [TEST_STEP][PASSED] - z = z.replace(",", "."): null

10-01-2025T03:04:42 - [TEST_STEP][PASSED] - println(z): null

10-01-2025T03:04:42 - [TEST_STEP][PASSED] - x = x + "/" + z: null

10-01-2025T03:04:42 - [TEST_STEP][PASSED] - x = x.replaceAll("[\r?
|
]", ""): null

10-01-2025T03:04:42 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:04:42 - [TEST_STEP][PASSED] - return x: null

10-01-2025T03:04:42 - [TEST_STEP][PASSED] - println("vB: " + vB): null

10-01-2025T03:04:42 - [TEST_STEP][PASSED] - i = VseDZO.indexOf("Кубань"): null

10-01-2025T03:04:42 - [TEST_STEP][PASSED] - if (i > -1): null

10-01-2025T03:04:42 - [TEST_STEP][PASSED] - dZONum = dZONum + 1: null

10-01-2025T03:04:42 - [TEST_STEP][PASSED] - kB = GetAllData(path, dZONum, VseDZO, x = "Россети Кубань/"): null

10-01-2025T03:04:42 - [TEST_STEP][PASSED] - ii = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:04:42 - [TEST_STEP][PASSED] - i1 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:04:42 - [TEST_STEP][PASSED] - z = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:04:42 - [TEST_STEP][PASSED] - path2 = "Значения со страницы Выполнение бизнес-плана/Table Data/": null

10-01-2025T03:04:42 - [TEST_STEP][PASSED] - println("path: " + path): null

10-01-2025T03:04:42 - [TEST_STEP][PASSED] - println("dZONum: " + dZONum): null

10-01-2025T03:04:42 - [TEST_STEP][PASSED] - z = getText(findTestObject(path + "spanPlan" + dZONum)): Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/spanPlan5' is: '9.19
|'

10-01-2025T03:04:42 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/spanPlan5' is: '9.19
|'

10-01-2025T03:04:42 - [TEST_STEP][PASSED] - println(z): null

10-01-2025T03:04:42 - [TEST_STEP][PASSED] - ii = z.indexOf("|"): null

10-01-2025T03:04:42 - [TEST_STEP][PASSED] - if (ii > -1): null

10-01-2025T03:04:42 - [TEST_STEP][PASSED] - z = z.substring(0, z.length() - 1): null

10-01-2025T03:04:42 - [TEST_STEP][PASSED] - println(z): null

10-01-2025T03:04:42 - [TEST_STEP][PASSED] - z = z.replaceAll("\s+", ""): null

10-01-2025T03:04:42 - [TEST_STEP][PASSED] - z = z.replace("[\r?
|
]", "/"): null

10-01-2025T03:04:42 - [TEST_STEP][PASSED] - println(z): null

10-01-2025T03:04:42 - [TEST_STEP][PASSED] - x = x + z: null

10-01-2025T03:04:42 - [TEST_STEP][PASSED] - z = getText(findTestObject(path + "spanFact" + dZONum)): Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/spanFact5' is: '8.46'

10-01-2025T03:04:43 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/spanFact5' is: '8.46'

10-01-2025T03:04:43 - [TEST_STEP][PASSED] - ii = z.indexOf("|"): null

10-01-2025T03:04:43 - [TEST_STEP][PASSED] - if (ii > -1): null

10-01-2025T03:04:43 - [TEST_STEP][PASSED] - x = x + "/" + z: null

10-01-2025T03:04:43 - [TEST_STEP][PASSED] - z = getText(findTestObject(path + path2 + "Факт Отпуск в сеть за отчётный период " + dZONum)).replaceAll("\s+", ""): Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Значения со страницы Выполнение бизнес-плана/Table Data/Факт Отпуск в сеть за отчётный период 5' is: '23 489 307'

10-01-2025T03:04:43 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Значения со страницы Выполнение бизнес-плана/Table Data/Факт Отпуск в сеть за отчётный период 5' is: '23 489 307'

10-01-2025T03:04:43 - [TEST_STEP][PASSED] - x = x + "/" + z: null

10-01-2025T03:04:43 - [TEST_STEP][PASSED] - z = getText(findTestObject(path + path2 + "Факт Отпуск из сети за отчётный период " + dZONum)).replaceAll("\s+", ""): Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Значения со страницы Выполнение бизнес-плана/Table Data/Факт Отпуск из сети за отчётный период 5' is: '21 501 911'

10-01-2025T03:04:43 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Значения со страницы Выполнение бизнес-плана/Table Data/Факт Отпуск из сети за отчётный период 5' is: '21 501 911'

10-01-2025T03:04:43 - [TEST_STEP][PASSED] - x = x + "/" + z: null

10-01-2025T03:04:43 - [TEST_STEP][PASSED] - z = getText(findTestObject(path + path2 + "Факт Потери за отчётный период " + dZONum)).replaceAll("\s+", ""): Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Значения со страницы Выполнение бизнес-плана/Table Data/Факт Потери за отчётный период 5' is: '1 987 396'

10-01-2025T03:04:43 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Значения со страницы Выполнение бизнес-плана/Table Data/Факт Потери за отчётный период 5' is: '1 987 396'

10-01-2025T03:04:43 - [TEST_STEP][PASSED] - x = x + "/" + z: null

10-01-2025T03:04:43 - [TEST_STEP][PASSED] - z = getText(findTestObject(path + path2 + "План Отпуск в сеть за отчётный период " + dZONum)).replaceAll("\s+", ""): Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Значения со страницы Выполнение бизнес-плана/Table Data/План Отпуск в сеть за отчётный период 5' is: '22 568 383'

10-01-2025T03:04:44 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Значения со страницы Выполнение бизнес-плана/Table Data/План Отпуск в сеть за отчётный период 5' is: '22 568 383'

10-01-2025T03:04:44 - [TEST_STEP][PASSED] - x = x + "/" + z: null

10-01-2025T03:04:44 - [TEST_STEP][PASSED] - z = getText(findTestObject(path + path2 + "План Отпуск из сети за отчётный период " + dZONum)).replaceAll("\s+", ""): Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Значения со страницы Выполнение бизнес-плана/Table Data/План Отпуск из сети за отчётный период 5' is: '20 493 323'

10-01-2025T03:04:44 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Значения со страницы Выполнение бизнес-плана/Table Data/План Отпуск из сети за отчётный период 5' is: '20 493 323'

10-01-2025T03:04:44 - [TEST_STEP][PASSED] - x = x + "/" + z: null

10-01-2025T03:04:44 - [TEST_STEP][PASSED] - z = getText(findTestObject(path + path2 + "План Потери за отчётный период " + dZONum)).replaceAll("\s+", ""): Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Значения со страницы Выполнение бизнес-плана/Table Data/План Потери за отчётный период 5' is: '2 075 060'

10-01-2025T03:04:44 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Значения со страницы Выполнение бизнес-плана/Table Data/План Потери за отчётный период 5' is: '2 075 060'

10-01-2025T03:04:44 - [TEST_STEP][PASSED] - x = x + "/" + z: null

10-01-2025T03:04:44 - [TEST_STEP][PASSED] - z = getText(findTestObject(path + "Список ДЗО")).replaceAll("[\r?
|
]", "/"): Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Список ДЗО' is: '-0.22
-0.07
3.10
-0.38
-0.73
-0.02
0.19
3.73
-0.43
-0.05
-0.03
0.16
-0.17
-0.52
-0.27
-0.49
-0.02
Россети ФСКЕЭС
АО«Тываэнерго»
АО«Чеченэнерго»
РоссетиВолга
РоссетиКубань
РоссетиЛенэнерго(ГК)
РоссетиМосковскийрегион
РоссетиСеверныйКавказ
РоссетиСеверо-Запад
РоссетиСибирь
РоссетиТомск
РоссетиТюмень
Россети Урал(ГК)
РоссетиЦентр (ГК)
РоссетиЦентр иПриволжье(ГК)
Россети Юг(ГК)
РоссетиЯнтарь
-2
0
2
4
6
8'

10-01-2025T03:04:45 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Список ДЗО' is: '-0.22
-0.07
3.10
-0.38
-0.73
-0.02
0.19
3.73
-0.43
-0.05
-0.03
0.16
-0.17
-0.52
-0.27
-0.49
-0.02
Россети ФСКЕЭС
АО«Тываэнерго»
АО«Чеченэнерго»
РоссетиВолга
РоссетиКубань
РоссетиЛенэнерго(ГК)
РоссетиМосковскийрегион
РоссетиСеверныйКавказ
РоссетиСеверо-Запад
РоссетиСибирь
РоссетиТомск
РоссетиТюмень
Россети Урал(ГК)
РоссетиЦентр (ГК)
РоссетиЦентр иПриволжье(ГК)
Россети Юг(ГК)
РоссетиЯнтарь
-2
0
2
4
6
8'

10-01-2025T03:04:45 - [TEST_STEP][PASSED] - for ([ii = 1, ii < dZONum, (ii++)]): null

10-01-2025T03:04:45 - [TEST_STEP][PASSED] - i1 = z.indexOf("/") + 1: null

10-01-2025T03:04:45 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:04:45 - [TEST_STEP][PASSED] - z = z.substring(i1, z.length()): null

10-01-2025T03:04:45 - [TEST_STEP][PASSED] - i1 = z.indexOf("/"): null

10-01-2025T03:04:45 - [TEST_STEP][PASSED] - i1 = z.indexOf("/") + 1: null

10-01-2025T03:04:45 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:04:45 - [TEST_STEP][PASSED] - z = z.substring(i1, z.length()): null

10-01-2025T03:04:45 - [TEST_STEP][PASSED] - i1 = z.indexOf("/"): null

10-01-2025T03:04:45 - [TEST_STEP][PASSED] - i1 = z.indexOf("/") + 1: null

10-01-2025T03:04:45 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:04:45 - [TEST_STEP][PASSED] - z = z.substring(i1, z.length()): null

10-01-2025T03:04:45 - [TEST_STEP][PASSED] - i1 = z.indexOf("/"): null

10-01-2025T03:04:45 - [TEST_STEP][PASSED] - i1 = z.indexOf("/") + 1: null

10-01-2025T03:04:45 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:04:45 - [TEST_STEP][PASSED] - z = z.substring(i1, z.length()): null

10-01-2025T03:04:45 - [TEST_STEP][PASSED] - i1 = z.indexOf("/"): null

10-01-2025T03:04:45 - [TEST_STEP][PASSED] - i1 = z.indexOf("/"): null

10-01-2025T03:04:45 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:04:45 - [TEST_STEP][PASSED] - z = z.substring(0, i1): null

10-01-2025T03:04:45 - [TEST_STEP][PASSED] - z = z.replace(",", "."): null

10-01-2025T03:04:45 - [TEST_STEP][PASSED] - println(z): null

10-01-2025T03:04:45 - [TEST_STEP][PASSED] - x = x + "/" + z: null

10-01-2025T03:04:45 - [TEST_STEP][PASSED] - x = x.replaceAll("[\r?
|
]", ""): null

10-01-2025T03:04:45 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:04:45 - [TEST_STEP][PASSED] - return x: null

10-01-2025T03:04:45 - [TEST_STEP][PASSED] - println("kB: " + kB): null

10-01-2025T03:04:45 - [TEST_STEP][PASSED] - i = VseDZO.indexOf("Ленэнерго"): null

10-01-2025T03:04:45 - [TEST_STEP][PASSED] - if (i > -1): null

10-01-2025T03:04:45 - [TEST_STEP][PASSED] - dZONum = dZONum + 1: null

10-01-2025T03:04:45 - [TEST_STEP][PASSED] - lB = GetAllData(path, dZONum, VseDZO, x = "Россети Ленэнерго (ГК)/"): null

10-01-2025T03:04:45 - [TEST_STEP][PASSED] - ii = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:04:45 - [TEST_STEP][PASSED] - i1 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:04:45 - [TEST_STEP][PASSED] - z = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:04:45 - [TEST_STEP][PASSED] - path2 = "Значения со страницы Выполнение бизнес-плана/Table Data/": null

10-01-2025T03:04:45 - [TEST_STEP][PASSED] - println("path: " + path): null

10-01-2025T03:04:45 - [TEST_STEP][PASSED] - println("dZONum: " + dZONum): null

10-01-2025T03:04:45 - [TEST_STEP][PASSED] - z = getText(findTestObject(path + "spanPlan" + dZONum)): Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/spanPlan6' is: '10.91
|'

10-01-2025T03:04:45 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/spanPlan6' is: '10.91
|'

10-01-2025T03:04:45 - [TEST_STEP][PASSED] - println(z): null

10-01-2025T03:04:45 - [TEST_STEP][PASSED] - ii = z.indexOf("|"): null

10-01-2025T03:04:45 - [TEST_STEP][PASSED] - if (ii > -1): null

10-01-2025T03:04:45 - [TEST_STEP][PASSED] - z = z.substring(0, z.length() - 1): null

10-01-2025T03:04:45 - [TEST_STEP][PASSED] - println(z): null

10-01-2025T03:04:45 - [TEST_STEP][PASSED] - z = z.replaceAll("\s+", ""): null

10-01-2025T03:04:45 - [TEST_STEP][PASSED] - z = z.replace("[\r?
|
]", "/"): null

10-01-2025T03:04:45 - [TEST_STEP][PASSED] - println(z): null

10-01-2025T03:04:45 - [TEST_STEP][PASSED] - x = x + z: null

10-01-2025T03:04:45 - [TEST_STEP][PASSED] - z = getText(findTestObject(path + "spanFact" + dZONum)): Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/spanFact6' is: '10.89'

10-01-2025T03:04:45 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/spanFact6' is: '10.89'

10-01-2025T03:04:45 - [TEST_STEP][PASSED] - ii = z.indexOf("|"): null

10-01-2025T03:04:45 - [TEST_STEP][PASSED] - if (ii > -1): null

10-01-2025T03:04:45 - [TEST_STEP][PASSED] - x = x + "/" + z: null

10-01-2025T03:04:45 - [TEST_STEP][PASSED] - z = getText(findTestObject(path + path2 + "Факт Отпуск в сеть за отчётный период " + dZONum)).replaceAll("\s+", ""): Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Значения со страницы Выполнение бизнес-плана/Table Data/Факт Отпуск в сеть за отчётный период 6' is: '34 954 264'

10-01-2025T03:04:46 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Значения со страницы Выполнение бизнес-плана/Table Data/Факт Отпуск в сеть за отчётный период 6' is: '34 954 264'

10-01-2025T03:04:46 - [TEST_STEP][PASSED] - x = x + "/" + z: null

10-01-2025T03:04:46 - [TEST_STEP][PASSED] - z = getText(findTestObject(path + path2 + "Факт Отпуск из сети за отчётный период " + dZONum)).replaceAll("\s+", ""): Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Значения со страницы Выполнение бизнес-плана/Table Data/Факт Отпуск из сети за отчётный период 6' is: '31 148 311'

10-01-2025T03:04:46 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Значения со страницы Выполнение бизнес-плана/Table Data/Факт Отпуск из сети за отчётный период 6' is: '31 148 311'

10-01-2025T03:04:46 - [TEST_STEP][PASSED] - x = x + "/" + z: null

10-01-2025T03:04:46 - [TEST_STEP][PASSED] - z = getText(findTestObject(path + path2 + "Факт Потери за отчётный период " + dZONum)).replaceAll("\s+", ""): Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Значения со страницы Выполнение бизнес-плана/Table Data/Факт Потери за отчётный период 6' is: '3 805 953'

10-01-2025T03:04:46 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Значения со страницы Выполнение бизнес-плана/Table Data/Факт Потери за отчётный период 6' is: '3 805 953'

10-01-2025T03:04:46 - [TEST_STEP][PASSED] - x = x + "/" + z: null

10-01-2025T03:04:46 - [TEST_STEP][PASSED] - z = getText(findTestObject(path + path2 + "План Отпуск в сеть за отчётный период " + dZONum)).replaceAll("\s+", ""): Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Значения со страницы Выполнение бизнес-плана/Table Data/План Отпуск в сеть за отчётный период 6' is: '33 422 359'

10-01-2025T03:04:47 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Значения со страницы Выполнение бизнес-плана/Table Data/План Отпуск в сеть за отчётный период 6' is: '33 422 359'

10-01-2025T03:04:47 - [TEST_STEP][PASSED] - x = x + "/" + z: null

10-01-2025T03:04:47 - [TEST_STEP][PASSED] - z = getText(findTestObject(path + path2 + "План Отпуск из сети за отчётный период " + dZONum)).replaceAll("\s+", ""): Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Значения со страницы Выполнение бизнес-плана/Table Data/План Отпуск из сети за отчётный период 6' is: '29 775 403'

10-01-2025T03:04:47 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Значения со страницы Выполнение бизнес-плана/Table Data/План Отпуск из сети за отчётный период 6' is: '29 775 403'

10-01-2025T03:04:47 - [TEST_STEP][PASSED] - x = x + "/" + z: null

10-01-2025T03:04:47 - [TEST_STEP][PASSED] - z = getText(findTestObject(path + path2 + "План Потери за отчётный период " + dZONum)).replaceAll("\s+", ""): Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Значения со страницы Выполнение бизнес-плана/Table Data/План Потери за отчётный период 6' is: '3 646 956'

10-01-2025T03:04:47 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Значения со страницы Выполнение бизнес-плана/Table Data/План Потери за отчётный период 6' is: '3 646 956'

10-01-2025T03:04:47 - [TEST_STEP][PASSED] - x = x + "/" + z: null

10-01-2025T03:04:47 - [TEST_STEP][PASSED] - z = getText(findTestObject(path + "Список ДЗО")).replaceAll("[\r?
|
]", "/"): Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Список ДЗО' is: '-0.22
-0.07
3.10
-0.38
-0.73
-0.02
0.19
3.73
-0.43
-0.05
-0.03
0.16
-0.17
-0.52
-0.27
-0.49
-0.02
Россети ФСКЕЭС
АО«Тываэнерго»
АО«Чеченэнерго»
РоссетиВолга
РоссетиКубань
РоссетиЛенэнерго(ГК)
РоссетиМосковскийрегион
РоссетиСеверныйКавказ
РоссетиСеверо-Запад
РоссетиСибирь
РоссетиТомск
РоссетиТюмень
Россети Урал(ГК)
РоссетиЦентр (ГК)
РоссетиЦентр иПриволжье(ГК)
Россети Юг(ГК)
РоссетиЯнтарь
-2
0
2
4
6
8'

10-01-2025T03:04:47 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Список ДЗО' is: '-0.22
-0.07
3.10
-0.38
-0.73
-0.02
0.19
3.73
-0.43
-0.05
-0.03
0.16
-0.17
-0.52
-0.27
-0.49
-0.02
Россети ФСКЕЭС
АО«Тываэнерго»
АО«Чеченэнерго»
РоссетиВолга
РоссетиКубань
РоссетиЛенэнерго(ГК)
РоссетиМосковскийрегион
РоссетиСеверныйКавказ
РоссетиСеверо-Запад
РоссетиСибирь
РоссетиТомск
РоссетиТюмень
Россети Урал(ГК)
РоссетиЦентр (ГК)
РоссетиЦентр иПриволжье(ГК)
Россети Юг(ГК)
РоссетиЯнтарь
-2
0
2
4
6
8'

10-01-2025T03:04:47 - [TEST_STEP][PASSED] - for ([ii = 1, ii < dZONum, (ii++)]): null

10-01-2025T03:04:47 - [TEST_STEP][PASSED] - i1 = z.indexOf("/") + 1: null

10-01-2025T03:04:47 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:04:47 - [TEST_STEP][PASSED] - z = z.substring(i1, z.length()): null

10-01-2025T03:04:47 - [TEST_STEP][PASSED] - i1 = z.indexOf("/"): null

10-01-2025T03:04:47 - [TEST_STEP][PASSED] - i1 = z.indexOf("/") + 1: null

10-01-2025T03:04:47 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:04:47 - [TEST_STEP][PASSED] - z = z.substring(i1, z.length()): null

10-01-2025T03:04:47 - [TEST_STEP][PASSED] - i1 = z.indexOf("/"): null

10-01-2025T03:04:47 - [TEST_STEP][PASSED] - i1 = z.indexOf("/") + 1: null

10-01-2025T03:04:47 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:04:47 - [TEST_STEP][PASSED] - z = z.substring(i1, z.length()): null

10-01-2025T03:04:47 - [TEST_STEP][PASSED] - i1 = z.indexOf("/"): null

10-01-2025T03:04:47 - [TEST_STEP][PASSED] - i1 = z.indexOf("/") + 1: null

10-01-2025T03:04:47 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:04:47 - [TEST_STEP][PASSED] - z = z.substring(i1, z.length()): null

10-01-2025T03:04:47 - [TEST_STEP][PASSED] - i1 = z.indexOf("/"): null

10-01-2025T03:04:47 - [TEST_STEP][PASSED] - i1 = z.indexOf("/") + 1: null

10-01-2025T03:04:47 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:04:47 - [TEST_STEP][PASSED] - z = z.substring(i1, z.length()): null

10-01-2025T03:04:47 - [TEST_STEP][PASSED] - i1 = z.indexOf("/"): null

10-01-2025T03:04:47 - [TEST_STEP][PASSED] - i1 = z.indexOf("/"): null

10-01-2025T03:04:47 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:04:47 - [TEST_STEP][PASSED] - z = z.substring(0, i1): null

10-01-2025T03:04:47 - [TEST_STEP][PASSED] - z = z.replace(",", "."): null

10-01-2025T03:04:47 - [TEST_STEP][PASSED] - println(z): null

10-01-2025T03:04:47 - [TEST_STEP][PASSED] - x = x + "/" + z: null

10-01-2025T03:04:47 - [TEST_STEP][PASSED] - x = x.replaceAll("[\r?
|
]", ""): null

10-01-2025T03:04:47 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:04:47 - [TEST_STEP][PASSED] - return x: null

10-01-2025T03:04:47 - [TEST_STEP][PASSED] - println("lB: " + lB): null

10-01-2025T03:04:47 - [TEST_STEP][PASSED] - i = VseDZO.indexOf("Московский"): null

10-01-2025T03:04:47 - [TEST_STEP][PASSED] - if (i > -1): null

10-01-2025T03:04:47 - [TEST_STEP][PASSED] - dZONum = dZONum + 1: null

10-01-2025T03:04:47 - [TEST_STEP][PASSED] - mB = GetAllData(path, dZONum, VseDZO, x = "Россети Московский регион/"): null

10-01-2025T03:04:47 - [TEST_STEP][PASSED] - ii = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:04:47 - [TEST_STEP][PASSED] - i1 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:04:47 - [TEST_STEP][PASSED] - z = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:04:47 - [TEST_STEP][PASSED] - path2 = "Значения со страницы Выполнение бизнес-плана/Table Data/": null

10-01-2025T03:04:47 - [TEST_STEP][PASSED] - println("path: " + path): null

10-01-2025T03:04:47 - [TEST_STEP][PASSED] - println("dZONum: " + dZONum): null

10-01-2025T03:04:47 - [TEST_STEP][PASSED] - z = getText(findTestObject(path + "spanPlan" + dZONum)): Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/spanPlan7' is: '7.39'

10-01-2025T03:04:48 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/spanPlan7' is: '7.39'

10-01-2025T03:04:48 - [TEST_STEP][PASSED] - println(z): null

10-01-2025T03:04:48 - [TEST_STEP][PASSED] - ii = z.indexOf("|"): null

10-01-2025T03:04:48 - [TEST_STEP][PASSED] - if (ii > -1): null

10-01-2025T03:04:48 - [TEST_STEP][PASSED] - z = z.replaceAll("\s+", ""): null

10-01-2025T03:04:48 - [TEST_STEP][PASSED] - z = z.replace("[\r?
|
]", "/"): null

10-01-2025T03:04:48 - [TEST_STEP][PASSED] - println(z): null

10-01-2025T03:04:48 - [TEST_STEP][PASSED] - x = x + z: null

10-01-2025T03:04:48 - [TEST_STEP][PASSED] - z = getText(findTestObject(path + "spanFact" + dZONum)): Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/spanFact7' is: '7.58
|'

10-01-2025T03:04:48 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/spanFact7' is: '7.58
|'

10-01-2025T03:04:48 - [TEST_STEP][PASSED] - ii = z.indexOf("|"): null

10-01-2025T03:04:48 - [TEST_STEP][PASSED] - if (ii > -1): null

10-01-2025T03:04:48 - [TEST_STEP][PASSED] - z = length() - 1).replace("[\r?
|
]", "/"): null

10-01-2025T03:04:48 - [TEST_STEP][PASSED] - x = x + "/" + z: null

10-01-2025T03:04:48 - [TEST_STEP][PASSED] - z = getText(findTestObject(path + path2 + "Факт Отпуск в сеть за отчётный период " + dZONum)).replaceAll("\s+", ""): Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Значения со страницы Выполнение бизнес-плана/Table Data/Факт Отпуск в сеть за отчётный период 7' is: '93 807 453'

10-01-2025T03:04:48 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Значения со страницы Выполнение бизнес-плана/Table Data/Факт Отпуск в сеть за отчётный период 7' is: '93 807 453'

10-01-2025T03:04:48 - [TEST_STEP][PASSED] - x = x + "/" + z: null

10-01-2025T03:04:48 - [TEST_STEP][PASSED] - z = getText(findTestObject(path + path2 + "Факт Отпуск из сети за отчётный период " + dZONum)).replaceAll("\s+", ""): Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Значения со страницы Выполнение бизнес-плана/Table Data/Факт Отпуск из сети за отчётный период 7' is: '86 700 170'

10-01-2025T03:04:49 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Значения со страницы Выполнение бизнес-плана/Table Data/Факт Отпуск из сети за отчётный период 7' is: '86 700 170'

10-01-2025T03:04:49 - [TEST_STEP][PASSED] - x = x + "/" + z: null

10-01-2025T03:04:49 - [TEST_STEP][PASSED] - z = getText(findTestObject(path + path2 + "Факт Потери за отчётный период " + dZONum)).replaceAll("\s+", ""): Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Значения со страницы Выполнение бизнес-плана/Table Data/Факт Потери за отчётный период 7' is: '7 107 284'

10-01-2025T03:04:49 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Значения со страницы Выполнение бизнес-плана/Table Data/Факт Потери за отчётный период 7' is: '7 107 284'

10-01-2025T03:04:49 - [TEST_STEP][PASSED] - x = x + "/" + z: null

10-01-2025T03:04:49 - [TEST_STEP][PASSED] - z = getText(findTestObject(path + path2 + "План Отпуск в сеть за отчётный период " + dZONum)).replaceAll("\s+", ""): Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Значения со страницы Выполнение бизнес-плана/Table Data/План Отпуск в сеть за отчётный период 7' is: '88 890 955'

10-01-2025T03:04:49 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Значения со страницы Выполнение бизнес-плана/Table Data/План Отпуск в сеть за отчётный период 7' is: '88 890 955'

10-01-2025T03:04:49 - [TEST_STEP][PASSED] - x = x + "/" + z: null

10-01-2025T03:04:49 - [TEST_STEP][PASSED] - z = getText(findTestObject(path + path2 + "План Отпуск из сети за отчётный период " + dZONum)).replaceAll("\s+", ""): Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Значения со страницы Выполнение бизнес-плана/Table Data/План Отпуск из сети за отчётный период 7' is: '82 321 830'

10-01-2025T03:04:50 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Значения со страницы Выполнение бизнес-плана/Table Data/План Отпуск из сети за отчётный период 7' is: '82 321 830'

10-01-2025T03:04:50 - [TEST_STEP][PASSED] - x = x + "/" + z: null

10-01-2025T03:04:50 - [TEST_STEP][PASSED] - z = getText(findTestObject(path + path2 + "План Потери за отчётный период " + dZONum)).replaceAll("\s+", ""): Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Значения со страницы Выполнение бизнес-плана/Table Data/План Потери за отчётный период 7' is: '6 569 125'

10-01-2025T03:04:50 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Значения со страницы Выполнение бизнес-плана/Table Data/План Потери за отчётный период 7' is: '6 569 125'

10-01-2025T03:04:50 - [TEST_STEP][PASSED] - x = x + "/" + z: null

10-01-2025T03:04:50 - [TEST_STEP][PASSED] - z = getText(findTestObject(path + "Список ДЗО")).replaceAll("[\r?
|
]", "/"): Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Список ДЗО' is: '-0.22
-0.07
3.10
-0.38
-0.73
-0.02
0.19
3.73
-0.43
-0.05
-0.03
0.16
-0.17
-0.52
-0.27
-0.49
-0.02
Россети ФСКЕЭС
АО«Тываэнерго»
АО«Чеченэнерго»
РоссетиВолга
РоссетиКубань
РоссетиЛенэнерго(ГК)
РоссетиМосковскийрегион
РоссетиСеверныйКавказ
РоссетиСеверо-Запад
РоссетиСибирь
РоссетиТомск
РоссетиТюмень
Россети Урал(ГК)
РоссетиЦентр (ГК)
РоссетиЦентр иПриволжье(ГК)
Россети Юг(ГК)
РоссетиЯнтарь
-2
0
2
4
6
8'

10-01-2025T03:04:50 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Список ДЗО' is: '-0.22
-0.07
3.10
-0.38
-0.73
-0.02
0.19
3.73
-0.43
-0.05
-0.03
0.16
-0.17
-0.52
-0.27
-0.49
-0.02
Россети ФСКЕЭС
АО«Тываэнерго»
АО«Чеченэнерго»
РоссетиВолга
РоссетиКубань
РоссетиЛенэнерго(ГК)
РоссетиМосковскийрегион
РоссетиСеверныйКавказ
РоссетиСеверо-Запад
РоссетиСибирь
РоссетиТомск
РоссетиТюмень
Россети Урал(ГК)
РоссетиЦентр (ГК)
РоссетиЦентр иПриволжье(ГК)
Россети Юг(ГК)
РоссетиЯнтарь
-2
0
2
4
6
8'

10-01-2025T03:04:50 - [TEST_STEP][PASSED] - for ([ii = 1, ii < dZONum, (ii++)]): null

10-01-2025T03:04:50 - [TEST_STEP][PASSED] - i1 = z.indexOf("/") + 1: null

10-01-2025T03:04:50 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:04:50 - [TEST_STEP][PASSED] - z = z.substring(i1, z.length()): null

10-01-2025T03:04:50 - [TEST_STEP][PASSED] - i1 = z.indexOf("/"): null

10-01-2025T03:04:50 - [TEST_STEP][PASSED] - i1 = z.indexOf("/") + 1: null

10-01-2025T03:04:50 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:04:50 - [TEST_STEP][PASSED] - z = z.substring(i1, z.length()): null

10-01-2025T03:04:50 - [TEST_STEP][PASSED] - i1 = z.indexOf("/"): null

10-01-2025T03:04:50 - [TEST_STEP][PASSED] - i1 = z.indexOf("/") + 1: null

10-01-2025T03:04:50 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:04:50 - [TEST_STEP][PASSED] - z = z.substring(i1, z.length()): null

10-01-2025T03:04:50 - [TEST_STEP][PASSED] - i1 = z.indexOf("/"): null

10-01-2025T03:04:50 - [TEST_STEP][PASSED] - i1 = z.indexOf("/") + 1: null

10-01-2025T03:04:50 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:04:50 - [TEST_STEP][PASSED] - z = z.substring(i1, z.length()): null

10-01-2025T03:04:50 - [TEST_STEP][PASSED] - i1 = z.indexOf("/"): null

10-01-2025T03:04:50 - [TEST_STEP][PASSED] - i1 = z.indexOf("/") + 1: null

10-01-2025T03:04:50 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:04:50 - [TEST_STEP][PASSED] - z = z.substring(i1, z.length()): null

10-01-2025T03:04:50 - [TEST_STEP][PASSED] - i1 = z.indexOf("/"): null

10-01-2025T03:04:50 - [TEST_STEP][PASSED] - i1 = z.indexOf("/") + 1: null

10-01-2025T03:04:50 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:04:50 - [TEST_STEP][PASSED] - z = z.substring(i1, z.length()): null

10-01-2025T03:04:50 - [TEST_STEP][PASSED] - i1 = z.indexOf("/"): null

10-01-2025T03:04:50 - [TEST_STEP][PASSED] - i1 = z.indexOf("/"): null

10-01-2025T03:04:50 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:04:50 - [TEST_STEP][PASSED] - z = z.substring(0, i1): null

10-01-2025T03:04:50 - [TEST_STEP][PASSED] - z = z.replace(",", "."): null

10-01-2025T03:04:50 - [TEST_STEP][PASSED] - println(z): null

10-01-2025T03:04:50 - [TEST_STEP][PASSED] - x = x + "/" + z: null

10-01-2025T03:04:50 - [TEST_STEP][PASSED] - x = x.replaceAll("[\r?
|
]", ""): null

10-01-2025T03:04:50 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:04:50 - [TEST_STEP][PASSED] - return x: null

10-01-2025T03:04:50 - [TEST_STEP][PASSED] - println("mB: " + mB): null

10-01-2025T03:04:50 - [TEST_STEP][PASSED] - i = VseDZO.indexOf("Кавказ"): null

10-01-2025T03:04:50 - [TEST_STEP][PASSED] - if (i > -1): null

10-01-2025T03:04:50 - [TEST_STEP][PASSED] - dZONum = dZONum + 1: null

10-01-2025T03:04:50 - [TEST_STEP][PASSED] - sKB = GetAllData(path, dZONum, VseDZO, x = "Россети Северный Кавказ (ГК)/"): null

10-01-2025T03:04:50 - [TEST_STEP][PASSED] - ii = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:04:50 - [TEST_STEP][PASSED] - i1 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:04:50 - [TEST_STEP][PASSED] - z = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:04:50 - [TEST_STEP][PASSED] - path2 = "Значения со страницы Выполнение бизнес-плана/Table Data/": null

10-01-2025T03:04:50 - [TEST_STEP][PASSED] - println("path: " + path): null

10-01-2025T03:04:50 - [TEST_STEP][PASSED] - println("dZONum: " + dZONum): null

10-01-2025T03:04:50 - [TEST_STEP][PASSED] - z = getText(findTestObject(path + "spanPlan" + dZONum)): Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/spanPlan8' is: '23.32'

10-01-2025T03:04:51 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/spanPlan8' is: '23.32'

10-01-2025T03:04:51 - [TEST_STEP][PASSED] - println(z): null

10-01-2025T03:04:51 - [TEST_STEP][PASSED] - ii = z.indexOf("|"): null

10-01-2025T03:04:51 - [TEST_STEP][PASSED] - if (ii > -1): null

10-01-2025T03:04:51 - [TEST_STEP][PASSED] - z = z.replaceAll("\s+", ""): null

10-01-2025T03:04:51 - [TEST_STEP][PASSED] - z = z.replace("[\r?
|
]", "/"): null

10-01-2025T03:04:51 - [TEST_STEP][PASSED] - println(z): null

10-01-2025T03:04:51 - [TEST_STEP][PASSED] - x = x + z: null

10-01-2025T03:04:51 - [TEST_STEP][PASSED] - z = getText(findTestObject(path + "spanFact" + dZONum)): Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/spanFact8' is: '27.05
|'

10-01-2025T03:04:51 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/spanFact8' is: '27.05
|'

10-01-2025T03:04:51 - [TEST_STEP][PASSED] - ii = z.indexOf("|"): null

10-01-2025T03:04:51 - [TEST_STEP][PASSED] - if (ii > -1): null

10-01-2025T03:04:51 - [TEST_STEP][PASSED] - z = length() - 1).replace("[\r?
|
]", "/"): null

10-01-2025T03:04:51 - [TEST_STEP][PASSED] - x = x + "/" + z: null

10-01-2025T03:04:51 - [TEST_STEP][PASSED] - z = getText(findTestObject(path + path2 + "Факт Отпуск в сеть за отчётный период " + dZONum)).replaceAll("\s+", ""): Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Значения со страницы Выполнение бизнес-плана/Table Data/Факт Отпуск в сеть за отчётный период 8' is: '20 498 248'

10-01-2025T03:04:51 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Значения со страницы Выполнение бизнес-плана/Table Data/Факт Отпуск в сеть за отчётный период 8' is: '20 498 248'

10-01-2025T03:04:51 - [TEST_STEP][PASSED] - x = x + "/" + z: null

10-01-2025T03:04:51 - [TEST_STEP][PASSED] - z = getText(findTestObject(path + path2 + "Факт Отпуск из сети за отчётный период " + dZONum)).replaceAll("\s+", ""): Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Значения со страницы Выполнение бизнес-плана/Table Data/Факт Отпуск из сети за отчётный период 8' is: '14 954 088'

10-01-2025T03:04:51 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Значения со страницы Выполнение бизнес-плана/Table Data/Факт Отпуск из сети за отчётный период 8' is: '14 954 088'

10-01-2025T03:04:51 - [TEST_STEP][PASSED] - x = x + "/" + z: null

10-01-2025T03:04:51 - [TEST_STEP][PASSED] - z = getText(findTestObject(path + path2 + "Факт Потери за отчётный период " + dZONum)).replaceAll("\s+", ""): Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Значения со страницы Выполнение бизнес-плана/Table Data/Факт Потери за отчётный период 8' is: '5 544 160'

10-01-2025T03:04:52 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Значения со страницы Выполнение бизнес-плана/Table Data/Факт Потери за отчётный период 8' is: '5 544 160'

10-01-2025T03:04:52 - [TEST_STEP][PASSED] - x = x + "/" + z: null

10-01-2025T03:04:52 - [TEST_STEP][PASSED] - z = getText(findTestObject(path + path2 + "План Отпуск в сеть за отчётный период " + dZONum)).replaceAll("\s+", ""): Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Значения со страницы Выполнение бизнес-плана/Table Data/План Отпуск в сеть за отчётный период 8' is: '19 485 633'

10-01-2025T03:04:52 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Значения со страницы Выполнение бизнес-плана/Table Data/План Отпуск в сеть за отчётный период 8' is: '19 485 633'

10-01-2025T03:04:52 - [TEST_STEP][PASSED] - x = x + "/" + z: null

10-01-2025T03:04:52 - [TEST_STEP][PASSED] - z = getText(findTestObject(path + path2 + "План Отпуск из сети за отчётный период " + dZONum)).replaceAll("\s+", ""): Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Значения со страницы Выполнение бизнес-плана/Table Data/План Отпуск из сети за отчётный период 8' is: '14 949 980'

10-01-2025T03:04:52 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Значения со страницы Выполнение бизнес-плана/Table Data/План Отпуск из сети за отчётный период 8' is: '14 949 980'

10-01-2025T03:04:52 - [TEST_STEP][PASSED] - x = x + "/" + z: null

10-01-2025T03:04:52 - [TEST_STEP][PASSED] - z = getText(findTestObject(path + path2 + "План Потери за отчётный период " + dZONum)).replaceAll("\s+", ""): Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Значения со страницы Выполнение бизнес-плана/Table Data/План Потери за отчётный период 8' is: '4 535 653'

10-01-2025T03:04:53 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Значения со страницы Выполнение бизнес-плана/Table Data/План Потери за отчётный период 8' is: '4 535 653'

10-01-2025T03:04:53 - [TEST_STEP][PASSED] - x = x + "/" + z: null

10-01-2025T03:04:53 - [TEST_STEP][PASSED] - z = getText(findTestObject(path + "Список ДЗО")).replaceAll("[\r?
|
]", "/"): Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Список ДЗО' is: '-0.22
-0.07
3.10
-0.38
-0.73
-0.02
0.19
3.73
-0.43
-0.05
-0.03
0.16
-0.17
-0.52
-0.27
-0.49
-0.02
Россети ФСКЕЭС
АО«Тываэнерго»
АО«Чеченэнерго»
РоссетиВолга
РоссетиКубань
РоссетиЛенэнерго(ГК)
РоссетиМосковскийрегион
РоссетиСеверныйКавказ
РоссетиСеверо-Запад
РоссетиСибирь
РоссетиТомск
РоссетиТюмень
Россети Урал(ГК)
РоссетиЦентр (ГК)
РоссетиЦентр иПриволжье(ГК)
Россети Юг(ГК)
РоссетиЯнтарь
-2
0
2
4
6
8'

10-01-2025T03:04:53 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Список ДЗО' is: '-0.22
-0.07
3.10
-0.38
-0.73
-0.02
0.19
3.73
-0.43
-0.05
-0.03
0.16
-0.17
-0.52
-0.27
-0.49
-0.02
Россети ФСКЕЭС
АО«Тываэнерго»
АО«Чеченэнерго»
РоссетиВолга
РоссетиКубань
РоссетиЛенэнерго(ГК)
РоссетиМосковскийрегион
РоссетиСеверныйКавказ
РоссетиСеверо-Запад
РоссетиСибирь
РоссетиТомск
РоссетиТюмень
Россети Урал(ГК)
РоссетиЦентр (ГК)
РоссетиЦентр иПриволжье(ГК)
Россети Юг(ГК)
РоссетиЯнтарь
-2
0
2
4
6
8'

10-01-2025T03:04:53 - [TEST_STEP][PASSED] - for ([ii = 1, ii < dZONum, (ii++)]): null

10-01-2025T03:04:53 - [TEST_STEP][PASSED] - i1 = z.indexOf("/") + 1: null

10-01-2025T03:04:53 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:04:53 - [TEST_STEP][PASSED] - z = z.substring(i1, z.length()): null

10-01-2025T03:04:53 - [TEST_STEP][PASSED] - i1 = z.indexOf("/"): null

10-01-2025T03:04:53 - [TEST_STEP][PASSED] - i1 = z.indexOf("/") + 1: null

10-01-2025T03:04:53 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:04:53 - [TEST_STEP][PASSED] - z = z.substring(i1, z.length()): null

10-01-2025T03:04:53 - [TEST_STEP][PASSED] - i1 = z.indexOf("/"): null

10-01-2025T03:04:53 - [TEST_STEP][PASSED] - i1 = z.indexOf("/") + 1: null

10-01-2025T03:04:53 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:04:53 - [TEST_STEP][PASSED] - z = z.substring(i1, z.length()): null

10-01-2025T03:04:53 - [TEST_STEP][PASSED] - i1 = z.indexOf("/"): null

10-01-2025T03:04:53 - [TEST_STEP][PASSED] - i1 = z.indexOf("/") + 1: null

10-01-2025T03:04:53 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:04:53 - [TEST_STEP][PASSED] - z = z.substring(i1, z.length()): null

10-01-2025T03:04:53 - [TEST_STEP][PASSED] - i1 = z.indexOf("/"): null

10-01-2025T03:04:53 - [TEST_STEP][PASSED] - i1 = z.indexOf("/") + 1: null

10-01-2025T03:04:53 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:04:53 - [TEST_STEP][PASSED] - z = z.substring(i1, z.length()): null

10-01-2025T03:04:53 - [TEST_STEP][PASSED] - i1 = z.indexOf("/"): null

10-01-2025T03:04:53 - [TEST_STEP][PASSED] - i1 = z.indexOf("/") + 1: null

10-01-2025T03:04:53 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:04:53 - [TEST_STEP][PASSED] - z = z.substring(i1, z.length()): null

10-01-2025T03:04:53 - [TEST_STEP][PASSED] - i1 = z.indexOf("/"): null

10-01-2025T03:04:53 - [TEST_STEP][PASSED] - i1 = z.indexOf("/") + 1: null

10-01-2025T03:04:53 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:04:53 - [TEST_STEP][PASSED] - z = z.substring(i1, z.length()): null

10-01-2025T03:04:53 - [TEST_STEP][PASSED] - i1 = z.indexOf("/"): null

10-01-2025T03:04:53 - [TEST_STEP][PASSED] - i1 = z.indexOf("/"): null

10-01-2025T03:04:53 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:04:53 - [TEST_STEP][PASSED] - z = z.substring(0, i1): null

10-01-2025T03:04:53 - [TEST_STEP][PASSED] - z = z.replace(",", "."): null

10-01-2025T03:04:53 - [TEST_STEP][PASSED] - println(z): null

10-01-2025T03:04:53 - [TEST_STEP][PASSED] - x = x + "/" + z: null

10-01-2025T03:04:53 - [TEST_STEP][PASSED] - x = x.replaceAll("[\r?
|
]", ""): null

10-01-2025T03:04:53 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:04:53 - [TEST_STEP][PASSED] - return x: null

10-01-2025T03:04:53 - [TEST_STEP][PASSED] - println("sKB: " + sKB): null

10-01-2025T03:04:53 - [TEST_STEP][PASSED] - i = VseDZO.indexOf("Запад"): null

10-01-2025T03:04:53 - [TEST_STEP][PASSED] - if (i > -1): null

10-01-2025T03:04:53 - [TEST_STEP][PASSED] - dZONum = dZONum + 1: null

10-01-2025T03:04:53 - [TEST_STEP][PASSED] - sZB = GetAllData(path, dZONum, VseDZO, x = "Россети Северо-Запад/"): null

10-01-2025T03:04:53 - [TEST_STEP][PASSED] - ii = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:04:53 - [TEST_STEP][PASSED] - i1 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:04:53 - [TEST_STEP][PASSED] - z = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:04:53 - [TEST_STEP][PASSED] - path2 = "Значения со страницы Выполнение бизнес-плана/Table Data/": null

10-01-2025T03:04:53 - [TEST_STEP][PASSED] - println("path: " + path): null

10-01-2025T03:04:53 - [TEST_STEP][PASSED] - println("dZONum: " + dZONum): null

10-01-2025T03:04:53 - [TEST_STEP][PASSED] - z = getText(findTestObject(path + "spanPlan" + dZONum)): Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/spanPlan9' is: '5.81
|'

10-01-2025T03:04:53 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/spanPlan9' is: '5.81
|'

10-01-2025T03:04:53 - [TEST_STEP][PASSED] - println(z): null

10-01-2025T03:04:53 - [TEST_STEP][PASSED] - ii = z.indexOf("|"): null

10-01-2025T03:04:53 - [TEST_STEP][PASSED] - if (ii > -1): null

10-01-2025T03:04:53 - [TEST_STEP][PASSED] - z = z.substring(0, z.length() - 1): null

10-01-2025T03:04:53 - [TEST_STEP][PASSED] - println(z): null

10-01-2025T03:04:53 - [TEST_STEP][PASSED] - z = z.replaceAll("\s+", ""): null

10-01-2025T03:04:53 - [TEST_STEP][PASSED] - z = z.replace("[\r?
|
]", "/"): null

10-01-2025T03:04:53 - [TEST_STEP][PASSED] - println(z): null

10-01-2025T03:04:53 - [TEST_STEP][PASSED] - x = x + z: null

10-01-2025T03:04:53 - [TEST_STEP][PASSED] - z = getText(findTestObject(path + "spanFact" + dZONum)): Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/spanFact9' is: '5.39'

10-01-2025T03:04:54 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/spanFact9' is: '5.39'

10-01-2025T03:04:54 - [TEST_STEP][PASSED] - ii = z.indexOf("|"): null

10-01-2025T03:04:54 - [TEST_STEP][PASSED] - if (ii > -1): null

10-01-2025T03:04:54 - [TEST_STEP][PASSED] - x = x + "/" + z: null

10-01-2025T03:04:54 - [TEST_STEP][PASSED] - z = getText(findTestObject(path + path2 + "Факт Отпуск в сеть за отчётный период " + dZONum)).replaceAll("\s+", ""): Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Значения со страницы Выполнение бизнес-плана/Table Data/Факт Отпуск в сеть за отчётный период 9' is: '30 027 512'

10-01-2025T03:04:54 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Значения со страницы Выполнение бизнес-плана/Table Data/Факт Отпуск в сеть за отчётный период 9' is: '30 027 512'

10-01-2025T03:04:54 - [TEST_STEP][PASSED] - x = x + "/" + z: null

10-01-2025T03:04:54 - [TEST_STEP][PASSED] - z = getText(findTestObject(path + path2 + "Факт Отпуск из сети за отчётный период " + dZONum)).replaceAll("\s+", ""): Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Значения со страницы Выполнение бизнес-плана/Table Data/Факт Отпуск из сети за отчётный период 9' is: '28 409 686'

10-01-2025T03:04:54 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Значения со страницы Выполнение бизнес-плана/Table Data/Факт Отпуск из сети за отчётный период 9' is: '28 409 686'

10-01-2025T03:04:54 - [TEST_STEP][PASSED] - x = x + "/" + z: null

10-01-2025T03:04:54 - [TEST_STEP][PASSED] - z = getText(findTestObject(path + path2 + "Факт Потери за отчётный период " + dZONum)).replaceAll("\s+", ""): Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Значения со страницы Выполнение бизнес-плана/Table Data/Факт Потери за отчётный период 9' is: '1 617 826'

10-01-2025T03:04:55 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Значения со страницы Выполнение бизнес-плана/Table Data/Факт Потери за отчётный период 9' is: '1 617 826'

10-01-2025T03:04:55 - [TEST_STEP][PASSED] - x = x + "/" + z: null

10-01-2025T03:04:55 - [TEST_STEP][PASSED] - z = getText(findTestObject(path + path2 + "План Отпуск в сеть за отчётный период " + dZONum)).replaceAll("\s+", ""): Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Значения со страницы Выполнение бизнес-плана/Table Data/План Отпуск в сеть за отчётный период 9' is: '29 644 473'

10-01-2025T03:04:55 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Значения со страницы Выполнение бизнес-плана/Table Data/План Отпуск в сеть за отчётный период 9' is: '29 644 473'

10-01-2025T03:04:55 - [TEST_STEP][PASSED] - x = x + "/" + z: null

10-01-2025T03:04:55 - [TEST_STEP][PASSED] - z = getText(findTestObject(path + path2 + "План Отпуск из сети за отчётный период " + dZONum)).replaceAll("\s+", ""): Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Значения со страницы Выполнение бизнес-плана/Table Data/План Отпуск из сети за отчётный период 9' is: '27 921 280'

10-01-2025T03:04:55 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Значения со страницы Выполнение бизнес-плана/Table Data/План Отпуск из сети за отчётный период 9' is: '27 921 280'

10-01-2025T03:04:55 - [TEST_STEP][PASSED] - x = x + "/" + z: null

10-01-2025T03:04:55 - [TEST_STEP][PASSED] - z = getText(findTestObject(path + path2 + "План Потери за отчётный период " + dZONum)).replaceAll("\s+", ""): Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Значения со страницы Выполнение бизнес-плана/Table Data/План Потери за отчётный период 9' is: '1 723 193'

10-01-2025T03:04:55 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Значения со страницы Выполнение бизнес-плана/Table Data/План Потери за отчётный период 9' is: '1 723 193'

10-01-2025T03:04:55 - [TEST_STEP][PASSED] - x = x + "/" + z: null

10-01-2025T03:04:55 - [TEST_STEP][PASSED] - z = getText(findTestObject(path + "Список ДЗО")).replaceAll("[\r?
|
]", "/"): Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Список ДЗО' is: '-0.22
-0.07
3.10
-0.38
-0.73
-0.02
0.19
3.73
-0.43
-0.05
-0.03
0.16
-0.17
-0.52
-0.27
-0.49
-0.02
Россети ФСКЕЭС
АО«Тываэнерго»
АО«Чеченэнерго»
РоссетиВолга
РоссетиКубань
РоссетиЛенэнерго(ГК)
РоссетиМосковскийрегион
РоссетиСеверныйКавказ
РоссетиСеверо-Запад
РоссетиСибирь
РоссетиТомск
РоссетиТюмень
Россети Урал(ГК)
РоссетиЦентр (ГК)
РоссетиЦентр иПриволжье(ГК)
Россети Юг(ГК)
РоссетиЯнтарь
-2
0
2
4
6
8'

10-01-2025T03:04:56 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Список ДЗО' is: '-0.22
-0.07
3.10
-0.38
-0.73
-0.02
0.19
3.73
-0.43
-0.05
-0.03
0.16
-0.17
-0.52
-0.27
-0.49
-0.02
Россети ФСКЕЭС
АО«Тываэнерго»
АО«Чеченэнерго»
РоссетиВолга
РоссетиКубань
РоссетиЛенэнерго(ГК)
РоссетиМосковскийрегион
РоссетиСеверныйКавказ
РоссетиСеверо-Запад
РоссетиСибирь
РоссетиТомск
РоссетиТюмень
Россети Урал(ГК)
РоссетиЦентр (ГК)
РоссетиЦентр иПриволжье(ГК)
Россети Юг(ГК)
РоссетиЯнтарь
-2
0
2
4
6
8'

10-01-2025T03:04:56 - [TEST_STEP][PASSED] - for ([ii = 1, ii < dZONum, (ii++)]): null

10-01-2025T03:04:56 - [TEST_STEP][PASSED] - i1 = z.indexOf("/") + 1: null

10-01-2025T03:04:56 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:04:56 - [TEST_STEP][PASSED] - z = z.substring(i1, z.length()): null

10-01-2025T03:04:56 - [TEST_STEP][PASSED] - i1 = z.indexOf("/"): null

10-01-2025T03:04:56 - [TEST_STEP][PASSED] - i1 = z.indexOf("/") + 1: null

10-01-2025T03:04:56 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:04:56 - [TEST_STEP][PASSED] - z = z.substring(i1, z.length()): null

10-01-2025T03:04:56 - [TEST_STEP][PASSED] - i1 = z.indexOf("/"): null

10-01-2025T03:04:56 - [TEST_STEP][PASSED] - i1 = z.indexOf("/") + 1: null

10-01-2025T03:04:56 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:04:56 - [TEST_STEP][PASSED] - z = z.substring(i1, z.length()): null

10-01-2025T03:04:56 - [TEST_STEP][PASSED] - i1 = z.indexOf("/"): null

10-01-2025T03:04:56 - [TEST_STEP][PASSED] - i1 = z.indexOf("/") + 1: null

10-01-2025T03:04:56 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:04:56 - [TEST_STEP][PASSED] - z = z.substring(i1, z.length()): null

10-01-2025T03:04:56 - [TEST_STEP][PASSED] - i1 = z.indexOf("/"): null

10-01-2025T03:04:56 - [TEST_STEP][PASSED] - i1 = z.indexOf("/") + 1: null

10-01-2025T03:04:56 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:04:56 - [TEST_STEP][PASSED] - z = z.substring(i1, z.length()): null

10-01-2025T03:04:56 - [TEST_STEP][PASSED] - i1 = z.indexOf("/"): null

10-01-2025T03:04:56 - [TEST_STEP][PASSED] - i1 = z.indexOf("/") + 1: null

10-01-2025T03:04:56 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:04:56 - [TEST_STEP][PASSED] - z = z.substring(i1, z.length()): null

10-01-2025T03:04:56 - [TEST_STEP][PASSED] - i1 = z.indexOf("/"): null

10-01-2025T03:04:56 - [TEST_STEP][PASSED] - i1 = z.indexOf("/") + 1: null

10-01-2025T03:04:56 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:04:56 - [TEST_STEP][PASSED] - z = z.substring(i1, z.length()): null

10-01-2025T03:04:56 - [TEST_STEP][PASSED] - i1 = z.indexOf("/"): null

10-01-2025T03:04:56 - [TEST_STEP][PASSED] - i1 = z.indexOf("/") + 1: null

10-01-2025T03:04:56 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:04:56 - [TEST_STEP][PASSED] - z = z.substring(i1, z.length()): null

10-01-2025T03:04:56 - [TEST_STEP][PASSED] - i1 = z.indexOf("/"): null

10-01-2025T03:04:56 - [TEST_STEP][PASSED] - i1 = z.indexOf("/"): null

10-01-2025T03:04:56 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:04:56 - [TEST_STEP][PASSED] - z = z.substring(0, i1): null

10-01-2025T03:04:56 - [TEST_STEP][PASSED] - z = z.replace(",", "."): null

10-01-2025T03:04:56 - [TEST_STEP][PASSED] - println(z): null

10-01-2025T03:04:56 - [TEST_STEP][PASSED] - x = x + "/" + z: null

10-01-2025T03:04:56 - [TEST_STEP][PASSED] - x = x.replaceAll("[\r?
|
]", ""): null

10-01-2025T03:04:56 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:04:56 - [TEST_STEP][PASSED] - return x: null

10-01-2025T03:04:56 - [TEST_STEP][PASSED] - println("sZB: " + sZB): null

10-01-2025T03:04:56 - [TEST_STEP][PASSED] - i = VseDZO.indexOf("Сибирь"): null

10-01-2025T03:04:56 - [TEST_STEP][PASSED] - if (i > -1): null

10-01-2025T03:04:56 - [TEST_STEP][PASSED] - dZONum = dZONum + 1: null

10-01-2025T03:04:56 - [TEST_STEP][PASSED] - siB = GetAllData(path, dZONum, VseDZO, x = "Россети Сибирь (ГК)/"): null

10-01-2025T03:04:56 - [TEST_STEP][PASSED] - ii = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:04:56 - [TEST_STEP][PASSED] - i1 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:04:56 - [TEST_STEP][PASSED] - z = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:04:56 - [TEST_STEP][PASSED] - path2 = "Значения со страницы Выполнение бизнес-плана/Table Data/": null

10-01-2025T03:04:56 - [TEST_STEP][PASSED] - println("path: " + path): null

10-01-2025T03:04:56 - [TEST_STEP][PASSED] - println("dZONum: " + dZONum): null

10-01-2025T03:04:56 - [TEST_STEP][PASSED] - z = getText(findTestObject(path + "spanPlan" + dZONum)): Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/spanPlan10' is: '7.14
|'

10-01-2025T03:04:56 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/spanPlan10' is: '7.14
|'

10-01-2025T03:04:56 - [TEST_STEP][PASSED] - println(z): null

10-01-2025T03:04:56 - [TEST_STEP][PASSED] - ii = z.indexOf("|"): null

10-01-2025T03:04:56 - [TEST_STEP][PASSED] - if (ii > -1): null

10-01-2025T03:04:56 - [TEST_STEP][PASSED] - z = z.substring(0, z.length() - 1): null

10-01-2025T03:04:56 - [TEST_STEP][PASSED] - println(z): null

10-01-2025T03:04:56 - [TEST_STEP][PASSED] - z = z.replaceAll("\s+", ""): null

10-01-2025T03:04:56 - [TEST_STEP][PASSED] - z = z.replace("[\r?
|
]", "/"): null

10-01-2025T03:04:56 - [TEST_STEP][PASSED] - println(z): null

10-01-2025T03:04:56 - [TEST_STEP][PASSED] - x = x + z: null

10-01-2025T03:04:56 - [TEST_STEP][PASSED] - z = getText(findTestObject(path + "spanFact" + dZONum)): Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/spanFact10' is: '7.09'

10-01-2025T03:04:56 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/spanFact10' is: '7.09'

10-01-2025T03:04:56 - [TEST_STEP][PASSED] - ii = z.indexOf("|"): null

10-01-2025T03:04:56 - [TEST_STEP][PASSED] - if (ii > -1): null

10-01-2025T03:04:56 - [TEST_STEP][PASSED] - x = x + "/" + z: null

10-01-2025T03:04:56 - [TEST_STEP][PASSED] - z = getText(findTestObject(path + path2 + "Факт Отпуск в сеть за отчётный период " + dZONum)).replaceAll("\s+", ""): Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Значения со страницы Выполнение бизнес-плана/Table Data/Факт Отпуск в сеть за отчётный период 10' is: '52 412 668'

10-01-2025T03:04:57 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Значения со страницы Выполнение бизнес-плана/Table Data/Факт Отпуск в сеть за отчётный период 10' is: '52 412 668'

10-01-2025T03:04:57 - [TEST_STEP][PASSED] - x = x + "/" + z: null

10-01-2025T03:04:57 - [TEST_STEP][PASSED] - z = getText(findTestObject(path + path2 + "Факт Отпуск из сети за отчётный период " + dZONum)).replaceAll("\s+", ""): Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Значения со страницы Выполнение бизнес-плана/Table Data/Факт Отпуск из сети за отчётный период 10' is: '48 697 705'

10-01-2025T03:04:57 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Значения со страницы Выполнение бизнес-плана/Table Data/Факт Отпуск из сети за отчётный период 10' is: '48 697 705'

10-01-2025T03:04:57 - [TEST_STEP][PASSED] - x = x + "/" + z: null

10-01-2025T03:04:57 - [TEST_STEP][PASSED] - z = getText(findTestObject(path + path2 + "Факт Потери за отчётный период " + dZONum)).replaceAll("\s+", ""): Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Значения со страницы Выполнение бизнес-плана/Table Data/Факт Потери за отчётный период 10' is: '3 714 964'

10-01-2025T03:04:57 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Значения со страницы Выполнение бизнес-плана/Table Data/Факт Потери за отчётный период 10' is: '3 714 964'

10-01-2025T03:04:57 - [TEST_STEP][PASSED] - x = x + "/" + z: null

10-01-2025T03:04:57 - [TEST_STEP][PASSED] - z = getText(findTestObject(path + path2 + "План Отпуск в сеть за отчётный период " + dZONum)).replaceAll("\s+", ""): Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Значения со страницы Выполнение бизнес-плана/Table Data/План Отпуск в сеть за отчётный период 10' is: '50 003 068'

10-01-2025T03:04:58 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Значения со страницы Выполнение бизнес-плана/Table Data/План Отпуск в сеть за отчётный период 10' is: '50 003 068'

10-01-2025T03:04:58 - [TEST_STEP][PASSED] - x = x + "/" + z: null

10-01-2025T03:04:58 - [TEST_STEP][PASSED] - z = getText(findTestObject(path + path2 + "План Отпуск из сети за отчётный период " + dZONum)).replaceAll("\s+", ""): Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Значения со страницы Выполнение бизнес-плана/Table Data/План Отпуск из сети за отчётный период 10' is: '46 434 624'

10-01-2025T03:04:58 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Значения со страницы Выполнение бизнес-плана/Table Data/План Отпуск из сети за отчётный период 10' is: '46 434 624'

10-01-2025T03:04:58 - [TEST_STEP][PASSED] - x = x + "/" + z: null

10-01-2025T03:04:58 - [TEST_STEP][PASSED] - z = getText(findTestObject(path + path2 + "План Потери за отчётный период " + dZONum)).replaceAll("\s+", ""): Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Значения со страницы Выполнение бизнес-плана/Table Data/План Потери за отчётный период 10' is: '3 568 444'

10-01-2025T03:04:58 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Значения со страницы Выполнение бизнес-плана/Table Data/План Потери за отчётный период 10' is: '3 568 444'

10-01-2025T03:04:58 - [TEST_STEP][PASSED] - x = x + "/" + z: null

10-01-2025T03:04:58 - [TEST_STEP][PASSED] - z = getText(findTestObject(path + "Список ДЗО")).replaceAll("[\r?
|
]", "/"): Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Список ДЗО' is: '-0.22
-0.07
3.10
-0.38
-0.73
-0.02
0.19
3.73
-0.43
-0.05
-0.03
0.16
-0.17
-0.52
-0.27
-0.49
-0.02
Россети ФСКЕЭС
АО«Тываэнерго»
АО«Чеченэнерго»
РоссетиВолга
РоссетиКубань
РоссетиЛенэнерго(ГК)
РоссетиМосковскийрегион
РоссетиСеверныйКавказ
РоссетиСеверо-Запад
РоссетиСибирь
РоссетиТомск
РоссетиТюмень
Россети Урал(ГК)
РоссетиЦентр (ГК)
РоссетиЦентр иПриволжье(ГК)
Россети Юг(ГК)
РоссетиЯнтарь
-2
0
2
4
6
8'

10-01-2025T03:04:59 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Список ДЗО' is: '-0.22
-0.07
3.10
-0.38
-0.73
-0.02
0.19
3.73
-0.43
-0.05
-0.03
0.16
-0.17
-0.52
-0.27
-0.49
-0.02
Россети ФСКЕЭС
АО«Тываэнерго»
АО«Чеченэнерго»
РоссетиВолга
РоссетиКубань
РоссетиЛенэнерго(ГК)
РоссетиМосковскийрегион
РоссетиСеверныйКавказ
РоссетиСеверо-Запад
РоссетиСибирь
РоссетиТомск
РоссетиТюмень
Россети Урал(ГК)
РоссетиЦентр (ГК)
РоссетиЦентр иПриволжье(ГК)
Россети Юг(ГК)
РоссетиЯнтарь
-2
0
2
4
6
8'

10-01-2025T03:04:59 - [TEST_STEP][PASSED] - for ([ii = 1, ii < dZONum, (ii++)]): null

10-01-2025T03:04:59 - [TEST_STEP][PASSED] - i1 = z.indexOf("/") + 1: null

10-01-2025T03:04:59 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:04:59 - [TEST_STEP][PASSED] - z = z.substring(i1, z.length()): null

10-01-2025T03:04:59 - [TEST_STEP][PASSED] - i1 = z.indexOf("/"): null

10-01-2025T03:04:59 - [TEST_STEP][PASSED] - i1 = z.indexOf("/") + 1: null

10-01-2025T03:04:59 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:04:59 - [TEST_STEP][PASSED] - z = z.substring(i1, z.length()): null

10-01-2025T03:04:59 - [TEST_STEP][PASSED] - i1 = z.indexOf("/"): null

10-01-2025T03:04:59 - [TEST_STEP][PASSED] - i1 = z.indexOf("/") + 1: null

10-01-2025T03:04:59 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:04:59 - [TEST_STEP][PASSED] - z = z.substring(i1, z.length()): null

10-01-2025T03:04:59 - [TEST_STEP][PASSED] - i1 = z.indexOf("/"): null

10-01-2025T03:04:59 - [TEST_STEP][PASSED] - i1 = z.indexOf("/") + 1: null

10-01-2025T03:04:59 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:04:59 - [TEST_STEP][PASSED] - z = z.substring(i1, z.length()): null

10-01-2025T03:04:59 - [TEST_STEP][PASSED] - i1 = z.indexOf("/"): null

10-01-2025T03:04:59 - [TEST_STEP][PASSED] - i1 = z.indexOf("/") + 1: null

10-01-2025T03:04:59 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:04:59 - [TEST_STEP][PASSED] - z = z.substring(i1, z.length()): null

10-01-2025T03:04:59 - [TEST_STEP][PASSED] - i1 = z.indexOf("/"): null

10-01-2025T03:04:59 - [TEST_STEP][PASSED] - i1 = z.indexOf("/") + 1: null

10-01-2025T03:04:59 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:04:59 - [TEST_STEP][PASSED] - z = z.substring(i1, z.length()): null

10-01-2025T03:04:59 - [TEST_STEP][PASSED] - i1 = z.indexOf("/"): null

10-01-2025T03:04:59 - [TEST_STEP][PASSED] - i1 = z.indexOf("/") + 1: null

10-01-2025T03:04:59 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:04:59 - [TEST_STEP][PASSED] - z = z.substring(i1, z.length()): null

10-01-2025T03:04:59 - [TEST_STEP][PASSED] - i1 = z.indexOf("/"): null

10-01-2025T03:04:59 - [TEST_STEP][PASSED] - i1 = z.indexOf("/") + 1: null

10-01-2025T03:04:59 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:04:59 - [TEST_STEP][PASSED] - z = z.substring(i1, z.length()): null

10-01-2025T03:04:59 - [TEST_STEP][PASSED] - i1 = z.indexOf("/"): null

10-01-2025T03:04:59 - [TEST_STEP][PASSED] - i1 = z.indexOf("/") + 1: null

10-01-2025T03:04:59 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:04:59 - [TEST_STEP][PASSED] - z = z.substring(i1, z.length()): null

10-01-2025T03:04:59 - [TEST_STEP][PASSED] - i1 = z.indexOf("/"): null

10-01-2025T03:04:59 - [TEST_STEP][PASSED] - i1 = z.indexOf("/"): null

10-01-2025T03:04:59 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:04:59 - [TEST_STEP][PASSED] - z = z.substring(0, i1): null

10-01-2025T03:04:59 - [TEST_STEP][PASSED] - z = z.replace(",", "."): null

10-01-2025T03:04:59 - [TEST_STEP][PASSED] - println(z): null

10-01-2025T03:04:59 - [TEST_STEP][PASSED] - x = x + "/" + z: null

10-01-2025T03:04:59 - [TEST_STEP][PASSED] - x = x.replaceAll("[\r?
|
]", ""): null

10-01-2025T03:04:59 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:04:59 - [TEST_STEP][PASSED] - return x: null

10-01-2025T03:04:59 - [TEST_STEP][PASSED] - println("siB: " + siB): null

10-01-2025T03:04:59 - [TEST_STEP][PASSED] - i = VseDZO.indexOf("Томск"): null

10-01-2025T03:04:59 - [TEST_STEP][PASSED] - if (i > -1): null

10-01-2025T03:04:59 - [TEST_STEP][PASSED] - dZONum = dZONum + 1: null

10-01-2025T03:04:59 - [TEST_STEP][PASSED] - tomB = GetAllData(path, dZONum, VseDZO, x = "Россети Томск/"): null

10-01-2025T03:04:59 - [TEST_STEP][PASSED] - ii = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:04:59 - [TEST_STEP][PASSED] - i1 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:04:59 - [TEST_STEP][PASSED] - z = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:04:59 - [TEST_STEP][PASSED] - path2 = "Значения со страницы Выполнение бизнес-плана/Table Data/": null

10-01-2025T03:04:59 - [TEST_STEP][PASSED] - println("path: " + path): null

10-01-2025T03:04:59 - [TEST_STEP][PASSED] - println("dZONum: " + dZONum): null

10-01-2025T03:04:59 - [TEST_STEP][PASSED] - z = getText(findTestObject(path + "spanPlan" + dZONum)): Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/spanPlan11' is: '8.61
|'

10-01-2025T03:04:59 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/spanPlan11' is: '8.61
|'

10-01-2025T03:04:59 - [TEST_STEP][PASSED] - println(z): null

10-01-2025T03:04:59 - [TEST_STEP][PASSED] - ii = z.indexOf("|"): null

10-01-2025T03:04:59 - [TEST_STEP][PASSED] - if (ii > -1): null

10-01-2025T03:04:59 - [TEST_STEP][PASSED] - z = z.substring(0, z.length() - 1): null

10-01-2025T03:04:59 - [TEST_STEP][PASSED] - println(z): null

10-01-2025T03:04:59 - [TEST_STEP][PASSED] - z = z.replaceAll("\s+", ""): null

10-01-2025T03:04:59 - [TEST_STEP][PASSED] - z = z.replace("[\r?
|
]", "/"): null

10-01-2025T03:04:59 - [TEST_STEP][PASSED] - println(z): null

10-01-2025T03:04:59 - [TEST_STEP][PASSED] - x = x + z: null

10-01-2025T03:04:59 - [TEST_STEP][PASSED] - z = getText(findTestObject(path + "spanFact" + dZONum)): Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/spanFact11' is: '8.58'

10-01-2025T03:04:59 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/spanFact11' is: '8.58'

10-01-2025T03:04:59 - [TEST_STEP][PASSED] - ii = z.indexOf("|"): null

10-01-2025T03:04:59 - [TEST_STEP][PASSED] - if (ii > -1): null

10-01-2025T03:04:59 - [TEST_STEP][PASSED] - x = x + "/" + z: null

10-01-2025T03:04:59 - [TEST_STEP][PASSED] - z = getText(findTestObject(path + path2 + "Факт Отпуск в сеть за отчётный период " + dZONum)).replaceAll("\s+", ""): Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Значения со страницы Выполнение бизнес-плана/Table Data/Факт Отпуск в сеть за отчётный период 11' is: '4 685 132'

10-01-2025T03:05:00 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Значения со страницы Выполнение бизнес-плана/Table Data/Факт Отпуск в сеть за отчётный период 11' is: '4 685 132'

10-01-2025T03:05:00 - [TEST_STEP][PASSED] - x = x + "/" + z: null

10-01-2025T03:05:00 - [TEST_STEP][PASSED] - z = getText(findTestObject(path + path2 + "Факт Отпуск из сети за отчётный период " + dZONum)).replaceAll("\s+", ""): Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Значения со страницы Выполнение бизнес-плана/Table Data/Факт Отпуск из сети за отчётный период 11' is: '4 283 226'

10-01-2025T03:05:00 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Значения со страницы Выполнение бизнес-плана/Table Data/Факт Отпуск из сети за отчётный период 11' is: '4 283 226'

10-01-2025T03:05:00 - [TEST_STEP][PASSED] - x = x + "/" + z: null

10-01-2025T03:05:00 - [TEST_STEP][PASSED] - z = getText(findTestObject(path + path2 + "Факт Потери за отчётный период " + dZONum)).replaceAll("\s+", ""): Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Значения со страницы Выполнение бизнес-плана/Table Data/Факт Потери за отчётный период 11' is: '401 906'

10-01-2025T03:05:00 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Значения со страницы Выполнение бизнес-плана/Table Data/Факт Потери за отчётный период 11' is: '401 906'

10-01-2025T03:05:00 - [TEST_STEP][PASSED] - x = x + "/" + z: null

10-01-2025T03:05:00 - [TEST_STEP][PASSED] - z = getText(findTestObject(path + path2 + "План Отпуск в сеть за отчётный период " + dZONum)).replaceAll("\s+", ""): Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Значения со страницы Выполнение бизнес-плана/Table Data/План Отпуск в сеть за отчётный период 11' is: '4 514 319'

10-01-2025T03:05:01 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Значения со страницы Выполнение бизнес-плана/Table Data/План Отпуск в сеть за отчётный период 11' is: '4 514 319'

10-01-2025T03:05:01 - [TEST_STEP][PASSED] - x = x + "/" + z: null

10-01-2025T03:05:01 - [TEST_STEP][PASSED] - z = getText(findTestObject(path + path2 + "План Отпуск из сети за отчётный период " + dZONum)).replaceAll("\s+", ""): Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Значения со страницы Выполнение бизнес-плана/Table Data/План Отпуск из сети за отчётный период 11' is: '4 125 742'

10-01-2025T03:05:01 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Значения со страницы Выполнение бизнес-плана/Table Data/План Отпуск из сети за отчётный период 11' is: '4 125 742'

10-01-2025T03:05:01 - [TEST_STEP][PASSED] - x = x + "/" + z: null

10-01-2025T03:05:01 - [TEST_STEP][PASSED] - z = getText(findTestObject(path + path2 + "План Потери за отчётный период " + dZONum)).replaceAll("\s+", ""): Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Значения со страницы Выполнение бизнес-плана/Table Data/План Потери за отчётный период 11' is: '388 577'

10-01-2025T03:05:01 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Значения со страницы Выполнение бизнес-плана/Table Data/План Потери за отчётный период 11' is: '388 577'

10-01-2025T03:05:01 - [TEST_STEP][PASSED] - x = x + "/" + z: null

10-01-2025T03:05:01 - [TEST_STEP][PASSED] - z = getText(findTestObject(path + "Список ДЗО")).replaceAll("[\r?
|
]", "/"): Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Список ДЗО' is: '-0.22
-0.07
3.10
-0.38
-0.73
-0.02
0.19
3.73
-0.43
-0.05
-0.03
0.16
-0.17
-0.52
-0.27
-0.49
-0.02
Россети ФСКЕЭС
АО«Тываэнерго»
АО«Чеченэнерго»
РоссетиВолга
РоссетиКубань
РоссетиЛенэнерго(ГК)
РоссетиМосковскийрегион
РоссетиСеверныйКавказ
РоссетиСеверо-Запад
РоссетиСибирь
РоссетиТомск
РоссетиТюмень
Россети Урал(ГК)
РоссетиЦентр (ГК)
РоссетиЦентр иПриволжье(ГК)
Россети Юг(ГК)
РоссетиЯнтарь
-2
0
2
4
6
8'

10-01-2025T03:05:01 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Список ДЗО' is: '-0.22
-0.07
3.10
-0.38
-0.73
-0.02
0.19
3.73
-0.43
-0.05
-0.03
0.16
-0.17
-0.52
-0.27
-0.49
-0.02
Россети ФСКЕЭС
АО«Тываэнерго»
АО«Чеченэнерго»
РоссетиВолга
РоссетиКубань
РоссетиЛенэнерго(ГК)
РоссетиМосковскийрегион
РоссетиСеверныйКавказ
РоссетиСеверо-Запад
РоссетиСибирь
РоссетиТомск
РоссетиТюмень
Россети Урал(ГК)
РоссетиЦентр (ГК)
РоссетиЦентр иПриволжье(ГК)
Россети Юг(ГК)
РоссетиЯнтарь
-2
0
2
4
6
8'

10-01-2025T03:05:01 - [TEST_STEP][PASSED] - for ([ii = 1, ii < dZONum, (ii++)]): null

10-01-2025T03:05:01 - [TEST_STEP][PASSED] - i1 = z.indexOf("/") + 1: null

10-01-2025T03:05:01 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:01 - [TEST_STEP][PASSED] - z = z.substring(i1, z.length()): null

10-01-2025T03:05:01 - [TEST_STEP][PASSED] - i1 = z.indexOf("/"): null

10-01-2025T03:05:01 - [TEST_STEP][PASSED] - i1 = z.indexOf("/") + 1: null

10-01-2025T03:05:01 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:01 - [TEST_STEP][PASSED] - z = z.substring(i1, z.length()): null

10-01-2025T03:05:01 - [TEST_STEP][PASSED] - i1 = z.indexOf("/"): null

10-01-2025T03:05:01 - [TEST_STEP][PASSED] - i1 = z.indexOf("/") + 1: null

10-01-2025T03:05:01 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:01 - [TEST_STEP][PASSED] - z = z.substring(i1, z.length()): null

10-01-2025T03:05:01 - [TEST_STEP][PASSED] - i1 = z.indexOf("/"): null

10-01-2025T03:05:01 - [TEST_STEP][PASSED] - i1 = z.indexOf("/") + 1: null

10-01-2025T03:05:01 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:01 - [TEST_STEP][PASSED] - z = z.substring(i1, z.length()): null

10-01-2025T03:05:01 - [TEST_STEP][PASSED] - i1 = z.indexOf("/"): null

10-01-2025T03:05:01 - [TEST_STEP][PASSED] - i1 = z.indexOf("/") + 1: null

10-01-2025T03:05:01 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:01 - [TEST_STEP][PASSED] - z = z.substring(i1, z.length()): null

10-01-2025T03:05:01 - [TEST_STEP][PASSED] - i1 = z.indexOf("/"): null

10-01-2025T03:05:01 - [TEST_STEP][PASSED] - i1 = z.indexOf("/") + 1: null

10-01-2025T03:05:01 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:01 - [TEST_STEP][PASSED] - z = z.substring(i1, z.length()): null

10-01-2025T03:05:01 - [TEST_STEP][PASSED] - i1 = z.indexOf("/"): null

10-01-2025T03:05:01 - [TEST_STEP][PASSED] - i1 = z.indexOf("/") + 1: null

10-01-2025T03:05:01 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:01 - [TEST_STEP][PASSED] - z = z.substring(i1, z.length()): null

10-01-2025T03:05:01 - [TEST_STEP][PASSED] - i1 = z.indexOf("/"): null

10-01-2025T03:05:01 - [TEST_STEP][PASSED] - i1 = z.indexOf("/") + 1: null

10-01-2025T03:05:01 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:01 - [TEST_STEP][PASSED] - z = z.substring(i1, z.length()): null

10-01-2025T03:05:01 - [TEST_STEP][PASSED] - i1 = z.indexOf("/"): null

10-01-2025T03:05:01 - [TEST_STEP][PASSED] - i1 = z.indexOf("/") + 1: null

10-01-2025T03:05:01 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:01 - [TEST_STEP][PASSED] - z = z.substring(i1, z.length()): null

10-01-2025T03:05:01 - [TEST_STEP][PASSED] - i1 = z.indexOf("/"): null

10-01-2025T03:05:01 - [TEST_STEP][PASSED] - i1 = z.indexOf("/") + 1: null

10-01-2025T03:05:01 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:01 - [TEST_STEP][PASSED] - z = z.substring(i1, z.length()): null

10-01-2025T03:05:01 - [TEST_STEP][PASSED] - i1 = z.indexOf("/"): null

10-01-2025T03:05:01 - [TEST_STEP][PASSED] - i1 = z.indexOf("/"): null

10-01-2025T03:05:01 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:01 - [TEST_STEP][PASSED] - z = z.substring(0, i1): null

10-01-2025T03:05:01 - [TEST_STEP][PASSED] - z = z.replace(",", "."): null

10-01-2025T03:05:01 - [TEST_STEP][PASSED] - println(z): null

10-01-2025T03:05:01 - [TEST_STEP][PASSED] - x = x + "/" + z: null

10-01-2025T03:05:01 - [TEST_STEP][PASSED] - x = x.replaceAll("[\r?
|
]", ""): null

10-01-2025T03:05:01 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:01 - [TEST_STEP][PASSED] - return x: null

10-01-2025T03:05:01 - [TEST_STEP][PASSED] - println("tomB: " + tomB): null

10-01-2025T03:05:01 - [TEST_STEP][PASSED] - i = VseDZO.indexOf("Тюмень"): null

10-01-2025T03:05:01 - [TEST_STEP][PASSED] - if (i > -1): null

10-01-2025T03:05:01 - [TEST_STEP][PASSED] - dZONum = dZONum + 1: null

10-01-2025T03:05:01 - [TEST_STEP][PASSED] - tyumB = GetAllData(path, dZONum, VseDZO, x = "Россети Тюмень/"): null

10-01-2025T03:05:01 - [TEST_STEP][PASSED] - ii = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:01 - [TEST_STEP][PASSED] - i1 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:01 - [TEST_STEP][PASSED] - z = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:01 - [TEST_STEP][PASSED] - path2 = "Значения со страницы Выполнение бизнес-плана/Table Data/": null

10-01-2025T03:05:01 - [TEST_STEP][PASSED] - println("path: " + path): null

10-01-2025T03:05:01 - [TEST_STEP][PASSED] - println("dZONum: " + dZONum): null

10-01-2025T03:05:01 - [TEST_STEP][PASSED] - z = getText(findTestObject(path + "spanPlan" + dZONum)): Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/spanPlan12' is: '2.54'

10-01-2025T03:05:02 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/spanPlan12' is: '2.54'

10-01-2025T03:05:02 - [TEST_STEP][PASSED] - println(z): null

10-01-2025T03:05:02 - [TEST_STEP][PASSED] - ii = z.indexOf("|"): null

10-01-2025T03:05:02 - [TEST_STEP][PASSED] - if (ii > -1): null

10-01-2025T03:05:02 - [TEST_STEP][PASSED] - z = z.replaceAll("\s+", ""): null

10-01-2025T03:05:02 - [TEST_STEP][PASSED] - z = z.replace("[\r?
|
]", "/"): null

10-01-2025T03:05:02 - [TEST_STEP][PASSED] - println(z): null

10-01-2025T03:05:02 - [TEST_STEP][PASSED] - x = x + z: null

10-01-2025T03:05:02 - [TEST_STEP][PASSED] - z = getText(findTestObject(path + "spanFact" + dZONum)): Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/spanFact12' is: '2.70
|'

10-01-2025T03:05:02 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/spanFact12' is: '2.70
|'

10-01-2025T03:05:02 - [TEST_STEP][PASSED] - ii = z.indexOf("|"): null

10-01-2025T03:05:02 - [TEST_STEP][PASSED] - if (ii > -1): null

10-01-2025T03:05:02 - [TEST_STEP][PASSED] - z = length() - 1).replace("[\r?
|
]", "/"): null

10-01-2025T03:05:02 - [TEST_STEP][PASSED] - x = x + "/" + z: null

10-01-2025T03:05:02 - [TEST_STEP][PASSED] - z = getText(findTestObject(path + path2 + "Факт Отпуск в сеть за отчётный период " + dZONum)).replaceAll("\s+", ""): Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Значения со страницы Выполнение бизнес-плана/Table Data/Факт Отпуск в сеть за отчётный период 12' is: '47 865 721'

10-01-2025T03:05:02 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Значения со страницы Выполнение бизнес-плана/Table Data/Факт Отпуск в сеть за отчётный период 12' is: '47 865 721'

10-01-2025T03:05:02 - [TEST_STEP][PASSED] - x = x + "/" + z: null

10-01-2025T03:05:02 - [TEST_STEP][PASSED] - z = getText(findTestObject(path + path2 + "Факт Отпуск из сети за отчётный период " + dZONum)).replaceAll("\s+", ""): Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Значения со страницы Выполнение бизнес-плана/Table Data/Факт Отпуск из сети за отчётный период 12' is: '46 573 769'

10-01-2025T03:05:03 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Значения со страницы Выполнение бизнес-плана/Table Data/Факт Отпуск из сети за отчётный период 12' is: '46 573 769'

10-01-2025T03:05:03 - [TEST_STEP][PASSED] - x = x + "/" + z: null

10-01-2025T03:05:03 - [TEST_STEP][PASSED] - z = getText(findTestObject(path + path2 + "Факт Потери за отчётный период " + dZONum)).replaceAll("\s+", ""): Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Значения со страницы Выполнение бизнес-плана/Table Data/Факт Потери за отчётный период 12' is: '1 291 953'

10-01-2025T03:05:03 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Значения со страницы Выполнение бизнес-плана/Table Data/Факт Потери за отчётный период 12' is: '1 291 953'

10-01-2025T03:05:03 - [TEST_STEP][PASSED] - x = x + "/" + z: null

10-01-2025T03:05:03 - [TEST_STEP][PASSED] - z = getText(findTestObject(path + path2 + "План Отпуск в сеть за отчётный период " + dZONum)).replaceAll("\s+", ""): Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Значения со страницы Выполнение бизнес-плана/Table Data/План Отпуск в сеть за отчётный период 12' is: '49 871 651'

10-01-2025T03:05:03 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Значения со страницы Выполнение бизнес-плана/Table Data/План Отпуск в сеть за отчётный период 12' is: '49 871 651'

10-01-2025T03:05:03 - [TEST_STEP][PASSED] - x = x + "/" + z: null

10-01-2025T03:05:03 - [TEST_STEP][PASSED] - z = getText(findTestObject(path + path2 + "План Отпуск из сети за отчётный период " + dZONum)).replaceAll("\s+", ""): Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Значения со страницы Выполнение бизнес-плана/Table Data/План Отпуск из сети за отчётный период 12' is: '48 605 475'

10-01-2025T03:05:04 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Значения со страницы Выполнение бизнес-плана/Table Data/План Отпуск из сети за отчётный период 12' is: '48 605 475'

10-01-2025T03:05:04 - [TEST_STEP][PASSED] - x = x + "/" + z: null

10-01-2025T03:05:04 - [TEST_STEP][PASSED] - z = getText(findTestObject(path + path2 + "План Потери за отчётный период " + dZONum)).replaceAll("\s+", ""): Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Значения со страницы Выполнение бизнес-плана/Table Data/План Потери за отчётный период 12' is: '1 266 176'

10-01-2025T03:05:04 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Значения со страницы Выполнение бизнес-плана/Table Data/План Потери за отчётный период 12' is: '1 266 176'

10-01-2025T03:05:04 - [TEST_STEP][PASSED] - x = x + "/" + z: null

10-01-2025T03:05:04 - [TEST_STEP][PASSED] - z = getText(findTestObject(path + "Список ДЗО")).replaceAll("[\r?
|
]", "/"): Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Список ДЗО' is: '-0.22
-0.07
3.10
-0.38
-0.73
-0.02
0.19
3.73
-0.43
-0.05
-0.03
0.16
-0.17
-0.52
-0.27
-0.49
-0.02
Россети ФСКЕЭС
АО«Тываэнерго»
АО«Чеченэнерго»
РоссетиВолга
РоссетиКубань
РоссетиЛенэнерго(ГК)
РоссетиМосковскийрегион
РоссетиСеверныйКавказ
РоссетиСеверо-Запад
РоссетиСибирь
РоссетиТомск
РоссетиТюмень
Россети Урал(ГК)
РоссетиЦентр (ГК)
РоссетиЦентр иПриволжье(ГК)
Россети Юг(ГК)
РоссетиЯнтарь
-2
0
2
4
6
8'

10-01-2025T03:05:04 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Список ДЗО' is: '-0.22
-0.07
3.10
-0.38
-0.73
-0.02
0.19
3.73
-0.43
-0.05
-0.03
0.16
-0.17
-0.52
-0.27
-0.49
-0.02
Россети ФСКЕЭС
АО«Тываэнерго»
АО«Чеченэнерго»
РоссетиВолга
РоссетиКубань
РоссетиЛенэнерго(ГК)
РоссетиМосковскийрегион
РоссетиСеверныйКавказ
РоссетиСеверо-Запад
РоссетиСибирь
РоссетиТомск
РоссетиТюмень
Россети Урал(ГК)
РоссетиЦентр (ГК)
РоссетиЦентр иПриволжье(ГК)
Россети Юг(ГК)
РоссетиЯнтарь
-2
0
2
4
6
8'

10-01-2025T03:05:04 - [TEST_STEP][PASSED] - for ([ii = 1, ii < dZONum, (ii++)]): null

10-01-2025T03:05:04 - [TEST_STEP][PASSED] - i1 = z.indexOf("/") + 1: null

10-01-2025T03:05:04 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:04 - [TEST_STEP][PASSED] - z = z.substring(i1, z.length()): null

10-01-2025T03:05:04 - [TEST_STEP][PASSED] - i1 = z.indexOf("/"): null

10-01-2025T03:05:04 - [TEST_STEP][PASSED] - i1 = z.indexOf("/") + 1: null

10-01-2025T03:05:04 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:04 - [TEST_STEP][PASSED] - z = z.substring(i1, z.length()): null

10-01-2025T03:05:04 - [TEST_STEP][PASSED] - i1 = z.indexOf("/"): null

10-01-2025T03:05:04 - [TEST_STEP][PASSED] - i1 = z.indexOf("/") + 1: null

10-01-2025T03:05:04 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:04 - [TEST_STEP][PASSED] - z = z.substring(i1, z.length()): null

10-01-2025T03:05:04 - [TEST_STEP][PASSED] - i1 = z.indexOf("/"): null

10-01-2025T03:05:04 - [TEST_STEP][PASSED] - i1 = z.indexOf("/") + 1: null

10-01-2025T03:05:04 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:04 - [TEST_STEP][PASSED] - z = z.substring(i1, z.length()): null

10-01-2025T03:05:04 - [TEST_STEP][PASSED] - i1 = z.indexOf("/"): null

10-01-2025T03:05:04 - [TEST_STEP][PASSED] - i1 = z.indexOf("/") + 1: null

10-01-2025T03:05:04 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:04 - [TEST_STEP][PASSED] - z = z.substring(i1, z.length()): null

10-01-2025T03:05:04 - [TEST_STEP][PASSED] - i1 = z.indexOf("/"): null

10-01-2025T03:05:04 - [TEST_STEP][PASSED] - i1 = z.indexOf("/") + 1: null

10-01-2025T03:05:04 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:04 - [TEST_STEP][PASSED] - z = z.substring(i1, z.length()): null

10-01-2025T03:05:04 - [TEST_STEP][PASSED] - i1 = z.indexOf("/"): null

10-01-2025T03:05:04 - [TEST_STEP][PASSED] - i1 = z.indexOf("/") + 1: null

10-01-2025T03:05:04 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:04 - [TEST_STEP][PASSED] - z = z.substring(i1, z.length()): null

10-01-2025T03:05:04 - [TEST_STEP][PASSED] - i1 = z.indexOf("/"): null

10-01-2025T03:05:04 - [TEST_STEP][PASSED] - i1 = z.indexOf("/") + 1: null

10-01-2025T03:05:04 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:04 - [TEST_STEP][PASSED] - z = z.substring(i1, z.length()): null

10-01-2025T03:05:04 - [TEST_STEP][PASSED] - i1 = z.indexOf("/"): null

10-01-2025T03:05:04 - [TEST_STEP][PASSED] - i1 = z.indexOf("/") + 1: null

10-01-2025T03:05:04 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:04 - [TEST_STEP][PASSED] - z = z.substring(i1, z.length()): null

10-01-2025T03:05:04 - [TEST_STEP][PASSED] - i1 = z.indexOf("/"): null

10-01-2025T03:05:04 - [TEST_STEP][PASSED] - i1 = z.indexOf("/") + 1: null

10-01-2025T03:05:04 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:04 - [TEST_STEP][PASSED] - z = z.substring(i1, z.length()): null

10-01-2025T03:05:04 - [TEST_STEP][PASSED] - i1 = z.indexOf("/"): null

10-01-2025T03:05:04 - [TEST_STEP][PASSED] - i1 = z.indexOf("/") + 1: null

10-01-2025T03:05:04 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:04 - [TEST_STEP][PASSED] - z = z.substring(i1, z.length()): null

10-01-2025T03:05:04 - [TEST_STEP][PASSED] - i1 = z.indexOf("/"): null

10-01-2025T03:05:04 - [TEST_STEP][PASSED] - i1 = z.indexOf("/"): null

10-01-2025T03:05:04 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:04 - [TEST_STEP][PASSED] - z = z.substring(0, i1): null

10-01-2025T03:05:04 - [TEST_STEP][PASSED] - z = z.replace(",", "."): null

10-01-2025T03:05:04 - [TEST_STEP][PASSED] - println(z): null

10-01-2025T03:05:04 - [TEST_STEP][PASSED] - x = x + "/" + z: null

10-01-2025T03:05:04 - [TEST_STEP][PASSED] - x = x.replaceAll("[\r?
|
]", ""): null

10-01-2025T03:05:04 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:04 - [TEST_STEP][PASSED] - return x: null

10-01-2025T03:05:04 - [TEST_STEP][PASSED] - println("tyumB: " + tyumB): null

10-01-2025T03:05:04 - [TEST_STEP][PASSED] - i = VseDZO.indexOf("Урал"): null

10-01-2025T03:05:04 - [TEST_STEP][PASSED] - if (i > -1): null

10-01-2025T03:05:04 - [TEST_STEP][PASSED] - dZONum = dZONum + 1: null

10-01-2025T03:05:04 - [TEST_STEP][PASSED] - urB = GetAllData(path, dZONum, VseDZO, x = "Россети Урал (ГК)/"): null

10-01-2025T03:05:04 - [TEST_STEP][PASSED] - ii = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:04 - [TEST_STEP][PASSED] - i1 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:04 - [TEST_STEP][PASSED] - z = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:04 - [TEST_STEP][PASSED] - path2 = "Значения со страницы Выполнение бизнес-плана/Table Data/": null

10-01-2025T03:05:04 - [TEST_STEP][PASSED] - println("path: " + path): null

10-01-2025T03:05:04 - [TEST_STEP][PASSED] - println("dZONum: " + dZONum): null

10-01-2025T03:05:04 - [TEST_STEP][PASSED] - z = getText(findTestObject(path + "spanPlan" + dZONum)): Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/spanPlan13' is: '6.07
|'

10-01-2025T03:05:05 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/spanPlan13' is: '6.07
|'

10-01-2025T03:05:05 - [TEST_STEP][PASSED] - println(z): null

10-01-2025T03:05:05 - [TEST_STEP][PASSED] - ii = z.indexOf("|"): null

10-01-2025T03:05:05 - [TEST_STEP][PASSED] - if (ii > -1): null

10-01-2025T03:05:05 - [TEST_STEP][PASSED] - z = z.substring(0, z.length() - 1): null

10-01-2025T03:05:05 - [TEST_STEP][PASSED] - println(z): null

10-01-2025T03:05:05 - [TEST_STEP][PASSED] - z = z.replaceAll("\s+", ""): null

10-01-2025T03:05:05 - [TEST_STEP][PASSED] - z = z.replace("[\r?
|
]", "/"): null

10-01-2025T03:05:05 - [TEST_STEP][PASSED] - println(z): null

10-01-2025T03:05:05 - [TEST_STEP][PASSED] - x = x + z: null

10-01-2025T03:05:05 - [TEST_STEP][PASSED] - z = getText(findTestObject(path + "spanFact" + dZONum)): Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/spanFact13' is: '5.90'

10-01-2025T03:05:05 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/spanFact13' is: '5.90'

10-01-2025T03:05:05 - [TEST_STEP][PASSED] - ii = z.indexOf("|"): null

10-01-2025T03:05:05 - [TEST_STEP][PASSED] - if (ii > -1): null

10-01-2025T03:05:05 - [TEST_STEP][PASSED] - x = x + "/" + z: null

10-01-2025T03:05:05 - [TEST_STEP][PASSED] - z = getText(findTestObject(path + path2 + "Факт Отпуск в сеть за отчётный период " + dZONum)).replaceAll("\s+", ""): Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Значения со страницы Выполнение бизнес-плана/Table Data/Факт Отпуск в сеть за отчётный период 13' is: '66 742 094'

10-01-2025T03:05:05 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Значения со страницы Выполнение бизнес-плана/Table Data/Факт Отпуск в сеть за отчётный период 13' is: '66 742 094'

10-01-2025T03:05:05 - [TEST_STEP][PASSED] - x = x + "/" + z: null

10-01-2025T03:05:05 - [TEST_STEP][PASSED] - z = getText(findTestObject(path + path2 + "Факт Отпуск из сети за отчётный период " + dZONum)).replaceAll("\s+", ""): Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Значения со страницы Выполнение бизнес-плана/Table Data/Факт Отпуск из сети за отчётный период 13' is: '62 801 450'

10-01-2025T03:05:06 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Значения со страницы Выполнение бизнес-плана/Table Data/Факт Отпуск из сети за отчётный период 13' is: '62 801 450'

10-01-2025T03:05:06 - [TEST_STEP][PASSED] - x = x + "/" + z: null

10-01-2025T03:05:06 - [TEST_STEP][PASSED] - z = getText(findTestObject(path + path2 + "Факт Потери за отчётный период " + dZONum)).replaceAll("\s+", ""): Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Значения со страницы Выполнение бизнес-плана/Table Data/Факт Потери за отчётный период 13' is: '3 940 644'

10-01-2025T03:05:06 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Значения со страницы Выполнение бизнес-плана/Table Data/Факт Потери за отчётный период 13' is: '3 940 644'

10-01-2025T03:05:06 - [TEST_STEP][PASSED] - x = x + "/" + z: null

10-01-2025T03:05:06 - [TEST_STEP][PASSED] - z = getText(findTestObject(path + path2 + "План Отпуск в сеть за отчётный период " + dZONum)).replaceAll("\s+", ""): Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Значения со страницы Выполнение бизнес-плана/Table Data/План Отпуск в сеть за отчётный период 13' is: '75 258 936'

10-01-2025T03:05:06 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Значения со страницы Выполнение бизнес-плана/Table Data/План Отпуск в сеть за отчётный период 13' is: '75 258 936'

10-01-2025T03:05:06 - [TEST_STEP][PASSED] - x = x + "/" + z: null

10-01-2025T03:05:06 - [TEST_STEP][PASSED] - z = getText(findTestObject(path + path2 + "План Отпуск из сети за отчётный период " + dZONum)).replaceAll("\s+", ""): Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Значения со страницы Выполнение бизнес-плана/Table Data/План Отпуск из сети за отчётный период 13' is: '70 677 698'

10-01-2025T03:05:06 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Значения со страницы Выполнение бизнес-плана/Table Data/План Отпуск из сети за отчётный период 13' is: '70 677 698'

10-01-2025T03:05:06 - [TEST_STEP][PASSED] - x = x + "/" + z: null

10-01-2025T03:05:06 - [TEST_STEP][PASSED] - z = getText(findTestObject(path + path2 + "План Потери за отчётный период " + dZONum)).replaceAll("\s+", ""): Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Значения со страницы Выполнение бизнес-плана/Table Data/План Потери за отчётный период 13' is: '4 581 238'

10-01-2025T03:05:07 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Значения со страницы Выполнение бизнес-плана/Table Data/План Потери за отчётный период 13' is: '4 581 238'

10-01-2025T03:05:07 - [TEST_STEP][PASSED] - x = x + "/" + z: null

10-01-2025T03:05:07 - [TEST_STEP][PASSED] - z = getText(findTestObject(path + "Список ДЗО")).replaceAll("[\r?
|
]", "/"): Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Список ДЗО' is: '-0.22
-0.07
3.10
-0.38
-0.73
-0.02
0.19
3.73
-0.43
-0.05
-0.03
0.16
-0.17
-0.52
-0.27
-0.49
-0.02
Россети ФСКЕЭС
АО«Тываэнерго»
АО«Чеченэнерго»
РоссетиВолга
РоссетиКубань
РоссетиЛенэнерго(ГК)
РоссетиМосковскийрегион
РоссетиСеверныйКавказ
РоссетиСеверо-Запад
РоссетиСибирь
РоссетиТомск
РоссетиТюмень
Россети Урал(ГК)
РоссетиЦентр (ГК)
РоссетиЦентр иПриволжье(ГК)
Россети Юг(ГК)
РоссетиЯнтарь
-2
0
2
4
6
8'

10-01-2025T03:05:07 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Список ДЗО' is: '-0.22
-0.07
3.10
-0.38
-0.73
-0.02
0.19
3.73
-0.43
-0.05
-0.03
0.16
-0.17
-0.52
-0.27
-0.49
-0.02
Россети ФСКЕЭС
АО«Тываэнерго»
АО«Чеченэнерго»
РоссетиВолга
РоссетиКубань
РоссетиЛенэнерго(ГК)
РоссетиМосковскийрегион
РоссетиСеверныйКавказ
РоссетиСеверо-Запад
РоссетиСибирь
РоссетиТомск
РоссетиТюмень
Россети Урал(ГК)
РоссетиЦентр (ГК)
РоссетиЦентр иПриволжье(ГК)
Россети Юг(ГК)
РоссетиЯнтарь
-2
0
2
4
6
8'

10-01-2025T03:05:07 - [TEST_STEP][PASSED] - for ([ii = 1, ii < dZONum, (ii++)]): null

10-01-2025T03:05:07 - [TEST_STEP][PASSED] - i1 = z.indexOf("/") + 1: null

10-01-2025T03:05:07 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:07 - [TEST_STEP][PASSED] - z = z.substring(i1, z.length()): null

10-01-2025T03:05:07 - [TEST_STEP][PASSED] - i1 = z.indexOf("/"): null

10-01-2025T03:05:07 - [TEST_STEP][PASSED] - i1 = z.indexOf("/") + 1: null

10-01-2025T03:05:07 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:07 - [TEST_STEP][PASSED] - z = z.substring(i1, z.length()): null

10-01-2025T03:05:07 - [TEST_STEP][PASSED] - i1 = z.indexOf("/"): null

10-01-2025T03:05:07 - [TEST_STEP][PASSED] - i1 = z.indexOf("/") + 1: null

10-01-2025T03:05:07 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:07 - [TEST_STEP][PASSED] - z = z.substring(i1, z.length()): null

10-01-2025T03:05:07 - [TEST_STEP][PASSED] - i1 = z.indexOf("/"): null

10-01-2025T03:05:07 - [TEST_STEP][PASSED] - i1 = z.indexOf("/") + 1: null

10-01-2025T03:05:07 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:07 - [TEST_STEP][PASSED] - z = z.substring(i1, z.length()): null

10-01-2025T03:05:07 - [TEST_STEP][PASSED] - i1 = z.indexOf("/"): null

10-01-2025T03:05:07 - [TEST_STEP][PASSED] - i1 = z.indexOf("/") + 1: null

10-01-2025T03:05:07 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:07 - [TEST_STEP][PASSED] - z = z.substring(i1, z.length()): null

10-01-2025T03:05:07 - [TEST_STEP][PASSED] - i1 = z.indexOf("/"): null

10-01-2025T03:05:07 - [TEST_STEP][PASSED] - i1 = z.indexOf("/") + 1: null

10-01-2025T03:05:07 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:07 - [TEST_STEP][PASSED] - z = z.substring(i1, z.length()): null

10-01-2025T03:05:07 - [TEST_STEP][PASSED] - i1 = z.indexOf("/"): null

10-01-2025T03:05:07 - [TEST_STEP][PASSED] - i1 = z.indexOf("/") + 1: null

10-01-2025T03:05:07 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:07 - [TEST_STEP][PASSED] - z = z.substring(i1, z.length()): null

10-01-2025T03:05:07 - [TEST_STEP][PASSED] - i1 = z.indexOf("/"): null

10-01-2025T03:05:07 - [TEST_STEP][PASSED] - i1 = z.indexOf("/") + 1: null

10-01-2025T03:05:07 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:07 - [TEST_STEP][PASSED] - z = z.substring(i1, z.length()): null

10-01-2025T03:05:07 - [TEST_STEP][PASSED] - i1 = z.indexOf("/"): null

10-01-2025T03:05:07 - [TEST_STEP][PASSED] - i1 = z.indexOf("/") + 1: null

10-01-2025T03:05:07 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:07 - [TEST_STEP][PASSED] - z = z.substring(i1, z.length()): null

10-01-2025T03:05:07 - [TEST_STEP][PASSED] - i1 = z.indexOf("/"): null

10-01-2025T03:05:07 - [TEST_STEP][PASSED] - i1 = z.indexOf("/") + 1: null

10-01-2025T03:05:07 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:07 - [TEST_STEP][PASSED] - z = z.substring(i1, z.length()): null

10-01-2025T03:05:07 - [TEST_STEP][PASSED] - i1 = z.indexOf("/"): null

10-01-2025T03:05:07 - [TEST_STEP][PASSED] - i1 = z.indexOf("/") + 1: null

10-01-2025T03:05:07 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:07 - [TEST_STEP][PASSED] - z = z.substring(i1, z.length()): null

10-01-2025T03:05:07 - [TEST_STEP][PASSED] - i1 = z.indexOf("/"): null

10-01-2025T03:05:07 - [TEST_STEP][PASSED] - i1 = z.indexOf("/") + 1: null

10-01-2025T03:05:07 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:07 - [TEST_STEP][PASSED] - z = z.substring(i1, z.length()): null

10-01-2025T03:05:07 - [TEST_STEP][PASSED] - i1 = z.indexOf("/"): null

10-01-2025T03:05:07 - [TEST_STEP][PASSED] - i1 = z.indexOf("/"): null

10-01-2025T03:05:07 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:07 - [TEST_STEP][PASSED] - z = z.substring(0, i1): null

10-01-2025T03:05:07 - [TEST_STEP][PASSED] - z = z.replace(",", "."): null

10-01-2025T03:05:07 - [TEST_STEP][PASSED] - println(z): null

10-01-2025T03:05:07 - [TEST_STEP][PASSED] - x = x + "/" + z: null

10-01-2025T03:05:07 - [TEST_STEP][PASSED] - x = x.replaceAll("[\r?
|
]", ""): null

10-01-2025T03:05:07 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:07 - [TEST_STEP][PASSED] - return x: null

10-01-2025T03:05:07 - [TEST_STEP][PASSED] - println("urB: " + urB): null

10-01-2025T03:05:07 - [TEST_STEP][PASSED] - i = VseDZO.indexOf("Центр"): null

10-01-2025T03:05:07 - [TEST_STEP][PASSED] - if (i > -1): null

10-01-2025T03:05:07 - [TEST_STEP][PASSED] - dZONum = dZONum + 1: null

10-01-2025T03:05:07 - [TEST_STEP][PASSED] - cenB = GetAllData(path, dZONum, VseDZO, x = "Россети Центр (ГК)/"): null

10-01-2025T03:05:07 - [TEST_STEP][PASSED] - ii = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:07 - [TEST_STEP][PASSED] - i1 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:07 - [TEST_STEP][PASSED] - z = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:07 - [TEST_STEP][PASSED] - path2 = "Значения со страницы Выполнение бизнес-плана/Table Data/": null

10-01-2025T03:05:07 - [TEST_STEP][PASSED] - println("path: " + path): null

10-01-2025T03:05:07 - [TEST_STEP][PASSED] - println("dZONum: " + dZONum): null

10-01-2025T03:05:07 - [TEST_STEP][PASSED] - z = getText(findTestObject(path + "spanPlan" + dZONum)): Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/spanPlan14' is: '10.32
|'

10-01-2025T03:05:07 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/spanPlan14' is: '10.32
|'

10-01-2025T03:05:07 - [TEST_STEP][PASSED] - println(z): null

10-01-2025T03:05:07 - [TEST_STEP][PASSED] - ii = z.indexOf("|"): null

10-01-2025T03:05:07 - [TEST_STEP][PASSED] - if (ii > -1): null

10-01-2025T03:05:07 - [TEST_STEP][PASSED] - z = z.substring(0, z.length() - 1): null

10-01-2025T03:05:07 - [TEST_STEP][PASSED] - println(z): null

10-01-2025T03:05:07 - [TEST_STEP][PASSED] - z = z.replaceAll("\s+", ""): null

10-01-2025T03:05:07 - [TEST_STEP][PASSED] - z = z.replace("[\r?
|
]", "/"): null

10-01-2025T03:05:07 - [TEST_STEP][PASSED] - println(z): null

10-01-2025T03:05:07 - [TEST_STEP][PASSED] - x = x + z: null

10-01-2025T03:05:07 - [TEST_STEP][PASSED] - z = getText(findTestObject(path + "spanFact" + dZONum)): Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/spanFact14' is: '9.80'

10-01-2025T03:05:08 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/spanFact14' is: '9.80'

10-01-2025T03:05:08 - [TEST_STEP][PASSED] - ii = z.indexOf("|"): null

10-01-2025T03:05:08 - [TEST_STEP][PASSED] - if (ii > -1): null

10-01-2025T03:05:08 - [TEST_STEP][PASSED] - x = x + "/" + z: null

10-01-2025T03:05:08 - [TEST_STEP][PASSED] - z = getText(findTestObject(path + path2 + "Факт Отпуск в сеть за отчётный период " + dZONum)).replaceAll("\s+", ""): Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Значения со страницы Выполнение бизнес-плана/Table Data/Факт Отпуск в сеть за отчётный период 14' is: '54 746 795'

10-01-2025T03:05:08 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Значения со страницы Выполнение бизнес-плана/Table Data/Факт Отпуск в сеть за отчётный период 14' is: '54 746 795'

10-01-2025T03:05:08 - [TEST_STEP][PASSED] - x = x + "/" + z: null

10-01-2025T03:05:08 - [TEST_STEP][PASSED] - z = getText(findTestObject(path + path2 + "Факт Отпуск из сети за отчётный период " + dZONum)).replaceAll("\s+", ""): Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Значения со страницы Выполнение бизнес-плана/Table Data/Факт Отпуск из сети за отчётный период 14' is: '49 382 050'

10-01-2025T03:05:08 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Значения со страницы Выполнение бизнес-плана/Table Data/Факт Отпуск из сети за отчётный период 14' is: '49 382 050'

10-01-2025T03:05:08 - [TEST_STEP][PASSED] - x = x + "/" + z: null

10-01-2025T03:05:08 - [TEST_STEP][PASSED] - z = getText(findTestObject(path + path2 + "Факт Потери за отчётный период " + dZONum)).replaceAll("\s+", ""): Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Значения со страницы Выполнение бизнес-плана/Table Data/Факт Потери за отчётный период 14' is: '5 364 745'

10-01-2025T03:05:09 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Значения со страницы Выполнение бизнес-плана/Table Data/Факт Потери за отчётный период 14' is: '5 364 745'

10-01-2025T03:05:09 - [TEST_STEP][PASSED] - x = x + "/" + z: null

10-01-2025T03:05:09 - [TEST_STEP][PASSED] - z = getText(findTestObject(path + path2 + "План Отпуск в сеть за отчётный период " + dZONum)).replaceAll("\s+", ""): Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Значения со страницы Выполнение бизнес-плана/Table Data/План Отпуск в сеть за отчётный период 14' is: '53 713 338'

10-01-2025T03:05:09 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Значения со страницы Выполнение бизнес-плана/Table Data/План Отпуск в сеть за отчётный период 14' is: '53 713 338'

10-01-2025T03:05:09 - [TEST_STEP][PASSED] - x = x + "/" + z: null

10-01-2025T03:05:09 - [TEST_STEP][PASSED] - z = getText(findTestObject(path + path2 + "План Отпуск из сети за отчётный период " + dZONum)).replaceAll("\s+", ""): Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Значения со страницы Выполнение бизнес-плана/Table Data/План Отпуск из сети за отчётный период 14' is: '48 149 456'

10-01-2025T03:05:09 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Значения со страницы Выполнение бизнес-плана/Table Data/План Отпуск из сети за отчётный период 14' is: '48 149 456'

10-01-2025T03:05:09 - [TEST_STEP][PASSED] - x = x + "/" + z: null

10-01-2025T03:05:09 - [TEST_STEP][PASSED] - z = getText(findTestObject(path + path2 + "План Потери за отчётный период " + dZONum)).replaceAll("\s+", ""): Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Значения со страницы Выполнение бизнес-плана/Table Data/План Потери за отчётный период 14' is: '5 563 882'

10-01-2025T03:05:10 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Значения со страницы Выполнение бизнес-плана/Table Data/План Потери за отчётный период 14' is: '5 563 882'

10-01-2025T03:05:10 - [TEST_STEP][PASSED] - x = x + "/" + z: null

10-01-2025T03:05:10 - [TEST_STEP][PASSED] - z = getText(findTestObject(path + "Список ДЗО")).replaceAll("[\r?
|
]", "/"): Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Список ДЗО' is: '-0.22
-0.07
3.10
-0.38
-0.73
-0.02
0.19
3.73
-0.43
-0.05
-0.03
0.16
-0.17
-0.52
-0.27
-0.49
-0.02
Россети ФСКЕЭС
АО«Тываэнерго»
АО«Чеченэнерго»
РоссетиВолга
РоссетиКубань
РоссетиЛенэнерго(ГК)
РоссетиМосковскийрегион
РоссетиСеверныйКавказ
РоссетиСеверо-Запад
РоссетиСибирь
РоссетиТомск
РоссетиТюмень
Россети Урал(ГК)
РоссетиЦентр (ГК)
РоссетиЦентр иПриволжье(ГК)
Россети Юг(ГК)
РоссетиЯнтарь
-2
0
2
4
6
8'

10-01-2025T03:05:10 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Список ДЗО' is: '-0.22
-0.07
3.10
-0.38
-0.73
-0.02
0.19
3.73
-0.43
-0.05
-0.03
0.16
-0.17
-0.52
-0.27
-0.49
-0.02
Россети ФСКЕЭС
АО«Тываэнерго»
АО«Чеченэнерго»
РоссетиВолга
РоссетиКубань
РоссетиЛенэнерго(ГК)
РоссетиМосковскийрегион
РоссетиСеверныйКавказ
РоссетиСеверо-Запад
РоссетиСибирь
РоссетиТомск
РоссетиТюмень
Россети Урал(ГК)
РоссетиЦентр (ГК)
РоссетиЦентр иПриволжье(ГК)
Россети Юг(ГК)
РоссетиЯнтарь
-2
0
2
4
6
8'

10-01-2025T03:05:10 - [TEST_STEP][PASSED] - for ([ii = 1, ii < dZONum, (ii++)]): null

10-01-2025T03:05:10 - [TEST_STEP][PASSED] - i1 = z.indexOf("/") + 1: null

10-01-2025T03:05:10 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:10 - [TEST_STEP][PASSED] - z = z.substring(i1, z.length()): null

10-01-2025T03:05:10 - [TEST_STEP][PASSED] - i1 = z.indexOf("/"): null

10-01-2025T03:05:10 - [TEST_STEP][PASSED] - i1 = z.indexOf("/") + 1: null

10-01-2025T03:05:10 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:10 - [TEST_STEP][PASSED] - z = z.substring(i1, z.length()): null

10-01-2025T03:05:10 - [TEST_STEP][PASSED] - i1 = z.indexOf("/"): null

10-01-2025T03:05:10 - [TEST_STEP][PASSED] - i1 = z.indexOf("/") + 1: null

10-01-2025T03:05:10 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:10 - [TEST_STEP][PASSED] - z = z.substring(i1, z.length()): null

10-01-2025T03:05:10 - [TEST_STEP][PASSED] - i1 = z.indexOf("/"): null

10-01-2025T03:05:10 - [TEST_STEP][PASSED] - i1 = z.indexOf("/") + 1: null

10-01-2025T03:05:10 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:10 - [TEST_STEP][PASSED] - z = z.substring(i1, z.length()): null

10-01-2025T03:05:10 - [TEST_STEP][PASSED] - i1 = z.indexOf("/"): null

10-01-2025T03:05:10 - [TEST_STEP][PASSED] - i1 = z.indexOf("/") + 1: null

10-01-2025T03:05:10 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:10 - [TEST_STEP][PASSED] - z = z.substring(i1, z.length()): null

10-01-2025T03:05:10 - [TEST_STEP][PASSED] - i1 = z.indexOf("/"): null

10-01-2025T03:05:10 - [TEST_STEP][PASSED] - i1 = z.indexOf("/") + 1: null

10-01-2025T03:05:10 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:10 - [TEST_STEP][PASSED] - z = z.substring(i1, z.length()): null

10-01-2025T03:05:10 - [TEST_STEP][PASSED] - i1 = z.indexOf("/"): null

10-01-2025T03:05:10 - [TEST_STEP][PASSED] - i1 = z.indexOf("/") + 1: null

10-01-2025T03:05:10 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:10 - [TEST_STEP][PASSED] - z = z.substring(i1, z.length()): null

10-01-2025T03:05:10 - [TEST_STEP][PASSED] - i1 = z.indexOf("/"): null

10-01-2025T03:05:10 - [TEST_STEP][PASSED] - i1 = z.indexOf("/") + 1: null

10-01-2025T03:05:10 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:10 - [TEST_STEP][PASSED] - z = z.substring(i1, z.length()): null

10-01-2025T03:05:10 - [TEST_STEP][PASSED] - i1 = z.indexOf("/"): null

10-01-2025T03:05:10 - [TEST_STEP][PASSED] - i1 = z.indexOf("/") + 1: null

10-01-2025T03:05:10 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:10 - [TEST_STEP][PASSED] - z = z.substring(i1, z.length()): null

10-01-2025T03:05:10 - [TEST_STEP][PASSED] - i1 = z.indexOf("/"): null

10-01-2025T03:05:10 - [TEST_STEP][PASSED] - i1 = z.indexOf("/") + 1: null

10-01-2025T03:05:10 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:10 - [TEST_STEP][PASSED] - z = z.substring(i1, z.length()): null

10-01-2025T03:05:10 - [TEST_STEP][PASSED] - i1 = z.indexOf("/"): null

10-01-2025T03:05:10 - [TEST_STEP][PASSED] - i1 = z.indexOf("/") + 1: null

10-01-2025T03:05:10 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:10 - [TEST_STEP][PASSED] - z = z.substring(i1, z.length()): null

10-01-2025T03:05:10 - [TEST_STEP][PASSED] - i1 = z.indexOf("/"): null

10-01-2025T03:05:10 - [TEST_STEP][PASSED] - i1 = z.indexOf("/") + 1: null

10-01-2025T03:05:10 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:10 - [TEST_STEP][PASSED] - z = z.substring(i1, z.length()): null

10-01-2025T03:05:10 - [TEST_STEP][PASSED] - i1 = z.indexOf("/"): null

10-01-2025T03:05:10 - [TEST_STEP][PASSED] - i1 = z.indexOf("/") + 1: null

10-01-2025T03:05:10 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:10 - [TEST_STEP][PASSED] - z = z.substring(i1, z.length()): null

10-01-2025T03:05:10 - [TEST_STEP][PASSED] - i1 = z.indexOf("/"): null

10-01-2025T03:05:10 - [TEST_STEP][PASSED] - i1 = z.indexOf("/"): null

10-01-2025T03:05:10 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:10 - [TEST_STEP][PASSED] - z = z.substring(0, i1): null

10-01-2025T03:05:10 - [TEST_STEP][PASSED] - z = z.replace(",", "."): null

10-01-2025T03:05:10 - [TEST_STEP][PASSED] - println(z): null

10-01-2025T03:05:10 - [TEST_STEP][PASSED] - x = x + "/" + z: null

10-01-2025T03:05:10 - [TEST_STEP][PASSED] - x = x.replaceAll("[\r?
|
]", ""): null

10-01-2025T03:05:10 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:10 - [TEST_STEP][PASSED] - return x: null

10-01-2025T03:05:10 - [TEST_STEP][PASSED] - println("cenB: " + cenB): null

10-01-2025T03:05:10 - [TEST_STEP][PASSED] - i = VseDZO.indexOf("Приволжье"): null

10-01-2025T03:05:10 - [TEST_STEP][PASSED] - if (i > -1): null

10-01-2025T03:05:10 - [TEST_STEP][PASSED] - dZONum = dZONum + 1: null

10-01-2025T03:05:10 - [TEST_STEP][PASSED] - cIPB = GetAllData(path, dZONum, VseDZO, x = "Россети Центр и Приволжье (ГК)/"): null

10-01-2025T03:05:10 - [TEST_STEP][PASSED] - ii = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:10 - [TEST_STEP][PASSED] - i1 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:10 - [TEST_STEP][PASSED] - z = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:10 - [TEST_STEP][PASSED] - path2 = "Значения со страницы Выполнение бизнес-плана/Table Data/": null

10-01-2025T03:05:10 - [TEST_STEP][PASSED] - println("path: " + path): null

10-01-2025T03:05:10 - [TEST_STEP][PASSED] - println("dZONum: " + dZONum): null

10-01-2025T03:05:10 - [TEST_STEP][PASSED] - z = getText(findTestObject(path + "spanPlan" + dZONum)): Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/spanPlan15' is: '7.17
|'

10-01-2025T03:05:10 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/spanPlan15' is: '7.17
|'

10-01-2025T03:05:10 - [TEST_STEP][PASSED] - println(z): null

10-01-2025T03:05:10 - [TEST_STEP][PASSED] - ii = z.indexOf("|"): null

10-01-2025T03:05:10 - [TEST_STEP][PASSED] - if (ii > -1): null

10-01-2025T03:05:10 - [TEST_STEP][PASSED] - z = z.substring(0, z.length() - 1): null

10-01-2025T03:05:10 - [TEST_STEP][PASSED] - println(z): null

10-01-2025T03:05:10 - [TEST_STEP][PASSED] - z = z.replaceAll("\s+", ""): null

10-01-2025T03:05:10 - [TEST_STEP][PASSED] - z = z.replace("[\r?
|
]", "/"): null

10-01-2025T03:05:10 - [TEST_STEP][PASSED] - println(z): null

10-01-2025T03:05:10 - [TEST_STEP][PASSED] - x = x + z: null

10-01-2025T03:05:10 - [TEST_STEP][PASSED] - z = getText(findTestObject(path + "spanFact" + dZONum)): Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/spanFact15' is: '6.90'

10-01-2025T03:05:10 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/spanFact15' is: '6.90'

10-01-2025T03:05:10 - [TEST_STEP][PASSED] - ii = z.indexOf("|"): null

10-01-2025T03:05:10 - [TEST_STEP][PASSED] - if (ii > -1): null

10-01-2025T03:05:10 - [TEST_STEP][PASSED] - x = x + "/" + z: null

10-01-2025T03:05:10 - [TEST_STEP][PASSED] - z = getText(findTestObject(path + path2 + "Факт Отпуск в сеть за отчётный период " + dZONum)).replaceAll("\s+", ""): Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Значения со страницы Выполнение бизнес-плана/Table Data/Факт Отпуск в сеть за отчётный период 15' is: '50 348 815'

10-01-2025T03:05:11 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Значения со страницы Выполнение бизнес-плана/Table Data/Факт Отпуск в сеть за отчётный период 15' is: '50 348 815'

10-01-2025T03:05:11 - [TEST_STEP][PASSED] - x = x + "/" + z: null

10-01-2025T03:05:11 - [TEST_STEP][PASSED] - z = getText(findTestObject(path + path2 + "Факт Отпуск из сети за отчётный период " + dZONum)).replaceAll("\s+", ""): Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Значения со страницы Выполнение бизнес-плана/Table Data/Факт Отпуск из сети за отчётный период 15' is: '46 874 698'

10-01-2025T03:05:11 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Значения со страницы Выполнение бизнес-плана/Table Data/Факт Отпуск из сети за отчётный период 15' is: '46 874 698'

10-01-2025T03:05:11 - [TEST_STEP][PASSED] - x = x + "/" + z: null

10-01-2025T03:05:11 - [TEST_STEP][PASSED] - z = getText(findTestObject(path + path2 + "Факт Потери за отчётный период " + dZONum)).replaceAll("\s+", ""): Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Значения со страницы Выполнение бизнес-плана/Table Data/Факт Потери за отчётный период 15' is: '3 474 117'

10-01-2025T03:05:11 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Значения со страницы Выполнение бизнес-плана/Table Data/Факт Потери за отчётный период 15' is: '3 474 117'

10-01-2025T03:05:11 - [TEST_STEP][PASSED] - x = x + "/" + z: null

10-01-2025T03:05:11 - [TEST_STEP][PASSED] - z = getText(findTestObject(path + path2 + "План Отпуск в сеть за отчётный период " + dZONum)).replaceAll("\s+", ""): Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Значения со страницы Выполнение бизнес-плана/Table Data/План Отпуск в сеть за отчётный период 15' is: '48 819 116'

10-01-2025T03:05:12 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Значения со страницы Выполнение бизнес-плана/Table Data/План Отпуск в сеть за отчётный период 15' is: '48 819 116'

10-01-2025T03:05:12 - [TEST_STEP][PASSED] - x = x + "/" + z: null

10-01-2025T03:05:12 - [TEST_STEP][PASSED] - z = getText(findTestObject(path + path2 + "План Отпуск из сети за отчётный период " + dZONum)).replaceAll("\s+", ""): Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Значения со страницы Выполнение бизнес-плана/Table Data/План Отпуск из сети за отчётный период 15' is: '45 313 619'

10-01-2025T03:05:12 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Значения со страницы Выполнение бизнес-плана/Table Data/План Отпуск из сети за отчётный период 15' is: '45 313 619'

10-01-2025T03:05:12 - [TEST_STEP][PASSED] - x = x + "/" + z: null

10-01-2025T03:05:12 - [TEST_STEP][PASSED] - z = getText(findTestObject(path + path2 + "План Потери за отчётный период " + dZONum)).replaceAll("\s+", ""): Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Значения со страницы Выполнение бизнес-плана/Table Data/План Потери за отчётный период 15' is: '3 505 497'

10-01-2025T03:05:12 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Значения со страницы Выполнение бизнес-плана/Table Data/План Потери за отчётный период 15' is: '3 505 497'

10-01-2025T03:05:12 - [TEST_STEP][PASSED] - x = x + "/" + z: null

10-01-2025T03:05:12 - [TEST_STEP][PASSED] - z = getText(findTestObject(path + "Список ДЗО")).replaceAll("[\r?
|
]", "/"): Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Список ДЗО' is: '-0.22
-0.07
3.10
-0.38
-0.73
-0.02
0.19
3.73
-0.43
-0.05
-0.03
0.16
-0.17
-0.52
-0.27
-0.49
-0.02
Россети ФСКЕЭС
АО«Тываэнерго»
АО«Чеченэнерго»
РоссетиВолга
РоссетиКубань
РоссетиЛенэнерго(ГК)
РоссетиМосковскийрегион
РоссетиСеверныйКавказ
РоссетиСеверо-Запад
РоссетиСибирь
РоссетиТомск
РоссетиТюмень
Россети Урал(ГК)
РоссетиЦентр (ГК)
РоссетиЦентр иПриволжье(ГК)
Россети Юг(ГК)
РоссетиЯнтарь
-2
0
2
4
6
8'

10-01-2025T03:05:13 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Список ДЗО' is: '-0.22
-0.07
3.10
-0.38
-0.73
-0.02
0.19
3.73
-0.43
-0.05
-0.03
0.16
-0.17
-0.52
-0.27
-0.49
-0.02
Россети ФСКЕЭС
АО«Тываэнерго»
АО«Чеченэнерго»
РоссетиВолга
РоссетиКубань
РоссетиЛенэнерго(ГК)
РоссетиМосковскийрегион
РоссетиСеверныйКавказ
РоссетиСеверо-Запад
РоссетиСибирь
РоссетиТомск
РоссетиТюмень
Россети Урал(ГК)
РоссетиЦентр (ГК)
РоссетиЦентр иПриволжье(ГК)
Россети Юг(ГК)
РоссетиЯнтарь
-2
0
2
4
6
8'

10-01-2025T03:05:13 - [TEST_STEP][PASSED] - for ([ii = 1, ii < dZONum, (ii++)]): null

10-01-2025T03:05:13 - [TEST_STEP][PASSED] - i1 = z.indexOf("/") + 1: null

10-01-2025T03:05:13 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:13 - [TEST_STEP][PASSED] - z = z.substring(i1, z.length()): null

10-01-2025T03:05:13 - [TEST_STEP][PASSED] - i1 = z.indexOf("/"): null

10-01-2025T03:05:13 - [TEST_STEP][PASSED] - i1 = z.indexOf("/") + 1: null

10-01-2025T03:05:13 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:13 - [TEST_STEP][PASSED] - z = z.substring(i1, z.length()): null

10-01-2025T03:05:13 - [TEST_STEP][PASSED] - i1 = z.indexOf("/"): null

10-01-2025T03:05:13 - [TEST_STEP][PASSED] - i1 = z.indexOf("/") + 1: null

10-01-2025T03:05:13 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:13 - [TEST_STEP][PASSED] - z = z.substring(i1, z.length()): null

10-01-2025T03:05:13 - [TEST_STEP][PASSED] - i1 = z.indexOf("/"): null

10-01-2025T03:05:13 - [TEST_STEP][PASSED] - i1 = z.indexOf("/") + 1: null

10-01-2025T03:05:13 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:13 - [TEST_STEP][PASSED] - z = z.substring(i1, z.length()): null

10-01-2025T03:05:13 - [TEST_STEP][PASSED] - i1 = z.indexOf("/"): null

10-01-2025T03:05:13 - [TEST_STEP][PASSED] - i1 = z.indexOf("/") + 1: null

10-01-2025T03:05:13 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:13 - [TEST_STEP][PASSED] - z = z.substring(i1, z.length()): null

10-01-2025T03:05:13 - [TEST_STEP][PASSED] - i1 = z.indexOf("/"): null

10-01-2025T03:05:13 - [TEST_STEP][PASSED] - i1 = z.indexOf("/") + 1: null

10-01-2025T03:05:13 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:13 - [TEST_STEP][PASSED] - z = z.substring(i1, z.length()): null

10-01-2025T03:05:13 - [TEST_STEP][PASSED] - i1 = z.indexOf("/"): null

10-01-2025T03:05:13 - [TEST_STEP][PASSED] - i1 = z.indexOf("/") + 1: null

10-01-2025T03:05:13 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:13 - [TEST_STEP][PASSED] - z = z.substring(i1, z.length()): null

10-01-2025T03:05:13 - [TEST_STEP][PASSED] - i1 = z.indexOf("/"): null

10-01-2025T03:05:13 - [TEST_STEP][PASSED] - i1 = z.indexOf("/") + 1: null

10-01-2025T03:05:13 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:13 - [TEST_STEP][PASSED] - z = z.substring(i1, z.length()): null

10-01-2025T03:05:13 - [TEST_STEP][PASSED] - i1 = z.indexOf("/"): null

10-01-2025T03:05:13 - [TEST_STEP][PASSED] - i1 = z.indexOf("/") + 1: null

10-01-2025T03:05:13 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:13 - [TEST_STEP][PASSED] - z = z.substring(i1, z.length()): null

10-01-2025T03:05:13 - [TEST_STEP][PASSED] - i1 = z.indexOf("/"): null

10-01-2025T03:05:13 - [TEST_STEP][PASSED] - i1 = z.indexOf("/") + 1: null

10-01-2025T03:05:13 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:13 - [TEST_STEP][PASSED] - z = z.substring(i1, z.length()): null

10-01-2025T03:05:13 - [TEST_STEP][PASSED] - i1 = z.indexOf("/"): null

10-01-2025T03:05:13 - [TEST_STEP][PASSED] - i1 = z.indexOf("/") + 1: null

10-01-2025T03:05:13 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:13 - [TEST_STEP][PASSED] - z = z.substring(i1, z.length()): null

10-01-2025T03:05:13 - [TEST_STEP][PASSED] - i1 = z.indexOf("/"): null

10-01-2025T03:05:13 - [TEST_STEP][PASSED] - i1 = z.indexOf("/") + 1: null

10-01-2025T03:05:13 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:13 - [TEST_STEP][PASSED] - z = z.substring(i1, z.length()): null

10-01-2025T03:05:13 - [TEST_STEP][PASSED] - i1 = z.indexOf("/"): null

10-01-2025T03:05:13 - [TEST_STEP][PASSED] - i1 = z.indexOf("/") + 1: null

10-01-2025T03:05:13 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:13 - [TEST_STEP][PASSED] - z = z.substring(i1, z.length()): null

10-01-2025T03:05:13 - [TEST_STEP][PASSED] - i1 = z.indexOf("/"): null

10-01-2025T03:05:13 - [TEST_STEP][PASSED] - i1 = z.indexOf("/") + 1: null

10-01-2025T03:05:13 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:13 - [TEST_STEP][PASSED] - z = z.substring(i1, z.length()): null

10-01-2025T03:05:13 - [TEST_STEP][PASSED] - i1 = z.indexOf("/"): null

10-01-2025T03:05:13 - [TEST_STEP][PASSED] - i1 = z.indexOf("/"): null

10-01-2025T03:05:13 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:13 - [TEST_STEP][PASSED] - z = z.substring(0, i1): null

10-01-2025T03:05:13 - [TEST_STEP][PASSED] - z = z.replace(",", "."): null

10-01-2025T03:05:13 - [TEST_STEP][PASSED] - println(z): null

10-01-2025T03:05:13 - [TEST_STEP][PASSED] - x = x + "/" + z: null

10-01-2025T03:05:13 - [TEST_STEP][PASSED] - x = x.replaceAll("[\r?
|
]", ""): null

10-01-2025T03:05:13 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:13 - [TEST_STEP][PASSED] - return x: null

10-01-2025T03:05:13 - [TEST_STEP][PASSED] - println("cIPB: " + cIPB): null

10-01-2025T03:05:13 - [TEST_STEP][PASSED] - i = VseDZO.indexOf("Юг"): null

10-01-2025T03:05:13 - [TEST_STEP][PASSED] - if (i > -1): null

10-01-2025T03:05:13 - [TEST_STEP][PASSED] - dZONum = dZONum + 1: null

10-01-2025T03:05:13 - [TEST_STEP][PASSED] - ugB = GetAllData(path, dZONum, VseDZO, x = "Россети Юг (ГК)/"): null

10-01-2025T03:05:13 - [TEST_STEP][PASSED] - ii = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:13 - [TEST_STEP][PASSED] - i1 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:13 - [TEST_STEP][PASSED] - z = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:13 - [TEST_STEP][PASSED] - path2 = "Значения со страницы Выполнение бизнес-плана/Table Data/": null

10-01-2025T03:05:13 - [TEST_STEP][PASSED] - println("path: " + path): null

10-01-2025T03:05:13 - [TEST_STEP][PASSED] - println("dZONum: " + dZONum): null

10-01-2025T03:05:13 - [TEST_STEP][PASSED] - z = getText(findTestObject(path + "spanPlan" + dZONum)): Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/spanPlan16' is: '9.21
|'

10-01-2025T03:05:13 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/spanPlan16' is: '9.21
|'

10-01-2025T03:05:13 - [TEST_STEP][PASSED] - println(z): null

10-01-2025T03:05:13 - [TEST_STEP][PASSED] - ii = z.indexOf("|"): null

10-01-2025T03:05:13 - [TEST_STEP][PASSED] - if (ii > -1): null

10-01-2025T03:05:13 - [TEST_STEP][PASSED] - z = z.substring(0, z.length() - 1): null

10-01-2025T03:05:13 - [TEST_STEP][PASSED] - println(z): null

10-01-2025T03:05:13 - [TEST_STEP][PASSED] - z = z.replaceAll("\s+", ""): null

10-01-2025T03:05:13 - [TEST_STEP][PASSED] - z = z.replace("[\r?
|
]", "/"): null

10-01-2025T03:05:13 - [TEST_STEP][PASSED] - println(z): null

10-01-2025T03:05:13 - [TEST_STEP][PASSED] - x = x + z: null

10-01-2025T03:05:13 - [TEST_STEP][PASSED] - z = getText(findTestObject(path + "spanFact" + dZONum)): Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/spanFact16' is: '8.73'

10-01-2025T03:05:13 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/spanFact16' is: '8.73'

10-01-2025T03:05:13 - [TEST_STEP][PASSED] - ii = z.indexOf("|"): null

10-01-2025T03:05:13 - [TEST_STEP][PASSED] - if (ii > -1): null

10-01-2025T03:05:13 - [TEST_STEP][PASSED] - x = x + "/" + z: null

10-01-2025T03:05:13 - [TEST_STEP][PASSED] - z = getText(findTestObject(path + path2 + "Факт Отпуск в сеть за отчётный период " + dZONum)).replaceAll("\s+", ""): Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Значения со страницы Выполнение бизнес-плана/Table Data/Факт Отпуск в сеть за отчётный период 16' is: '27 351 234'

10-01-2025T03:05:14 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Значения со страницы Выполнение бизнес-плана/Table Data/Факт Отпуск в сеть за отчётный период 16' is: '27 351 234'

10-01-2025T03:05:14 - [TEST_STEP][PASSED] - x = x + "/" + z: null

10-01-2025T03:05:14 - [TEST_STEP][PASSED] - z = getText(findTestObject(path + path2 + "Факт Отпуск из сети за отчётный период " + dZONum)).replaceAll("\s+", ""): Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Значения со страницы Выполнение бизнес-плана/Table Data/Факт Отпуск из сети за отчётный период 16' is: '24 964 441'

10-01-2025T03:05:14 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Значения со страницы Выполнение бизнес-плана/Table Data/Факт Отпуск из сети за отчётный период 16' is: '24 964 441'

10-01-2025T03:05:14 - [TEST_STEP][PASSED] - x = x + "/" + z: null

10-01-2025T03:05:14 - [TEST_STEP][PASSED] - z = getText(findTestObject(path + path2 + "Факт Потери за отчётный период " + dZONum)).replaceAll("\s+", ""): Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Значения со страницы Выполнение бизнес-плана/Table Data/Факт Потери за отчётный период 16' is: '2 386 793'

10-01-2025T03:05:14 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Значения со страницы Выполнение бизнес-плана/Table Data/Факт Потери за отчётный период 16' is: '2 386 793'

10-01-2025T03:05:14 - [TEST_STEP][PASSED] - x = x + "/" + z: null

10-01-2025T03:05:14 - [TEST_STEP][PASSED] - z = getText(findTestObject(path + path2 + "План Отпуск в сеть за отчётный период " + dZONum)).replaceAll("\s+", ""): Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Значения со страницы Выполнение бизнес-плана/Table Data/План Отпуск в сеть за отчётный период 16' is: '27 838 881'

10-01-2025T03:05:14 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Значения со страницы Выполнение бизнес-плана/Table Data/План Отпуск в сеть за отчётный период 16' is: '27 838 881'

10-01-2025T03:05:14 - [TEST_STEP][PASSED] - x = x + "/" + z: null

10-01-2025T03:05:14 - [TEST_STEP][PASSED] - z = getText(findTestObject(path + path2 + "План Отпуск из сети за отчётный период " + dZONum)).replaceAll("\s+", ""): Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Значения со страницы Выполнение бизнес-плана/Table Data/План Отпуск из сети за отчётный период 16' is: '25 273 744'

10-01-2025T03:05:15 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Значения со страницы Выполнение бизнес-плана/Table Data/План Отпуск из сети за отчётный период 16' is: '25 273 744'

10-01-2025T03:05:15 - [TEST_STEP][PASSED] - x = x + "/" + z: null

10-01-2025T03:05:15 - [TEST_STEP][PASSED] - z = getText(findTestObject(path + path2 + "План Потери за отчётный период " + dZONum)).replaceAll("\s+", ""): Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Значения со страницы Выполнение бизнес-плана/Table Data/План Потери за отчётный период 16' is: '2 565 137'

10-01-2025T03:05:15 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Значения со страницы Выполнение бизнес-плана/Table Data/План Потери за отчётный период 16' is: '2 565 137'

10-01-2025T03:05:15 - [TEST_STEP][PASSED] - x = x + "/" + z: null

10-01-2025T03:05:15 - [TEST_STEP][PASSED] - z = getText(findTestObject(path + "Список ДЗО")).replaceAll("[\r?
|
]", "/"): Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Список ДЗО' is: '-0.22
-0.07
3.10
-0.38
-0.73
-0.02
0.19
3.73
-0.43
-0.05
-0.03
0.16
-0.17
-0.52
-0.27
-0.49
-0.02
Россети ФСКЕЭС
АО«Тываэнерго»
АО«Чеченэнерго»
РоссетиВолга
РоссетиКубань
РоссетиЛенэнерго(ГК)
РоссетиМосковскийрегион
РоссетиСеверныйКавказ
РоссетиСеверо-Запад
РоссетиСибирь
РоссетиТомск
РоссетиТюмень
Россети Урал(ГК)
РоссетиЦентр (ГК)
РоссетиЦентр иПриволжье(ГК)
Россети Юг(ГК)
РоссетиЯнтарь
-2
0
2
4
6
8'

10-01-2025T03:05:15 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Список ДЗО' is: '-0.22
-0.07
3.10
-0.38
-0.73
-0.02
0.19
3.73
-0.43
-0.05
-0.03
0.16
-0.17
-0.52
-0.27
-0.49
-0.02
Россети ФСКЕЭС
АО«Тываэнерго»
АО«Чеченэнерго»
РоссетиВолга
РоссетиКубань
РоссетиЛенэнерго(ГК)
РоссетиМосковскийрегион
РоссетиСеверныйКавказ
РоссетиСеверо-Запад
РоссетиСибирь
РоссетиТомск
РоссетиТюмень
Россети Урал(ГК)
РоссетиЦентр (ГК)
РоссетиЦентр иПриволжье(ГК)
Россети Юг(ГК)
РоссетиЯнтарь
-2
0
2
4
6
8'

10-01-2025T03:05:15 - [TEST_STEP][PASSED] - for ([ii = 1, ii < dZONum, (ii++)]): null

10-01-2025T03:05:15 - [TEST_STEP][PASSED] - i1 = z.indexOf("/") + 1: null

10-01-2025T03:05:15 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:15 - [TEST_STEP][PASSED] - z = z.substring(i1, z.length()): null

10-01-2025T03:05:15 - [TEST_STEP][PASSED] - i1 = z.indexOf("/"): null

10-01-2025T03:05:15 - [TEST_STEP][PASSED] - i1 = z.indexOf("/") + 1: null

10-01-2025T03:05:15 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:15 - [TEST_STEP][PASSED] - z = z.substring(i1, z.length()): null

10-01-2025T03:05:15 - [TEST_STEP][PASSED] - i1 = z.indexOf("/"): null

10-01-2025T03:05:15 - [TEST_STEP][PASSED] - i1 = z.indexOf("/") + 1: null

10-01-2025T03:05:15 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:15 - [TEST_STEP][PASSED] - z = z.substring(i1, z.length()): null

10-01-2025T03:05:15 - [TEST_STEP][PASSED] - i1 = z.indexOf("/"): null

10-01-2025T03:05:15 - [TEST_STEP][PASSED] - i1 = z.indexOf("/") + 1: null

10-01-2025T03:05:15 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:15 - [TEST_STEP][PASSED] - z = z.substring(i1, z.length()): null

10-01-2025T03:05:15 - [TEST_STEP][PASSED] - i1 = z.indexOf("/"): null

10-01-2025T03:05:15 - [TEST_STEP][PASSED] - i1 = z.indexOf("/") + 1: null

10-01-2025T03:05:15 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:15 - [TEST_STEP][PASSED] - z = z.substring(i1, z.length()): null

10-01-2025T03:05:15 - [TEST_STEP][PASSED] - i1 = z.indexOf("/"): null

10-01-2025T03:05:15 - [TEST_STEP][PASSED] - i1 = z.indexOf("/") + 1: null

10-01-2025T03:05:15 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:15 - [TEST_STEP][PASSED] - z = z.substring(i1, z.length()): null

10-01-2025T03:05:15 - [TEST_STEP][PASSED] - i1 = z.indexOf("/"): null

10-01-2025T03:05:15 - [TEST_STEP][PASSED] - i1 = z.indexOf("/") + 1: null

10-01-2025T03:05:15 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:15 - [TEST_STEP][PASSED] - z = z.substring(i1, z.length()): null

10-01-2025T03:05:15 - [TEST_STEP][PASSED] - i1 = z.indexOf("/"): null

10-01-2025T03:05:15 - [TEST_STEP][PASSED] - i1 = z.indexOf("/") + 1: null

10-01-2025T03:05:15 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:15 - [TEST_STEP][PASSED] - z = z.substring(i1, z.length()): null

10-01-2025T03:05:15 - [TEST_STEP][PASSED] - i1 = z.indexOf("/"): null

10-01-2025T03:05:15 - [TEST_STEP][PASSED] - i1 = z.indexOf("/") + 1: null

10-01-2025T03:05:15 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:15 - [TEST_STEP][PASSED] - z = z.substring(i1, z.length()): null

10-01-2025T03:05:15 - [TEST_STEP][PASSED] - i1 = z.indexOf("/"): null

10-01-2025T03:05:15 - [TEST_STEP][PASSED] - i1 = z.indexOf("/") + 1: null

10-01-2025T03:05:15 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:15 - [TEST_STEP][PASSED] - z = z.substring(i1, z.length()): null

10-01-2025T03:05:15 - [TEST_STEP][PASSED] - i1 = z.indexOf("/"): null

10-01-2025T03:05:15 - [TEST_STEP][PASSED] - i1 = z.indexOf("/") + 1: null

10-01-2025T03:05:15 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:15 - [TEST_STEP][PASSED] - z = z.substring(i1, z.length()): null

10-01-2025T03:05:15 - [TEST_STEP][PASSED] - i1 = z.indexOf("/"): null

10-01-2025T03:05:15 - [TEST_STEP][PASSED] - i1 = z.indexOf("/") + 1: null

10-01-2025T03:05:15 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:15 - [TEST_STEP][PASSED] - z = z.substring(i1, z.length()): null

10-01-2025T03:05:15 - [TEST_STEP][PASSED] - i1 = z.indexOf("/"): null

10-01-2025T03:05:15 - [TEST_STEP][PASSED] - i1 = z.indexOf("/") + 1: null

10-01-2025T03:05:15 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:15 - [TEST_STEP][PASSED] - z = z.substring(i1, z.length()): null

10-01-2025T03:05:15 - [TEST_STEP][PASSED] - i1 = z.indexOf("/"): null

10-01-2025T03:05:15 - [TEST_STEP][PASSED] - i1 = z.indexOf("/") + 1: null

10-01-2025T03:05:15 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:15 - [TEST_STEP][PASSED] - z = z.substring(i1, z.length()): null

10-01-2025T03:05:15 - [TEST_STEP][PASSED] - i1 = z.indexOf("/"): null

10-01-2025T03:05:15 - [TEST_STEP][PASSED] - i1 = z.indexOf("/") + 1: null

10-01-2025T03:05:15 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:15 - [TEST_STEP][PASSED] - z = z.substring(i1, z.length()): null

10-01-2025T03:05:15 - [TEST_STEP][PASSED] - i1 = z.indexOf("/"): null

10-01-2025T03:05:15 - [TEST_STEP][PASSED] - i1 = z.indexOf("/"): null

10-01-2025T03:05:15 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:15 - [TEST_STEP][PASSED] - z = z.substring(0, i1): null

10-01-2025T03:05:15 - [TEST_STEP][PASSED] - z = z.replace(",", "."): null

10-01-2025T03:05:15 - [TEST_STEP][PASSED] - println(z): null

10-01-2025T03:05:15 - [TEST_STEP][PASSED] - x = x + "/" + z: null

10-01-2025T03:05:15 - [TEST_STEP][PASSED] - x = x.replaceAll("[\r?
|
]", ""): null

10-01-2025T03:05:15 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:15 - [TEST_STEP][PASSED] - return x: null

10-01-2025T03:05:15 - [TEST_STEP][PASSED] - println("ugB: " + ugB): null

10-01-2025T03:05:15 - [TEST_STEP][PASSED] - i = VseDZO.indexOf("Янтарь"): null

10-01-2025T03:05:15 - [TEST_STEP][PASSED] - if (i > -1): null

10-01-2025T03:05:15 - [TEST_STEP][PASSED] - dZONum = dZONum + 1: null

10-01-2025T03:05:15 - [TEST_STEP][PASSED] - yB = GetAllData(path, dZONum, VseDZO, x = "Россети Янтарь/"): null

10-01-2025T03:05:15 - [TEST_STEP][PASSED] - ii = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:15 - [TEST_STEP][PASSED] - i1 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:15 - [TEST_STEP][PASSED] - z = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:15 - [TEST_STEP][PASSED] - path2 = "Значения со страницы Выполнение бизнес-плана/Table Data/": null

10-01-2025T03:05:15 - [TEST_STEP][PASSED] - println("path: " + path): null

10-01-2025T03:05:15 - [TEST_STEP][PASSED] - println("dZONum: " + dZONum): null

10-01-2025T03:05:15 - [TEST_STEP][PASSED] - z = getText(findTestObject(path + "spanPlan" + dZONum)): Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/spanPlan17' is: '9.02
|'

10-01-2025T03:05:16 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/spanPlan17' is: '9.02
|'

10-01-2025T03:05:16 - [TEST_STEP][PASSED] - println(z): null

10-01-2025T03:05:16 - [TEST_STEP][PASSED] - ii = z.indexOf("|"): null

10-01-2025T03:05:16 - [TEST_STEP][PASSED] - if (ii > -1): null

10-01-2025T03:05:16 - [TEST_STEP][PASSED] - z = z.substring(0, z.length() - 1): null

10-01-2025T03:05:16 - [TEST_STEP][PASSED] - println(z): null

10-01-2025T03:05:16 - [TEST_STEP][PASSED] - z = z.replaceAll("\s+", ""): null

10-01-2025T03:05:16 - [TEST_STEP][PASSED] - z = z.replace("[\r?
|
]", "/"): null

10-01-2025T03:05:16 - [TEST_STEP][PASSED] - println(z): null

10-01-2025T03:05:16 - [TEST_STEP][PASSED] - x = x + z: null

10-01-2025T03:05:16 - [TEST_STEP][PASSED] - z = getText(findTestObject(path + "spanFact" + dZONum)): Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/spanFact17' is: '9.00'

10-01-2025T03:05:16 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/spanFact17' is: '9.00'

10-01-2025T03:05:16 - [TEST_STEP][PASSED] - ii = z.indexOf("|"): null

10-01-2025T03:05:16 - [TEST_STEP][PASSED] - if (ii > -1): null

10-01-2025T03:05:16 - [TEST_STEP][PASSED] - x = x + "/" + z: null

10-01-2025T03:05:16 - [TEST_STEP][PASSED] - z = getText(findTestObject(path + path2 + "Факт Отпуск в сеть за отчётный период " + dZONum)).replaceAll("\s+", ""): Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Значения со страницы Выполнение бизнес-плана/Table Data/Факт Отпуск в сеть за отчётный период 17' is: '4 181 934'

10-01-2025T03:05:16 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Значения со страницы Выполнение бизнес-плана/Table Data/Факт Отпуск в сеть за отчётный период 17' is: '4 181 934'

10-01-2025T03:05:16 - [TEST_STEP][PASSED] - x = x + "/" + z: null

10-01-2025T03:05:16 - [TEST_STEP][PASSED] - z = getText(findTestObject(path + path2 + "Факт Отпуск из сети за отчётный период " + dZONum)).replaceAll("\s+", ""): Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Значения со страницы Выполнение бизнес-плана/Table Data/Факт Отпуск из сети за отчётный период 17' is: '3 807 771'

10-01-2025T03:05:17 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Значения со страницы Выполнение бизнес-плана/Table Data/Факт Отпуск из сети за отчётный период 17' is: '3 807 771'

10-01-2025T03:05:17 - [TEST_STEP][PASSED] - x = x + "/" + z: null

10-01-2025T03:05:17 - [TEST_STEP][PASSED] - z = getText(findTestObject(path + path2 + "Факт Потери за отчётный период " + dZONum)).replaceAll("\s+", ""): Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Значения со страницы Выполнение бизнес-плана/Table Data/Факт Потери за отчётный период 17' is: '376 375'

10-01-2025T03:05:17 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Значения со страницы Выполнение бизнес-плана/Table Data/Факт Потери за отчётный период 17' is: '376 375'

10-01-2025T03:05:17 - [TEST_STEP][PASSED] - x = x + "/" + z: null

10-01-2025T03:05:17 - [TEST_STEP][PASSED] - z = getText(findTestObject(path + path2 + "План Отпуск в сеть за отчётный период " + dZONum)).replaceAll("\s+", ""): Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Значения со страницы Выполнение бизнес-плана/Table Data/План Отпуск в сеть за отчётный период 17' is: '4 004 237'

10-01-2025T03:05:17 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Значения со страницы Выполнение бизнес-плана/Table Data/План Отпуск в сеть за отчётный период 17' is: '4 004 237'

10-01-2025T03:05:17 - [TEST_STEP][PASSED] - x = x + "/" + z: null

10-01-2025T03:05:17 - [TEST_STEP][PASSED] - z = getText(findTestObject(path + path2 + "План Отпуск из сети за отчётный период " + dZONum)).replaceAll("\s+", ""): Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Значения со страницы Выполнение бизнес-плана/Table Data/План Отпуск из сети за отчётный период 17' is: '3 643 254'

10-01-2025T03:05:18 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Значения со страницы Выполнение бизнес-плана/Table Data/План Отпуск из сети за отчётный период 17' is: '3 643 254'

10-01-2025T03:05:18 - [TEST_STEP][PASSED] - x = x + "/" + z: null

10-01-2025T03:05:18 - [TEST_STEP][PASSED] - z = getText(findTestObject(path + path2 + "План Потери за отчётный период " + dZONum)).replaceAll("\s+", ""): Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Значения со страницы Выполнение бизнес-плана/Table Data/План Потери за отчётный период 17' is: '360 983'

10-01-2025T03:05:18 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Значения со страницы Выполнение бизнес-плана/Table Data/План Потери за отчётный период 17' is: '360 983'

10-01-2025T03:05:18 - [TEST_STEP][PASSED] - x = x + "/" + z: null

10-01-2025T03:05:18 - [TEST_STEP][PASSED] - z = getText(findTestObject(path + "Список ДЗО")).replaceAll("[\r?
|
]", "/"): Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Список ДЗО' is: '-0.22
-0.07
3.10
-0.38
-0.73
-0.02
0.19
3.73
-0.43
-0.05
-0.03
0.16
-0.17
-0.52
-0.27
-0.49
-0.02
Россети ФСКЕЭС
АО«Тываэнерго»
АО«Чеченэнерго»
РоссетиВолга
РоссетиКубань
РоссетиЛенэнерго(ГК)
РоссетиМосковскийрегион
РоссетиСеверныйКавказ
РоссетиСеверо-Запад
РоссетиСибирь
РоссетиТомск
РоссетиТюмень
Россети Урал(ГК)
РоссетиЦентр (ГК)
РоссетиЦентр иПриволжье(ГК)
Россети Юг(ГК)
РоссетиЯнтарь
-2
0
2
4
6
8'

10-01-2025T03:05:18 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Список ДЗО' is: '-0.22
-0.07
3.10
-0.38
-0.73
-0.02
0.19
3.73
-0.43
-0.05
-0.03
0.16
-0.17
-0.52
-0.27
-0.49
-0.02
Россети ФСКЕЭС
АО«Тываэнерго»
АО«Чеченэнерго»
РоссетиВолга
РоссетиКубань
РоссетиЛенэнерго(ГК)
РоссетиМосковскийрегион
РоссетиСеверныйКавказ
РоссетиСеверо-Запад
РоссетиСибирь
РоссетиТомск
РоссетиТюмень
Россети Урал(ГК)
РоссетиЦентр (ГК)
РоссетиЦентр иПриволжье(ГК)
Россети Юг(ГК)
РоссетиЯнтарь
-2
0
2
4
6
8'

10-01-2025T03:05:18 - [TEST_STEP][PASSED] - for ([ii = 1, ii < dZONum, (ii++)]): null

10-01-2025T03:05:18 - [TEST_STEP][PASSED] - i1 = z.indexOf("/") + 1: null

10-01-2025T03:05:18 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:18 - [TEST_STEP][PASSED] - z = z.substring(i1, z.length()): null

10-01-2025T03:05:18 - [TEST_STEP][PASSED] - i1 = z.indexOf("/"): null

10-01-2025T03:05:18 - [TEST_STEP][PASSED] - i1 = z.indexOf("/") + 1: null

10-01-2025T03:05:18 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:18 - [TEST_STEP][PASSED] - z = z.substring(i1, z.length()): null

10-01-2025T03:05:18 - [TEST_STEP][PASSED] - i1 = z.indexOf("/"): null

10-01-2025T03:05:18 - [TEST_STEP][PASSED] - i1 = z.indexOf("/") + 1: null

10-01-2025T03:05:18 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:18 - [TEST_STEP][PASSED] - z = z.substring(i1, z.length()): null

10-01-2025T03:05:18 - [TEST_STEP][PASSED] - i1 = z.indexOf("/"): null

10-01-2025T03:05:18 - [TEST_STEP][PASSED] - i1 = z.indexOf("/") + 1: null

10-01-2025T03:05:18 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:18 - [TEST_STEP][PASSED] - z = z.substring(i1, z.length()): null

10-01-2025T03:05:18 - [TEST_STEP][PASSED] - i1 = z.indexOf("/"): null

10-01-2025T03:05:18 - [TEST_STEP][PASSED] - i1 = z.indexOf("/") + 1: null

10-01-2025T03:05:18 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:18 - [TEST_STEP][PASSED] - z = z.substring(i1, z.length()): null

10-01-2025T03:05:18 - [TEST_STEP][PASSED] - i1 = z.indexOf("/"): null

10-01-2025T03:05:18 - [TEST_STEP][PASSED] - i1 = z.indexOf("/") + 1: null

10-01-2025T03:05:18 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:18 - [TEST_STEP][PASSED] - z = z.substring(i1, z.length()): null

10-01-2025T03:05:18 - [TEST_STEP][PASSED] - i1 = z.indexOf("/"): null

10-01-2025T03:05:18 - [TEST_STEP][PASSED] - i1 = z.indexOf("/") + 1: null

10-01-2025T03:05:18 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:18 - [TEST_STEP][PASSED] - z = z.substring(i1, z.length()): null

10-01-2025T03:05:18 - [TEST_STEP][PASSED] - i1 = z.indexOf("/"): null

10-01-2025T03:05:18 - [TEST_STEP][PASSED] - i1 = z.indexOf("/") + 1: null

10-01-2025T03:05:18 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:18 - [TEST_STEP][PASSED] - z = z.substring(i1, z.length()): null

10-01-2025T03:05:18 - [TEST_STEP][PASSED] - i1 = z.indexOf("/"): null

10-01-2025T03:05:18 - [TEST_STEP][PASSED] - i1 = z.indexOf("/") + 1: null

10-01-2025T03:05:18 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:18 - [TEST_STEP][PASSED] - z = z.substring(i1, z.length()): null

10-01-2025T03:05:18 - [TEST_STEP][PASSED] - i1 = z.indexOf("/"): null

10-01-2025T03:05:18 - [TEST_STEP][PASSED] - i1 = z.indexOf("/") + 1: null

10-01-2025T03:05:18 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:18 - [TEST_STEP][PASSED] - z = z.substring(i1, z.length()): null

10-01-2025T03:05:18 - [TEST_STEP][PASSED] - i1 = z.indexOf("/"): null

10-01-2025T03:05:18 - [TEST_STEP][PASSED] - i1 = z.indexOf("/") + 1: null

10-01-2025T03:05:18 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:18 - [TEST_STEP][PASSED] - z = z.substring(i1, z.length()): null

10-01-2025T03:05:18 - [TEST_STEP][PASSED] - i1 = z.indexOf("/"): null

10-01-2025T03:05:18 - [TEST_STEP][PASSED] - i1 = z.indexOf("/") + 1: null

10-01-2025T03:05:18 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:18 - [TEST_STEP][PASSED] - z = z.substring(i1, z.length()): null

10-01-2025T03:05:18 - [TEST_STEP][PASSED] - i1 = z.indexOf("/"): null

10-01-2025T03:05:18 - [TEST_STEP][PASSED] - i1 = z.indexOf("/") + 1: null

10-01-2025T03:05:18 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:18 - [TEST_STEP][PASSED] - z = z.substring(i1, z.length()): null

10-01-2025T03:05:18 - [TEST_STEP][PASSED] - i1 = z.indexOf("/"): null

10-01-2025T03:05:18 - [TEST_STEP][PASSED] - i1 = z.indexOf("/") + 1: null

10-01-2025T03:05:18 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:18 - [TEST_STEP][PASSED] - z = z.substring(i1, z.length()): null

10-01-2025T03:05:18 - [TEST_STEP][PASSED] - i1 = z.indexOf("/"): null

10-01-2025T03:05:18 - [TEST_STEP][PASSED] - i1 = z.indexOf("/") + 1: null

10-01-2025T03:05:18 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:18 - [TEST_STEP][PASSED] - z = z.substring(i1, z.length()): null

10-01-2025T03:05:18 - [TEST_STEP][PASSED] - i1 = z.indexOf("/"): null

10-01-2025T03:05:18 - [TEST_STEP][PASSED] - i1 = z.indexOf("/") + 1: null

10-01-2025T03:05:18 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:18 - [TEST_STEP][PASSED] - z = z.substring(i1, z.length()): null

10-01-2025T03:05:18 - [TEST_STEP][PASSED] - i1 = z.indexOf("/"): null

10-01-2025T03:05:18 - [TEST_STEP][PASSED] - i1 = z.indexOf("/"): null

10-01-2025T03:05:18 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:18 - [TEST_STEP][PASSED] - z = z.substring(0, i1): null

10-01-2025T03:05:18 - [TEST_STEP][PASSED] - z = z.replace(",", "."): null

10-01-2025T03:05:18 - [TEST_STEP][PASSED] - println(z): null

10-01-2025T03:05:18 - [TEST_STEP][PASSED] - x = x + "/" + z: null

10-01-2025T03:05:18 - [TEST_STEP][PASSED] - x = x.replaceAll("[\r?
|
]", ""): null

10-01-2025T03:05:18 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:18 - [TEST_STEP][PASSED] - return x: null

10-01-2025T03:05:18 - [TEST_STEP][PASSED] - println("yB: " + yB): null

10-01-2025T03:05:18 - [TEST_STEP][PASSED] - VseDZO = getText(findTestObject(path + "Список ДЗО")): Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Список ДЗО' is: '-0.22
-0.07
3.10
-0.38
-0.73
-0.02
0.19
3.73
-0.43
-0.05
-0.03
0.16
-0.17
-0.52
-0.27
-0.49
-0.02
Россети ФСКЕЭС
АО«Тываэнерго»
АО«Чеченэнерго»
РоссетиВолга
РоссетиКубань
РоссетиЛенэнерго(ГК)
РоссетиМосковскийрегион
РоссетиСеверныйКавказ
РоссетиСеверо-Запад
РоссетиСибирь
РоссетиТомск
РоссетиТюмень
Россети Урал(ГК)
РоссетиЦентр (ГК)
РоссетиЦентр иПриволжье(ГК)
Россети Юг(ГК)
РоссетиЯнтарь
-2
0
2
4
6
8'

10-01-2025T03:05:19 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Список ДЗО' is: '-0.22
-0.07
3.10
-0.38
-0.73
-0.02
0.19
3.73
-0.43
-0.05
-0.03
0.16
-0.17
-0.52
-0.27
-0.49
-0.02
Россети ФСКЕЭС
АО«Тываэнерго»
АО«Чеченэнерго»
РоссетиВолга
РоссетиКубань
РоссетиЛенэнерго(ГК)
РоссетиМосковскийрегион
РоссетиСеверныйКавказ
РоссетиСеверо-Запад
РоссетиСибирь
РоссетиТомск
РоссетиТюмень
Россети Урал(ГК)
РоссетиЦентр (ГК)
РоссетиЦентр иПриволжье(ГК)
Россети Юг(ГК)
РоссетиЯнтарь
-2
0
2
4
6
8'

10-01-2025T03:05:19 - [TEST_STEP][FAILED] - if (blockNum == 2): null

10-01-2025T03:05:19 - [TEST_STEP][FAILED] - if (verifyEqual(pRR, pRB) == false): null

10-01-2025T03:05:19 - [MESSAGE][FAILED] - Unable to verify equal between actual object 'ПАО Россети/5.56/5.52/230146370/209300970/20845400/225220588/205622267/19598321' and expected object 'ПАО Россети/5.97/8.12/564981141/519906785/45074356/1100265867/1036078304/64187564' (Root cause: com.kms.katalon.core.exception.StepFailedException: Actual object 'ПАО Россети/5.56/5.52/230146370/209300970/20845400/225220588/205622267/19598321' and expected object 'ПАО Россети/5.97/8.12/564981141/519906785/45074356/1100265867/1036078304/64187564' are not equal
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.doCall(VerifyEqualKeyword.groovy:58)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.call(VerifyEqualKeyword.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:75)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.verifyEqual(VerifyEqualKeyword.groovy:63)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.execute(VerifyEqualKeyword.groovy:44)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:74)
	at com.kms.katalon.core.keyword.BuiltinKeywords.verifyEqual(BuiltinKeywords.groovy:146)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at Выполнение бизнес-плана сверка дашбордов.run(Выполнение бизнес-плана сверка дашбордов:577)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:448)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:439)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:418)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:410)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:285)
	at com.kms.katalon.core.common.CommonExecutor.accessTestCaseMainPhase(CommonExecutor.java:65)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:150)
	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:106)
	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:180)
	at TempTestSuite1736466949911.run(TempTestSuite1736466949911.groovy:35)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
)

10-01-2025T03:05:19 - [TEST_STEP][PASSED] - result = CompareDZOData(a = pRR, b = pRB, dZO, typeOfData, PercPlanR, PercPlanB, PercFactR, PercFactB, todaysDate, x, vidget, tabR, tabB, o1R, o1B): null

10-01-2025T03:05:19 - [TEST_STEP][PASSED] - ii2 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:19 - [TEST_STEP][FAILED] - if (verifyEqual(a, b) == false): null

10-01-2025T03:05:19 - [MESSAGE][FAILED] - Unable to verify equal between actual object 'ПАО Россети/5.56/5.52/230146370/209300970/20845400/225220588/205622267/19598321' and expected object 'ПАО Россети/5.97/8.12/564981141/519906785/45074356/1100265867/1036078304/64187564' (Root cause: com.kms.katalon.core.exception.StepFailedException: Actual object 'ПАО Россети/5.56/5.52/230146370/209300970/20845400/225220588/205622267/19598321' and expected object 'ПАО Россети/5.97/8.12/564981141/519906785/45074356/1100265867/1036078304/64187564' are not equal
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.doCall(VerifyEqualKeyword.groovy:58)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.call(VerifyEqualKeyword.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:75)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.verifyEqual(VerifyEqualKeyword.groovy:63)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.execute(VerifyEqualKeyword.groovy:44)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:74)
	at com.kms.katalon.core.keyword.BuiltinKeywords.verifyEqual(BuiltinKeywords.groovy:146)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at Выполнение бизнес-плана сверка дашбордов.CompareDZOData(Выполнение бизнес-плана сверка дашбордов:673)
	at Выполнение бизнес-плана сверка дашбордов.run(Выполнение бизнес-плана сверка дашбордов:578)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:448)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:439)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:418)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:410)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:285)
	at com.kms.katalon.core.common.CommonExecutor.accessTestCaseMainPhase(CommonExecutor.java:65)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:150)
	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:106)
	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:180)
	at TempTestSuite1736466949911.run(TempTestSuite1736466949911.groovy:35)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
)

10-01-2025T03:05:19 - [TEST_STEP][PASSED] - vidget = "Уровень потерь электроэнергии": null

10-01-2025T03:05:19 - [TEST_STEP][PASSED] - typeOfData = "План": null

10-01-2025T03:05:19 - [TEST_STEP][PASSED] - PercPlanR = GetPercPlanR(x = a): null

10-01-2025T03:05:19 - [TEST_STEP][PASSED] - i1 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:19 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:19 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:19 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:19 - [TEST_STEP][PASSED] - i1 = x.indexOf("/"): null

10-01-2025T03:05:19 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:19 - [TEST_STEP][PASSED] - x = x.substring(0, i1): null

10-01-2025T03:05:19 - [TEST_STEP][PASSED] - return x: null

10-01-2025T03:05:19 - [TEST_STEP][PASSED] - PercPlanB = GetPercPlanB(x = b): null

10-01-2025T03:05:19 - [TEST_STEP][PASSED] - i1 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:19 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:19 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:19 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:19 - [TEST_STEP][PASSED] - i1 = x.indexOf("/"): null

10-01-2025T03:05:19 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:19 - [TEST_STEP][PASSED] - x = x.substring(0, i1): null

10-01-2025T03:05:19 - [TEST_STEP][FAILED] - return x: null

10-01-2025T03:05:19 - [TEST_STEP][FAILED] - if (verifyEqual(PercPlanR, PercPlanB) == false): null

10-01-2025T03:05:19 - [MESSAGE][FAILED] - Unable to verify equal between actual object '5.56' and expected object '5.97' (Root cause: com.kms.katalon.core.exception.StepFailedException: Actual object '5.56' and expected object '5.97' are not equal
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.doCall(VerifyEqualKeyword.groovy:58)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.call(VerifyEqualKeyword.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:75)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.verifyEqual(VerifyEqualKeyword.groovy:63)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.execute(VerifyEqualKeyword.groovy:44)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:74)
	at com.kms.katalon.core.keyword.BuiltinKeywords.verifyEqual(BuiltinKeywords.groovy:146)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at Выполнение бизнес-плана сверка дашбордов.CompareDZOData(Выполнение бизнес-плана сверка дашбордов:682)
	at Выполнение бизнес-плана сверка дашбордов.run(Выполнение бизнес-плана сверка дашбордов:578)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:448)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:439)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:418)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:410)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:285)
	at com.kms.katalon.core.common.CommonExecutor.accessTestCaseMainPhase(CommonExecutor.java:65)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:150)
	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:106)
	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:180)
	at TempTestSuite1736466949911.run(TempTestSuite1736466949911.groovy:35)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
)

10-01-2025T03:05:19 - [TEST_STEP][PASSED] - result = WriteToExcel(typeOfData, todaysDate, PercPlanR, PercPlanB, PercFactR, PercFactB, x, tabR, tabB, o1R, o1B, vidget): null

10-01-2025T03:05:19 - [TEST_STEP][PASSED] - iii = dZO.indexOf("/"): null

10-01-2025T03:05:19 - [TEST_STEP][PASSED] - println(iii): null

10-01-2025T03:05:19 - [TEST_STEP][PASSED] - dZO = dZO.substring(0, iii): null

10-01-2025T03:05:19 - [TEST_STEP][PASSED] - println(dZO): null

10-01-2025T03:05:19 - [TEST_STEP][PASSED] - println(PercPlanR): null

10-01-2025T03:05:19 - [TEST_STEP][PASSED] - println(PercPlanB): null

10-01-2025T03:05:19 - [TEST_STEP][PASSED] - println(PercFactR): null

10-01-2025T03:05:19 - [TEST_STEP][PASSED] - println(PercFactB): null

10-01-2025T03:05:19 - [TEST_STEP][PASSED] - println(tabR): null

10-01-2025T03:05:19 - [TEST_STEP][PASSED] - println(tabB): null

10-01-2025T03:05:19 - [TEST_STEP][PASSED] - println(o1R): null

10-01-2025T03:05:19 - [TEST_STEP][PASSED] - println(o1B): null

10-01-2025T03:05:19 - [TEST_STEP][PASSED] - PR = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:19 - [TEST_STEP][PASSED] - FR = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:19 - [TEST_STEP][PASSED] - PB = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:19 - [TEST_STEP][PASSED] - FB = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:19 - [TEST_STEP][PASSED] - TR = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:19 - [TEST_STEP][PASSED] - TB = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:19 - [TEST_STEP][PASSED] - sheetName = "Sheet1": null

10-01-2025T03:05:19 - [TEST_STEP][PASSED] - data = findTestData("PlanFact"): null

10-01-2025T03:05:19 - [TEST_STEP][PASSED] - n = data.getRowNumbers() + 1: null

10-01-2025T03:05:19 - [TEST_STEP][PASSED] - year = todaysDate.substring(todaysDate.length() - 4, todaysDate.length()): null

10-01-2025T03:05:19 - [TEST_STEP][PASSED] - y = year.toInteger(): null

10-01-2025T03:05:19 - [TEST_STEP][PASSED] - m = getText(findTestObject("Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Фильтр Дата")): Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Фильтр Дата' is: '1, 2, 3 кв., Октябрь, Ноябрь 2024 года'

10-01-2025T03:05:19 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Фильтр Дата' is: '1, 2, 3 кв., Октябрь, Ноябрь 2024 года'

10-01-2025T03:05:19 - [TEST_STEP][PASSED] - m = m.substring(0, m.indexOf("2024")): null

10-01-2025T03:05:19 - [TEST_STEP][PASSED] - m = m.trim(): null

10-01-2025T03:05:19 - [TEST_STEP][PASSED] - dashboardName = "Выполнение бизнес-плана": null

10-01-2025T03:05:19 - [TEST_STEP][PASSED] - workbook01 = getWorkbook(excelFilePath): null

10-01-2025T03:05:19 - [TEST_STEP][PASSED] - sheet01 = getExcelSheet(workbook01, sheetName): null

10-01-2025T03:05:19 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 0, dashboardName): null

10-01-2025T03:05:19 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 1, dZO): null

10-01-2025T03:05:19 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 2, typeOfData): null

10-01-2025T03:05:19 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 3, typeOfData): null

10-01-2025T03:05:19 - [TEST_STEP][PASSED] - if (typeOfData == "План"): null

10-01-2025T03:05:19 - [TEST_STEP][PASSED] - if (PercPlanR == null): null

10-01-2025T03:05:19 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:05:19 - [TEST_STEP][PASSED] - if (PercPlanR == "нет данных"): null

10-01-2025T03:05:19 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:05:19 - [TEST_STEP][PASSED] - PR = PercPlanR.toDouble(): null

10-01-2025T03:05:19 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 4, PR): null

10-01-2025T03:05:19 - [TEST_STEP][PASSED] - if (PercPlanB == null): null

10-01-2025T03:05:19 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:05:19 - [TEST_STEP][PASSED] - if (PercPlanB == "нет данных"): null

10-01-2025T03:05:19 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:05:19 - [TEST_STEP][PASSED] - PB = PercPlanB.toDouble(): null

10-01-2025T03:05:19 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 5, PB): null

10-01-2025T03:05:19 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 6, m): null

10-01-2025T03:05:19 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 7, y): null

10-01-2025T03:05:19 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 8, todaysDate): null

10-01-2025T03:05:19 - [TEST_STEP][PASSED] - n = n + 1: null

10-01-2025T03:05:19 - [TEST_STEP][PASSED] - saveWorkbook(excelFilePath, workbook01): null

10-01-2025T03:05:20 - [TEST_STEP][PASSED] - typeOfData = "Факт": null

10-01-2025T03:05:20 - [TEST_STEP][PASSED] - PercFactR = GetPercFactR(x = a): null

10-01-2025T03:05:20 - [TEST_STEP][PASSED] - i1 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:20 - [TEST_STEP][PASSED] - ii = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:20 - [TEST_STEP][PASSED] - for ([ii = 1, ii < 3, (ii++)]): null

10-01-2025T03:05:20 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:20 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:20 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:20 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:20 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:20 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:20 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:20 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:20 - [TEST_STEP][PASSED] - i1 = x.indexOf("/"): null

10-01-2025T03:05:20 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:20 - [TEST_STEP][PASSED] - x = x.substring(0, i1): null

10-01-2025T03:05:20 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:20 - [TEST_STEP][PASSED] - return x: null

10-01-2025T03:05:20 - [TEST_STEP][PASSED] - PercFactB = GetPercFactB(x = b): null

10-01-2025T03:05:20 - [TEST_STEP][PASSED] - i1 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:20 - [TEST_STEP][PASSED] - ii = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:20 - [TEST_STEP][PASSED] - for ([ii = 1, ii < 3, (ii++)]): null

10-01-2025T03:05:20 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:20 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:20 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:20 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:20 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:20 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:20 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:20 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:20 - [TEST_STEP][PASSED] - i1 = x.indexOf("/"): null

10-01-2025T03:05:20 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:20 - [TEST_STEP][PASSED] - x = x.substring(0, i1): null

10-01-2025T03:05:20 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:20 - [TEST_STEP][FAILED] - return x: null

10-01-2025T03:05:20 - [TEST_STEP][FAILED] - if (verifyEqual(PercFactR, PercFactB) == false): null

10-01-2025T03:05:20 - [MESSAGE][FAILED] - Unable to verify equal between actual object '5.52' and expected object '8.12' (Root cause: com.kms.katalon.core.exception.StepFailedException: Actual object '5.52' and expected object '8.12' are not equal
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.doCall(VerifyEqualKeyword.groovy:58)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.call(VerifyEqualKeyword.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:75)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.verifyEqual(VerifyEqualKeyword.groovy:63)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.execute(VerifyEqualKeyword.groovy:44)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:74)
	at com.kms.katalon.core.keyword.BuiltinKeywords.verifyEqual(BuiltinKeywords.groovy:146)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at Выполнение бизнес-плана сверка дашбордов.CompareDZOData(Выполнение бизнес-плана сверка дашбордов:693)
	at Выполнение бизнес-плана сверка дашбордов.run(Выполнение бизнес-плана сверка дашбордов:578)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:448)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:439)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:418)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:410)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:285)
	at com.kms.katalon.core.common.CommonExecutor.accessTestCaseMainPhase(CommonExecutor.java:65)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:150)
	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:106)
	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:180)
	at TempTestSuite1736466949911.run(TempTestSuite1736466949911.groovy:35)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
)

10-01-2025T03:05:20 - [TEST_STEP][PASSED] - result = WriteToExcel(typeOfData, todaysDate, PercPlanR, PercPlanB, PercFactR, PercFactB, x, tabR, tabB, o1R, o1B, vidget): null

10-01-2025T03:05:20 - [TEST_STEP][PASSED] - iii = dZO.indexOf("/"): null

10-01-2025T03:05:20 - [TEST_STEP][PASSED] - println(iii): null

10-01-2025T03:05:20 - [TEST_STEP][PASSED] - dZO = dZO.substring(0, iii): null

10-01-2025T03:05:20 - [TEST_STEP][PASSED] - println(dZO): null

10-01-2025T03:05:20 - [TEST_STEP][PASSED] - println(PercPlanR): null

10-01-2025T03:05:20 - [TEST_STEP][PASSED] - println(PercPlanB): null

10-01-2025T03:05:20 - [TEST_STEP][PASSED] - println(PercFactR): null

10-01-2025T03:05:20 - [TEST_STEP][PASSED] - println(PercFactB): null

10-01-2025T03:05:20 - [TEST_STEP][PASSED] - println(tabR): null

10-01-2025T03:05:20 - [TEST_STEP][PASSED] - println(tabB): null

10-01-2025T03:05:20 - [TEST_STEP][PASSED] - println(o1R): null

10-01-2025T03:05:20 - [TEST_STEP][PASSED] - println(o1B): null

10-01-2025T03:05:20 - [TEST_STEP][PASSED] - PR = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:20 - [TEST_STEP][PASSED] - FR = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:20 - [TEST_STEP][PASSED] - PB = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:20 - [TEST_STEP][PASSED] - FB = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:20 - [TEST_STEP][PASSED] - TR = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:20 - [TEST_STEP][PASSED] - TB = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:20 - [TEST_STEP][PASSED] - sheetName = "Sheet1": null

10-01-2025T03:05:20 - [TEST_STEP][PASSED] - data = findTestData("PlanFact"): null

10-01-2025T03:05:20 - [TEST_STEP][PASSED] - n = data.getRowNumbers() + 1: null

10-01-2025T03:05:20 - [TEST_STEP][PASSED] - year = todaysDate.substring(todaysDate.length() - 4, todaysDate.length()): null

10-01-2025T03:05:20 - [TEST_STEP][PASSED] - y = year.toInteger(): null

10-01-2025T03:05:20 - [TEST_STEP][PASSED] - m = getText(findTestObject("Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Фильтр Дата")): Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Фильтр Дата' is: '1, 2, 3 кв., Октябрь, Ноябрь 2024 года'

10-01-2025T03:05:20 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Фильтр Дата' is: '1, 2, 3 кв., Октябрь, Ноябрь 2024 года'

10-01-2025T03:05:20 - [TEST_STEP][PASSED] - m = m.substring(0, m.indexOf("2024")): null

10-01-2025T03:05:20 - [TEST_STEP][PASSED] - m = m.trim(): null

10-01-2025T03:05:20 - [TEST_STEP][PASSED] - dashboardName = "Выполнение бизнес-плана": null

10-01-2025T03:05:20 - [TEST_STEP][PASSED] - workbook01 = getWorkbook(excelFilePath): null

10-01-2025T03:05:20 - [TEST_STEP][PASSED] - sheet01 = getExcelSheet(workbook01, sheetName): null

10-01-2025T03:05:20 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 0, dashboardName): null

10-01-2025T03:05:20 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 1, dZO): null

10-01-2025T03:05:20 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 2, typeOfData): null

10-01-2025T03:05:20 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 3, typeOfData): null

10-01-2025T03:05:20 - [TEST_STEP][PASSED] - if (typeOfData == "План"): null

10-01-2025T03:05:20 - [TEST_STEP][PASSED] - else if (typeOfData == "Факт"): null

10-01-2025T03:05:20 - [TEST_STEP][PASSED] - if (PercFactR == null): null

10-01-2025T03:05:20 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:05:20 - [TEST_STEP][PASSED] - if (PercFactR == "нет данных"): null

10-01-2025T03:05:20 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:05:20 - [TEST_STEP][PASSED] - FR = PercFactR.toDouble(): null

10-01-2025T03:05:20 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 4, FR): null

10-01-2025T03:05:20 - [TEST_STEP][PASSED] - if (PercFactB == null): null

10-01-2025T03:05:20 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:05:20 - [TEST_STEP][PASSED] - if (PercFactB == "нет данных"): null

10-01-2025T03:05:20 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:05:20 - [TEST_STEP][PASSED] - FB = PercFactB.toDouble(): null

10-01-2025T03:05:20 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 5, FB): null

10-01-2025T03:05:20 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 6, m): null

10-01-2025T03:05:20 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 7, y): null

10-01-2025T03:05:20 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 8, todaysDate): null

10-01-2025T03:05:20 - [TEST_STEP][PASSED] - n = n + 1: null

10-01-2025T03:05:20 - [TEST_STEP][PASSED] - saveWorkbook(excelFilePath, workbook01): null

10-01-2025T03:05:20 - [TEST_STEP][PASSED] - vidget = "Показатели баланса электроэнергии по ДЗО – Факт": null

10-01-2025T03:05:20 - [TEST_STEP][PASSED] - typeOfData = "Факт Отпуск в сеть": null

10-01-2025T03:05:20 - [TEST_STEP][PASSED] - tabR = GetOvSFactR(x = a): null

10-01-2025T03:05:20 - [TEST_STEP][PASSED] - i1 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:20 - [TEST_STEP][PASSED] - ii = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:20 - [TEST_STEP][PASSED] - for ([ii = 1, ii < 4, (ii++)]): null

10-01-2025T03:05:20 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:20 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:20 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:20 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:20 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:20 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:20 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:20 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:20 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:20 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:20 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:20 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:20 - [TEST_STEP][PASSED] - i1 = x.indexOf("/"): null

10-01-2025T03:05:20 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:20 - [TEST_STEP][PASSED] - x = x.substring(0, i1): null

10-01-2025T03:05:20 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:20 - [TEST_STEP][PASSED] - return x: null

10-01-2025T03:05:20 - [TEST_STEP][PASSED] - tabB = GetOvSFactB(x = b): null

10-01-2025T03:05:20 - [TEST_STEP][PASSED] - i1 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:20 - [TEST_STEP][PASSED] - ii = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:20 - [TEST_STEP][PASSED] - for ([ii = 1, ii < 4, (ii++)]): null

10-01-2025T03:05:20 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:20 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:20 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:20 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:20 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:20 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:20 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:20 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:20 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:20 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:20 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:20 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:20 - [TEST_STEP][PASSED] - i1 = x.indexOf("/"): null

10-01-2025T03:05:20 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:20 - [TEST_STEP][PASSED] - x = x.substring(0, i1): null

10-01-2025T03:05:20 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:20 - [TEST_STEP][FAILED] - return x: null

10-01-2025T03:05:20 - [TEST_STEP][FAILED] - if (verifyEqual(tabR, tabB) == false): null

10-01-2025T03:05:20 - [MESSAGE][FAILED] - Unable to verify equal between actual object '230146370' and expected object '564981141' (Root cause: com.kms.katalon.core.exception.StepFailedException: Actual object '230146370' and expected object '564981141' are not equal
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.doCall(VerifyEqualKeyword.groovy:58)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.call(VerifyEqualKeyword.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:75)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.verifyEqual(VerifyEqualKeyword.groovy:63)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.execute(VerifyEqualKeyword.groovy:44)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:74)
	at com.kms.katalon.core.keyword.BuiltinKeywords.verifyEqual(BuiltinKeywords.groovy:146)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at Выполнение бизнес-плана сверка дашбордов.CompareDZOData(Выполнение бизнес-плана сверка дашбордов:706)
	at Выполнение бизнес-плана сверка дашбордов.run(Выполнение бизнес-плана сверка дашбордов:578)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:448)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:439)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:418)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:410)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:285)
	at com.kms.katalon.core.common.CommonExecutor.accessTestCaseMainPhase(CommonExecutor.java:65)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:150)
	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:106)
	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:180)
	at TempTestSuite1736466949911.run(TempTestSuite1736466949911.groovy:35)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
)

10-01-2025T03:05:20 - [TEST_STEP][PASSED] - result = WriteToExcel(typeOfData, todaysDate, PercPlanR, PercPlanB, PercFactR, PercFactB, x, tabR, tabB, o1R, o1B, vidget): null

10-01-2025T03:05:20 - [TEST_STEP][PASSED] - iii = dZO.indexOf("/"): null

10-01-2025T03:05:20 - [TEST_STEP][PASSED] - println(iii): null

10-01-2025T03:05:20 - [TEST_STEP][PASSED] - dZO = dZO.substring(0, iii): null

10-01-2025T03:05:20 - [TEST_STEP][PASSED] - println(dZO): null

10-01-2025T03:05:20 - [TEST_STEP][PASSED] - println(PercPlanR): null

10-01-2025T03:05:20 - [TEST_STEP][PASSED] - println(PercPlanB): null

10-01-2025T03:05:20 - [TEST_STEP][PASSED] - println(PercFactR): null

10-01-2025T03:05:20 - [TEST_STEP][PASSED] - println(PercFactB): null

10-01-2025T03:05:20 - [TEST_STEP][PASSED] - println(tabR): null

10-01-2025T03:05:20 - [TEST_STEP][PASSED] - println(tabB): null

10-01-2025T03:05:20 - [TEST_STEP][PASSED] - println(o1R): null

10-01-2025T03:05:20 - [TEST_STEP][PASSED] - println(o1B): null

10-01-2025T03:05:20 - [TEST_STEP][PASSED] - PR = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:20 - [TEST_STEP][PASSED] - FR = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:20 - [TEST_STEP][PASSED] - PB = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:20 - [TEST_STEP][PASSED] - FB = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:20 - [TEST_STEP][PASSED] - TR = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:20 - [TEST_STEP][PASSED] - TB = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:20 - [TEST_STEP][PASSED] - sheetName = "Sheet1": null

10-01-2025T03:05:20 - [TEST_STEP][PASSED] - data = findTestData("PlanFact"): null

10-01-2025T03:05:21 - [TEST_STEP][PASSED] - n = data.getRowNumbers() + 1: null

10-01-2025T03:05:21 - [TEST_STEP][PASSED] - year = todaysDate.substring(todaysDate.length() - 4, todaysDate.length()): null

10-01-2025T03:05:21 - [TEST_STEP][PASSED] - y = year.toInteger(): null

10-01-2025T03:05:21 - [TEST_STEP][PASSED] - m = getText(findTestObject("Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Фильтр Дата")): Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Фильтр Дата' is: '1, 2, 3 кв., Октябрь, Ноябрь 2024 года'

10-01-2025T03:05:21 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Фильтр Дата' is: '1, 2, 3 кв., Октябрь, Ноябрь 2024 года'

10-01-2025T03:05:21 - [TEST_STEP][PASSED] - m = m.substring(0, m.indexOf("2024")): null

10-01-2025T03:05:21 - [TEST_STEP][PASSED] - m = m.trim(): null

10-01-2025T03:05:21 - [TEST_STEP][PASSED] - dashboardName = "Выполнение бизнес-плана": null

10-01-2025T03:05:21 - [TEST_STEP][PASSED] - workbook01 = getWorkbook(excelFilePath): null

10-01-2025T03:05:21 - [TEST_STEP][PASSED] - sheet01 = getExcelSheet(workbook01, sheetName): null

10-01-2025T03:05:21 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 0, dashboardName): null

10-01-2025T03:05:21 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 1, dZO): null

10-01-2025T03:05:21 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 2, typeOfData): null

10-01-2025T03:05:21 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 3, typeOfData): null

10-01-2025T03:05:21 - [TEST_STEP][PASSED] - if (typeOfData == "План"): null

10-01-2025T03:05:21 - [TEST_STEP][PASSED] - else if (typeOfData == "Факт"): null

10-01-2025T03:05:21 - [TEST_STEP][PASSED] - else if (vidget.contains("электроэнергии") == true): null

10-01-2025T03:05:21 - [TEST_STEP][PASSED] - if (tabR == null): null

10-01-2025T03:05:21 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:05:21 - [TEST_STEP][PASSED] - if (tabR == "нет данных"): null

10-01-2025T03:05:21 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:05:21 - [TEST_STEP][PASSED] - TR = tabR.toInteger(): null

10-01-2025T03:05:21 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 4, TR): null

10-01-2025T03:05:21 - [TEST_STEP][PASSED] - if (tabB == null): null

10-01-2025T03:05:21 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:05:21 - [TEST_STEP][PASSED] - if (tabB == "нет данных"): null

10-01-2025T03:05:21 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:05:21 - [TEST_STEP][PASSED] - TB = tabB.toInteger(): null

10-01-2025T03:05:21 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 5, TB): null

10-01-2025T03:05:21 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 6, m): null

10-01-2025T03:05:21 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 7, y): null

10-01-2025T03:05:21 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 8, todaysDate): null

10-01-2025T03:05:21 - [TEST_STEP][PASSED] - n = n + 1: null

10-01-2025T03:05:21 - [TEST_STEP][PASSED] - saveWorkbook(excelFilePath, workbook01): null

10-01-2025T03:05:21 - [TEST_STEP][PASSED] - typeOfData = "Факт Отпуск из сети": null

10-01-2025T03:05:21 - [TEST_STEP][PASSED] - tabR = GetOiSFactR(x = a): null

10-01-2025T03:05:21 - [TEST_STEP][PASSED] - i1 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:21 - [TEST_STEP][PASSED] - ii = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:21 - [TEST_STEP][PASSED] - for ([ii = 1, ii < 5, (ii++)]): null

10-01-2025T03:05:21 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:21 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:21 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:21 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:21 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:21 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:21 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:21 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:21 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:21 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:21 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:21 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:21 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:21 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:21 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:21 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:21 - [TEST_STEP][PASSED] - i1 = x.indexOf("/"): null

10-01-2025T03:05:21 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:21 - [TEST_STEP][PASSED] - x = x.substring(0, i1): null

10-01-2025T03:05:21 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:21 - [TEST_STEP][PASSED] - return x: null

10-01-2025T03:05:21 - [TEST_STEP][PASSED] - tabB = GetOiSFactB(x = b): null

10-01-2025T03:05:21 - [TEST_STEP][PASSED] - i1 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:21 - [TEST_STEP][PASSED] - ii = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:21 - [TEST_STEP][PASSED] - for ([ii = 1, ii < 5, (ii++)]): null

10-01-2025T03:05:21 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:21 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:21 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:21 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:21 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:21 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:21 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:21 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:21 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:21 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:21 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:21 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:21 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:21 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:21 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:21 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:21 - [TEST_STEP][PASSED] - i1 = x.indexOf("/"): null

10-01-2025T03:05:21 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:21 - [TEST_STEP][PASSED] - x = x.substring(0, i1): null

10-01-2025T03:05:21 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:21 - [TEST_STEP][FAILED] - return x: null

10-01-2025T03:05:21 - [TEST_STEP][FAILED] - if (verifyEqual(tabR, tabB) == false): null

10-01-2025T03:05:21 - [MESSAGE][FAILED] - Unable to verify equal between actual object '209300970' and expected object '519906785' (Root cause: com.kms.katalon.core.exception.StepFailedException: Actual object '209300970' and expected object '519906785' are not equal
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.doCall(VerifyEqualKeyword.groovy:58)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.call(VerifyEqualKeyword.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:75)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.verifyEqual(VerifyEqualKeyword.groovy:63)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.execute(VerifyEqualKeyword.groovy:44)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:74)
	at com.kms.katalon.core.keyword.BuiltinKeywords.verifyEqual(BuiltinKeywords.groovy:146)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at Выполнение бизнес-плана сверка дашбордов.CompareDZOData(Выполнение бизнес-плана сверка дашбордов:717)
	at Выполнение бизнес-плана сверка дашбордов.run(Выполнение бизнес-плана сверка дашбордов:578)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:448)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:439)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:418)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:410)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:285)
	at com.kms.katalon.core.common.CommonExecutor.accessTestCaseMainPhase(CommonExecutor.java:65)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:150)
	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:106)
	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:180)
	at TempTestSuite1736466949911.run(TempTestSuite1736466949911.groovy:35)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
)

10-01-2025T03:05:21 - [TEST_STEP][PASSED] - result = WriteToExcel(typeOfData, todaysDate, PercPlanR, PercPlanB, PercFactR, PercFactB, x, tabR, tabB, o1R, o1B, vidget): null

10-01-2025T03:05:21 - [TEST_STEP][PASSED] - iii = dZO.indexOf("/"): null

10-01-2025T03:05:21 - [TEST_STEP][PASSED] - println(iii): null

10-01-2025T03:05:21 - [TEST_STEP][PASSED] - dZO = dZO.substring(0, iii): null

10-01-2025T03:05:21 - [TEST_STEP][PASSED] - println(dZO): null

10-01-2025T03:05:21 - [TEST_STEP][PASSED] - println(PercPlanR): null

10-01-2025T03:05:21 - [TEST_STEP][PASSED] - println(PercPlanB): null

10-01-2025T03:05:21 - [TEST_STEP][PASSED] - println(PercFactR): null

10-01-2025T03:05:21 - [TEST_STEP][PASSED] - println(PercFactB): null

10-01-2025T03:05:21 - [TEST_STEP][PASSED] - println(tabR): null

10-01-2025T03:05:21 - [TEST_STEP][PASSED] - println(tabB): null

10-01-2025T03:05:21 - [TEST_STEP][PASSED] - println(o1R): null

10-01-2025T03:05:21 - [TEST_STEP][PASSED] - println(o1B): null

10-01-2025T03:05:21 - [TEST_STEP][PASSED] - PR = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:21 - [TEST_STEP][PASSED] - FR = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:21 - [TEST_STEP][PASSED] - PB = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:21 - [TEST_STEP][PASSED] - FB = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:21 - [TEST_STEP][PASSED] - TR = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:21 - [TEST_STEP][PASSED] - TB = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:21 - [TEST_STEP][PASSED] - sheetName = "Sheet1": null

10-01-2025T03:05:21 - [TEST_STEP][PASSED] - data = findTestData("PlanFact"): null

10-01-2025T03:05:21 - [TEST_STEP][PASSED] - n = data.getRowNumbers() + 1: null

10-01-2025T03:05:21 - [TEST_STEP][PASSED] - year = todaysDate.substring(todaysDate.length() - 4, todaysDate.length()): null

10-01-2025T03:05:21 - [TEST_STEP][PASSED] - y = year.toInteger(): null

10-01-2025T03:05:21 - [TEST_STEP][PASSED] - m = getText(findTestObject("Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Фильтр Дата")): Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Фильтр Дата' is: '1, 2, 3 кв., Октябрь, Ноябрь 2024 года'

10-01-2025T03:05:21 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Фильтр Дата' is: '1, 2, 3 кв., Октябрь, Ноябрь 2024 года'

10-01-2025T03:05:21 - [TEST_STEP][PASSED] - m = m.substring(0, m.indexOf("2024")): null

10-01-2025T03:05:21 - [TEST_STEP][PASSED] - m = m.trim(): null

10-01-2025T03:05:21 - [TEST_STEP][PASSED] - dashboardName = "Выполнение бизнес-плана": null

10-01-2025T03:05:21 - [TEST_STEP][PASSED] - workbook01 = getWorkbook(excelFilePath): null

10-01-2025T03:05:22 - [TEST_STEP][PASSED] - sheet01 = getExcelSheet(workbook01, sheetName): null

10-01-2025T03:05:22 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 0, dashboardName): null

10-01-2025T03:05:22 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 1, dZO): null

10-01-2025T03:05:22 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 2, typeOfData): null

10-01-2025T03:05:22 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 3, typeOfData): null

10-01-2025T03:05:22 - [TEST_STEP][PASSED] - if (typeOfData == "План"): null

10-01-2025T03:05:22 - [TEST_STEP][PASSED] - else if (typeOfData == "Факт"): null

10-01-2025T03:05:22 - [TEST_STEP][PASSED] - else if (vidget.contains("электроэнергии") == true): null

10-01-2025T03:05:22 - [TEST_STEP][PASSED] - if (tabR == null): null

10-01-2025T03:05:22 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:05:22 - [TEST_STEP][PASSED] - if (tabR == "нет данных"): null

10-01-2025T03:05:22 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:05:22 - [TEST_STEP][PASSED] - TR = tabR.toInteger(): null

10-01-2025T03:05:22 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 4, TR): null

10-01-2025T03:05:22 - [TEST_STEP][PASSED] - if (tabB == null): null

10-01-2025T03:05:22 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:05:22 - [TEST_STEP][PASSED] - if (tabB == "нет данных"): null

10-01-2025T03:05:22 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:05:22 - [TEST_STEP][PASSED] - TB = tabB.toInteger(): null

10-01-2025T03:05:22 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 5, TB): null

10-01-2025T03:05:22 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 6, m): null

10-01-2025T03:05:22 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 7, y): null

10-01-2025T03:05:22 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 8, todaysDate): null

10-01-2025T03:05:22 - [TEST_STEP][PASSED] - n = n + 1: null

10-01-2025T03:05:22 - [TEST_STEP][PASSED] - saveWorkbook(excelFilePath, workbook01): null

10-01-2025T03:05:22 - [TEST_STEP][PASSED] - typeOfData = "Факт Потери": null

10-01-2025T03:05:22 - [TEST_STEP][PASSED] - tabR = GetPFactR(x = a): null

10-01-2025T03:05:22 - [TEST_STEP][PASSED] - i1 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:22 - [TEST_STEP][PASSED] - ii = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:22 - [TEST_STEP][PASSED] - for ([ii = 1, ii < 6, (ii++)]): null

10-01-2025T03:05:22 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:22 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:22 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:22 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:22 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:22 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:22 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:22 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:22 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:22 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:22 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:22 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:22 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:22 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:22 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:22 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:22 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:22 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:22 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:22 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:22 - [TEST_STEP][PASSED] - i1 = x.indexOf("/"): null

10-01-2025T03:05:22 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:22 - [TEST_STEP][PASSED] - x = x.substring(0, i1): null

10-01-2025T03:05:22 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:22 - [TEST_STEP][PASSED] - return x: null

10-01-2025T03:05:22 - [TEST_STEP][PASSED] - tabB = GetPFactB(x = b): null

10-01-2025T03:05:22 - [TEST_STEP][PASSED] - i1 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:22 - [TEST_STEP][PASSED] - ii = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:22 - [TEST_STEP][PASSED] - for ([ii = 1, ii < 6, (ii++)]): null

10-01-2025T03:05:22 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:22 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:22 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:22 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:22 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:22 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:22 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:22 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:22 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:22 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:22 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:22 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:22 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:22 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:22 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:22 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:22 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:22 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:22 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:22 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:22 - [TEST_STEP][PASSED] - i1 = x.indexOf("/"): null

10-01-2025T03:05:22 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:22 - [TEST_STEP][PASSED] - x = x.substring(0, i1): null

10-01-2025T03:05:22 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:22 - [TEST_STEP][FAILED] - return x: null

10-01-2025T03:05:22 - [TEST_STEP][PASSED] - println(tabR + "/" + tabB): null

10-01-2025T03:05:22 - [TEST_STEP][FAILED] - if (verifyEqual(tabR, tabB) == false): null

10-01-2025T03:05:22 - [MESSAGE][FAILED] - Unable to verify equal between actual object '20845400' and expected object '45074356' (Root cause: com.kms.katalon.core.exception.StepFailedException: Actual object '20845400' and expected object '45074356' are not equal
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.doCall(VerifyEqualKeyword.groovy:58)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.call(VerifyEqualKeyword.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:75)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.verifyEqual(VerifyEqualKeyword.groovy:63)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.execute(VerifyEqualKeyword.groovy:44)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:74)
	at com.kms.katalon.core.keyword.BuiltinKeywords.verifyEqual(BuiltinKeywords.groovy:146)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at Выполнение бизнес-плана сверка дашбордов.CompareDZOData(Выполнение бизнес-плана сверка дашбордов:730)
	at Выполнение бизнес-плана сверка дашбордов.run(Выполнение бизнес-плана сверка дашбордов:578)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:448)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:439)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:418)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:410)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:285)
	at com.kms.katalon.core.common.CommonExecutor.accessTestCaseMainPhase(CommonExecutor.java:65)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:150)
	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:106)
	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:180)
	at TempTestSuite1736466949911.run(TempTestSuite1736466949911.groovy:35)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
)

10-01-2025T03:05:22 - [TEST_STEP][PASSED] - result = WriteToExcel(typeOfData, todaysDate, PercPlanR, PercPlanB, PercFactR, PercFactB, x, tabR, tabB, o1R, o1B, vidget): null

10-01-2025T03:05:22 - [TEST_STEP][PASSED] - iii = dZO.indexOf("/"): null

10-01-2025T03:05:22 - [TEST_STEP][PASSED] - println(iii): null

10-01-2025T03:05:22 - [TEST_STEP][PASSED] - dZO = dZO.substring(0, iii): null

10-01-2025T03:05:22 - [TEST_STEP][PASSED] - println(dZO): null

10-01-2025T03:05:22 - [TEST_STEP][PASSED] - println(PercPlanR): null

10-01-2025T03:05:22 - [TEST_STEP][PASSED] - println(PercPlanB): null

10-01-2025T03:05:22 - [TEST_STEP][PASSED] - println(PercFactR): null

10-01-2025T03:05:22 - [TEST_STEP][PASSED] - println(PercFactB): null

10-01-2025T03:05:22 - [TEST_STEP][PASSED] - println(tabR): null

10-01-2025T03:05:22 - [TEST_STEP][PASSED] - println(tabB): null

10-01-2025T03:05:22 - [TEST_STEP][PASSED] - println(o1R): null

10-01-2025T03:05:22 - [TEST_STEP][PASSED] - println(o1B): null

10-01-2025T03:05:22 - [TEST_STEP][PASSED] - PR = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:22 - [TEST_STEP][PASSED] - FR = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:22 - [TEST_STEP][PASSED] - PB = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:22 - [TEST_STEP][PASSED] - FB = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:22 - [TEST_STEP][PASSED] - TR = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:22 - [TEST_STEP][PASSED] - TB = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:22 - [TEST_STEP][PASSED] - sheetName = "Sheet1": null

10-01-2025T03:05:22 - [TEST_STEP][PASSED] - data = findTestData("PlanFact"): null

10-01-2025T03:05:22 - [TEST_STEP][PASSED] - n = data.getRowNumbers() + 1: null

10-01-2025T03:05:22 - [TEST_STEP][PASSED] - year = todaysDate.substring(todaysDate.length() - 4, todaysDate.length()): null

10-01-2025T03:05:22 - [TEST_STEP][PASSED] - y = year.toInteger(): null

10-01-2025T03:05:22 - [TEST_STEP][PASSED] - m = getText(findTestObject("Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Фильтр Дата")): Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Фильтр Дата' is: '1, 2, 3 кв., Октябрь, Ноябрь 2024 года'

10-01-2025T03:05:22 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Фильтр Дата' is: '1, 2, 3 кв., Октябрь, Ноябрь 2024 года'

10-01-2025T03:05:22 - [TEST_STEP][PASSED] - m = m.substring(0, m.indexOf("2024")): null

10-01-2025T03:05:22 - [TEST_STEP][PASSED] - m = m.trim(): null

10-01-2025T03:05:22 - [TEST_STEP][PASSED] - dashboardName = "Выполнение бизнес-плана": null

10-01-2025T03:05:22 - [TEST_STEP][PASSED] - workbook01 = getWorkbook(excelFilePath): null

10-01-2025T03:05:22 - [TEST_STEP][PASSED] - sheet01 = getExcelSheet(workbook01, sheetName): null

10-01-2025T03:05:22 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 0, dashboardName): null

10-01-2025T03:05:22 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 1, dZO): null

10-01-2025T03:05:22 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 2, typeOfData): null

10-01-2025T03:05:22 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 3, typeOfData): null

10-01-2025T03:05:22 - [TEST_STEP][PASSED] - if (typeOfData == "План"): null

10-01-2025T03:05:22 - [TEST_STEP][PASSED] - else if (typeOfData == "Факт"): null

10-01-2025T03:05:22 - [TEST_STEP][PASSED] - else if (vidget.contains("электроэнергии") == true): null

10-01-2025T03:05:22 - [TEST_STEP][PASSED] - if (tabR == null): null

10-01-2025T03:05:22 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:05:22 - [TEST_STEP][PASSED] - if (tabR == "нет данных"): null

10-01-2025T03:05:22 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:05:22 - [TEST_STEP][PASSED] - TR = tabR.toInteger(): null

10-01-2025T03:05:22 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 4, TR): null

10-01-2025T03:05:22 - [TEST_STEP][PASSED] - if (tabB == null): null

10-01-2025T03:05:22 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:05:22 - [TEST_STEP][PASSED] - if (tabB == "нет данных"): null

10-01-2025T03:05:22 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:05:22 - [TEST_STEP][PASSED] - TB = tabB.toInteger(): null

10-01-2025T03:05:22 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 5, TB): null

10-01-2025T03:05:22 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 6, m): null

10-01-2025T03:05:22 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 7, y): null

10-01-2025T03:05:22 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 8, todaysDate): null

10-01-2025T03:05:22 - [TEST_STEP][PASSED] - n = n + 1: null

10-01-2025T03:05:22 - [TEST_STEP][PASSED] - saveWorkbook(excelFilePath, workbook01): null

10-01-2025T03:05:22 - [TEST_STEP][PASSED] - vidget = "Показатели баланса электроэнергии по ДЗО – План": null

10-01-2025T03:05:22 - [TEST_STEP][PASSED] - typeOfData = "План Отпуск в сеть": null

10-01-2025T03:05:22 - [TEST_STEP][PASSED] - tabR = GetOvSPlanR(x = a): null

10-01-2025T03:05:22 - [TEST_STEP][PASSED] - i1 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:22 - [TEST_STEP][PASSED] - ii = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:22 - [TEST_STEP][PASSED] - for ([ii = 1, ii < 7, (ii++)]): null

10-01-2025T03:05:22 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:22 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:22 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:22 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:22 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:22 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:22 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:22 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:22 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:22 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:22 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:22 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:22 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:22 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:22 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:22 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:22 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:22 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:22 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:22 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:22 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:22 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:22 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:22 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:22 - [TEST_STEP][PASSED] - i1 = x.indexOf("/"): null

10-01-2025T03:05:23 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:23 - [TEST_STEP][PASSED] - x = x.substring(0, i1): null

10-01-2025T03:05:23 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:23 - [TEST_STEP][PASSED] - return x: null

10-01-2025T03:05:23 - [TEST_STEP][PASSED] - tabB = GetOvSPlanB(x = b): null

10-01-2025T03:05:23 - [TEST_STEP][PASSED] - i1 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:23 - [TEST_STEP][PASSED] - ii = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:23 - [TEST_STEP][PASSED] - for ([ii = 1, ii < 7, (ii++)]): null

10-01-2025T03:05:23 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:23 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:23 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:23 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:23 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:23 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:23 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:23 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:23 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:23 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:23 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:23 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:23 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:23 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:23 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:23 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:23 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:23 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:23 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:23 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:23 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:23 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:23 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:23 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:23 - [TEST_STEP][PASSED] - i1 = x.indexOf("/"): null

10-01-2025T03:05:23 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:23 - [TEST_STEP][PASSED] - x = x.substring(0, i1): null

10-01-2025T03:05:23 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:23 - [TEST_STEP][FAILED] - return x: null

10-01-2025T03:05:23 - [TEST_STEP][PASSED] - println(tabR + "/" + tabB): null

10-01-2025T03:05:23 - [TEST_STEP][FAILED] - if (verifyEqual(PercFactR, PercFactB) == false): null

10-01-2025T03:05:23 - [MESSAGE][FAILED] - Unable to verify equal between actual object '5.52' and expected object '8.12' (Root cause: com.kms.katalon.core.exception.StepFailedException: Actual object '5.52' and expected object '8.12' are not equal
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.doCall(VerifyEqualKeyword.groovy:58)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.call(VerifyEqualKeyword.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:75)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.verifyEqual(VerifyEqualKeyword.groovy:63)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.execute(VerifyEqualKeyword.groovy:44)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:74)
	at com.kms.katalon.core.keyword.BuiltinKeywords.verifyEqual(BuiltinKeywords.groovy:146)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at Выполнение бизнес-плана сверка дашбордов.CompareDZOData(Выполнение бизнес-плана сверка дашбордов:745)
	at Выполнение бизнес-плана сверка дашбордов.run(Выполнение бизнес-плана сверка дашбордов:578)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:448)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:439)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:418)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:410)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:285)
	at com.kms.katalon.core.common.CommonExecutor.accessTestCaseMainPhase(CommonExecutor.java:65)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:150)
	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:106)
	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:180)
	at TempTestSuite1736466949911.run(TempTestSuite1736466949911.groovy:35)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
)

10-01-2025T03:05:23 - [TEST_STEP][PASSED] - result = WriteToExcel(typeOfData, todaysDate, PercPlanR, PercPlanB, PercFactR, PercFactB, x, tabR, tabB, o1R, o1B, vidget): null

10-01-2025T03:05:23 - [TEST_STEP][PASSED] - iii = dZO.indexOf("/"): null

10-01-2025T03:05:23 - [TEST_STEP][PASSED] - println(iii): null

10-01-2025T03:05:23 - [TEST_STEP][PASSED] - dZO = dZO.substring(0, iii): null

10-01-2025T03:05:23 - [TEST_STEP][PASSED] - println(dZO): null

10-01-2025T03:05:23 - [TEST_STEP][PASSED] - println(PercPlanR): null

10-01-2025T03:05:23 - [TEST_STEP][PASSED] - println(PercPlanB): null

10-01-2025T03:05:23 - [TEST_STEP][PASSED] - println(PercFactR): null

10-01-2025T03:05:23 - [TEST_STEP][PASSED] - println(PercFactB): null

10-01-2025T03:05:23 - [TEST_STEP][PASSED] - println(tabR): null

10-01-2025T03:05:23 - [TEST_STEP][PASSED] - println(tabB): null

10-01-2025T03:05:23 - [TEST_STEP][PASSED] - println(o1R): null

10-01-2025T03:05:23 - [TEST_STEP][PASSED] - println(o1B): null

10-01-2025T03:05:23 - [TEST_STEP][PASSED] - PR = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:23 - [TEST_STEP][PASSED] - FR = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:23 - [TEST_STEP][PASSED] - PB = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:23 - [TEST_STEP][PASSED] - FB = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:23 - [TEST_STEP][PASSED] - TR = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:23 - [TEST_STEP][PASSED] - TB = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:23 - [TEST_STEP][PASSED] - sheetName = "Sheet1": null

10-01-2025T03:05:23 - [TEST_STEP][PASSED] - data = findTestData("PlanFact"): null

10-01-2025T03:05:23 - [TEST_STEP][PASSED] - n = data.getRowNumbers() + 1: null

10-01-2025T03:05:23 - [TEST_STEP][PASSED] - year = todaysDate.substring(todaysDate.length() - 4, todaysDate.length()): null

10-01-2025T03:05:23 - [TEST_STEP][PASSED] - y = year.toInteger(): null

10-01-2025T03:05:23 - [TEST_STEP][PASSED] - m = getText(findTestObject("Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Фильтр Дата")): Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Фильтр Дата' is: '1, 2, 3 кв., Октябрь, Ноябрь 2024 года'

10-01-2025T03:05:23 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Фильтр Дата' is: '1, 2, 3 кв., Октябрь, Ноябрь 2024 года'

10-01-2025T03:05:23 - [TEST_STEP][PASSED] - m = m.substring(0, m.indexOf("2024")): null

10-01-2025T03:05:23 - [TEST_STEP][PASSED] - m = m.trim(): null

10-01-2025T03:05:23 - [TEST_STEP][PASSED] - dashboardName = "Выполнение бизнес-плана": null

10-01-2025T03:05:23 - [TEST_STEP][PASSED] - workbook01 = getWorkbook(excelFilePath): null

10-01-2025T03:05:23 - [TEST_STEP][PASSED] - sheet01 = getExcelSheet(workbook01, sheetName): null

10-01-2025T03:05:23 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 0, dashboardName): null

10-01-2025T03:05:23 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 1, dZO): null

10-01-2025T03:05:23 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 2, typeOfData): null

10-01-2025T03:05:23 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 3, typeOfData): null

10-01-2025T03:05:23 - [TEST_STEP][PASSED] - if (typeOfData == "План"): null

10-01-2025T03:05:23 - [TEST_STEP][PASSED] - else if (typeOfData == "Факт"): null

10-01-2025T03:05:23 - [TEST_STEP][PASSED] - else if (vidget.contains("электроэнергии") == true): null

10-01-2025T03:05:23 - [TEST_STEP][PASSED] - if (tabR == null): null

10-01-2025T03:05:23 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:05:23 - [TEST_STEP][PASSED] - if (tabR == "нет данных"): null

10-01-2025T03:05:23 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:05:23 - [TEST_STEP][PASSED] - TR = tabR.toInteger(): null

10-01-2025T03:05:23 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 4, TR): null

10-01-2025T03:05:23 - [TEST_STEP][PASSED] - if (tabB == null): null

10-01-2025T03:05:23 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:05:23 - [TEST_STEP][PASSED] - if (tabB == "нет данных"): null

10-01-2025T03:05:23 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:05:23 - [TEST_STEP][PASSED] - TB = tabB.toInteger(): null

10-01-2025T03:05:23 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 5, TB): null

10-01-2025T03:05:23 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 6, m): null

10-01-2025T03:05:23 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 7, y): null

10-01-2025T03:05:23 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 8, todaysDate): null

10-01-2025T03:05:23 - [TEST_STEP][PASSED] - n = n + 1: null

10-01-2025T03:05:23 - [TEST_STEP][PASSED] - saveWorkbook(excelFilePath, workbook01): null

10-01-2025T03:05:23 - [TEST_STEP][PASSED] - typeOfData = "План Отпуск из сети": null

10-01-2025T03:05:23 - [TEST_STEP][PASSED] - tabR = GetOiSPlanR(x = a): null

10-01-2025T03:05:23 - [TEST_STEP][PASSED] - i1 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:23 - [TEST_STEP][PASSED] - ii = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:23 - [TEST_STEP][PASSED] - for ([ii = 1, ii < 8, (ii++)]): null

10-01-2025T03:05:23 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:23 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:23 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:23 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:23 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:23 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:23 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:23 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:23 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:23 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:23 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:23 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:23 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:23 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:23 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:23 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:23 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:23 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:23 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:23 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:23 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:23 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:23 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:23 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:23 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:23 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:23 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:23 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:23 - [TEST_STEP][PASSED] - i1 = x.indexOf("/"): null

10-01-2025T03:05:23 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:23 - [TEST_STEP][PASSED] - x = x.substring(0, i1): null

10-01-2025T03:05:23 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:23 - [TEST_STEP][PASSED] - return x: null

10-01-2025T03:05:23 - [TEST_STEP][PASSED] - tabB = GetOiSPlanB(x = b): null

10-01-2025T03:05:23 - [TEST_STEP][PASSED] - i1 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:23 - [TEST_STEP][PASSED] - ii = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:23 - [TEST_STEP][PASSED] - for ([ii = 1, ii < 8, (ii++)]): null

10-01-2025T03:05:23 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:23 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:23 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:23 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:23 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:23 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:23 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:23 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:23 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:23 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:23 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:23 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:23 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:23 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:23 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:23 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:23 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:23 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:23 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:23 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:23 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:23 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:23 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:23 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:23 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:23 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:23 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:23 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:23 - [TEST_STEP][PASSED] - i1 = x.indexOf("/"): null

10-01-2025T03:05:23 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:23 - [TEST_STEP][PASSED] - x = x.substring(0, i1): null

10-01-2025T03:05:23 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:23 - [TEST_STEP][FAILED] - return x: null

10-01-2025T03:05:23 - [TEST_STEP][PASSED] - println(tabR + "/" + tabB): null

10-01-2025T03:05:23 - [TEST_STEP][FAILED] - if (verifyEqual(PercFactR, PercFactB) == false): null

10-01-2025T03:05:23 - [MESSAGE][FAILED] - Unable to verify equal between actual object '5.52' and expected object '8.12' (Root cause: com.kms.katalon.core.exception.StepFailedException: Actual object '5.52' and expected object '8.12' are not equal
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.doCall(VerifyEqualKeyword.groovy:58)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.call(VerifyEqualKeyword.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:75)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.verifyEqual(VerifyEqualKeyword.groovy:63)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.execute(VerifyEqualKeyword.groovy:44)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:74)
	at com.kms.katalon.core.keyword.BuiltinKeywords.verifyEqual(BuiltinKeywords.groovy:146)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at Выполнение бизнес-плана сверка дашбордов.CompareDZOData(Выполнение бизнес-плана сверка дашбордов:758)
	at Выполнение бизнес-плана сверка дашбордов.run(Выполнение бизнес-плана сверка дашбордов:578)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:448)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:439)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:418)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:410)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:285)
	at com.kms.katalon.core.common.CommonExecutor.accessTestCaseMainPhase(CommonExecutor.java:65)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:150)
	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:106)
	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:180)
	at TempTestSuite1736466949911.run(TempTestSuite1736466949911.groovy:35)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
)

10-01-2025T03:05:23 - [TEST_STEP][PASSED] - result = WriteToExcel(typeOfData, todaysDate, PercPlanR, PercPlanB, PercFactR, PercFactB, x, tabR, tabB, o1R, o1B, vidget): null

10-01-2025T03:05:23 - [TEST_STEP][PASSED] - iii = dZO.indexOf("/"): null

10-01-2025T03:05:23 - [TEST_STEP][PASSED] - println(iii): null

10-01-2025T03:05:23 - [TEST_STEP][PASSED] - dZO = dZO.substring(0, iii): null

10-01-2025T03:05:23 - [TEST_STEP][PASSED] - println(dZO): null

10-01-2025T03:05:23 - [TEST_STEP][PASSED] - println(PercPlanR): null

10-01-2025T03:05:23 - [TEST_STEP][PASSED] - println(PercPlanB): null

10-01-2025T03:05:23 - [TEST_STEP][PASSED] - println(PercFactR): null

10-01-2025T03:05:23 - [TEST_STEP][PASSED] - println(PercFactB): null

10-01-2025T03:05:23 - [TEST_STEP][PASSED] - println(tabR): null

10-01-2025T03:05:23 - [TEST_STEP][PASSED] - println(tabB): null

10-01-2025T03:05:23 - [TEST_STEP][PASSED] - println(o1R): null

10-01-2025T03:05:23 - [TEST_STEP][PASSED] - println(o1B): null

10-01-2025T03:05:23 - [TEST_STEP][PASSED] - PR = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:23 - [TEST_STEP][PASSED] - FR = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:23 - [TEST_STEP][PASSED] - PB = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:23 - [TEST_STEP][PASSED] - FB = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:23 - [TEST_STEP][PASSED] - TR = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:23 - [TEST_STEP][PASSED] - TB = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:23 - [TEST_STEP][PASSED] - sheetName = "Sheet1": null

10-01-2025T03:05:23 - [TEST_STEP][PASSED] - data = findTestData("PlanFact"): null

10-01-2025T03:05:23 - [TEST_STEP][PASSED] - n = data.getRowNumbers() + 1: null

10-01-2025T03:05:23 - [TEST_STEP][PASSED] - year = todaysDate.substring(todaysDate.length() - 4, todaysDate.length()): null

10-01-2025T03:05:23 - [TEST_STEP][PASSED] - y = year.toInteger(): null

10-01-2025T03:05:23 - [TEST_STEP][PASSED] - m = getText(findTestObject("Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Фильтр Дата")): Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Фильтр Дата' is: '1, 2, 3 кв., Октябрь, Ноябрь 2024 года'

10-01-2025T03:05:24 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Фильтр Дата' is: '1, 2, 3 кв., Октябрь, Ноябрь 2024 года'

10-01-2025T03:05:24 - [TEST_STEP][PASSED] - m = m.substring(0, m.indexOf("2024")): null

10-01-2025T03:05:24 - [TEST_STEP][PASSED] - m = m.trim(): null

10-01-2025T03:05:24 - [TEST_STEP][PASSED] - dashboardName = "Выполнение бизнес-плана": null

10-01-2025T03:05:24 - [TEST_STEP][PASSED] - workbook01 = getWorkbook(excelFilePath): null

10-01-2025T03:05:24 - [TEST_STEP][PASSED] - sheet01 = getExcelSheet(workbook01, sheetName): null

10-01-2025T03:05:24 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 0, dashboardName): null

10-01-2025T03:05:24 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 1, dZO): null

10-01-2025T03:05:24 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 2, typeOfData): null

10-01-2025T03:05:24 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 3, typeOfData): null

10-01-2025T03:05:24 - [TEST_STEP][PASSED] - if (typeOfData == "План"): null

10-01-2025T03:05:24 - [TEST_STEP][PASSED] - else if (typeOfData == "Факт"): null

10-01-2025T03:05:24 - [TEST_STEP][PASSED] - else if (vidget.contains("электроэнергии") == true): null

10-01-2025T03:05:24 - [TEST_STEP][PASSED] - if (tabR == null): null

10-01-2025T03:05:24 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:05:24 - [TEST_STEP][PASSED] - if (tabR == "нет данных"): null

10-01-2025T03:05:24 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:05:24 - [TEST_STEP][PASSED] - TR = tabR.toInteger(): null

10-01-2025T03:05:24 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 4, TR): null

10-01-2025T03:05:24 - [TEST_STEP][PASSED] - if (tabB == null): null

10-01-2025T03:05:24 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:05:24 - [TEST_STEP][PASSED] - if (tabB == "нет данных"): null

10-01-2025T03:05:24 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:05:24 - [TEST_STEP][PASSED] - TB = tabB.toInteger(): null

10-01-2025T03:05:24 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 5, TB): null

10-01-2025T03:05:24 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 6, m): null

10-01-2025T03:05:24 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 7, y): null

10-01-2025T03:05:24 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 8, todaysDate): null

10-01-2025T03:05:24 - [TEST_STEP][PASSED] - n = n + 1: null

10-01-2025T03:05:24 - [TEST_STEP][PASSED] - saveWorkbook(excelFilePath, workbook01): null

10-01-2025T03:05:24 - [TEST_STEP][PASSED] - typeOfData = "План Потери": null

10-01-2025T03:05:24 - [TEST_STEP][PASSED] - tabR = GetPPlanR(x = a): null

10-01-2025T03:05:24 - [TEST_STEP][PASSED] - i1 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:24 - [TEST_STEP][PASSED] - ii = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:24 - [TEST_STEP][PASSED] - for ([ii = 1, ii < 9, (ii++)]): null

10-01-2025T03:05:24 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:24 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:24 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:24 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:24 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:24 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:24 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:24 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:24 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:24 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:24 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:24 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:24 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:24 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:24 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:24 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:24 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:24 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:24 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:24 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:24 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:24 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:24 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:24 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:24 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:24 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:24 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:24 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:24 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:24 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:24 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:24 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:24 - [TEST_STEP][PASSED] - i1 = x.indexOf("/"): null

10-01-2025T03:05:24 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:24 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:24 - [TEST_STEP][PASSED] - return x: null

10-01-2025T03:05:24 - [TEST_STEP][PASSED] - tabB = GetPPlanB(x = b): null

10-01-2025T03:05:24 - [TEST_STEP][PASSED] - i1 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:24 - [TEST_STEP][PASSED] - ii = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:24 - [TEST_STEP][PASSED] - for ([ii = 1, ii < 9, (ii++)]): null

10-01-2025T03:05:24 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:24 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:24 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:24 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:24 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:24 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:24 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:24 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:24 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:24 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:24 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:24 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:24 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:24 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:24 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:24 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:24 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:24 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:24 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:24 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:24 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:24 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:24 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:24 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:24 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:24 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:24 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:24 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:24 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:24 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:24 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:24 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:24 - [TEST_STEP][PASSED] - i1 = x.indexOf("/"): null

10-01-2025T03:05:24 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:24 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:24 - [TEST_STEP][FAILED] - return x: null

10-01-2025T03:05:24 - [TEST_STEP][PASSED] - println(tabR + "/" + tabB): null

10-01-2025T03:05:24 - [TEST_STEP][FAILED] - if (verifyEqual(PercFactR, PercFactB) == false): null

10-01-2025T03:05:24 - [MESSAGE][FAILED] - Unable to verify equal between actual object '5.52' and expected object '8.12' (Root cause: com.kms.katalon.core.exception.StepFailedException: Actual object '5.52' and expected object '8.12' are not equal
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.doCall(VerifyEqualKeyword.groovy:58)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.call(VerifyEqualKeyword.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:75)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.verifyEqual(VerifyEqualKeyword.groovy:63)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.execute(VerifyEqualKeyword.groovy:44)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:74)
	at com.kms.katalon.core.keyword.BuiltinKeywords.verifyEqual(BuiltinKeywords.groovy:146)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at Выполнение бизнес-плана сверка дашбордов.CompareDZOData(Выполнение бизнес-плана сверка дашбордов:771)
	at Выполнение бизнес-плана сверка дашбордов.run(Выполнение бизнес-плана сверка дашбордов:578)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:448)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:439)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:418)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:410)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:285)
	at com.kms.katalon.core.common.CommonExecutor.accessTestCaseMainPhase(CommonExecutor.java:65)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:150)
	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:106)
	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:180)
	at TempTestSuite1736466949911.run(TempTestSuite1736466949911.groovy:35)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
)

10-01-2025T03:05:24 - [TEST_STEP][PASSED] - result = WriteToExcel(typeOfData, todaysDate, PercPlanR, PercPlanB, PercFactR, PercFactB, x, tabR, tabB, o1R, o1B, vidget): null

10-01-2025T03:05:24 - [TEST_STEP][PASSED] - iii = dZO.indexOf("/"): null

10-01-2025T03:05:24 - [TEST_STEP][PASSED] - println(iii): null

10-01-2025T03:05:24 - [TEST_STEP][PASSED] - dZO = dZO.substring(0, iii): null

10-01-2025T03:05:24 - [TEST_STEP][PASSED] - println(dZO): null

10-01-2025T03:05:24 - [TEST_STEP][PASSED] - println(PercPlanR): null

10-01-2025T03:05:24 - [TEST_STEP][PASSED] - println(PercPlanB): null

10-01-2025T03:05:24 - [TEST_STEP][PASSED] - println(PercFactR): null

10-01-2025T03:05:24 - [TEST_STEP][PASSED] - println(PercFactB): null

10-01-2025T03:05:24 - [TEST_STEP][PASSED] - println(tabR): null

10-01-2025T03:05:24 - [TEST_STEP][PASSED] - println(tabB): null

10-01-2025T03:05:24 - [TEST_STEP][PASSED] - println(o1R): null

10-01-2025T03:05:24 - [TEST_STEP][PASSED] - println(o1B): null

10-01-2025T03:05:24 - [TEST_STEP][PASSED] - PR = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:24 - [TEST_STEP][PASSED] - FR = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:24 - [TEST_STEP][PASSED] - PB = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:24 - [TEST_STEP][PASSED] - FB = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:24 - [TEST_STEP][PASSED] - TR = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:24 - [TEST_STEP][PASSED] - TB = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:24 - [TEST_STEP][PASSED] - sheetName = "Sheet1": null

10-01-2025T03:05:24 - [TEST_STEP][PASSED] - data = findTestData("PlanFact"): null

10-01-2025T03:05:24 - [TEST_STEP][PASSED] - n = data.getRowNumbers() + 1: null

10-01-2025T03:05:24 - [TEST_STEP][PASSED] - year = todaysDate.substring(todaysDate.length() - 4, todaysDate.length()): null

10-01-2025T03:05:24 - [TEST_STEP][PASSED] - y = year.toInteger(): null

10-01-2025T03:05:24 - [TEST_STEP][PASSED] - m = getText(findTestObject("Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Фильтр Дата")): Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Фильтр Дата' is: '1, 2, 3 кв., Октябрь, Ноябрь 2024 года'

10-01-2025T03:05:24 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Фильтр Дата' is: '1, 2, 3 кв., Октябрь, Ноябрь 2024 года'

10-01-2025T03:05:24 - [TEST_STEP][PASSED] - m = m.substring(0, m.indexOf("2024")): null

10-01-2025T03:05:24 - [TEST_STEP][PASSED] - m = m.trim(): null

10-01-2025T03:05:24 - [TEST_STEP][PASSED] - dashboardName = "Выполнение бизнес-плана": null

10-01-2025T03:05:24 - [TEST_STEP][PASSED] - workbook01 = getWorkbook(excelFilePath): null

10-01-2025T03:05:24 - [TEST_STEP][PASSED] - sheet01 = getExcelSheet(workbook01, sheetName): null

10-01-2025T03:05:24 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 0, dashboardName): null

10-01-2025T03:05:24 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 1, dZO): null

10-01-2025T03:05:24 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 2, typeOfData): null

10-01-2025T03:05:24 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 3, typeOfData): null

10-01-2025T03:05:24 - [TEST_STEP][PASSED] - if (typeOfData == "План"): null

10-01-2025T03:05:24 - [TEST_STEP][PASSED] - else if (typeOfData == "Факт"): null

10-01-2025T03:05:24 - [TEST_STEP][PASSED] - else if (vidget.contains("электроэнергии") == true): null

10-01-2025T03:05:24 - [TEST_STEP][PASSED] - if (tabR == null): null

10-01-2025T03:05:24 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:05:24 - [TEST_STEP][PASSED] - if (tabR == "нет данных"): null

10-01-2025T03:05:24 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:05:24 - [TEST_STEP][PASSED] - TR = tabR.toInteger(): null

10-01-2025T03:05:24 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 4, TR): null

10-01-2025T03:05:24 - [TEST_STEP][PASSED] - if (tabB == null): null

10-01-2025T03:05:24 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:05:24 - [TEST_STEP][PASSED] - if (tabB == "нет данных"): null

10-01-2025T03:05:24 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:05:24 - [TEST_STEP][PASSED] - TB = tabB.toInteger(): null

10-01-2025T03:05:24 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 5, TB): null

10-01-2025T03:05:24 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 6, m): null

10-01-2025T03:05:24 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 7, y): null

10-01-2025T03:05:24 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 8, todaysDate): null

10-01-2025T03:05:24 - [TEST_STEP][PASSED] - n = n + 1: null

10-01-2025T03:05:24 - [TEST_STEP][FAILED] - saveWorkbook(excelFilePath, workbook01): null

10-01-2025T03:05:25 - [TEST_STEP][PASSED] - ii2 = a.indexOf("ПАО"): null

10-01-2025T03:05:25 - [TEST_STEP][PASSED] - if (ii2 == -1): null

10-01-2025T03:05:25 - [TEST_STEP][FAILED] - if (verifyEqual(fR, fB) == false): null

10-01-2025T03:05:25 - [MESSAGE][FAILED] - Unable to verify equal between actual object 'Россети ФСК ЕЭС/нет данных/нет данных/нет данных/нет данных/нет данных/нет данных/нет данных/нет данных/нет данных' and expected object 'Россети ФСК ЕЭС/3.90/3.68/569816774/549615412/20201362/552921070/532181995/20739075/-0.22' (Root cause: com.kms.katalon.core.exception.StepFailedException: Actual object 'Россети ФСК ЕЭС/нет данных/нет данных/нет данных/нет данных/нет данных/нет данных/нет данных/нет данных/нет данных' and expected object 'Россети ФСК ЕЭС/3.90/3.68/569816774/549615412/20201362/552921070/532181995/20739075/-0.22' are not equal
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.doCall(VerifyEqualKeyword.groovy:58)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.call(VerifyEqualKeyword.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:75)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.verifyEqual(VerifyEqualKeyword.groovy:63)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.execute(VerifyEqualKeyword.groovy:44)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:74)
	at com.kms.katalon.core.keyword.BuiltinKeywords.verifyEqual(BuiltinKeywords.groovy:146)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at Выполнение бизнес-плана сверка дашбордов.run(Выполнение бизнес-плана сверка дашбордов:582)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:448)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:439)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:418)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:410)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:285)
	at com.kms.katalon.core.common.CommonExecutor.accessTestCaseMainPhase(CommonExecutor.java:65)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:150)
	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:106)
	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:180)
	at TempTestSuite1736466949911.run(TempTestSuite1736466949911.groovy:35)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
)

10-01-2025T03:05:25 - [TEST_STEP][PASSED] - result = CompareDZOData(a = fR, b = fB, dZO, typeOfData, PercPlanR, PercPlanB, PercFactR, PercFactB, todaysDate, x, vidget, tabR, tabB, o1R, o1B): null

10-01-2025T03:05:25 - [TEST_STEP][PASSED] - ii2 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:25 - [TEST_STEP][FAILED] - if (verifyEqual(a, b) == false): null

10-01-2025T03:05:25 - [MESSAGE][FAILED] - Unable to verify equal between actual object 'Россети ФСК ЕЭС/нет данных/нет данных/нет данных/нет данных/нет данных/нет данных/нет данных/нет данных/нет данных' and expected object 'Россети ФСК ЕЭС/3.90/3.68/569816774/549615412/20201362/552921070/532181995/20739075/-0.22' (Root cause: com.kms.katalon.core.exception.StepFailedException: Actual object 'Россети ФСК ЕЭС/нет данных/нет данных/нет данных/нет данных/нет данных/нет данных/нет данных/нет данных/нет данных' and expected object 'Россети ФСК ЕЭС/3.90/3.68/569816774/549615412/20201362/552921070/532181995/20739075/-0.22' are not equal
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.doCall(VerifyEqualKeyword.groovy:58)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.call(VerifyEqualKeyword.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:75)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.verifyEqual(VerifyEqualKeyword.groovy:63)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.execute(VerifyEqualKeyword.groovy:44)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:74)
	at com.kms.katalon.core.keyword.BuiltinKeywords.verifyEqual(BuiltinKeywords.groovy:146)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at Выполнение бизнес-плана сверка дашбордов.CompareDZOData(Выполнение бизнес-плана сверка дашбордов:673)
	at Выполнение бизнес-плана сверка дашбордов.run(Выполнение бизнес-плана сверка дашбордов:583)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:448)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:439)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:418)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:410)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:285)
	at com.kms.katalon.core.common.CommonExecutor.accessTestCaseMainPhase(CommonExecutor.java:65)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:150)
	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:106)
	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:180)
	at TempTestSuite1736466949911.run(TempTestSuite1736466949911.groovy:35)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
)

10-01-2025T03:05:25 - [TEST_STEP][PASSED] - vidget = "Уровень потерь электроэнергии": null

10-01-2025T03:05:25 - [TEST_STEP][PASSED] - typeOfData = "План": null

10-01-2025T03:05:25 - [TEST_STEP][PASSED] - PercPlanR = GetPercPlanR(x = a): null

10-01-2025T03:05:25 - [TEST_STEP][PASSED] - i1 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:25 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:25 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:25 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:25 - [TEST_STEP][PASSED] - i1 = x.indexOf("/"): null

10-01-2025T03:05:25 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:25 - [TEST_STEP][PASSED] - x = x.substring(0, i1): null

10-01-2025T03:05:25 - [TEST_STEP][PASSED] - return x: null

10-01-2025T03:05:25 - [TEST_STEP][PASSED] - PercPlanB = GetPercPlanB(x = b): null

10-01-2025T03:05:25 - [TEST_STEP][PASSED] - i1 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:25 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:25 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:25 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:25 - [TEST_STEP][PASSED] - i1 = x.indexOf("/"): null

10-01-2025T03:05:25 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:25 - [TEST_STEP][PASSED] - x = x.substring(0, i1): null

10-01-2025T03:05:25 - [TEST_STEP][FAILED] - return x: null

10-01-2025T03:05:25 - [TEST_STEP][FAILED] - if (verifyEqual(PercPlanR, PercPlanB) == false): null

10-01-2025T03:05:25 - [MESSAGE][FAILED] - Unable to verify equal between actual object 'нет данных' and expected object '3.90' (Root cause: com.kms.katalon.core.exception.StepFailedException: Actual object 'нет данных' and expected object '3.90' are not equal
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.doCall(VerifyEqualKeyword.groovy:58)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.call(VerifyEqualKeyword.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:75)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.verifyEqual(VerifyEqualKeyword.groovy:63)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.execute(VerifyEqualKeyword.groovy:44)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:74)
	at com.kms.katalon.core.keyword.BuiltinKeywords.verifyEqual(BuiltinKeywords.groovy:146)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at Выполнение бизнес-плана сверка дашбордов.CompareDZOData(Выполнение бизнес-плана сверка дашбордов:682)
	at Выполнение бизнес-плана сверка дашбордов.run(Выполнение бизнес-плана сверка дашбордов:583)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:448)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:439)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:418)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:410)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:285)
	at com.kms.katalon.core.common.CommonExecutor.accessTestCaseMainPhase(CommonExecutor.java:65)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:150)
	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:106)
	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:180)
	at TempTestSuite1736466949911.run(TempTestSuite1736466949911.groovy:35)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
)

10-01-2025T03:05:25 - [TEST_STEP][PASSED] - result = WriteToExcel(typeOfData, todaysDate, PercPlanR, PercPlanB, PercFactR, PercFactB, x, tabR, tabB, o1R, o1B, vidget): null

10-01-2025T03:05:25 - [TEST_STEP][PASSED] - iii = dZO.indexOf("/"): null

10-01-2025T03:05:25 - [TEST_STEP][PASSED] - println(iii): null

10-01-2025T03:05:25 - [TEST_STEP][PASSED] - dZO = dZO.substring(0, iii): null

10-01-2025T03:05:25 - [TEST_STEP][PASSED] - println(dZO): null

10-01-2025T03:05:25 - [TEST_STEP][PASSED] - println(PercPlanR): null

10-01-2025T03:05:25 - [TEST_STEP][PASSED] - println(PercPlanB): null

10-01-2025T03:05:25 - [TEST_STEP][PASSED] - println(PercFactR): null

10-01-2025T03:05:25 - [TEST_STEP][PASSED] - println(PercFactB): null

10-01-2025T03:05:25 - [TEST_STEP][PASSED] - println(tabR): null

10-01-2025T03:05:25 - [TEST_STEP][PASSED] - println(tabB): null

10-01-2025T03:05:25 - [TEST_STEP][PASSED] - println(o1R): null

10-01-2025T03:05:25 - [TEST_STEP][PASSED] - println(o1B): null

10-01-2025T03:05:25 - [TEST_STEP][PASSED] - PR = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:25 - [TEST_STEP][PASSED] - FR = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:25 - [TEST_STEP][PASSED] - PB = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:25 - [TEST_STEP][PASSED] - FB = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:25 - [TEST_STEP][PASSED] - TR = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:25 - [TEST_STEP][PASSED] - TB = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:25 - [TEST_STEP][PASSED] - sheetName = "Sheet1": null

10-01-2025T03:05:25 - [TEST_STEP][PASSED] - data = findTestData("PlanFact"): null

10-01-2025T03:05:25 - [TEST_STEP][PASSED] - n = data.getRowNumbers() + 1: null

10-01-2025T03:05:25 - [TEST_STEP][PASSED] - year = todaysDate.substring(todaysDate.length() - 4, todaysDate.length()): null

10-01-2025T03:05:25 - [TEST_STEP][PASSED] - y = year.toInteger(): null

10-01-2025T03:05:25 - [TEST_STEP][PASSED] - m = getText(findTestObject("Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Фильтр Дата")): Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Фильтр Дата' is: '1, 2, 3 кв., Октябрь, Ноябрь 2024 года'

10-01-2025T03:05:25 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Фильтр Дата' is: '1, 2, 3 кв., Октябрь, Ноябрь 2024 года'

10-01-2025T03:05:25 - [TEST_STEP][PASSED] - m = m.substring(0, m.indexOf("2024")): null

10-01-2025T03:05:25 - [TEST_STEP][PASSED] - m = m.trim(): null

10-01-2025T03:05:25 - [TEST_STEP][PASSED] - dashboardName = "Выполнение бизнес-плана": null

10-01-2025T03:05:25 - [TEST_STEP][PASSED] - workbook01 = getWorkbook(excelFilePath): null

10-01-2025T03:05:25 - [TEST_STEP][PASSED] - sheet01 = getExcelSheet(workbook01, sheetName): null

10-01-2025T03:05:25 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 0, dashboardName): null

10-01-2025T03:05:25 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 1, dZO): null

10-01-2025T03:05:25 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 2, typeOfData): null

10-01-2025T03:05:25 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 3, typeOfData): null

10-01-2025T03:05:25 - [TEST_STEP][PASSED] - if (typeOfData == "План"): null

10-01-2025T03:05:25 - [TEST_STEP][PASSED] - if (PercPlanR == null): null

10-01-2025T03:05:25 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:05:25 - [TEST_STEP][PASSED] - if (PercPlanR == "нет данных"): null

10-01-2025T03:05:25 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 4, "нет данных"): null

10-01-2025T03:05:25 - [TEST_STEP][PASSED] - if (PercPlanB == null): null

10-01-2025T03:05:25 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:05:25 - [TEST_STEP][PASSED] - if (PercPlanB == "нет данных"): null

10-01-2025T03:05:25 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:05:25 - [TEST_STEP][PASSED] - PB = PercPlanB.toDouble(): null

10-01-2025T03:05:25 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 5, PB): null

10-01-2025T03:05:25 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 6, m): null

10-01-2025T03:05:25 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 7, y): null

10-01-2025T03:05:25 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 8, todaysDate): null

10-01-2025T03:05:25 - [TEST_STEP][PASSED] - n = n + 1: null

10-01-2025T03:05:25 - [TEST_STEP][PASSED] - saveWorkbook(excelFilePath, workbook01): null

10-01-2025T03:05:25 - [TEST_STEP][PASSED] - typeOfData = "Факт": null

10-01-2025T03:05:25 - [TEST_STEP][PASSED] - PercFactR = GetPercFactR(x = a): null

10-01-2025T03:05:25 - [TEST_STEP][PASSED] - i1 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:25 - [TEST_STEP][PASSED] - ii = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:25 - [TEST_STEP][PASSED] - for ([ii = 1, ii < 3, (ii++)]): null

10-01-2025T03:05:25 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:25 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:25 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:25 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:25 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:25 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:25 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:25 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:25 - [TEST_STEP][PASSED] - i1 = x.indexOf("/"): null

10-01-2025T03:05:25 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:25 - [TEST_STEP][PASSED] - x = x.substring(0, i1): null

10-01-2025T03:05:25 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:25 - [TEST_STEP][PASSED] - return x: null

10-01-2025T03:05:25 - [TEST_STEP][PASSED] - PercFactB = GetPercFactB(x = b): null

10-01-2025T03:05:25 - [TEST_STEP][PASSED] - i1 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:25 - [TEST_STEP][PASSED] - ii = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:25 - [TEST_STEP][PASSED] - for ([ii = 1, ii < 3, (ii++)]): null

10-01-2025T03:05:25 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:25 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:25 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:25 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:25 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:25 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:25 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:25 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:25 - [TEST_STEP][PASSED] - i1 = x.indexOf("/"): null

10-01-2025T03:05:25 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:25 - [TEST_STEP][PASSED] - x = x.substring(0, i1): null

10-01-2025T03:05:25 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:25 - [TEST_STEP][FAILED] - return x: null

10-01-2025T03:05:25 - [TEST_STEP][FAILED] - if (verifyEqual(PercFactR, PercFactB) == false): null

10-01-2025T03:05:25 - [MESSAGE][FAILED] - Unable to verify equal between actual object 'нет данных' and expected object '3.68' (Root cause: com.kms.katalon.core.exception.StepFailedException: Actual object 'нет данных' and expected object '3.68' are not equal
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.doCall(VerifyEqualKeyword.groovy:58)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.call(VerifyEqualKeyword.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:75)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.verifyEqual(VerifyEqualKeyword.groovy:63)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.execute(VerifyEqualKeyword.groovy:44)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:74)
	at com.kms.katalon.core.keyword.BuiltinKeywords.verifyEqual(BuiltinKeywords.groovy:146)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at Выполнение бизнес-плана сверка дашбордов.CompareDZOData(Выполнение бизнес-плана сверка дашбордов:693)
	at Выполнение бизнес-плана сверка дашбордов.run(Выполнение бизнес-плана сверка дашбордов:583)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:448)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:439)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:418)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:410)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:285)
	at com.kms.katalon.core.common.CommonExecutor.accessTestCaseMainPhase(CommonExecutor.java:65)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:150)
	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:106)
	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:180)
	at TempTestSuite1736466949911.run(TempTestSuite1736466949911.groovy:35)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
)

10-01-2025T03:05:25 - [TEST_STEP][PASSED] - result = WriteToExcel(typeOfData, todaysDate, PercPlanR, PercPlanB, PercFactR, PercFactB, x, tabR, tabB, o1R, o1B, vidget): null

10-01-2025T03:05:25 - [TEST_STEP][PASSED] - iii = dZO.indexOf("/"): null

10-01-2025T03:05:25 - [TEST_STEP][PASSED] - println(iii): null

10-01-2025T03:05:25 - [TEST_STEP][PASSED] - dZO = dZO.substring(0, iii): null

10-01-2025T03:05:25 - [TEST_STEP][PASSED] - println(dZO): null

10-01-2025T03:05:25 - [TEST_STEP][PASSED] - println(PercPlanR): null

10-01-2025T03:05:25 - [TEST_STEP][PASSED] - println(PercPlanB): null

10-01-2025T03:05:25 - [TEST_STEP][PASSED] - println(PercFactR): null

10-01-2025T03:05:25 - [TEST_STEP][PASSED] - println(PercFactB): null

10-01-2025T03:05:25 - [TEST_STEP][PASSED] - println(tabR): null

10-01-2025T03:05:25 - [TEST_STEP][PASSED] - println(tabB): null

10-01-2025T03:05:25 - [TEST_STEP][PASSED] - println(o1R): null

10-01-2025T03:05:25 - [TEST_STEP][PASSED] - println(o1B): null

10-01-2025T03:05:25 - [TEST_STEP][PASSED] - PR = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:25 - [TEST_STEP][PASSED] - FR = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:25 - [TEST_STEP][PASSED] - PB = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:25 - [TEST_STEP][PASSED] - FB = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:25 - [TEST_STEP][PASSED] - TR = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:25 - [TEST_STEP][PASSED] - TB = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:25 - [TEST_STEP][PASSED] - sheetName = "Sheet1": null

10-01-2025T03:05:25 - [TEST_STEP][PASSED] - data = findTestData("PlanFact"): null

10-01-2025T03:05:25 - [TEST_STEP][PASSED] - n = data.getRowNumbers() + 1: null

10-01-2025T03:05:25 - [TEST_STEP][PASSED] - year = todaysDate.substring(todaysDate.length() - 4, todaysDate.length()): null

10-01-2025T03:05:25 - [TEST_STEP][PASSED] - y = year.toInteger(): null

10-01-2025T03:05:25 - [TEST_STEP][PASSED] - m = getText(findTestObject("Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Фильтр Дата")): Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Фильтр Дата' is: '1, 2, 3 кв., Октябрь, Ноябрь 2024 года'

10-01-2025T03:05:26 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Фильтр Дата' is: '1, 2, 3 кв., Октябрь, Ноябрь 2024 года'

10-01-2025T03:05:26 - [TEST_STEP][PASSED] - m = m.substring(0, m.indexOf("2024")): null

10-01-2025T03:05:26 - [TEST_STEP][PASSED] - m = m.trim(): null

10-01-2025T03:05:26 - [TEST_STEP][PASSED] - dashboardName = "Выполнение бизнес-плана": null

10-01-2025T03:05:26 - [TEST_STEP][PASSED] - workbook01 = getWorkbook(excelFilePath): null

10-01-2025T03:05:26 - [TEST_STEP][PASSED] - sheet01 = getExcelSheet(workbook01, sheetName): null

10-01-2025T03:05:26 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 0, dashboardName): null

10-01-2025T03:05:26 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 1, dZO): null

10-01-2025T03:05:26 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 2, typeOfData): null

10-01-2025T03:05:26 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 3, typeOfData): null

10-01-2025T03:05:26 - [TEST_STEP][PASSED] - if (typeOfData == "План"): null

10-01-2025T03:05:26 - [TEST_STEP][PASSED] - else if (typeOfData == "Факт"): null

10-01-2025T03:05:26 - [TEST_STEP][PASSED] - if (PercFactR == null): null

10-01-2025T03:05:26 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:05:26 - [TEST_STEP][PASSED] - if (PercFactR == "нет данных"): null

10-01-2025T03:05:26 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 4, "нет данных"): null

10-01-2025T03:05:26 - [TEST_STEP][PASSED] - if (PercFactB == null): null

10-01-2025T03:05:26 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:05:26 - [TEST_STEP][PASSED] - if (PercFactB == "нет данных"): null

10-01-2025T03:05:26 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:05:26 - [TEST_STEP][PASSED] - FB = PercFactB.toDouble(): null

10-01-2025T03:05:26 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 5, FB): null

10-01-2025T03:05:26 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 6, m): null

10-01-2025T03:05:26 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 7, y): null

10-01-2025T03:05:26 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 8, todaysDate): null

10-01-2025T03:05:26 - [TEST_STEP][PASSED] - n = n + 1: null

10-01-2025T03:05:26 - [TEST_STEP][PASSED] - saveWorkbook(excelFilePath, workbook01): null

10-01-2025T03:05:26 - [TEST_STEP][PASSED] - vidget = "Показатели баланса электроэнергии по ДЗО – Факт": null

10-01-2025T03:05:26 - [TEST_STEP][PASSED] - typeOfData = "Факт Отпуск в сеть": null

10-01-2025T03:05:26 - [TEST_STEP][PASSED] - tabR = GetOvSFactR(x = a): null

10-01-2025T03:05:26 - [TEST_STEP][PASSED] - i1 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:26 - [TEST_STEP][PASSED] - ii = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:26 - [TEST_STEP][PASSED] - for ([ii = 1, ii < 4, (ii++)]): null

10-01-2025T03:05:26 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:26 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:26 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:26 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:26 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:26 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:26 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:26 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:26 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:26 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:26 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:26 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:26 - [TEST_STEP][PASSED] - i1 = x.indexOf("/"): null

10-01-2025T03:05:26 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:26 - [TEST_STEP][PASSED] - x = x.substring(0, i1): null

10-01-2025T03:05:26 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:26 - [TEST_STEP][PASSED] - return x: null

10-01-2025T03:05:26 - [TEST_STEP][PASSED] - tabB = GetOvSFactB(x = b): null

10-01-2025T03:05:26 - [TEST_STEP][PASSED] - i1 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:26 - [TEST_STEP][PASSED] - ii = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:26 - [TEST_STEP][PASSED] - for ([ii = 1, ii < 4, (ii++)]): null

10-01-2025T03:05:26 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:26 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:26 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:26 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:26 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:26 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:26 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:26 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:26 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:26 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:26 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:26 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:26 - [TEST_STEP][PASSED] - i1 = x.indexOf("/"): null

10-01-2025T03:05:26 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:26 - [TEST_STEP][PASSED] - x = x.substring(0, i1): null

10-01-2025T03:05:26 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:26 - [TEST_STEP][FAILED] - return x: null

10-01-2025T03:05:26 - [TEST_STEP][FAILED] - if (verifyEqual(tabR, tabB) == false): null

10-01-2025T03:05:26 - [MESSAGE][FAILED] - Unable to verify equal between actual object 'нет данных' and expected object '569816774' (Root cause: com.kms.katalon.core.exception.StepFailedException: Actual object 'нет данных' and expected object '569816774' are not equal
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.doCall(VerifyEqualKeyword.groovy:58)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.call(VerifyEqualKeyword.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:75)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.verifyEqual(VerifyEqualKeyword.groovy:63)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.execute(VerifyEqualKeyword.groovy:44)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:74)
	at com.kms.katalon.core.keyword.BuiltinKeywords.verifyEqual(BuiltinKeywords.groovy:146)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at Выполнение бизнес-плана сверка дашбордов.CompareDZOData(Выполнение бизнес-плана сверка дашбордов:706)
	at Выполнение бизнес-плана сверка дашбордов.run(Выполнение бизнес-плана сверка дашбордов:583)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:448)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:439)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:418)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:410)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:285)
	at com.kms.katalon.core.common.CommonExecutor.accessTestCaseMainPhase(CommonExecutor.java:65)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:150)
	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:106)
	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:180)
	at TempTestSuite1736466949911.run(TempTestSuite1736466949911.groovy:35)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
)

10-01-2025T03:05:26 - [TEST_STEP][PASSED] - result = WriteToExcel(typeOfData, todaysDate, PercPlanR, PercPlanB, PercFactR, PercFactB, x, tabR, tabB, o1R, o1B, vidget): null

10-01-2025T03:05:26 - [TEST_STEP][PASSED] - iii = dZO.indexOf("/"): null

10-01-2025T03:05:26 - [TEST_STEP][PASSED] - println(iii): null

10-01-2025T03:05:26 - [TEST_STEP][PASSED] - dZO = dZO.substring(0, iii): null

10-01-2025T03:05:26 - [TEST_STEP][PASSED] - println(dZO): null

10-01-2025T03:05:26 - [TEST_STEP][PASSED] - println(PercPlanR): null

10-01-2025T03:05:26 - [TEST_STEP][PASSED] - println(PercPlanB): null

10-01-2025T03:05:26 - [TEST_STEP][PASSED] - println(PercFactR): null

10-01-2025T03:05:26 - [TEST_STEP][PASSED] - println(PercFactB): null

10-01-2025T03:05:26 - [TEST_STEP][PASSED] - println(tabR): null

10-01-2025T03:05:26 - [TEST_STEP][PASSED] - println(tabB): null

10-01-2025T03:05:26 - [TEST_STEP][PASSED] - println(o1R): null

10-01-2025T03:05:26 - [TEST_STEP][PASSED] - println(o1B): null

10-01-2025T03:05:26 - [TEST_STEP][PASSED] - PR = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:26 - [TEST_STEP][PASSED] - FR = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:26 - [TEST_STEP][PASSED] - PB = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:26 - [TEST_STEP][PASSED] - FB = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:26 - [TEST_STEP][PASSED] - TR = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:26 - [TEST_STEP][PASSED] - TB = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:26 - [TEST_STEP][PASSED] - sheetName = "Sheet1": null

10-01-2025T03:05:26 - [TEST_STEP][PASSED] - data = findTestData("PlanFact"): null

10-01-2025T03:05:26 - [TEST_STEP][PASSED] - n = data.getRowNumbers() + 1: null

10-01-2025T03:05:26 - [TEST_STEP][PASSED] - year = todaysDate.substring(todaysDate.length() - 4, todaysDate.length()): null

10-01-2025T03:05:26 - [TEST_STEP][PASSED] - y = year.toInteger(): null

10-01-2025T03:05:26 - [TEST_STEP][PASSED] - m = getText(findTestObject("Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Фильтр Дата")): Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Фильтр Дата' is: '1, 2, 3 кв., Октябрь, Ноябрь 2024 года'

10-01-2025T03:05:26 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Фильтр Дата' is: '1, 2, 3 кв., Октябрь, Ноябрь 2024 года'

10-01-2025T03:05:26 - [TEST_STEP][PASSED] - m = m.substring(0, m.indexOf("2024")): null

10-01-2025T03:05:26 - [TEST_STEP][PASSED] - m = m.trim(): null

10-01-2025T03:05:26 - [TEST_STEP][PASSED] - dashboardName = "Выполнение бизнес-плана": null

10-01-2025T03:05:26 - [TEST_STEP][PASSED] - workbook01 = getWorkbook(excelFilePath): null

10-01-2025T03:05:26 - [TEST_STEP][PASSED] - sheet01 = getExcelSheet(workbook01, sheetName): null

10-01-2025T03:05:26 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 0, dashboardName): null

10-01-2025T03:05:26 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 1, dZO): null

10-01-2025T03:05:26 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 2, typeOfData): null

10-01-2025T03:05:26 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 3, typeOfData): null

10-01-2025T03:05:26 - [TEST_STEP][PASSED] - if (typeOfData == "План"): null

10-01-2025T03:05:26 - [TEST_STEP][PASSED] - else if (typeOfData == "Факт"): null

10-01-2025T03:05:26 - [TEST_STEP][PASSED] - else if (vidget.contains("электроэнергии") == true): null

10-01-2025T03:05:26 - [TEST_STEP][PASSED] - if (tabR == null): null

10-01-2025T03:05:26 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:05:26 - [TEST_STEP][PASSED] - if (tabR == "нет данных"): null

10-01-2025T03:05:26 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 4, "нет данных"): null

10-01-2025T03:05:26 - [TEST_STEP][PASSED] - if (tabB == null): null

10-01-2025T03:05:26 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:05:26 - [TEST_STEP][PASSED] - if (tabB == "нет данных"): null

10-01-2025T03:05:26 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:05:26 - [TEST_STEP][PASSED] - TB = tabB.toInteger(): null

10-01-2025T03:05:26 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 5, TB): null

10-01-2025T03:05:26 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 6, m): null

10-01-2025T03:05:26 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 7, y): null

10-01-2025T03:05:26 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 8, todaysDate): null

10-01-2025T03:05:26 - [TEST_STEP][PASSED] - n = n + 1: null

10-01-2025T03:05:26 - [TEST_STEP][PASSED] - saveWorkbook(excelFilePath, workbook01): null

10-01-2025T03:05:27 - [TEST_STEP][PASSED] - typeOfData = "Факт Отпуск из сети": null

10-01-2025T03:05:27 - [TEST_STEP][PASSED] - tabR = GetOiSFactR(x = a): null

10-01-2025T03:05:27 - [TEST_STEP][PASSED] - i1 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:27 - [TEST_STEP][PASSED] - ii = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:27 - [TEST_STEP][PASSED] - for ([ii = 1, ii < 5, (ii++)]): null

10-01-2025T03:05:27 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:27 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:27 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:27 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:27 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:27 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:27 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:27 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:27 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:27 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:27 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:27 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:27 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:27 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:27 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:27 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:27 - [TEST_STEP][PASSED] - i1 = x.indexOf("/"): null

10-01-2025T03:05:27 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:27 - [TEST_STEP][PASSED] - x = x.substring(0, i1): null

10-01-2025T03:05:27 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:27 - [TEST_STEP][PASSED] - return x: null

10-01-2025T03:05:27 - [TEST_STEP][PASSED] - tabB = GetOiSFactB(x = b): null

10-01-2025T03:05:27 - [TEST_STEP][PASSED] - i1 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:27 - [TEST_STEP][PASSED] - ii = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:27 - [TEST_STEP][PASSED] - for ([ii = 1, ii < 5, (ii++)]): null

10-01-2025T03:05:27 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:27 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:27 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:27 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:27 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:27 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:27 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:27 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:27 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:27 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:27 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:27 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:27 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:27 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:27 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:27 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:27 - [TEST_STEP][PASSED] - i1 = x.indexOf("/"): null

10-01-2025T03:05:27 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:27 - [TEST_STEP][PASSED] - x = x.substring(0, i1): null

10-01-2025T03:05:27 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:27 - [TEST_STEP][FAILED] - return x: null

10-01-2025T03:05:27 - [TEST_STEP][FAILED] - if (verifyEqual(tabR, tabB) == false): null

10-01-2025T03:05:27 - [MESSAGE][FAILED] - Unable to verify equal between actual object 'нет данных' and expected object '549615412' (Root cause: com.kms.katalon.core.exception.StepFailedException: Actual object 'нет данных' and expected object '549615412' are not equal
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.doCall(VerifyEqualKeyword.groovy:58)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.call(VerifyEqualKeyword.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:75)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.verifyEqual(VerifyEqualKeyword.groovy:63)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.execute(VerifyEqualKeyword.groovy:44)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:74)
	at com.kms.katalon.core.keyword.BuiltinKeywords.verifyEqual(BuiltinKeywords.groovy:146)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at Выполнение бизнес-плана сверка дашбордов.CompareDZOData(Выполнение бизнес-плана сверка дашбордов:717)
	at Выполнение бизнес-плана сверка дашбордов.run(Выполнение бизнес-плана сверка дашбордов:583)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:448)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:439)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:418)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:410)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:285)
	at com.kms.katalon.core.common.CommonExecutor.accessTestCaseMainPhase(CommonExecutor.java:65)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:150)
	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:106)
	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:180)
	at TempTestSuite1736466949911.run(TempTestSuite1736466949911.groovy:35)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
)

10-01-2025T03:05:27 - [TEST_STEP][PASSED] - result = WriteToExcel(typeOfData, todaysDate, PercPlanR, PercPlanB, PercFactR, PercFactB, x, tabR, tabB, o1R, o1B, vidget): null

10-01-2025T03:05:27 - [TEST_STEP][PASSED] - iii = dZO.indexOf("/"): null

10-01-2025T03:05:27 - [TEST_STEP][PASSED] - println(iii): null

10-01-2025T03:05:27 - [TEST_STEP][PASSED] - dZO = dZO.substring(0, iii): null

10-01-2025T03:05:27 - [TEST_STEP][PASSED] - println(dZO): null

10-01-2025T03:05:27 - [TEST_STEP][PASSED] - println(PercPlanR): null

10-01-2025T03:05:27 - [TEST_STEP][PASSED] - println(PercPlanB): null

10-01-2025T03:05:27 - [TEST_STEP][PASSED] - println(PercFactR): null

10-01-2025T03:05:27 - [TEST_STEP][PASSED] - println(PercFactB): null

10-01-2025T03:05:27 - [TEST_STEP][PASSED] - println(tabR): null

10-01-2025T03:05:27 - [TEST_STEP][PASSED] - println(tabB): null

10-01-2025T03:05:27 - [TEST_STEP][PASSED] - println(o1R): null

10-01-2025T03:05:27 - [TEST_STEP][PASSED] - println(o1B): null

10-01-2025T03:05:27 - [TEST_STEP][PASSED] - PR = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:27 - [TEST_STEP][PASSED] - FR = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:27 - [TEST_STEP][PASSED] - PB = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:27 - [TEST_STEP][PASSED] - FB = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:27 - [TEST_STEP][PASSED] - TR = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:27 - [TEST_STEP][PASSED] - TB = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:27 - [TEST_STEP][PASSED] - sheetName = "Sheet1": null

10-01-2025T03:05:27 - [TEST_STEP][PASSED] - data = findTestData("PlanFact"): null

10-01-2025T03:05:27 - [TEST_STEP][PASSED] - n = data.getRowNumbers() + 1: null

10-01-2025T03:05:27 - [TEST_STEP][PASSED] - year = todaysDate.substring(todaysDate.length() - 4, todaysDate.length()): null

10-01-2025T03:05:27 - [TEST_STEP][PASSED] - y = year.toInteger(): null

10-01-2025T03:05:27 - [TEST_STEP][PASSED] - m = getText(findTestObject("Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Фильтр Дата")): Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Фильтр Дата' is: '1, 2, 3 кв., Октябрь, Ноябрь 2024 года'

10-01-2025T03:05:27 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Фильтр Дата' is: '1, 2, 3 кв., Октябрь, Ноябрь 2024 года'

10-01-2025T03:05:27 - [TEST_STEP][PASSED] - m = m.substring(0, m.indexOf("2024")): null

10-01-2025T03:05:27 - [TEST_STEP][PASSED] - m = m.trim(): null

10-01-2025T03:05:27 - [TEST_STEP][PASSED] - dashboardName = "Выполнение бизнес-плана": null

10-01-2025T03:05:27 - [TEST_STEP][PASSED] - workbook01 = getWorkbook(excelFilePath): null

10-01-2025T03:05:27 - [TEST_STEP][PASSED] - sheet01 = getExcelSheet(workbook01, sheetName): null

10-01-2025T03:05:27 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 0, dashboardName): null

10-01-2025T03:05:27 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 1, dZO): null

10-01-2025T03:05:27 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 2, typeOfData): null

10-01-2025T03:05:27 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 3, typeOfData): null

10-01-2025T03:05:27 - [TEST_STEP][PASSED] - if (typeOfData == "План"): null

10-01-2025T03:05:27 - [TEST_STEP][PASSED] - else if (typeOfData == "Факт"): null

10-01-2025T03:05:27 - [TEST_STEP][PASSED] - else if (vidget.contains("электроэнергии") == true): null

10-01-2025T03:05:27 - [TEST_STEP][PASSED] - if (tabR == null): null

10-01-2025T03:05:27 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:05:27 - [TEST_STEP][PASSED] - if (tabR == "нет данных"): null

10-01-2025T03:05:27 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 4, "нет данных"): null

10-01-2025T03:05:27 - [TEST_STEP][PASSED] - if (tabB == null): null

10-01-2025T03:05:27 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:05:27 - [TEST_STEP][PASSED] - if (tabB == "нет данных"): null

10-01-2025T03:05:27 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:05:27 - [TEST_STEP][PASSED] - TB = tabB.toInteger(): null

10-01-2025T03:05:27 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 5, TB): null

10-01-2025T03:05:27 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 6, m): null

10-01-2025T03:05:27 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 7, y): null

10-01-2025T03:05:27 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 8, todaysDate): null

10-01-2025T03:05:27 - [TEST_STEP][PASSED] - n = n + 1: null

10-01-2025T03:05:27 - [TEST_STEP][PASSED] - saveWorkbook(excelFilePath, workbook01): null

10-01-2025T03:05:27 - [TEST_STEP][PASSED] - typeOfData = "Факт Потери": null

10-01-2025T03:05:27 - [TEST_STEP][PASSED] - tabR = GetPFactR(x = a): null

10-01-2025T03:05:27 - [TEST_STEP][PASSED] - i1 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:27 - [TEST_STEP][PASSED] - ii = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:27 - [TEST_STEP][PASSED] - for ([ii = 1, ii < 6, (ii++)]): null

10-01-2025T03:05:27 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:27 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:27 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:27 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:27 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:27 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:27 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:27 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:27 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:27 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:27 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:27 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:27 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:27 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:27 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:27 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:27 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:27 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:27 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:27 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:27 - [TEST_STEP][PASSED] - i1 = x.indexOf("/"): null

10-01-2025T03:05:27 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:27 - [TEST_STEP][PASSED] - x = x.substring(0, i1): null

10-01-2025T03:05:27 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:27 - [TEST_STEP][PASSED] - return x: null

10-01-2025T03:05:27 - [TEST_STEP][PASSED] - tabB = GetPFactB(x = b): null

10-01-2025T03:05:27 - [TEST_STEP][PASSED] - i1 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:27 - [TEST_STEP][PASSED] - ii = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:27 - [TEST_STEP][PASSED] - for ([ii = 1, ii < 6, (ii++)]): null

10-01-2025T03:05:27 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:27 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:27 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:27 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:27 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:27 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:27 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:27 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:27 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:27 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:27 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:27 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:27 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:27 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:27 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:27 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:27 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:27 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:27 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:27 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:27 - [TEST_STEP][PASSED] - i1 = x.indexOf("/"): null

10-01-2025T03:05:27 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:27 - [TEST_STEP][PASSED] - x = x.substring(0, i1): null

10-01-2025T03:05:27 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:27 - [TEST_STEP][FAILED] - return x: null

10-01-2025T03:05:27 - [TEST_STEP][PASSED] - println(tabR + "/" + tabB): null

10-01-2025T03:05:27 - [TEST_STEP][FAILED] - if (verifyEqual(tabR, tabB) == false): null

10-01-2025T03:05:27 - [MESSAGE][FAILED] - Unable to verify equal between actual object 'нет данных' and expected object '20201362' (Root cause: com.kms.katalon.core.exception.StepFailedException: Actual object 'нет данных' and expected object '20201362' are not equal
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.doCall(VerifyEqualKeyword.groovy:58)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.call(VerifyEqualKeyword.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:75)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.verifyEqual(VerifyEqualKeyword.groovy:63)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.execute(VerifyEqualKeyword.groovy:44)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:74)
	at com.kms.katalon.core.keyword.BuiltinKeywords.verifyEqual(BuiltinKeywords.groovy:146)
	at jdk.internal.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at Выполнение бизнес-плана сверка дашбордов.CompareDZOData(Выполнение бизнес-плана сверка дашбордов:730)
	at Выполнение бизнес-плана сверка дашбордов.run(Выполнение бизнес-плана сверка дашбордов:583)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:448)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:439)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:418)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:410)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:285)
	at com.kms.katalon.core.common.CommonExecutor.accessTestCaseMainPhase(CommonExecutor.java:65)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:150)
	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:106)
	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:180)
	at TempTestSuite1736466949911.run(TempTestSuite1736466949911.groovy:35)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
)

10-01-2025T03:05:27 - [TEST_STEP][PASSED] - result = WriteToExcel(typeOfData, todaysDate, PercPlanR, PercPlanB, PercFactR, PercFactB, x, tabR, tabB, o1R, o1B, vidget): null

10-01-2025T03:05:27 - [TEST_STEP][PASSED] - iii = dZO.indexOf("/"): null

10-01-2025T03:05:27 - [TEST_STEP][PASSED] - println(iii): null

10-01-2025T03:05:27 - [TEST_STEP][PASSED] - dZO = dZO.substring(0, iii): null

10-01-2025T03:05:27 - [TEST_STEP][PASSED] - println(dZO): null

10-01-2025T03:05:27 - [TEST_STEP][PASSED] - println(PercPlanR): null

10-01-2025T03:05:27 - [TEST_STEP][PASSED] - println(PercPlanB): null

10-01-2025T03:05:27 - [TEST_STEP][PASSED] - println(PercFactR): null

10-01-2025T03:05:27 - [TEST_STEP][PASSED] - println(PercFactB): null

10-01-2025T03:05:27 - [TEST_STEP][PASSED] - println(tabR): null

10-01-2025T03:05:27 - [TEST_STEP][PASSED] - println(tabB): null

10-01-2025T03:05:27 - [TEST_STEP][PASSED] - println(o1R): null

10-01-2025T03:05:27 - [TEST_STEP][PASSED] - println(o1B): null

10-01-2025T03:05:27 - [TEST_STEP][PASSED] - PR = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:27 - [TEST_STEP][PASSED] - FR = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:27 - [TEST_STEP][PASSED] - PB = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:27 - [TEST_STEP][PASSED] - FB = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:27 - [TEST_STEP][PASSED] - TR = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:27 - [TEST_STEP][PASSED] - TB = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:27 - [TEST_STEP][PASSED] - sheetName = "Sheet1": null

10-01-2025T03:05:27 - [TEST_STEP][PASSED] - data = findTestData("PlanFact"): null

10-01-2025T03:05:27 - [TEST_STEP][PASSED] - n = data.getRowNumbers() + 1: null

10-01-2025T03:05:27 - [TEST_STEP][PASSED] - year = todaysDate.substring(todaysDate.length() - 4, todaysDate.length()): null

10-01-2025T03:05:27 - [TEST_STEP][PASSED] - y = year.toInteger(): null

10-01-2025T03:05:27 - [TEST_STEP][PASSED] - m = getText(findTestObject("Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Фильтр Дата")): Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Фильтр Дата' is: '1, 2, 3 кв., Октябрь, Ноябрь 2024 года'

10-01-2025T03:05:28 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Фильтр Дата' is: '1, 2, 3 кв., Октябрь, Ноябрь 2024 года'

10-01-2025T03:05:28 - [TEST_STEP][PASSED] - m = m.substring(0, m.indexOf("2024")): null

10-01-2025T03:05:28 - [TEST_STEP][PASSED] - m = m.trim(): null

10-01-2025T03:05:28 - [TEST_STEP][PASSED] - dashboardName = "Выполнение бизнес-плана": null

10-01-2025T03:05:28 - [TEST_STEP][PASSED] - workbook01 = getWorkbook(excelFilePath): null

10-01-2025T03:05:28 - [TEST_STEP][PASSED] - sheet01 = getExcelSheet(workbook01, sheetName): null

10-01-2025T03:05:28 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 0, dashboardName): null

10-01-2025T03:05:28 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 1, dZO): null

10-01-2025T03:05:28 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 2, typeOfData): null

10-01-2025T03:05:28 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 3, typeOfData): null

10-01-2025T03:05:28 - [TEST_STEP][PASSED] - if (typeOfData == "План"): null

10-01-2025T03:05:28 - [TEST_STEP][PASSED] - else if (typeOfData == "Факт"): null

10-01-2025T03:05:28 - [TEST_STEP][PASSED] - else if (vidget.contains("электроэнергии") == true): null

10-01-2025T03:05:28 - [TEST_STEP][PASSED] - if (tabR == null): null

10-01-2025T03:05:28 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:05:28 - [TEST_STEP][PASSED] - if (tabR == "нет данных"): null

10-01-2025T03:05:28 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 4, "нет данных"): null

10-01-2025T03:05:28 - [TEST_STEP][PASSED] - if (tabB == null): null

10-01-2025T03:05:28 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:05:28 - [TEST_STEP][PASSED] - if (tabB == "нет данных"): null

10-01-2025T03:05:28 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:05:28 - [TEST_STEP][PASSED] - TB = tabB.toInteger(): null

10-01-2025T03:05:28 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 5, TB): null

10-01-2025T03:05:28 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 6, m): null

10-01-2025T03:05:28 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 7, y): null

10-01-2025T03:05:28 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 8, todaysDate): null

10-01-2025T03:05:28 - [TEST_STEP][PASSED] - n = n + 1: null

10-01-2025T03:05:28 - [TEST_STEP][PASSED] - saveWorkbook(excelFilePath, workbook01): null

10-01-2025T03:05:28 - [TEST_STEP][PASSED] - vidget = "Показатели баланса электроэнергии по ДЗО – План": null

10-01-2025T03:05:28 - [TEST_STEP][PASSED] - typeOfData = "План Отпуск в сеть": null

10-01-2025T03:05:28 - [TEST_STEP][PASSED] - tabR = GetOvSPlanR(x = a): null

10-01-2025T03:05:28 - [TEST_STEP][PASSED] - i1 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:28 - [TEST_STEP][PASSED] - ii = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:28 - [TEST_STEP][PASSED] - for ([ii = 1, ii < 7, (ii++)]): null

10-01-2025T03:05:28 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:28 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:28 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:28 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:28 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:28 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:28 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:28 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:28 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:28 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:28 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:28 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:28 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:28 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:28 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:28 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:28 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:28 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:28 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:28 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:28 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:28 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:28 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:28 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:28 - [TEST_STEP][PASSED] - i1 = x.indexOf("/"): null

10-01-2025T03:05:28 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:28 - [TEST_STEP][PASSED] - x = x.substring(0, i1): null

10-01-2025T03:05:28 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:28 - [TEST_STEP][PASSED] - return x: null

10-01-2025T03:05:28 - [TEST_STEP][PASSED] - tabB = GetOvSPlanB(x = b): null

10-01-2025T03:05:28 - [TEST_STEP][PASSED] - i1 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:28 - [TEST_STEP][PASSED] - ii = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:28 - [TEST_STEP][PASSED] - for ([ii = 1, ii < 7, (ii++)]): null

10-01-2025T03:05:28 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:28 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:28 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:28 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:28 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:28 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:28 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:28 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:28 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:28 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:28 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:28 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:28 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:28 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:28 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:28 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:28 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:28 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:28 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:28 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:28 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:28 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:28 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:28 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:28 - [TEST_STEP][PASSED] - i1 = x.indexOf("/"): null

10-01-2025T03:05:28 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:28 - [TEST_STEP][PASSED] - x = x.substring(0, i1): null

10-01-2025T03:05:28 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:28 - [TEST_STEP][FAILED] - return x: null

10-01-2025T03:05:28 - [TEST_STEP][PASSED] - println(tabR + "/" + tabB): null

10-01-2025T03:05:28 - [TEST_STEP][FAILED] - if (verifyEqual(PercFactR, PercFactB) == false): null

10-01-2025T03:05:28 - [MESSAGE][FAILED] - Unable to verify equal between actual object 'нет данных' and expected object '3.68' (Root cause: com.kms.katalon.core.exception.StepFailedException: Actual object 'нет данных' and expected object '3.68' are not equal
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.doCall(VerifyEqualKeyword.groovy:58)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.call(VerifyEqualKeyword.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:75)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.verifyEqual(VerifyEqualKeyword.groovy:63)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.execute(VerifyEqualKeyword.groovy:44)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:74)
	at com.kms.katalon.core.keyword.BuiltinKeywords.verifyEqual(BuiltinKeywords.groovy:146)
	at jdk.internal.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at Выполнение бизнес-плана сверка дашбордов.CompareDZOData(Выполнение бизнес-плана сверка дашбордов:745)
	at Выполнение бизнес-плана сверка дашбордов.run(Выполнение бизнес-плана сверка дашбордов:583)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:448)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:439)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:418)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:410)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:285)
	at com.kms.katalon.core.common.CommonExecutor.accessTestCaseMainPhase(CommonExecutor.java:65)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:150)
	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:106)
	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:180)
	at TempTestSuite1736466949911.run(TempTestSuite1736466949911.groovy:35)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
)

10-01-2025T03:05:28 - [TEST_STEP][PASSED] - result = WriteToExcel(typeOfData, todaysDate, PercPlanR, PercPlanB, PercFactR, PercFactB, x, tabR, tabB, o1R, o1B, vidget): null

10-01-2025T03:05:28 - [TEST_STEP][PASSED] - iii = dZO.indexOf("/"): null

10-01-2025T03:05:28 - [TEST_STEP][PASSED] - println(iii): null

10-01-2025T03:05:28 - [TEST_STEP][PASSED] - dZO = dZO.substring(0, iii): null

10-01-2025T03:05:28 - [TEST_STEP][PASSED] - println(dZO): null

10-01-2025T03:05:28 - [TEST_STEP][PASSED] - println(PercPlanR): null

10-01-2025T03:05:28 - [TEST_STEP][PASSED] - println(PercPlanB): null

10-01-2025T03:05:28 - [TEST_STEP][PASSED] - println(PercFactR): null

10-01-2025T03:05:28 - [TEST_STEP][PASSED] - println(PercFactB): null

10-01-2025T03:05:28 - [TEST_STEP][PASSED] - println(tabR): null

10-01-2025T03:05:28 - [TEST_STEP][PASSED] - println(tabB): null

10-01-2025T03:05:28 - [TEST_STEP][PASSED] - println(o1R): null

10-01-2025T03:05:28 - [TEST_STEP][PASSED] - println(o1B): null

10-01-2025T03:05:28 - [TEST_STEP][PASSED] - PR = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:28 - [TEST_STEP][PASSED] - FR = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:28 - [TEST_STEP][PASSED] - PB = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:28 - [TEST_STEP][PASSED] - FB = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:28 - [TEST_STEP][PASSED] - TR = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:28 - [TEST_STEP][PASSED] - TB = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:28 - [TEST_STEP][PASSED] - sheetName = "Sheet1": null

10-01-2025T03:05:28 - [TEST_STEP][PASSED] - data = findTestData("PlanFact"): null

10-01-2025T03:05:28 - [TEST_STEP][PASSED] - n = data.getRowNumbers() + 1: null

10-01-2025T03:05:28 - [TEST_STEP][PASSED] - year = todaysDate.substring(todaysDate.length() - 4, todaysDate.length()): null

10-01-2025T03:05:28 - [TEST_STEP][PASSED] - y = year.toInteger(): null

10-01-2025T03:05:28 - [TEST_STEP][PASSED] - m = getText(findTestObject("Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Фильтр Дата")): Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Фильтр Дата' is: '1, 2, 3 кв., Октябрь, Ноябрь 2024 года'

10-01-2025T03:05:28 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Фильтр Дата' is: '1, 2, 3 кв., Октябрь, Ноябрь 2024 года'

10-01-2025T03:05:28 - [TEST_STEP][PASSED] - m = m.substring(0, m.indexOf("2024")): null

10-01-2025T03:05:28 - [TEST_STEP][PASSED] - m = m.trim(): null

10-01-2025T03:05:28 - [TEST_STEP][PASSED] - dashboardName = "Выполнение бизнес-плана": null

10-01-2025T03:05:28 - [TEST_STEP][PASSED] - workbook01 = getWorkbook(excelFilePath): null

10-01-2025T03:05:28 - [TEST_STEP][PASSED] - sheet01 = getExcelSheet(workbook01, sheetName): null

10-01-2025T03:05:28 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 0, dashboardName): null

10-01-2025T03:05:28 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 1, dZO): null

10-01-2025T03:05:28 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 2, typeOfData): null

10-01-2025T03:05:28 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 3, typeOfData): null

10-01-2025T03:05:28 - [TEST_STEP][PASSED] - if (typeOfData == "План"): null

10-01-2025T03:05:28 - [TEST_STEP][PASSED] - else if (typeOfData == "Факт"): null

10-01-2025T03:05:28 - [TEST_STEP][PASSED] - else if (vidget.contains("электроэнергии") == true): null

10-01-2025T03:05:28 - [TEST_STEP][PASSED] - if (tabR == null): null

10-01-2025T03:05:28 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:05:28 - [TEST_STEP][PASSED] - if (tabR == "нет данных"): null

10-01-2025T03:05:28 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 4, "нет данных"): null

10-01-2025T03:05:28 - [TEST_STEP][PASSED] - if (tabB == null): null

10-01-2025T03:05:28 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:05:28 - [TEST_STEP][PASSED] - if (tabB == "нет данных"): null

10-01-2025T03:05:28 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:05:28 - [TEST_STEP][PASSED] - TB = tabB.toInteger(): null

10-01-2025T03:05:28 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 5, TB): null

10-01-2025T03:05:28 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 6, m): null

10-01-2025T03:05:28 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 7, y): null

10-01-2025T03:05:28 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 8, todaysDate): null

10-01-2025T03:05:28 - [TEST_STEP][PASSED] - n = n + 1: null

10-01-2025T03:05:28 - [TEST_STEP][PASSED] - saveWorkbook(excelFilePath, workbook01): null

10-01-2025T03:05:29 - [TEST_STEP][PASSED] - typeOfData = "План Отпуск из сети": null

10-01-2025T03:05:29 - [TEST_STEP][PASSED] - tabR = GetOiSPlanR(x = a): null

10-01-2025T03:05:29 - [TEST_STEP][PASSED] - i1 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:29 - [TEST_STEP][PASSED] - ii = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:29 - [TEST_STEP][PASSED] - for ([ii = 1, ii < 8, (ii++)]): null

10-01-2025T03:05:29 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:29 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:29 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:29 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:29 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:29 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:29 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:29 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:29 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:29 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:29 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:29 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:29 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:29 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:29 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:29 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:29 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:29 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:29 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:29 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:29 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:29 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:29 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:29 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:29 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:29 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:29 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:29 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:29 - [TEST_STEP][PASSED] - i1 = x.indexOf("/"): null

10-01-2025T03:05:29 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:29 - [TEST_STEP][PASSED] - x = x.substring(0, i1): null

10-01-2025T03:05:29 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:29 - [TEST_STEP][PASSED] - return x: null

10-01-2025T03:05:29 - [TEST_STEP][PASSED] - tabB = GetOiSPlanB(x = b): null

10-01-2025T03:05:29 - [TEST_STEP][PASSED] - i1 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:29 - [TEST_STEP][PASSED] - ii = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:29 - [TEST_STEP][PASSED] - for ([ii = 1, ii < 8, (ii++)]): null

10-01-2025T03:05:29 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:29 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:29 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:29 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:29 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:29 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:29 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:29 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:29 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:29 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:29 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:29 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:29 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:29 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:29 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:29 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:29 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:29 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:29 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:29 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:29 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:29 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:29 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:29 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:29 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:29 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:29 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:29 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:29 - [TEST_STEP][PASSED] - i1 = x.indexOf("/"): null

10-01-2025T03:05:29 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:29 - [TEST_STEP][PASSED] - x = x.substring(0, i1): null

10-01-2025T03:05:29 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:29 - [TEST_STEP][FAILED] - return x: null

10-01-2025T03:05:29 - [TEST_STEP][PASSED] - println(tabR + "/" + tabB): null

10-01-2025T03:05:29 - [TEST_STEP][FAILED] - if (verifyEqual(PercFactR, PercFactB) == false): null

10-01-2025T03:05:29 - [MESSAGE][FAILED] - Unable to verify equal between actual object 'нет данных' and expected object '3.68' (Root cause: com.kms.katalon.core.exception.StepFailedException: Actual object 'нет данных' and expected object '3.68' are not equal
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.doCall(VerifyEqualKeyword.groovy:58)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.call(VerifyEqualKeyword.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:75)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.verifyEqual(VerifyEqualKeyword.groovy:63)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.execute(VerifyEqualKeyword.groovy:44)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:74)
	at com.kms.katalon.core.keyword.BuiltinKeywords.verifyEqual(BuiltinKeywords.groovy:146)
	at jdk.internal.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at Выполнение бизнес-плана сверка дашбордов.CompareDZOData(Выполнение бизнес-плана сверка дашбордов:758)
	at Выполнение бизнес-плана сверка дашбордов.run(Выполнение бизнес-плана сверка дашбордов:583)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:448)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:439)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:418)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:410)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:285)
	at com.kms.katalon.core.common.CommonExecutor.accessTestCaseMainPhase(CommonExecutor.java:65)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:150)
	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:106)
	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:180)
	at TempTestSuite1736466949911.run(TempTestSuite1736466949911.groovy:35)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
)

10-01-2025T03:05:29 - [TEST_STEP][PASSED] - result = WriteToExcel(typeOfData, todaysDate, PercPlanR, PercPlanB, PercFactR, PercFactB, x, tabR, tabB, o1R, o1B, vidget): null

10-01-2025T03:05:29 - [TEST_STEP][PASSED] - iii = dZO.indexOf("/"): null

10-01-2025T03:05:29 - [TEST_STEP][PASSED] - println(iii): null

10-01-2025T03:05:29 - [TEST_STEP][PASSED] - dZO = dZO.substring(0, iii): null

10-01-2025T03:05:29 - [TEST_STEP][PASSED] - println(dZO): null

10-01-2025T03:05:29 - [TEST_STEP][PASSED] - println(PercPlanR): null

10-01-2025T03:05:29 - [TEST_STEP][PASSED] - println(PercPlanB): null

10-01-2025T03:05:29 - [TEST_STEP][PASSED] - println(PercFactR): null

10-01-2025T03:05:29 - [TEST_STEP][PASSED] - println(PercFactB): null

10-01-2025T03:05:29 - [TEST_STEP][PASSED] - println(tabR): null

10-01-2025T03:05:29 - [TEST_STEP][PASSED] - println(tabB): null

10-01-2025T03:05:29 - [TEST_STEP][PASSED] - println(o1R): null

10-01-2025T03:05:29 - [TEST_STEP][PASSED] - println(o1B): null

10-01-2025T03:05:29 - [TEST_STEP][PASSED] - PR = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:29 - [TEST_STEP][PASSED] - FR = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:29 - [TEST_STEP][PASSED] - PB = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:29 - [TEST_STEP][PASSED] - FB = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:29 - [TEST_STEP][PASSED] - TR = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:29 - [TEST_STEP][PASSED] - TB = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:29 - [TEST_STEP][PASSED] - sheetName = "Sheet1": null

10-01-2025T03:05:29 - [TEST_STEP][PASSED] - data = findTestData("PlanFact"): null

10-01-2025T03:05:29 - [TEST_STEP][PASSED] - n = data.getRowNumbers() + 1: null

10-01-2025T03:05:29 - [TEST_STEP][PASSED] - year = todaysDate.substring(todaysDate.length() - 4, todaysDate.length()): null

10-01-2025T03:05:29 - [TEST_STEP][PASSED] - y = year.toInteger(): null

10-01-2025T03:05:29 - [TEST_STEP][PASSED] - m = getText(findTestObject("Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Фильтр Дата")): Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Фильтр Дата' is: '1, 2, 3 кв., Октябрь, Ноябрь 2024 года'

10-01-2025T03:05:29 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Фильтр Дата' is: '1, 2, 3 кв., Октябрь, Ноябрь 2024 года'

10-01-2025T03:05:29 - [TEST_STEP][PASSED] - m = m.substring(0, m.indexOf("2024")): null

10-01-2025T03:05:29 - [TEST_STEP][PASSED] - m = m.trim(): null

10-01-2025T03:05:29 - [TEST_STEP][PASSED] - dashboardName = "Выполнение бизнес-плана": null

10-01-2025T03:05:29 - [TEST_STEP][PASSED] - workbook01 = getWorkbook(excelFilePath): null

10-01-2025T03:05:29 - [TEST_STEP][PASSED] - sheet01 = getExcelSheet(workbook01, sheetName): null

10-01-2025T03:05:29 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 0, dashboardName): null

10-01-2025T03:05:29 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 1, dZO): null

10-01-2025T03:05:29 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 2, typeOfData): null

10-01-2025T03:05:29 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 3, typeOfData): null

10-01-2025T03:05:29 - [TEST_STEP][PASSED] - if (typeOfData == "План"): null

10-01-2025T03:05:29 - [TEST_STEP][PASSED] - else if (typeOfData == "Факт"): null

10-01-2025T03:05:29 - [TEST_STEP][PASSED] - else if (vidget.contains("электроэнергии") == true): null

10-01-2025T03:05:29 - [TEST_STEP][PASSED] - if (tabR == null): null

10-01-2025T03:05:29 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:05:29 - [TEST_STEP][PASSED] - if (tabR == "нет данных"): null

10-01-2025T03:05:29 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 4, "нет данных"): null

10-01-2025T03:05:29 - [TEST_STEP][PASSED] - if (tabB == null): null

10-01-2025T03:05:29 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:05:29 - [TEST_STEP][PASSED] - if (tabB == "нет данных"): null

10-01-2025T03:05:29 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:05:29 - [TEST_STEP][PASSED] - TB = tabB.toInteger(): null

10-01-2025T03:05:29 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 5, TB): null

10-01-2025T03:05:29 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 6, m): null

10-01-2025T03:05:29 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 7, y): null

10-01-2025T03:05:29 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 8, todaysDate): null

10-01-2025T03:05:29 - [TEST_STEP][PASSED] - n = n + 1: null

10-01-2025T03:05:29 - [TEST_STEP][PASSED] - saveWorkbook(excelFilePath, workbook01): null

10-01-2025T03:05:29 - [TEST_STEP][PASSED] - typeOfData = "План Потери": null

10-01-2025T03:05:29 - [TEST_STEP][PASSED] - tabR = GetPPlanR(x = a): null

10-01-2025T03:05:29 - [TEST_STEP][PASSED] - i1 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:29 - [TEST_STEP][PASSED] - ii = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:29 - [TEST_STEP][PASSED] - for ([ii = 1, ii < 9, (ii++)]): null

10-01-2025T03:05:29 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:29 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:29 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:29 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:29 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:29 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:29 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:29 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:29 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:29 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:29 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:29 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:29 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:29 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:29 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:29 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:29 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:29 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:29 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:29 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:29 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:29 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:29 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:29 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:29 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:29 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:29 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:29 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:29 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:29 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:29 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:29 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:29 - [TEST_STEP][PASSED] - i1 = x.indexOf("/"): null

10-01-2025T03:05:29 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:29 - [TEST_STEP][PASSED] - x = x.substring(0, i1): null

10-01-2025T03:05:29 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:29 - [TEST_STEP][PASSED] - return x: null

10-01-2025T03:05:29 - [TEST_STEP][PASSED] - tabB = GetPPlanB(x = b): null

10-01-2025T03:05:29 - [TEST_STEP][PASSED] - i1 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:29 - [TEST_STEP][PASSED] - ii = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:29 - [TEST_STEP][PASSED] - for ([ii = 1, ii < 9, (ii++)]): null

10-01-2025T03:05:29 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:29 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:29 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:29 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:29 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:29 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:29 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:29 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:29 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:29 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:29 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:29 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:29 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:29 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:29 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:29 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:29 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:29 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:29 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:29 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:29 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:29 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:29 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:29 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:29 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:29 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:29 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:29 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:29 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:29 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:29 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:29 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:29 - [TEST_STEP][PASSED] - i1 = x.indexOf("/"): null

10-01-2025T03:05:29 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:29 - [TEST_STEP][PASSED] - x = x.substring(0, i1): null

10-01-2025T03:05:29 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:29 - [TEST_STEP][FAILED] - return x: null

10-01-2025T03:05:29 - [TEST_STEP][PASSED] - println(tabR + "/" + tabB): null

10-01-2025T03:05:29 - [TEST_STEP][FAILED] - if (verifyEqual(PercFactR, PercFactB) == false): null

10-01-2025T03:05:29 - [MESSAGE][FAILED] - Unable to verify equal between actual object 'нет данных' and expected object '3.68' (Root cause: com.kms.katalon.core.exception.StepFailedException: Actual object 'нет данных' and expected object '3.68' are not equal
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.doCall(VerifyEqualKeyword.groovy:58)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.call(VerifyEqualKeyword.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:75)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.verifyEqual(VerifyEqualKeyword.groovy:63)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.execute(VerifyEqualKeyword.groovy:44)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:74)
	at com.kms.katalon.core.keyword.BuiltinKeywords.verifyEqual(BuiltinKeywords.groovy:146)
	at jdk.internal.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at Выполнение бизнес-плана сверка дашбордов.CompareDZOData(Выполнение бизнес-плана сверка дашбордов:771)
	at Выполнение бизнес-плана сверка дашбордов.run(Выполнение бизнес-плана сверка дашбордов:583)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:448)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:439)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:418)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:410)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:285)
	at com.kms.katalon.core.common.CommonExecutor.accessTestCaseMainPhase(CommonExecutor.java:65)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:150)
	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:106)
	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:180)
	at TempTestSuite1736466949911.run(TempTestSuite1736466949911.groovy:35)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
)

10-01-2025T03:05:29 - [TEST_STEP][PASSED] - result = WriteToExcel(typeOfData, todaysDate, PercPlanR, PercPlanB, PercFactR, PercFactB, x, tabR, tabB, o1R, o1B, vidget): null

10-01-2025T03:05:29 - [TEST_STEP][PASSED] - iii = dZO.indexOf("/"): null

10-01-2025T03:05:29 - [TEST_STEP][PASSED] - println(iii): null

10-01-2025T03:05:29 - [TEST_STEP][PASSED] - dZO = dZO.substring(0, iii): null

10-01-2025T03:05:29 - [TEST_STEP][PASSED] - println(dZO): null

10-01-2025T03:05:29 - [TEST_STEP][PASSED] - println(PercPlanR): null

10-01-2025T03:05:29 - [TEST_STEP][PASSED] - println(PercPlanB): null

10-01-2025T03:05:29 - [TEST_STEP][PASSED] - println(PercFactR): null

10-01-2025T03:05:29 - [TEST_STEP][PASSED] - println(PercFactB): null

10-01-2025T03:05:29 - [TEST_STEP][PASSED] - println(tabR): null

10-01-2025T03:05:29 - [TEST_STEP][PASSED] - println(tabB): null

10-01-2025T03:05:29 - [TEST_STEP][PASSED] - println(o1R): null

10-01-2025T03:05:29 - [TEST_STEP][PASSED] - println(o1B): null

10-01-2025T03:05:29 - [TEST_STEP][PASSED] - PR = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:29 - [TEST_STEP][PASSED] - FR = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:29 - [TEST_STEP][PASSED] - PB = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:29 - [TEST_STEP][PASSED] - FB = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:29 - [TEST_STEP][PASSED] - TR = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:29 - [TEST_STEP][PASSED] - TB = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:29 - [TEST_STEP][PASSED] - sheetName = "Sheet1": null

10-01-2025T03:05:29 - [TEST_STEP][PASSED] - data = findTestData("PlanFact"): null

10-01-2025T03:05:29 - [TEST_STEP][PASSED] - n = data.getRowNumbers() + 1: null

10-01-2025T03:05:29 - [TEST_STEP][PASSED] - year = todaysDate.substring(todaysDate.length() - 4, todaysDate.length()): null

10-01-2025T03:05:29 - [TEST_STEP][PASSED] - y = year.toInteger(): null

10-01-2025T03:05:29 - [TEST_STEP][PASSED] - m = getText(findTestObject("Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Фильтр Дата")): Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Фильтр Дата' is: '1, 2, 3 кв., Октябрь, Ноябрь 2024 года'

10-01-2025T03:05:30 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Фильтр Дата' is: '1, 2, 3 кв., Октябрь, Ноябрь 2024 года'

10-01-2025T03:05:30 - [TEST_STEP][PASSED] - m = m.substring(0, m.indexOf("2024")): null

10-01-2025T03:05:30 - [TEST_STEP][PASSED] - m = m.trim(): null

10-01-2025T03:05:30 - [TEST_STEP][PASSED] - dashboardName = "Выполнение бизнес-плана": null

10-01-2025T03:05:30 - [TEST_STEP][PASSED] - workbook01 = getWorkbook(excelFilePath): null

10-01-2025T03:05:30 - [TEST_STEP][PASSED] - sheet01 = getExcelSheet(workbook01, sheetName): null

10-01-2025T03:05:30 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 0, dashboardName): null

10-01-2025T03:05:30 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 1, dZO): null

10-01-2025T03:05:30 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 2, typeOfData): null

10-01-2025T03:05:30 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 3, typeOfData): null

10-01-2025T03:05:30 - [TEST_STEP][PASSED] - if (typeOfData == "План"): null

10-01-2025T03:05:30 - [TEST_STEP][PASSED] - else if (typeOfData == "Факт"): null

10-01-2025T03:05:30 - [TEST_STEP][PASSED] - else if (vidget.contains("электроэнергии") == true): null

10-01-2025T03:05:30 - [TEST_STEP][PASSED] - if (tabR == null): null

10-01-2025T03:05:30 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:05:30 - [TEST_STEP][PASSED] - if (tabR == "нет данных"): null

10-01-2025T03:05:30 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 4, "нет данных"): null

10-01-2025T03:05:30 - [TEST_STEP][PASSED] - if (tabB == null): null

10-01-2025T03:05:30 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:05:30 - [TEST_STEP][PASSED] - if (tabB == "нет данных"): null

10-01-2025T03:05:30 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:05:30 - [TEST_STEP][PASSED] - TB = tabB.toInteger(): null

10-01-2025T03:05:30 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 5, TB): null

10-01-2025T03:05:30 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 6, m): null

10-01-2025T03:05:30 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 7, y): null

10-01-2025T03:05:30 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 8, todaysDate): null

10-01-2025T03:05:30 - [TEST_STEP][PASSED] - n = n + 1: null

10-01-2025T03:05:30 - [TEST_STEP][PASSED] - saveWorkbook(excelFilePath, workbook01): null

10-01-2025T03:05:30 - [TEST_STEP][PASSED] - ii2 = a.indexOf("ПАО"): null

10-01-2025T03:05:30 - [TEST_STEP][PASSED] - if (ii2 == -1): null

10-01-2025T03:05:30 - [TEST_STEP][PASSED] - vidget = "Отклонения фактического уровня потерь от бизнес-плана": null

10-01-2025T03:05:30 - [TEST_STEP][PASSED] - typeOfData = "Коэффициент": null

10-01-2025T03:05:30 - [TEST_STEP][PASSED] - o1R = Geto1R(x = a): null

10-01-2025T03:05:30 - [TEST_STEP][PASSED] - i1 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:30 - [TEST_STEP][PASSED] - ii = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:30 - [TEST_STEP][PASSED] - for ([ii = 1, ii < 10, (ii++)]): null

10-01-2025T03:05:30 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:30 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:30 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:30 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:30 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:30 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:30 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:30 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:30 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:30 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:30 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:30 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:30 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:30 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:30 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:30 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:30 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:30 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:30 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:30 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:30 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:30 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:30 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:30 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:30 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:30 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:30 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:30 - [TEST_STEP][PASSED] - i1 = x.indexOf("/"): null

10-01-2025T03:05:30 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:30 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:30 - [TEST_STEP][PASSED] - return x: null

10-01-2025T03:05:30 - [TEST_STEP][PASSED] - o1B = Geto1B(x = b): null

10-01-2025T03:05:30 - [TEST_STEP][PASSED] - i1 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:30 - [TEST_STEP][PASSED] - ii = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:30 - [TEST_STEP][PASSED] - for ([ii = 1, ii < 10, (ii++)]): null

10-01-2025T03:05:30 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:30 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:30 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:30 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:30 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:30 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:30 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:30 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:30 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:30 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:30 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:30 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:30 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:30 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:30 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:30 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:30 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:30 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:30 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:30 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:30 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:30 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:30 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:30 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:30 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:30 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:30 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:30 - [TEST_STEP][PASSED] - i1 = x.indexOf("/"): null

10-01-2025T03:05:30 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:30 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:30 - [TEST_STEP][FAILED] - return x: null

10-01-2025T03:05:30 - [TEST_STEP][PASSED] - println(o1R + "/" + o1B): null

10-01-2025T03:05:30 - [TEST_STEP][FAILED] - if (verifyEqual(PercFactR, PercFactB) == false): null

10-01-2025T03:05:30 - [MESSAGE][FAILED] - Unable to verify equal between actual object 'нет данных' and expected object '3.68' (Root cause: com.kms.katalon.core.exception.StepFailedException: Actual object 'нет данных' and expected object '3.68' are not equal
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.doCall(VerifyEqualKeyword.groovy:58)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.call(VerifyEqualKeyword.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:75)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.verifyEqual(VerifyEqualKeyword.groovy:63)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.execute(VerifyEqualKeyword.groovy:44)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:74)
	at com.kms.katalon.core.keyword.BuiltinKeywords.verifyEqual(BuiltinKeywords.groovy:146)
	at jdk.internal.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at Выполнение бизнес-плана сверка дашбордов.CompareDZOData(Выполнение бизнес-плана сверка дашбордов:789)
	at Выполнение бизнес-плана сверка дашбордов.run(Выполнение бизнес-плана сверка дашбордов:583)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:448)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:439)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:418)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:410)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:285)
	at com.kms.katalon.core.common.CommonExecutor.accessTestCaseMainPhase(CommonExecutor.java:65)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:150)
	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:106)
	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:180)
	at TempTestSuite1736466949911.run(TempTestSuite1736466949911.groovy:35)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
)

10-01-2025T03:05:30 - [TEST_STEP][PASSED] - result = WriteToExcel(typeOfData, todaysDate, PercPlanR, PercPlanB, PercFactR, PercFactB, x, tabR, tabB, o1R, o1B, vidget): null

10-01-2025T03:05:30 - [TEST_STEP][PASSED] - iii = dZO.indexOf("/"): null

10-01-2025T03:05:30 - [TEST_STEP][PASSED] - println(iii): null

10-01-2025T03:05:30 - [TEST_STEP][PASSED] - dZO = dZO.substring(0, iii): null

10-01-2025T03:05:30 - [TEST_STEP][PASSED] - println(dZO): null

10-01-2025T03:05:30 - [TEST_STEP][PASSED] - println(PercPlanR): null

10-01-2025T03:05:30 - [TEST_STEP][PASSED] - println(PercPlanB): null

10-01-2025T03:05:30 - [TEST_STEP][PASSED] - println(PercFactR): null

10-01-2025T03:05:30 - [TEST_STEP][PASSED] - println(PercFactB): null

10-01-2025T03:05:30 - [TEST_STEP][PASSED] - println(tabR): null

10-01-2025T03:05:30 - [TEST_STEP][PASSED] - println(tabB): null

10-01-2025T03:05:30 - [TEST_STEP][PASSED] - println(o1R): null

10-01-2025T03:05:30 - [TEST_STEP][PASSED] - println(o1B): null

10-01-2025T03:05:30 - [TEST_STEP][PASSED] - PR = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:30 - [TEST_STEP][PASSED] - FR = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:30 - [TEST_STEP][PASSED] - PB = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:30 - [TEST_STEP][PASSED] - FB = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:30 - [TEST_STEP][PASSED] - TR = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:30 - [TEST_STEP][PASSED] - TB = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:30 - [TEST_STEP][PASSED] - sheetName = "Sheet1": null

10-01-2025T03:05:30 - [TEST_STEP][PASSED] - data = findTestData("PlanFact"): null

10-01-2025T03:05:30 - [TEST_STEP][PASSED] - n = data.getRowNumbers() + 1: null

10-01-2025T03:05:30 - [TEST_STEP][PASSED] - year = todaysDate.substring(todaysDate.length() - 4, todaysDate.length()): null

10-01-2025T03:05:30 - [TEST_STEP][PASSED] - y = year.toInteger(): null

10-01-2025T03:05:30 - [TEST_STEP][PASSED] - m = getText(findTestObject("Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Фильтр Дата")): Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Фильтр Дата' is: '1, 2, 3 кв., Октябрь, Ноябрь 2024 года'

10-01-2025T03:05:30 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Фильтр Дата' is: '1, 2, 3 кв., Октябрь, Ноябрь 2024 года'

10-01-2025T03:05:30 - [TEST_STEP][PASSED] - m = m.substring(0, m.indexOf("2024")): null

10-01-2025T03:05:30 - [TEST_STEP][PASSED] - m = m.trim(): null

10-01-2025T03:05:30 - [TEST_STEP][PASSED] - dashboardName = "Выполнение бизнес-плана": null

10-01-2025T03:05:30 - [TEST_STEP][PASSED] - workbook01 = getWorkbook(excelFilePath): null

10-01-2025T03:05:30 - [TEST_STEP][PASSED] - sheet01 = getExcelSheet(workbook01, sheetName): null

10-01-2025T03:05:30 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 0, dashboardName): null

10-01-2025T03:05:30 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 1, dZO): null

10-01-2025T03:05:30 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 2, typeOfData): null

10-01-2025T03:05:30 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 3, typeOfData): null

10-01-2025T03:05:30 - [TEST_STEP][PASSED] - if (typeOfData == "План"): null

10-01-2025T03:05:30 - [TEST_STEP][PASSED] - else if (typeOfData == "Факт"): null

10-01-2025T03:05:30 - [TEST_STEP][PASSED] - else if (vidget.contains("электроэнергии") == true): null

10-01-2025T03:05:30 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:05:30 - [TEST_STEP][PASSED] - if (o1R == null): null

10-01-2025T03:05:30 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:05:30 - [TEST_STEP][PASSED] - if (o1R == "нет данных"): null

10-01-2025T03:05:30 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 4, "нет данных"): null

10-01-2025T03:05:30 - [TEST_STEP][PASSED] - if (o1B == null): null

10-01-2025T03:05:30 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:05:30 - [TEST_STEP][PASSED] - if (o1B == "нет данных"): null

10-01-2025T03:05:30 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:05:30 - [TEST_STEP][PASSED] - FB = o1B.toDouble(): null

10-01-2025T03:05:30 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 5, FB): null

10-01-2025T03:05:30 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 6, m): null

10-01-2025T03:05:30 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 7, y): null

10-01-2025T03:05:30 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 8, todaysDate): null

10-01-2025T03:05:30 - [TEST_STEP][PASSED] - n = n + 1: null

10-01-2025T03:05:30 - [TEST_STEP][FAILED] - saveWorkbook(excelFilePath, workbook01): null

10-01-2025T03:05:31 - [TEST_STEP][PASSED] - if (verifyEqual(tyR, tyB) == false): Actual object 'АО "Тываэнерго"/21.24/21.17/642168/506218/135950/608287/479095/129192/-0.07' and expected object 'АО "Тываэнерго"/21.24/21.17/642168/506218/135950/608287/479095/129192/-0.07' are equal

10-01-2025T03:05:31 - [MESSAGE][PASSED] - Actual object 'АО "Тываэнерго"/21.24/21.17/642168/506218/135950/608287/479095/129192/-0.07' and expected object 'АО "Тываэнерго"/21.24/21.17/642168/506218/135950/608287/479095/129192/-0.07' are equal

10-01-2025T03:05:31 - [TEST_STEP][PASSED] - if (verifyEqual(chR, chB) == false): Actual object 'АО "Чеченэнерго"/33.23/36.33/3631955/2312442/1319513/3403997/2272993/1131004/3.10' and expected object 'АО "Чеченэнерго"/33.23/36.33/3631955/2312442/1319513/3403997/2272993/1131004/3.10' are equal

10-01-2025T03:05:31 - [MESSAGE][PASSED] - Actual object 'АО "Чеченэнерго"/33.23/36.33/3631955/2312442/1319513/3403997/2272993/1131004/3.10' and expected object 'АО "Чеченэнерго"/33.23/36.33/3631955/2312442/1319513/3403997/2272993/1131004/3.10' are equal

10-01-2025T03:05:31 - [TEST_STEP][FAILED] - if (verifyEqual(vR, vB) == false): null

10-01-2025T03:05:31 - [MESSAGE][FAILED] - Unable to verify equal between actual object 'Россети Волга/нет данных/нет данных/нет данных/нет данных/нет данных/нет данных/нет данных/нет данных/нет данных' and expected object 'Россети Волга/5.53/5.14/48927820/46410515/2517305/51671180/48776338/2894842/-0.38' (Root cause: com.kms.katalon.core.exception.StepFailedException: Actual object 'Россети Волга/нет данных/нет данных/нет данных/нет данных/нет данных/нет данных/нет данных/нет данных/нет данных' and expected object 'Россети Волга/5.53/5.14/48927820/46410515/2517305/51671180/48776338/2894842/-0.38' are not equal
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.doCall(VerifyEqualKeyword.groovy:58)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.call(VerifyEqualKeyword.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:75)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.verifyEqual(VerifyEqualKeyword.groovy:63)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.execute(VerifyEqualKeyword.groovy:44)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:74)
	at com.kms.katalon.core.keyword.BuiltinKeywords.verifyEqual(BuiltinKeywords.groovy:146)
	at jdk.internal.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at Выполнение бизнес-плана сверка дашбордов.run(Выполнение бизнес-плана сверка дашбордов:597)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:448)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:439)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:418)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:410)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:285)
	at com.kms.katalon.core.common.CommonExecutor.accessTestCaseMainPhase(CommonExecutor.java:65)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:150)
	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:106)
	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:180)
	at TempTestSuite1736466949911.run(TempTestSuite1736466949911.groovy:35)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
)

10-01-2025T03:05:31 - [TEST_STEP][PASSED] - result = CompareDZOData(a = vR, b = vB, dZO, typeOfData, PercPlanR, PercPlanB, PercFactR, PercFactB, todaysDate, x, vidget, tabR, tabB, o1R, o1B): null

10-01-2025T03:05:31 - [TEST_STEP][PASSED] - ii2 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:31 - [TEST_STEP][FAILED] - if (verifyEqual(a, b) == false): null

10-01-2025T03:05:31 - [MESSAGE][FAILED] - Unable to verify equal between actual object 'Россети Волга/нет данных/нет данных/нет данных/нет данных/нет данных/нет данных/нет данных/нет данных/нет данных' and expected object 'Россети Волга/5.53/5.14/48927820/46410515/2517305/51671180/48776338/2894842/-0.38' (Root cause: com.kms.katalon.core.exception.StepFailedException: Actual object 'Россети Волга/нет данных/нет данных/нет данных/нет данных/нет данных/нет данных/нет данных/нет данных/нет данных' and expected object 'Россети Волга/5.53/5.14/48927820/46410515/2517305/51671180/48776338/2894842/-0.38' are not equal
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.doCall(VerifyEqualKeyword.groovy:58)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.call(VerifyEqualKeyword.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:75)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.verifyEqual(VerifyEqualKeyword.groovy:63)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.execute(VerifyEqualKeyword.groovy:44)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:74)
	at com.kms.katalon.core.keyword.BuiltinKeywords.verifyEqual(BuiltinKeywords.groovy:146)
	at jdk.internal.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at Выполнение бизнес-плана сверка дашбордов.CompareDZOData(Выполнение бизнес-плана сверка дашбордов:673)
	at Выполнение бизнес-плана сверка дашбордов.run(Выполнение бизнес-плана сверка дашбордов:598)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:448)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:439)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:418)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:410)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:285)
	at com.kms.katalon.core.common.CommonExecutor.accessTestCaseMainPhase(CommonExecutor.java:65)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:150)
	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:106)
	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:180)
	at TempTestSuite1736466949911.run(TempTestSuite1736466949911.groovy:35)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
)

10-01-2025T03:05:31 - [TEST_STEP][PASSED] - vidget = "Уровень потерь электроэнергии": null

10-01-2025T03:05:31 - [TEST_STEP][PASSED] - typeOfData = "План": null

10-01-2025T03:05:31 - [TEST_STEP][PASSED] - PercPlanR = GetPercPlanR(x = a): null

10-01-2025T03:05:31 - [TEST_STEP][PASSED] - i1 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:31 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:31 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:31 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:31 - [TEST_STEP][PASSED] - i1 = x.indexOf("/"): null

10-01-2025T03:05:31 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:31 - [TEST_STEP][PASSED] - x = x.substring(0, i1): null

10-01-2025T03:05:31 - [TEST_STEP][PASSED] - return x: null

10-01-2025T03:05:31 - [TEST_STEP][PASSED] - PercPlanB = GetPercPlanB(x = b): null

10-01-2025T03:05:31 - [TEST_STEP][PASSED] - i1 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:31 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:31 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:31 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:31 - [TEST_STEP][PASSED] - i1 = x.indexOf("/"): null

10-01-2025T03:05:31 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:31 - [TEST_STEP][PASSED] - x = x.substring(0, i1): null

10-01-2025T03:05:31 - [TEST_STEP][FAILED] - return x: null

10-01-2025T03:05:31 - [TEST_STEP][FAILED] - if (verifyEqual(PercPlanR, PercPlanB) == false): null

10-01-2025T03:05:31 - [MESSAGE][FAILED] - Unable to verify equal between actual object 'нет данных' and expected object '5.53' (Root cause: com.kms.katalon.core.exception.StepFailedException: Actual object 'нет данных' and expected object '5.53' are not equal
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.doCall(VerifyEqualKeyword.groovy:58)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.call(VerifyEqualKeyword.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:75)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.verifyEqual(VerifyEqualKeyword.groovy:63)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.execute(VerifyEqualKeyword.groovy:44)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:74)
	at com.kms.katalon.core.keyword.BuiltinKeywords.verifyEqual(BuiltinKeywords.groovy:146)
	at jdk.internal.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at Выполнение бизнес-плана сверка дашбордов.CompareDZOData(Выполнение бизнес-плана сверка дашбордов:682)
	at Выполнение бизнес-плана сверка дашбордов.run(Выполнение бизнес-плана сверка дашбордов:598)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:448)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:439)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:418)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:410)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:285)
	at com.kms.katalon.core.common.CommonExecutor.accessTestCaseMainPhase(CommonExecutor.java:65)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:150)
	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:106)
	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:180)
	at TempTestSuite1736466949911.run(TempTestSuite1736466949911.groovy:35)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
)

10-01-2025T03:05:31 - [TEST_STEP][PASSED] - result = WriteToExcel(typeOfData, todaysDate, PercPlanR, PercPlanB, PercFactR, PercFactB, x, tabR, tabB, o1R, o1B, vidget): null

10-01-2025T03:05:31 - [TEST_STEP][PASSED] - iii = dZO.indexOf("/"): null

10-01-2025T03:05:31 - [TEST_STEP][PASSED] - println(iii): null

10-01-2025T03:05:31 - [TEST_STEP][PASSED] - dZO = dZO.substring(0, iii): null

10-01-2025T03:05:31 - [TEST_STEP][PASSED] - println(dZO): null

10-01-2025T03:05:31 - [TEST_STEP][PASSED] - println(PercPlanR): null

10-01-2025T03:05:31 - [TEST_STEP][PASSED] - println(PercPlanB): null

10-01-2025T03:05:31 - [TEST_STEP][PASSED] - println(PercFactR): null

10-01-2025T03:05:31 - [TEST_STEP][PASSED] - println(PercFactB): null

10-01-2025T03:05:31 - [TEST_STEP][PASSED] - println(tabR): null

10-01-2025T03:05:31 - [TEST_STEP][PASSED] - println(tabB): null

10-01-2025T03:05:31 - [TEST_STEP][PASSED] - println(o1R): null

10-01-2025T03:05:31 - [TEST_STEP][PASSED] - println(o1B): null

10-01-2025T03:05:31 - [TEST_STEP][PASSED] - PR = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:31 - [TEST_STEP][PASSED] - FR = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:31 - [TEST_STEP][PASSED] - PB = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:31 - [TEST_STEP][PASSED] - FB = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:31 - [TEST_STEP][PASSED] - TR = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:31 - [TEST_STEP][PASSED] - TB = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:31 - [TEST_STEP][PASSED] - sheetName = "Sheet1": null

10-01-2025T03:05:31 - [TEST_STEP][PASSED] - data = findTestData("PlanFact"): null

10-01-2025T03:05:31 - [TEST_STEP][PASSED] - n = data.getRowNumbers() + 1: null

10-01-2025T03:05:31 - [TEST_STEP][PASSED] - year = todaysDate.substring(todaysDate.length() - 4, todaysDate.length()): null

10-01-2025T03:05:31 - [TEST_STEP][PASSED] - y = year.toInteger(): null

10-01-2025T03:05:31 - [TEST_STEP][PASSED] - m = getText(findTestObject("Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Фильтр Дата")): Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Фильтр Дата' is: '1, 2, 3 кв., Октябрь, Ноябрь 2024 года'

10-01-2025T03:05:31 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Фильтр Дата' is: '1, 2, 3 кв., Октябрь, Ноябрь 2024 года'

10-01-2025T03:05:31 - [TEST_STEP][PASSED] - m = m.substring(0, m.indexOf("2024")): null

10-01-2025T03:05:31 - [TEST_STEP][PASSED] - m = m.trim(): null

10-01-2025T03:05:31 - [TEST_STEP][PASSED] - dashboardName = "Выполнение бизнес-плана": null

10-01-2025T03:05:31 - [TEST_STEP][PASSED] - workbook01 = getWorkbook(excelFilePath): null

10-01-2025T03:05:31 - [TEST_STEP][PASSED] - sheet01 = getExcelSheet(workbook01, sheetName): null

10-01-2025T03:05:31 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 0, dashboardName): null

10-01-2025T03:05:31 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 1, dZO): null

10-01-2025T03:05:31 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 2, typeOfData): null

10-01-2025T03:05:31 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 3, typeOfData): null

10-01-2025T03:05:31 - [TEST_STEP][PASSED] - if (typeOfData == "План"): null

10-01-2025T03:05:31 - [TEST_STEP][PASSED] - if (PercPlanR == null): null

10-01-2025T03:05:31 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:05:31 - [TEST_STEP][PASSED] - if (PercPlanR == "нет данных"): null

10-01-2025T03:05:31 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 4, "нет данных"): null

10-01-2025T03:05:31 - [TEST_STEP][PASSED] - if (PercPlanB == null): null

10-01-2025T03:05:31 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:05:31 - [TEST_STEP][PASSED] - if (PercPlanB == "нет данных"): null

10-01-2025T03:05:31 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:05:31 - [TEST_STEP][PASSED] - PB = PercPlanB.toDouble(): null

10-01-2025T03:05:31 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 5, PB): null

10-01-2025T03:05:31 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 6, m): null

10-01-2025T03:05:31 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 7, y): null

10-01-2025T03:05:31 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 8, todaysDate): null

10-01-2025T03:05:31 - [TEST_STEP][PASSED] - n = n + 1: null

10-01-2025T03:05:31 - [TEST_STEP][PASSED] - saveWorkbook(excelFilePath, workbook01): null

10-01-2025T03:05:31 - [TEST_STEP][PASSED] - typeOfData = "Факт": null

10-01-2025T03:05:31 - [TEST_STEP][PASSED] - PercFactR = GetPercFactR(x = a): null

10-01-2025T03:05:31 - [TEST_STEP][PASSED] - i1 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:31 - [TEST_STEP][PASSED] - ii = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:31 - [TEST_STEP][PASSED] - for ([ii = 1, ii < 3, (ii++)]): null

10-01-2025T03:05:31 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:31 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:31 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:31 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:31 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:31 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:31 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:31 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:31 - [TEST_STEP][PASSED] - i1 = x.indexOf("/"): null

10-01-2025T03:05:31 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:31 - [TEST_STEP][PASSED] - x = x.substring(0, i1): null

10-01-2025T03:05:31 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:31 - [TEST_STEP][PASSED] - return x: null

10-01-2025T03:05:31 - [TEST_STEP][PASSED] - PercFactB = GetPercFactB(x = b): null

10-01-2025T03:05:31 - [TEST_STEP][PASSED] - i1 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:31 - [TEST_STEP][PASSED] - ii = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:31 - [TEST_STEP][PASSED] - for ([ii = 1, ii < 3, (ii++)]): null

10-01-2025T03:05:31 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:31 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:31 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:31 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:31 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:31 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:31 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:31 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:31 - [TEST_STEP][PASSED] - i1 = x.indexOf("/"): null

10-01-2025T03:05:31 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:31 - [TEST_STEP][PASSED] - x = x.substring(0, i1): null

10-01-2025T03:05:31 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:31 - [TEST_STEP][FAILED] - return x: null

10-01-2025T03:05:31 - [TEST_STEP][FAILED] - if (verifyEqual(PercFactR, PercFactB) == false): null

10-01-2025T03:05:31 - [MESSAGE][FAILED] - Unable to verify equal between actual object 'нет данных' and expected object '5.14' (Root cause: com.kms.katalon.core.exception.StepFailedException: Actual object 'нет данных' and expected object '5.14' are not equal
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.doCall(VerifyEqualKeyword.groovy:58)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.call(VerifyEqualKeyword.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:75)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.verifyEqual(VerifyEqualKeyword.groovy:63)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.execute(VerifyEqualKeyword.groovy:44)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:74)
	at com.kms.katalon.core.keyword.BuiltinKeywords.verifyEqual(BuiltinKeywords.groovy:146)
	at jdk.internal.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at Выполнение бизнес-плана сверка дашбордов.CompareDZOData(Выполнение бизнес-плана сверка дашбордов:693)
	at Выполнение бизнес-плана сверка дашбордов.run(Выполнение бизнес-плана сверка дашбордов:598)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:448)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:439)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:418)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:410)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:285)
	at com.kms.katalon.core.common.CommonExecutor.accessTestCaseMainPhase(CommonExecutor.java:65)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:150)
	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:106)
	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:180)
	at TempTestSuite1736466949911.run(TempTestSuite1736466949911.groovy:35)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
)

10-01-2025T03:05:31 - [TEST_STEP][PASSED] - result = WriteToExcel(typeOfData, todaysDate, PercPlanR, PercPlanB, PercFactR, PercFactB, x, tabR, tabB, o1R, o1B, vidget): null

10-01-2025T03:05:31 - [TEST_STEP][PASSED] - iii = dZO.indexOf("/"): null

10-01-2025T03:05:31 - [TEST_STEP][PASSED] - println(iii): null

10-01-2025T03:05:31 - [TEST_STEP][PASSED] - dZO = dZO.substring(0, iii): null

10-01-2025T03:05:31 - [TEST_STEP][PASSED] - println(dZO): null

10-01-2025T03:05:31 - [TEST_STEP][PASSED] - println(PercPlanR): null

10-01-2025T03:05:31 - [TEST_STEP][PASSED] - println(PercPlanB): null

10-01-2025T03:05:31 - [TEST_STEP][PASSED] - println(PercFactR): null

10-01-2025T03:05:31 - [TEST_STEP][PASSED] - println(PercFactB): null

10-01-2025T03:05:31 - [TEST_STEP][PASSED] - println(tabR): null

10-01-2025T03:05:31 - [TEST_STEP][PASSED] - println(tabB): null

10-01-2025T03:05:31 - [TEST_STEP][PASSED] - println(o1R): null

10-01-2025T03:05:31 - [TEST_STEP][PASSED] - println(o1B): null

10-01-2025T03:05:31 - [TEST_STEP][PASSED] - PR = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:31 - [TEST_STEP][PASSED] - FR = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:31 - [TEST_STEP][PASSED] - PB = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:31 - [TEST_STEP][PASSED] - FB = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:31 - [TEST_STEP][PASSED] - TR = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:31 - [TEST_STEP][PASSED] - TB = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:31 - [TEST_STEP][PASSED] - sheetName = "Sheet1": null

10-01-2025T03:05:31 - [TEST_STEP][PASSED] - data = findTestData("PlanFact"): null

10-01-2025T03:05:31 - [TEST_STEP][PASSED] - n = data.getRowNumbers() + 1: null

10-01-2025T03:05:31 - [TEST_STEP][PASSED] - year = todaysDate.substring(todaysDate.length() - 4, todaysDate.length()): null

10-01-2025T03:05:31 - [TEST_STEP][PASSED] - y = year.toInteger(): null

10-01-2025T03:05:31 - [TEST_STEP][PASSED] - m = getText(findTestObject("Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Фильтр Дата")): Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Фильтр Дата' is: '1, 2, 3 кв., Октябрь, Ноябрь 2024 года'

10-01-2025T03:05:32 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Фильтр Дата' is: '1, 2, 3 кв., Октябрь, Ноябрь 2024 года'

10-01-2025T03:05:32 - [TEST_STEP][PASSED] - m = m.substring(0, m.indexOf("2024")): null

10-01-2025T03:05:32 - [TEST_STEP][PASSED] - m = m.trim(): null

10-01-2025T03:05:32 - [TEST_STEP][PASSED] - dashboardName = "Выполнение бизнес-плана": null

10-01-2025T03:05:32 - [TEST_STEP][PASSED] - workbook01 = getWorkbook(excelFilePath): null

10-01-2025T03:05:32 - [TEST_STEP][PASSED] - sheet01 = getExcelSheet(workbook01, sheetName): null

10-01-2025T03:05:32 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 0, dashboardName): null

10-01-2025T03:05:32 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 1, dZO): null

10-01-2025T03:05:32 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 2, typeOfData): null

10-01-2025T03:05:32 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 3, typeOfData): null

10-01-2025T03:05:32 - [TEST_STEP][PASSED] - if (typeOfData == "План"): null

10-01-2025T03:05:32 - [TEST_STEP][PASSED] - else if (typeOfData == "Факт"): null

10-01-2025T03:05:32 - [TEST_STEP][PASSED] - if (PercFactR == null): null

10-01-2025T03:05:32 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:05:32 - [TEST_STEP][PASSED] - if (PercFactR == "нет данных"): null

10-01-2025T03:05:32 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 4, "нет данных"): null

10-01-2025T03:05:32 - [TEST_STEP][PASSED] - if (PercFactB == null): null

10-01-2025T03:05:32 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:05:32 - [TEST_STEP][PASSED] - if (PercFactB == "нет данных"): null

10-01-2025T03:05:32 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:05:32 - [TEST_STEP][PASSED] - FB = PercFactB.toDouble(): null

10-01-2025T03:05:32 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 5, FB): null

10-01-2025T03:05:32 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 6, m): null

10-01-2025T03:05:32 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 7, y): null

10-01-2025T03:05:32 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 8, todaysDate): null

10-01-2025T03:05:32 - [TEST_STEP][PASSED] - n = n + 1: null

10-01-2025T03:05:32 - [TEST_STEP][PASSED] - saveWorkbook(excelFilePath, workbook01): null

10-01-2025T03:05:32 - [TEST_STEP][PASSED] - vidget = "Показатели баланса электроэнергии по ДЗО – Факт": null

10-01-2025T03:05:32 - [TEST_STEP][PASSED] - typeOfData = "Факт Отпуск в сеть": null

10-01-2025T03:05:32 - [TEST_STEP][PASSED] - tabR = GetOvSFactR(x = a): null

10-01-2025T03:05:32 - [TEST_STEP][PASSED] - i1 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:32 - [TEST_STEP][PASSED] - ii = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:32 - [TEST_STEP][PASSED] - for ([ii = 1, ii < 4, (ii++)]): null

10-01-2025T03:05:32 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:32 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:32 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:32 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:32 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:32 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:32 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:32 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:32 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:32 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:32 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:32 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:32 - [TEST_STEP][PASSED] - i1 = x.indexOf("/"): null

10-01-2025T03:05:32 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:32 - [TEST_STEP][PASSED] - x = x.substring(0, i1): null

10-01-2025T03:05:32 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:32 - [TEST_STEP][PASSED] - return x: null

10-01-2025T03:05:32 - [TEST_STEP][PASSED] - tabB = GetOvSFactB(x = b): null

10-01-2025T03:05:32 - [TEST_STEP][PASSED] - i1 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:32 - [TEST_STEP][PASSED] - ii = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:32 - [TEST_STEP][PASSED] - for ([ii = 1, ii < 4, (ii++)]): null

10-01-2025T03:05:32 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:32 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:32 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:32 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:32 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:32 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:32 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:32 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:32 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:32 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:32 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:32 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:32 - [TEST_STEP][PASSED] - i1 = x.indexOf("/"): null

10-01-2025T03:05:32 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:32 - [TEST_STEP][PASSED] - x = x.substring(0, i1): null

10-01-2025T03:05:32 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:32 - [TEST_STEP][FAILED] - return x: null

10-01-2025T03:05:32 - [TEST_STEP][FAILED] - if (verifyEqual(tabR, tabB) == false): null

10-01-2025T03:05:32 - [MESSAGE][FAILED] - Unable to verify equal between actual object 'нет данных' and expected object '48927820' (Root cause: com.kms.katalon.core.exception.StepFailedException: Actual object 'нет данных' and expected object '48927820' are not equal
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.doCall(VerifyEqualKeyword.groovy:58)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.call(VerifyEqualKeyword.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:75)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.verifyEqual(VerifyEqualKeyword.groovy:63)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.execute(VerifyEqualKeyword.groovy:44)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:74)
	at com.kms.katalon.core.keyword.BuiltinKeywords.verifyEqual(BuiltinKeywords.groovy:146)
	at jdk.internal.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at Выполнение бизнес-плана сверка дашбордов.CompareDZOData(Выполнение бизнес-плана сверка дашбордов:706)
	at Выполнение бизнес-плана сверка дашбордов.run(Выполнение бизнес-плана сверка дашбордов:598)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:448)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:439)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:418)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:410)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:285)
	at com.kms.katalon.core.common.CommonExecutor.accessTestCaseMainPhase(CommonExecutor.java:65)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:150)
	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:106)
	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:180)
	at TempTestSuite1736466949911.run(TempTestSuite1736466949911.groovy:35)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
)

10-01-2025T03:05:32 - [TEST_STEP][PASSED] - result = WriteToExcel(typeOfData, todaysDate, PercPlanR, PercPlanB, PercFactR, PercFactB, x, tabR, tabB, o1R, o1B, vidget): null

10-01-2025T03:05:32 - [TEST_STEP][PASSED] - iii = dZO.indexOf("/"): null

10-01-2025T03:05:32 - [TEST_STEP][PASSED] - println(iii): null

10-01-2025T03:05:32 - [TEST_STEP][PASSED] - dZO = dZO.substring(0, iii): null

10-01-2025T03:05:32 - [TEST_STEP][PASSED] - println(dZO): null

10-01-2025T03:05:32 - [TEST_STEP][PASSED] - println(PercPlanR): null

10-01-2025T03:05:32 - [TEST_STEP][PASSED] - println(PercPlanB): null

10-01-2025T03:05:32 - [TEST_STEP][PASSED] - println(PercFactR): null

10-01-2025T03:05:32 - [TEST_STEP][PASSED] - println(PercFactB): null

10-01-2025T03:05:32 - [TEST_STEP][PASSED] - println(tabR): null

10-01-2025T03:05:32 - [TEST_STEP][PASSED] - println(tabB): null

10-01-2025T03:05:32 - [TEST_STEP][PASSED] - println(o1R): null

10-01-2025T03:05:32 - [TEST_STEP][PASSED] - println(o1B): null

10-01-2025T03:05:32 - [TEST_STEP][PASSED] - PR = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:32 - [TEST_STEP][PASSED] - FR = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:32 - [TEST_STEP][PASSED] - PB = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:32 - [TEST_STEP][PASSED] - FB = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:32 - [TEST_STEP][PASSED] - TR = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:32 - [TEST_STEP][PASSED] - TB = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:32 - [TEST_STEP][PASSED] - sheetName = "Sheet1": null

10-01-2025T03:05:32 - [TEST_STEP][PASSED] - data = findTestData("PlanFact"): null

10-01-2025T03:05:32 - [TEST_STEP][PASSED] - n = data.getRowNumbers() + 1: null

10-01-2025T03:05:32 - [TEST_STEP][PASSED] - year = todaysDate.substring(todaysDate.length() - 4, todaysDate.length()): null

10-01-2025T03:05:32 - [TEST_STEP][PASSED] - y = year.toInteger(): null

10-01-2025T03:05:32 - [TEST_STEP][PASSED] - m = getText(findTestObject("Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Фильтр Дата")): Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Фильтр Дата' is: '1, 2, 3 кв., Октябрь, Ноябрь 2024 года'

10-01-2025T03:05:32 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Фильтр Дата' is: '1, 2, 3 кв., Октябрь, Ноябрь 2024 года'

10-01-2025T03:05:32 - [TEST_STEP][PASSED] - m = m.substring(0, m.indexOf("2024")): null

10-01-2025T03:05:32 - [TEST_STEP][PASSED] - m = m.trim(): null

10-01-2025T03:05:32 - [TEST_STEP][PASSED] - dashboardName = "Выполнение бизнес-плана": null

10-01-2025T03:05:32 - [TEST_STEP][PASSED] - workbook01 = getWorkbook(excelFilePath): null

10-01-2025T03:05:32 - [TEST_STEP][PASSED] - sheet01 = getExcelSheet(workbook01, sheetName): null

10-01-2025T03:05:32 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 0, dashboardName): null

10-01-2025T03:05:32 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 1, dZO): null

10-01-2025T03:05:32 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 2, typeOfData): null

10-01-2025T03:05:32 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 3, typeOfData): null

10-01-2025T03:05:32 - [TEST_STEP][PASSED] - if (typeOfData == "План"): null

10-01-2025T03:05:32 - [TEST_STEP][PASSED] - else if (typeOfData == "Факт"): null

10-01-2025T03:05:32 - [TEST_STEP][PASSED] - else if (vidget.contains("электроэнергии") == true): null

10-01-2025T03:05:32 - [TEST_STEP][PASSED] - if (tabR == null): null

10-01-2025T03:05:32 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:05:32 - [TEST_STEP][PASSED] - if (tabR == "нет данных"): null

10-01-2025T03:05:32 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 4, "нет данных"): null

10-01-2025T03:05:32 - [TEST_STEP][PASSED] - if (tabB == null): null

10-01-2025T03:05:32 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:05:32 - [TEST_STEP][PASSED] - if (tabB == "нет данных"): null

10-01-2025T03:05:32 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:05:32 - [TEST_STEP][PASSED] - TB = tabB.toInteger(): null

10-01-2025T03:05:32 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 5, TB): null

10-01-2025T03:05:32 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 6, m): null

10-01-2025T03:05:32 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 7, y): null

10-01-2025T03:05:32 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 8, todaysDate): null

10-01-2025T03:05:32 - [TEST_STEP][PASSED] - n = n + 1: null

10-01-2025T03:05:32 - [TEST_STEP][PASSED] - saveWorkbook(excelFilePath, workbook01): null

10-01-2025T03:05:33 - [TEST_STEP][PASSED] - typeOfData = "Факт Отпуск из сети": null

10-01-2025T03:05:33 - [TEST_STEP][PASSED] - tabR = GetOiSFactR(x = a): null

10-01-2025T03:05:33 - [TEST_STEP][PASSED] - i1 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:33 - [TEST_STEP][PASSED] - ii = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:33 - [TEST_STEP][PASSED] - for ([ii = 1, ii < 5, (ii++)]): null

10-01-2025T03:05:33 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:33 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:33 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:33 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:33 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:33 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:33 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:33 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:33 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:33 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:33 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:33 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:33 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:33 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:33 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:33 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:33 - [TEST_STEP][PASSED] - i1 = x.indexOf("/"): null

10-01-2025T03:05:33 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:33 - [TEST_STEP][PASSED] - x = x.substring(0, i1): null

10-01-2025T03:05:33 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:33 - [TEST_STEP][PASSED] - return x: null

10-01-2025T03:05:33 - [TEST_STEP][PASSED] - tabB = GetOiSFactB(x = b): null

10-01-2025T03:05:33 - [TEST_STEP][PASSED] - i1 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:33 - [TEST_STEP][PASSED] - ii = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:33 - [TEST_STEP][PASSED] - for ([ii = 1, ii < 5, (ii++)]): null

10-01-2025T03:05:33 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:33 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:33 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:33 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:33 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:33 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:33 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:33 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:33 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:33 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:33 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:33 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:33 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:33 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:33 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:33 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:33 - [TEST_STEP][PASSED] - i1 = x.indexOf("/"): null

10-01-2025T03:05:33 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:33 - [TEST_STEP][PASSED] - x = x.substring(0, i1): null

10-01-2025T03:05:33 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:33 - [TEST_STEP][FAILED] - return x: null

10-01-2025T03:05:33 - [TEST_STEP][FAILED] - if (verifyEqual(tabR, tabB) == false): null

10-01-2025T03:05:33 - [MESSAGE][FAILED] - Unable to verify equal between actual object 'нет данных' and expected object '46410515' (Root cause: com.kms.katalon.core.exception.StepFailedException: Actual object 'нет данных' and expected object '46410515' are not equal
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.doCall(VerifyEqualKeyword.groovy:58)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.call(VerifyEqualKeyword.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:75)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.verifyEqual(VerifyEqualKeyword.groovy:63)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.execute(VerifyEqualKeyword.groovy:44)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:74)
	at com.kms.katalon.core.keyword.BuiltinKeywords.verifyEqual(BuiltinKeywords.groovy:146)
	at jdk.internal.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at Выполнение бизнес-плана сверка дашбордов.CompareDZOData(Выполнение бизнес-плана сверка дашбордов:717)
	at Выполнение бизнес-плана сверка дашбордов.run(Выполнение бизнес-плана сверка дашбордов:598)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:448)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:439)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:418)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:410)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:285)
	at com.kms.katalon.core.common.CommonExecutor.accessTestCaseMainPhase(CommonExecutor.java:65)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:150)
	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:106)
	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:180)
	at TempTestSuite1736466949911.run(TempTestSuite1736466949911.groovy:35)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
)

10-01-2025T03:05:33 - [TEST_STEP][PASSED] - result = WriteToExcel(typeOfData, todaysDate, PercPlanR, PercPlanB, PercFactR, PercFactB, x, tabR, tabB, o1R, o1B, vidget): null

10-01-2025T03:05:33 - [TEST_STEP][PASSED] - iii = dZO.indexOf("/"): null

10-01-2025T03:05:33 - [TEST_STEP][PASSED] - println(iii): null

10-01-2025T03:05:33 - [TEST_STEP][PASSED] - dZO = dZO.substring(0, iii): null

10-01-2025T03:05:33 - [TEST_STEP][PASSED] - println(dZO): null

10-01-2025T03:05:33 - [TEST_STEP][PASSED] - println(PercPlanR): null

10-01-2025T03:05:33 - [TEST_STEP][PASSED] - println(PercPlanB): null

10-01-2025T03:05:33 - [TEST_STEP][PASSED] - println(PercFactR): null

10-01-2025T03:05:33 - [TEST_STEP][PASSED] - println(PercFactB): null

10-01-2025T03:05:33 - [TEST_STEP][PASSED] - println(tabR): null

10-01-2025T03:05:33 - [TEST_STEP][PASSED] - println(tabB): null

10-01-2025T03:05:33 - [TEST_STEP][PASSED] - println(o1R): null

10-01-2025T03:05:33 - [TEST_STEP][PASSED] - println(o1B): null

10-01-2025T03:05:33 - [TEST_STEP][PASSED] - PR = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:33 - [TEST_STEP][PASSED] - FR = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:33 - [TEST_STEP][PASSED] - PB = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:33 - [TEST_STEP][PASSED] - FB = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:33 - [TEST_STEP][PASSED] - TR = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:33 - [TEST_STEP][PASSED] - TB = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:33 - [TEST_STEP][PASSED] - sheetName = "Sheet1": null

10-01-2025T03:05:33 - [TEST_STEP][PASSED] - data = findTestData("PlanFact"): null

10-01-2025T03:05:33 - [TEST_STEP][PASSED] - n = data.getRowNumbers() + 1: null

10-01-2025T03:05:33 - [TEST_STEP][PASSED] - year = todaysDate.substring(todaysDate.length() - 4, todaysDate.length()): null

10-01-2025T03:05:33 - [TEST_STEP][PASSED] - y = year.toInteger(): null

10-01-2025T03:05:33 - [TEST_STEP][PASSED] - m = getText(findTestObject("Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Фильтр Дата")): Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Фильтр Дата' is: '1, 2, 3 кв., Октябрь, Ноябрь 2024 года'

10-01-2025T03:05:33 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Фильтр Дата' is: '1, 2, 3 кв., Октябрь, Ноябрь 2024 года'

10-01-2025T03:05:33 - [TEST_STEP][PASSED] - m = m.substring(0, m.indexOf("2024")): null

10-01-2025T03:05:33 - [TEST_STEP][PASSED] - m = m.trim(): null

10-01-2025T03:05:33 - [TEST_STEP][PASSED] - dashboardName = "Выполнение бизнес-плана": null

10-01-2025T03:05:33 - [TEST_STEP][PASSED] - workbook01 = getWorkbook(excelFilePath): null

10-01-2025T03:05:33 - [TEST_STEP][PASSED] - sheet01 = getExcelSheet(workbook01, sheetName): null

10-01-2025T03:05:33 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 0, dashboardName): null

10-01-2025T03:05:33 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 1, dZO): null

10-01-2025T03:05:33 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 2, typeOfData): null

10-01-2025T03:05:33 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 3, typeOfData): null

10-01-2025T03:05:33 - [TEST_STEP][PASSED] - if (typeOfData == "План"): null

10-01-2025T03:05:33 - [TEST_STEP][PASSED] - else if (typeOfData == "Факт"): null

10-01-2025T03:05:33 - [TEST_STEP][PASSED] - else if (vidget.contains("электроэнергии") == true): null

10-01-2025T03:05:33 - [TEST_STEP][PASSED] - if (tabR == null): null

10-01-2025T03:05:33 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:05:33 - [TEST_STEP][PASSED] - if (tabR == "нет данных"): null

10-01-2025T03:05:33 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 4, "нет данных"): null

10-01-2025T03:05:33 - [TEST_STEP][PASSED] - if (tabB == null): null

10-01-2025T03:05:33 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:05:33 - [TEST_STEP][PASSED] - if (tabB == "нет данных"): null

10-01-2025T03:05:33 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:05:33 - [TEST_STEP][PASSED] - TB = tabB.toInteger(): null

10-01-2025T03:05:33 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 5, TB): null

10-01-2025T03:05:33 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 6, m): null

10-01-2025T03:05:33 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 7, y): null

10-01-2025T03:05:33 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 8, todaysDate): null

10-01-2025T03:05:33 - [TEST_STEP][PASSED] - n = n + 1: null

10-01-2025T03:05:33 - [TEST_STEP][PASSED] - saveWorkbook(excelFilePath, workbook01): null

10-01-2025T03:05:33 - [TEST_STEP][PASSED] - typeOfData = "Факт Потери": null

10-01-2025T03:05:33 - [TEST_STEP][PASSED] - tabR = GetPFactR(x = a): null

10-01-2025T03:05:33 - [TEST_STEP][PASSED] - i1 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:33 - [TEST_STEP][PASSED] - ii = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:33 - [TEST_STEP][PASSED] - for ([ii = 1, ii < 6, (ii++)]): null

10-01-2025T03:05:33 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:33 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:33 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:33 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:33 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:33 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:33 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:33 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:33 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:33 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:33 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:33 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:33 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:33 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:33 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:33 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:33 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:33 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:33 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:33 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:33 - [TEST_STEP][PASSED] - i1 = x.indexOf("/"): null

10-01-2025T03:05:33 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:33 - [TEST_STEP][PASSED] - x = x.substring(0, i1): null

10-01-2025T03:05:33 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:33 - [TEST_STEP][PASSED] - return x: null

10-01-2025T03:05:33 - [TEST_STEP][PASSED] - tabB = GetPFactB(x = b): null

10-01-2025T03:05:33 - [TEST_STEP][PASSED] - i1 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:33 - [TEST_STEP][PASSED] - ii = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:33 - [TEST_STEP][PASSED] - for ([ii = 1, ii < 6, (ii++)]): null

10-01-2025T03:05:33 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:33 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:33 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:33 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:33 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:33 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:33 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:33 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:33 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:33 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:33 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:33 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:33 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:33 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:33 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:33 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:33 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:33 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:33 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:33 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:33 - [TEST_STEP][PASSED] - i1 = x.indexOf("/"): null

10-01-2025T03:05:33 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:33 - [TEST_STEP][PASSED] - x = x.substring(0, i1): null

10-01-2025T03:05:33 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:33 - [TEST_STEP][FAILED] - return x: null

10-01-2025T03:05:33 - [TEST_STEP][PASSED] - println(tabR + "/" + tabB): null

10-01-2025T03:05:33 - [TEST_STEP][FAILED] - if (verifyEqual(tabR, tabB) == false): null

10-01-2025T03:05:33 - [MESSAGE][FAILED] - Unable to verify equal between actual object 'нет данных' and expected object '2517305' (Root cause: com.kms.katalon.core.exception.StepFailedException: Actual object 'нет данных' and expected object '2517305' are not equal
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.doCall(VerifyEqualKeyword.groovy:58)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.call(VerifyEqualKeyword.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:75)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.verifyEqual(VerifyEqualKeyword.groovy:63)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.execute(VerifyEqualKeyword.groovy:44)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:74)
	at com.kms.katalon.core.keyword.BuiltinKeywords.verifyEqual(BuiltinKeywords.groovy:146)
	at jdk.internal.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at Выполнение бизнес-плана сверка дашбордов.CompareDZOData(Выполнение бизнес-плана сверка дашбордов:730)
	at Выполнение бизнес-плана сверка дашбордов.run(Выполнение бизнес-плана сверка дашбордов:598)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:448)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:439)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:418)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:410)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:285)
	at com.kms.katalon.core.common.CommonExecutor.accessTestCaseMainPhase(CommonExecutor.java:65)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:150)
	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:106)
	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:180)
	at TempTestSuite1736466949911.run(TempTestSuite1736466949911.groovy:35)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
)

10-01-2025T03:05:33 - [TEST_STEP][PASSED] - result = WriteToExcel(typeOfData, todaysDate, PercPlanR, PercPlanB, PercFactR, PercFactB, x, tabR, tabB, o1R, o1B, vidget): null

10-01-2025T03:05:33 - [TEST_STEP][PASSED] - iii = dZO.indexOf("/"): null

10-01-2025T03:05:33 - [TEST_STEP][PASSED] - println(iii): null

10-01-2025T03:05:33 - [TEST_STEP][PASSED] - dZO = dZO.substring(0, iii): null

10-01-2025T03:05:33 - [TEST_STEP][PASSED] - println(dZO): null

10-01-2025T03:05:33 - [TEST_STEP][PASSED] - println(PercPlanR): null

10-01-2025T03:05:33 - [TEST_STEP][PASSED] - println(PercPlanB): null

10-01-2025T03:05:33 - [TEST_STEP][PASSED] - println(PercFactR): null

10-01-2025T03:05:33 - [TEST_STEP][PASSED] - println(PercFactB): null

10-01-2025T03:05:33 - [TEST_STEP][PASSED] - println(tabR): null

10-01-2025T03:05:33 - [TEST_STEP][PASSED] - println(tabB): null

10-01-2025T03:05:33 - [TEST_STEP][PASSED] - println(o1R): null

10-01-2025T03:05:33 - [TEST_STEP][PASSED] - println(o1B): null

10-01-2025T03:05:33 - [TEST_STEP][PASSED] - PR = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:33 - [TEST_STEP][PASSED] - FR = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:33 - [TEST_STEP][PASSED] - PB = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:33 - [TEST_STEP][PASSED] - FB = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:33 - [TEST_STEP][PASSED] - TR = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:33 - [TEST_STEP][PASSED] - TB = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:33 - [TEST_STEP][PASSED] - sheetName = "Sheet1": null

10-01-2025T03:05:33 - [TEST_STEP][PASSED] - data = findTestData("PlanFact"): null

10-01-2025T03:05:33 - [TEST_STEP][PASSED] - n = data.getRowNumbers() + 1: null

10-01-2025T03:05:33 - [TEST_STEP][PASSED] - year = todaysDate.substring(todaysDate.length() - 4, todaysDate.length()): null

10-01-2025T03:05:33 - [TEST_STEP][PASSED] - y = year.toInteger(): null

10-01-2025T03:05:33 - [TEST_STEP][PASSED] - m = getText(findTestObject("Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Фильтр Дата")): Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Фильтр Дата' is: '1, 2, 3 кв., Октябрь, Ноябрь 2024 года'

10-01-2025T03:05:34 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Фильтр Дата' is: '1, 2, 3 кв., Октябрь, Ноябрь 2024 года'

10-01-2025T03:05:34 - [TEST_STEP][PASSED] - m = m.substring(0, m.indexOf("2024")): null

10-01-2025T03:05:34 - [TEST_STEP][PASSED] - m = m.trim(): null

10-01-2025T03:05:34 - [TEST_STEP][PASSED] - dashboardName = "Выполнение бизнес-плана": null

10-01-2025T03:05:34 - [TEST_STEP][PASSED] - workbook01 = getWorkbook(excelFilePath): null

10-01-2025T03:05:34 - [TEST_STEP][PASSED] - sheet01 = getExcelSheet(workbook01, sheetName): null

10-01-2025T03:05:34 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 0, dashboardName): null

10-01-2025T03:05:34 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 1, dZO): null

10-01-2025T03:05:34 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 2, typeOfData): null

10-01-2025T03:05:34 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 3, typeOfData): null

10-01-2025T03:05:34 - [TEST_STEP][PASSED] - if (typeOfData == "План"): null

10-01-2025T03:05:34 - [TEST_STEP][PASSED] - else if (typeOfData == "Факт"): null

10-01-2025T03:05:34 - [TEST_STEP][PASSED] - else if (vidget.contains("электроэнергии") == true): null

10-01-2025T03:05:34 - [TEST_STEP][PASSED] - if (tabR == null): null

10-01-2025T03:05:34 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:05:34 - [TEST_STEP][PASSED] - if (tabR == "нет данных"): null

10-01-2025T03:05:34 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 4, "нет данных"): null

10-01-2025T03:05:34 - [TEST_STEP][PASSED] - if (tabB == null): null

10-01-2025T03:05:34 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:05:34 - [TEST_STEP][PASSED] - if (tabB == "нет данных"): null

10-01-2025T03:05:34 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:05:34 - [TEST_STEP][PASSED] - TB = tabB.toInteger(): null

10-01-2025T03:05:34 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 5, TB): null

10-01-2025T03:05:34 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 6, m): null

10-01-2025T03:05:34 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 7, y): null

10-01-2025T03:05:34 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 8, todaysDate): null

10-01-2025T03:05:34 - [TEST_STEP][PASSED] - n = n + 1: null

10-01-2025T03:05:34 - [TEST_STEP][PASSED] - saveWorkbook(excelFilePath, workbook01): null

10-01-2025T03:05:34 - [TEST_STEP][PASSED] - vidget = "Показатели баланса электроэнергии по ДЗО – План": null

10-01-2025T03:05:34 - [TEST_STEP][PASSED] - typeOfData = "План Отпуск в сеть": null

10-01-2025T03:05:34 - [TEST_STEP][PASSED] - tabR = GetOvSPlanR(x = a): null

10-01-2025T03:05:34 - [TEST_STEP][PASSED] - i1 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:34 - [TEST_STEP][PASSED] - ii = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:34 - [TEST_STEP][PASSED] - for ([ii = 1, ii < 7, (ii++)]): null

10-01-2025T03:05:34 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:34 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:34 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:34 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:34 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:34 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:34 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:34 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:34 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:34 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:34 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:34 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:34 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:34 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:34 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:34 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:34 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:34 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:34 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:34 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:34 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:34 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:34 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:34 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:34 - [TEST_STEP][PASSED] - i1 = x.indexOf("/"): null

10-01-2025T03:05:34 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:34 - [TEST_STEP][PASSED] - x = x.substring(0, i1): null

10-01-2025T03:05:34 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:34 - [TEST_STEP][PASSED] - return x: null

10-01-2025T03:05:34 - [TEST_STEP][PASSED] - tabB = GetOvSPlanB(x = b): null

10-01-2025T03:05:34 - [TEST_STEP][PASSED] - i1 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:34 - [TEST_STEP][PASSED] - ii = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:34 - [TEST_STEP][PASSED] - for ([ii = 1, ii < 7, (ii++)]): null

10-01-2025T03:05:34 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:34 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:34 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:34 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:34 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:34 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:34 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:34 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:34 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:34 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:34 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:34 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:34 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:34 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:34 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:34 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:34 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:34 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:34 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:34 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:34 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:34 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:34 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:34 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:34 - [TEST_STEP][PASSED] - i1 = x.indexOf("/"): null

10-01-2025T03:05:34 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:34 - [TEST_STEP][PASSED] - x = x.substring(0, i1): null

10-01-2025T03:05:34 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:34 - [TEST_STEP][FAILED] - return x: null

10-01-2025T03:05:34 - [TEST_STEP][PASSED] - println(tabR + "/" + tabB): null

10-01-2025T03:05:34 - [TEST_STEP][FAILED] - if (verifyEqual(PercFactR, PercFactB) == false): null

10-01-2025T03:05:34 - [MESSAGE][FAILED] - Unable to verify equal between actual object 'нет данных' and expected object '5.14' (Root cause: com.kms.katalon.core.exception.StepFailedException: Actual object 'нет данных' and expected object '5.14' are not equal
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.doCall(VerifyEqualKeyword.groovy:58)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.call(VerifyEqualKeyword.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:75)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.verifyEqual(VerifyEqualKeyword.groovy:63)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.execute(VerifyEqualKeyword.groovy:44)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:74)
	at com.kms.katalon.core.keyword.BuiltinKeywords.verifyEqual(BuiltinKeywords.groovy:146)
	at jdk.internal.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at Выполнение бизнес-плана сверка дашбордов.CompareDZOData(Выполнение бизнес-плана сверка дашбордов:745)
	at Выполнение бизнес-плана сверка дашбордов.run(Выполнение бизнес-плана сверка дашбордов:598)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:448)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:439)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:418)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:410)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:285)
	at com.kms.katalon.core.common.CommonExecutor.accessTestCaseMainPhase(CommonExecutor.java:65)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:150)
	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:106)
	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:180)
	at TempTestSuite1736466949911.run(TempTestSuite1736466949911.groovy:35)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
)

10-01-2025T03:05:34 - [TEST_STEP][PASSED] - result = WriteToExcel(typeOfData, todaysDate, PercPlanR, PercPlanB, PercFactR, PercFactB, x, tabR, tabB, o1R, o1B, vidget): null

10-01-2025T03:05:34 - [TEST_STEP][PASSED] - iii = dZO.indexOf("/"): null

10-01-2025T03:05:34 - [TEST_STEP][PASSED] - println(iii): null

10-01-2025T03:05:34 - [TEST_STEP][PASSED] - dZO = dZO.substring(0, iii): null

10-01-2025T03:05:34 - [TEST_STEP][PASSED] - println(dZO): null

10-01-2025T03:05:34 - [TEST_STEP][PASSED] - println(PercPlanR): null

10-01-2025T03:05:34 - [TEST_STEP][PASSED] - println(PercPlanB): null

10-01-2025T03:05:34 - [TEST_STEP][PASSED] - println(PercFactR): null

10-01-2025T03:05:34 - [TEST_STEP][PASSED] - println(PercFactB): null

10-01-2025T03:05:34 - [TEST_STEP][PASSED] - println(tabR): null

10-01-2025T03:05:34 - [TEST_STEP][PASSED] - println(tabB): null

10-01-2025T03:05:34 - [TEST_STEP][PASSED] - println(o1R): null

10-01-2025T03:05:34 - [TEST_STEP][PASSED] - println(o1B): null

10-01-2025T03:05:34 - [TEST_STEP][PASSED] - PR = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:34 - [TEST_STEP][PASSED] - FR = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:34 - [TEST_STEP][PASSED] - PB = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:34 - [TEST_STEP][PASSED] - FB = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:34 - [TEST_STEP][PASSED] - TR = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:34 - [TEST_STEP][PASSED] - TB = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:34 - [TEST_STEP][PASSED] - sheetName = "Sheet1": null

10-01-2025T03:05:34 - [TEST_STEP][PASSED] - data = findTestData("PlanFact"): null

10-01-2025T03:05:34 - [TEST_STEP][PASSED] - n = data.getRowNumbers() + 1: null

10-01-2025T03:05:34 - [TEST_STEP][PASSED] - year = todaysDate.substring(todaysDate.length() - 4, todaysDate.length()): null

10-01-2025T03:05:34 - [TEST_STEP][PASSED] - y = year.toInteger(): null

10-01-2025T03:05:34 - [TEST_STEP][PASSED] - m = getText(findTestObject("Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Фильтр Дата")): Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Фильтр Дата' is: '1, 2, 3 кв., Октябрь, Ноябрь 2024 года'

10-01-2025T03:05:34 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Фильтр Дата' is: '1, 2, 3 кв., Октябрь, Ноябрь 2024 года'

10-01-2025T03:05:34 - [TEST_STEP][PASSED] - m = m.substring(0, m.indexOf("2024")): null

10-01-2025T03:05:34 - [TEST_STEP][PASSED] - m = m.trim(): null

10-01-2025T03:05:34 - [TEST_STEP][PASSED] - dashboardName = "Выполнение бизнес-плана": null

10-01-2025T03:05:34 - [TEST_STEP][PASSED] - workbook01 = getWorkbook(excelFilePath): null

10-01-2025T03:05:34 - [TEST_STEP][PASSED] - sheet01 = getExcelSheet(workbook01, sheetName): null

10-01-2025T03:05:34 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 0, dashboardName): null

10-01-2025T03:05:34 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 1, dZO): null

10-01-2025T03:05:34 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 2, typeOfData): null

10-01-2025T03:05:34 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 3, typeOfData): null

10-01-2025T03:05:34 - [TEST_STEP][PASSED] - if (typeOfData == "План"): null

10-01-2025T03:05:34 - [TEST_STEP][PASSED] - else if (typeOfData == "Факт"): null

10-01-2025T03:05:34 - [TEST_STEP][PASSED] - else if (vidget.contains("электроэнергии") == true): null

10-01-2025T03:05:34 - [TEST_STEP][PASSED] - if (tabR == null): null

10-01-2025T03:05:34 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:05:34 - [TEST_STEP][PASSED] - if (tabR == "нет данных"): null

10-01-2025T03:05:34 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 4, "нет данных"): null

10-01-2025T03:05:34 - [TEST_STEP][PASSED] - if (tabB == null): null

10-01-2025T03:05:34 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:05:34 - [TEST_STEP][PASSED] - if (tabB == "нет данных"): null

10-01-2025T03:05:34 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:05:34 - [TEST_STEP][PASSED] - TB = tabB.toInteger(): null

10-01-2025T03:05:34 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 5, TB): null

10-01-2025T03:05:34 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 6, m): null

10-01-2025T03:05:34 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 7, y): null

10-01-2025T03:05:34 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 8, todaysDate): null

10-01-2025T03:05:34 - [TEST_STEP][PASSED] - n = n + 1: null

10-01-2025T03:05:34 - [TEST_STEP][PASSED] - saveWorkbook(excelFilePath, workbook01): null

10-01-2025T03:05:35 - [TEST_STEP][PASSED] - typeOfData = "План Отпуск из сети": null

10-01-2025T03:05:35 - [TEST_STEP][PASSED] - tabR = GetOiSPlanR(x = a): null

10-01-2025T03:05:35 - [TEST_STEP][PASSED] - i1 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:35 - [TEST_STEP][PASSED] - ii = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:35 - [TEST_STEP][PASSED] - for ([ii = 1, ii < 8, (ii++)]): null

10-01-2025T03:05:35 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:35 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:35 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:35 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:35 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:35 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:35 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:35 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:35 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:35 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:35 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:35 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:35 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:35 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:35 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:35 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:35 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:35 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:35 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:35 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:35 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:35 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:35 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:35 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:35 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:35 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:35 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:35 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:35 - [TEST_STEP][PASSED] - i1 = x.indexOf("/"): null

10-01-2025T03:05:35 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:35 - [TEST_STEP][PASSED] - x = x.substring(0, i1): null

10-01-2025T03:05:35 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:35 - [TEST_STEP][PASSED] - return x: null

10-01-2025T03:05:35 - [TEST_STEP][PASSED] - tabB = GetOiSPlanB(x = b): null

10-01-2025T03:05:35 - [TEST_STEP][PASSED] - i1 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:35 - [TEST_STEP][PASSED] - ii = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:35 - [TEST_STEP][PASSED] - for ([ii = 1, ii < 8, (ii++)]): null

10-01-2025T03:05:35 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:35 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:35 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:35 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:35 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:35 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:35 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:35 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:35 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:35 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:35 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:35 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:35 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:35 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:35 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:35 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:35 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:35 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:35 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:35 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:35 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:35 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:35 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:35 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:35 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:35 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:35 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:35 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:35 - [TEST_STEP][PASSED] - i1 = x.indexOf("/"): null

10-01-2025T03:05:35 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:35 - [TEST_STEP][PASSED] - x = x.substring(0, i1): null

10-01-2025T03:05:35 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:35 - [TEST_STEP][FAILED] - return x: null

10-01-2025T03:05:35 - [TEST_STEP][PASSED] - println(tabR + "/" + tabB): null

10-01-2025T03:05:35 - [TEST_STEP][FAILED] - if (verifyEqual(PercFactR, PercFactB) == false): null

10-01-2025T03:05:35 - [MESSAGE][FAILED] - Unable to verify equal between actual object 'нет данных' and expected object '5.14' (Root cause: com.kms.katalon.core.exception.StepFailedException: Actual object 'нет данных' and expected object '5.14' are not equal
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.doCall(VerifyEqualKeyword.groovy:58)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.call(VerifyEqualKeyword.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:75)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.verifyEqual(VerifyEqualKeyword.groovy:63)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.execute(VerifyEqualKeyword.groovy:44)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:74)
	at com.kms.katalon.core.keyword.BuiltinKeywords.verifyEqual(BuiltinKeywords.groovy:146)
	at jdk.internal.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at Выполнение бизнес-плана сверка дашбордов.CompareDZOData(Выполнение бизнес-плана сверка дашбордов:758)
	at Выполнение бизнес-плана сверка дашбордов.run(Выполнение бизнес-плана сверка дашбордов:598)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:448)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:439)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:418)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:410)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:285)
	at com.kms.katalon.core.common.CommonExecutor.accessTestCaseMainPhase(CommonExecutor.java:65)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:150)
	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:106)
	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:180)
	at TempTestSuite1736466949911.run(TempTestSuite1736466949911.groovy:35)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
)

10-01-2025T03:05:35 - [TEST_STEP][PASSED] - result = WriteToExcel(typeOfData, todaysDate, PercPlanR, PercPlanB, PercFactR, PercFactB, x, tabR, tabB, o1R, o1B, vidget): null

10-01-2025T03:05:35 - [TEST_STEP][PASSED] - iii = dZO.indexOf("/"): null

10-01-2025T03:05:35 - [TEST_STEP][PASSED] - println(iii): null

10-01-2025T03:05:35 - [TEST_STEP][PASSED] - dZO = dZO.substring(0, iii): null

10-01-2025T03:05:35 - [TEST_STEP][PASSED] - println(dZO): null

10-01-2025T03:05:35 - [TEST_STEP][PASSED] - println(PercPlanR): null

10-01-2025T03:05:35 - [TEST_STEP][PASSED] - println(PercPlanB): null

10-01-2025T03:05:35 - [TEST_STEP][PASSED] - println(PercFactR): null

10-01-2025T03:05:35 - [TEST_STEP][PASSED] - println(PercFactB): null

10-01-2025T03:05:35 - [TEST_STEP][PASSED] - println(tabR): null

10-01-2025T03:05:35 - [TEST_STEP][PASSED] - println(tabB): null

10-01-2025T03:05:35 - [TEST_STEP][PASSED] - println(o1R): null

10-01-2025T03:05:35 - [TEST_STEP][PASSED] - println(o1B): null

10-01-2025T03:05:35 - [TEST_STEP][PASSED] - PR = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:35 - [TEST_STEP][PASSED] - FR = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:35 - [TEST_STEP][PASSED] - PB = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:35 - [TEST_STEP][PASSED] - FB = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:35 - [TEST_STEP][PASSED] - TR = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:35 - [TEST_STEP][PASSED] - TB = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:35 - [TEST_STEP][PASSED] - sheetName = "Sheet1": null

10-01-2025T03:05:35 - [TEST_STEP][PASSED] - data = findTestData("PlanFact"): null

10-01-2025T03:05:35 - [TEST_STEP][PASSED] - n = data.getRowNumbers() + 1: null

10-01-2025T03:05:35 - [TEST_STEP][PASSED] - year = todaysDate.substring(todaysDate.length() - 4, todaysDate.length()): null

10-01-2025T03:05:35 - [TEST_STEP][PASSED] - y = year.toInteger(): null

10-01-2025T03:05:35 - [TEST_STEP][PASSED] - m = getText(findTestObject("Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Фильтр Дата")): Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Фильтр Дата' is: '1, 2, 3 кв., Октябрь, Ноябрь 2024 года'

10-01-2025T03:05:35 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Фильтр Дата' is: '1, 2, 3 кв., Октябрь, Ноябрь 2024 года'

10-01-2025T03:05:35 - [TEST_STEP][PASSED] - m = m.substring(0, m.indexOf("2024")): null

10-01-2025T03:05:35 - [TEST_STEP][PASSED] - m = m.trim(): null

10-01-2025T03:05:35 - [TEST_STEP][PASSED] - dashboardName = "Выполнение бизнес-плана": null

10-01-2025T03:05:35 - [TEST_STEP][PASSED] - workbook01 = getWorkbook(excelFilePath): null

10-01-2025T03:05:35 - [TEST_STEP][PASSED] - sheet01 = getExcelSheet(workbook01, sheetName): null

10-01-2025T03:05:35 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 0, dashboardName): null

10-01-2025T03:05:35 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 1, dZO): null

10-01-2025T03:05:35 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 2, typeOfData): null

10-01-2025T03:05:35 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 3, typeOfData): null

10-01-2025T03:05:35 - [TEST_STEP][PASSED] - if (typeOfData == "План"): null

10-01-2025T03:05:35 - [TEST_STEP][PASSED] - else if (typeOfData == "Факт"): null

10-01-2025T03:05:35 - [TEST_STEP][PASSED] - else if (vidget.contains("электроэнергии") == true): null

10-01-2025T03:05:35 - [TEST_STEP][PASSED] - if (tabR == null): null

10-01-2025T03:05:35 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:05:35 - [TEST_STEP][PASSED] - if (tabR == "нет данных"): null

10-01-2025T03:05:35 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 4, "нет данных"): null

10-01-2025T03:05:35 - [TEST_STEP][PASSED] - if (tabB == null): null

10-01-2025T03:05:35 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:05:35 - [TEST_STEP][PASSED] - if (tabB == "нет данных"): null

10-01-2025T03:05:35 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:05:35 - [TEST_STEP][PASSED] - TB = tabB.toInteger(): null

10-01-2025T03:05:35 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 5, TB): null

10-01-2025T03:05:35 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 6, m): null

10-01-2025T03:05:35 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 7, y): null

10-01-2025T03:05:35 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 8, todaysDate): null

10-01-2025T03:05:35 - [TEST_STEP][PASSED] - n = n + 1: null

10-01-2025T03:05:35 - [TEST_STEP][PASSED] - saveWorkbook(excelFilePath, workbook01): null

10-01-2025T03:05:35 - [TEST_STEP][PASSED] - typeOfData = "План Потери": null

10-01-2025T03:05:35 - [TEST_STEP][PASSED] - tabR = GetPPlanR(x = a): null

10-01-2025T03:05:35 - [TEST_STEP][PASSED] - i1 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:35 - [TEST_STEP][PASSED] - ii = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:35 - [TEST_STEP][PASSED] - for ([ii = 1, ii < 9, (ii++)]): null

10-01-2025T03:05:35 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:35 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:35 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:35 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:35 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:35 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:35 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:35 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:35 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:35 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:35 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:35 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:35 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:35 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:35 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:35 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:35 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:35 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:35 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:35 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:35 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:35 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:35 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:35 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:35 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:35 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:35 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:35 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:35 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:35 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:35 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:35 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:35 - [TEST_STEP][PASSED] - i1 = x.indexOf("/"): null

10-01-2025T03:05:35 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:35 - [TEST_STEP][PASSED] - x = x.substring(0, i1): null

10-01-2025T03:05:35 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:35 - [TEST_STEP][PASSED] - return x: null

10-01-2025T03:05:35 - [TEST_STEP][PASSED] - tabB = GetPPlanB(x = b): null

10-01-2025T03:05:35 - [TEST_STEP][PASSED] - i1 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:35 - [TEST_STEP][PASSED] - ii = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:35 - [TEST_STEP][PASSED] - for ([ii = 1, ii < 9, (ii++)]): null

10-01-2025T03:05:35 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:35 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:35 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:35 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:35 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:35 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:35 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:35 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:35 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:35 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:35 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:35 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:35 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:35 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:35 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:35 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:35 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:35 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:35 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:35 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:35 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:35 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:35 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:35 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:35 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:35 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:35 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:35 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:35 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:35 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:35 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:35 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:35 - [TEST_STEP][PASSED] - i1 = x.indexOf("/"): null

10-01-2025T03:05:35 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:35 - [TEST_STEP][PASSED] - x = x.substring(0, i1): null

10-01-2025T03:05:35 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:35 - [TEST_STEP][FAILED] - return x: null

10-01-2025T03:05:35 - [TEST_STEP][PASSED] - println(tabR + "/" + tabB): null

10-01-2025T03:05:35 - [TEST_STEP][FAILED] - if (verifyEqual(PercFactR, PercFactB) == false): null

10-01-2025T03:05:35 - [MESSAGE][FAILED] - Unable to verify equal between actual object 'нет данных' and expected object '5.14' (Root cause: com.kms.katalon.core.exception.StepFailedException: Actual object 'нет данных' and expected object '5.14' are not equal
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.doCall(VerifyEqualKeyword.groovy:58)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.call(VerifyEqualKeyword.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:75)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.verifyEqual(VerifyEqualKeyword.groovy:63)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.execute(VerifyEqualKeyword.groovy:44)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:74)
	at com.kms.katalon.core.keyword.BuiltinKeywords.verifyEqual(BuiltinKeywords.groovy:146)
	at jdk.internal.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at Выполнение бизнес-плана сверка дашбордов.CompareDZOData(Выполнение бизнес-плана сверка дашбордов:771)
	at Выполнение бизнес-плана сверка дашбордов.run(Выполнение бизнес-плана сверка дашбордов:598)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:448)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:439)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:418)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:410)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:285)
	at com.kms.katalon.core.common.CommonExecutor.accessTestCaseMainPhase(CommonExecutor.java:65)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:150)
	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:106)
	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:180)
	at TempTestSuite1736466949911.run(TempTestSuite1736466949911.groovy:35)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
)

10-01-2025T03:05:35 - [TEST_STEP][PASSED] - result = WriteToExcel(typeOfData, todaysDate, PercPlanR, PercPlanB, PercFactR, PercFactB, x, tabR, tabB, o1R, o1B, vidget): null

10-01-2025T03:05:35 - [TEST_STEP][PASSED] - iii = dZO.indexOf("/"): null

10-01-2025T03:05:35 - [TEST_STEP][PASSED] - println(iii): null

10-01-2025T03:05:35 - [TEST_STEP][PASSED] - dZO = dZO.substring(0, iii): null

10-01-2025T03:05:35 - [TEST_STEP][PASSED] - println(dZO): null

10-01-2025T03:05:35 - [TEST_STEP][PASSED] - println(PercPlanR): null

10-01-2025T03:05:35 - [TEST_STEP][PASSED] - println(PercPlanB): null

10-01-2025T03:05:35 - [TEST_STEP][PASSED] - println(PercFactR): null

10-01-2025T03:05:35 - [TEST_STEP][PASSED] - println(PercFactB): null

10-01-2025T03:05:35 - [TEST_STEP][PASSED] - println(tabR): null

10-01-2025T03:05:35 - [TEST_STEP][PASSED] - println(tabB): null

10-01-2025T03:05:35 - [TEST_STEP][PASSED] - println(o1R): null

10-01-2025T03:05:35 - [TEST_STEP][PASSED] - println(o1B): null

10-01-2025T03:05:35 - [TEST_STEP][PASSED] - PR = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:35 - [TEST_STEP][PASSED] - FR = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:35 - [TEST_STEP][PASSED] - PB = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:35 - [TEST_STEP][PASSED] - FB = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:35 - [TEST_STEP][PASSED] - TR = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:35 - [TEST_STEP][PASSED] - TB = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:35 - [TEST_STEP][PASSED] - sheetName = "Sheet1": null

10-01-2025T03:05:35 - [TEST_STEP][PASSED] - data = findTestData("PlanFact"): null

10-01-2025T03:05:36 - [TEST_STEP][PASSED] - n = data.getRowNumbers() + 1: null

10-01-2025T03:05:36 - [TEST_STEP][PASSED] - year = todaysDate.substring(todaysDate.length() - 4, todaysDate.length()): null

10-01-2025T03:05:36 - [TEST_STEP][PASSED] - y = year.toInteger(): null

10-01-2025T03:05:36 - [TEST_STEP][PASSED] - m = getText(findTestObject("Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Фильтр Дата")): Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Фильтр Дата' is: '1, 2, 3 кв., Октябрь, Ноябрь 2024 года'

10-01-2025T03:05:36 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Фильтр Дата' is: '1, 2, 3 кв., Октябрь, Ноябрь 2024 года'

10-01-2025T03:05:36 - [TEST_STEP][PASSED] - m = m.substring(0, m.indexOf("2024")): null

10-01-2025T03:05:36 - [TEST_STEP][PASSED] - m = m.trim(): null

10-01-2025T03:05:36 - [TEST_STEP][PASSED] - dashboardName = "Выполнение бизнес-плана": null

10-01-2025T03:05:36 - [TEST_STEP][PASSED] - workbook01 = getWorkbook(excelFilePath): null

10-01-2025T03:05:36 - [TEST_STEP][PASSED] - sheet01 = getExcelSheet(workbook01, sheetName): null

10-01-2025T03:05:36 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 0, dashboardName): null

10-01-2025T03:05:36 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 1, dZO): null

10-01-2025T03:05:36 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 2, typeOfData): null

10-01-2025T03:05:36 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 3, typeOfData): null

10-01-2025T03:05:36 - [TEST_STEP][PASSED] - if (typeOfData == "План"): null

10-01-2025T03:05:36 - [TEST_STEP][PASSED] - else if (typeOfData == "Факт"): null

10-01-2025T03:05:36 - [TEST_STEP][PASSED] - else if (vidget.contains("электроэнергии") == true): null

10-01-2025T03:05:36 - [TEST_STEP][PASSED] - if (tabR == null): null

10-01-2025T03:05:36 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:05:36 - [TEST_STEP][PASSED] - if (tabR == "нет данных"): null

10-01-2025T03:05:36 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 4, "нет данных"): null

10-01-2025T03:05:36 - [TEST_STEP][PASSED] - if (tabB == null): null

10-01-2025T03:05:36 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:05:36 - [TEST_STEP][PASSED] - if (tabB == "нет данных"): null

10-01-2025T03:05:36 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:05:36 - [TEST_STEP][PASSED] - TB = tabB.toInteger(): null

10-01-2025T03:05:36 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 5, TB): null

10-01-2025T03:05:36 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 6, m): null

10-01-2025T03:05:36 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 7, y): null

10-01-2025T03:05:36 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 8, todaysDate): null

10-01-2025T03:05:36 - [TEST_STEP][PASSED] - n = n + 1: null

10-01-2025T03:05:36 - [TEST_STEP][PASSED] - saveWorkbook(excelFilePath, workbook01): null

10-01-2025T03:05:36 - [TEST_STEP][PASSED] - ii2 = a.indexOf("ПАО"): null

10-01-2025T03:05:36 - [TEST_STEP][PASSED] - if (ii2 == -1): null

10-01-2025T03:05:36 - [TEST_STEP][PASSED] - vidget = "Отклонения фактического уровня потерь от бизнес-плана": null

10-01-2025T03:05:36 - [TEST_STEP][PASSED] - typeOfData = "Коэффициент": null

10-01-2025T03:05:36 - [TEST_STEP][PASSED] - o1R = Geto1R(x = a): null

10-01-2025T03:05:36 - [TEST_STEP][PASSED] - i1 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:36 - [TEST_STEP][PASSED] - ii = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:36 - [TEST_STEP][PASSED] - for ([ii = 1, ii < 10, (ii++)]): null

10-01-2025T03:05:36 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:36 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:36 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:36 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:36 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:36 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:36 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:36 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:36 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:36 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:36 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:36 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:36 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:36 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:36 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:36 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:36 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:36 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:36 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:36 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:36 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:36 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:36 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:36 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:36 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:36 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:36 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:36 - [TEST_STEP][PASSED] - i1 = x.indexOf("/"): null

10-01-2025T03:05:36 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:36 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:36 - [TEST_STEP][PASSED] - return x: null

10-01-2025T03:05:36 - [TEST_STEP][PASSED] - o1B = Geto1B(x = b): null

10-01-2025T03:05:36 - [TEST_STEP][PASSED] - i1 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:36 - [TEST_STEP][PASSED] - ii = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:36 - [TEST_STEP][PASSED] - for ([ii = 1, ii < 10, (ii++)]): null

10-01-2025T03:05:36 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:36 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:36 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:36 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:36 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:36 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:36 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:36 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:36 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:36 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:36 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:36 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:36 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:36 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:36 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:36 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:36 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:36 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:36 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:36 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:36 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:36 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:36 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:36 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:36 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:36 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:36 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:36 - [TEST_STEP][PASSED] - i1 = x.indexOf("/"): null

10-01-2025T03:05:36 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:36 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:36 - [TEST_STEP][FAILED] - return x: null

10-01-2025T03:05:36 - [TEST_STEP][PASSED] - println(o1R + "/" + o1B): null

10-01-2025T03:05:36 - [TEST_STEP][FAILED] - if (verifyEqual(PercFactR, PercFactB) == false): null

10-01-2025T03:05:36 - [MESSAGE][FAILED] - Unable to verify equal between actual object 'нет данных' and expected object '5.14' (Root cause: com.kms.katalon.core.exception.StepFailedException: Actual object 'нет данных' and expected object '5.14' are not equal
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.doCall(VerifyEqualKeyword.groovy:58)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.call(VerifyEqualKeyword.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:75)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.verifyEqual(VerifyEqualKeyword.groovy:63)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.execute(VerifyEqualKeyword.groovy:44)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:74)
	at com.kms.katalon.core.keyword.BuiltinKeywords.verifyEqual(BuiltinKeywords.groovy:146)
	at jdk.internal.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at Выполнение бизнес-плана сверка дашбордов.CompareDZOData(Выполнение бизнес-плана сверка дашбордов:789)
	at Выполнение бизнес-плана сверка дашбордов.run(Выполнение бизнес-плана сверка дашбордов:598)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:448)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:439)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:418)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:410)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:285)
	at com.kms.katalon.core.common.CommonExecutor.accessTestCaseMainPhase(CommonExecutor.java:65)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:150)
	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:106)
	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:180)
	at TempTestSuite1736466949911.run(TempTestSuite1736466949911.groovy:35)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
)

10-01-2025T03:05:36 - [TEST_STEP][PASSED] - result = WriteToExcel(typeOfData, todaysDate, PercPlanR, PercPlanB, PercFactR, PercFactB, x, tabR, tabB, o1R, o1B, vidget): null

10-01-2025T03:05:36 - [TEST_STEP][PASSED] - iii = dZO.indexOf("/"): null

10-01-2025T03:05:36 - [TEST_STEP][PASSED] - println(iii): null

10-01-2025T03:05:36 - [TEST_STEP][PASSED] - dZO = dZO.substring(0, iii): null

10-01-2025T03:05:36 - [TEST_STEP][PASSED] - println(dZO): null

10-01-2025T03:05:36 - [TEST_STEP][PASSED] - println(PercPlanR): null

10-01-2025T03:05:36 - [TEST_STEP][PASSED] - println(PercPlanB): null

10-01-2025T03:05:36 - [TEST_STEP][PASSED] - println(PercFactR): null

10-01-2025T03:05:36 - [TEST_STEP][PASSED] - println(PercFactB): null

10-01-2025T03:05:36 - [TEST_STEP][PASSED] - println(tabR): null

10-01-2025T03:05:36 - [TEST_STEP][PASSED] - println(tabB): null

10-01-2025T03:05:36 - [TEST_STEP][PASSED] - println(o1R): null

10-01-2025T03:05:36 - [TEST_STEP][PASSED] - println(o1B): null

10-01-2025T03:05:36 - [TEST_STEP][PASSED] - PR = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:36 - [TEST_STEP][PASSED] - FR = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:36 - [TEST_STEP][PASSED] - PB = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:36 - [TEST_STEP][PASSED] - FB = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:36 - [TEST_STEP][PASSED] - TR = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:36 - [TEST_STEP][PASSED] - TB = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:36 - [TEST_STEP][PASSED] - sheetName = "Sheet1": null

10-01-2025T03:05:36 - [TEST_STEP][PASSED] - data = findTestData("PlanFact"): null

10-01-2025T03:05:36 - [TEST_STEP][PASSED] - n = data.getRowNumbers() + 1: null

10-01-2025T03:05:36 - [TEST_STEP][PASSED] - year = todaysDate.substring(todaysDate.length() - 4, todaysDate.length()): null

10-01-2025T03:05:36 - [TEST_STEP][PASSED] - y = year.toInteger(): null

10-01-2025T03:05:36 - [TEST_STEP][PASSED] - m = getText(findTestObject("Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Фильтр Дата")): Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Фильтр Дата' is: '1, 2, 3 кв., Октябрь, Ноябрь 2024 года'

10-01-2025T03:05:36 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Фильтр Дата' is: '1, 2, 3 кв., Октябрь, Ноябрь 2024 года'

10-01-2025T03:05:36 - [TEST_STEP][PASSED] - m = m.substring(0, m.indexOf("2024")): null

10-01-2025T03:05:36 - [TEST_STEP][PASSED] - m = m.trim(): null

10-01-2025T03:05:36 - [TEST_STEP][PASSED] - dashboardName = "Выполнение бизнес-плана": null

10-01-2025T03:05:36 - [TEST_STEP][PASSED] - workbook01 = getWorkbook(excelFilePath): null

10-01-2025T03:05:37 - [TEST_STEP][PASSED] - sheet01 = getExcelSheet(workbook01, sheetName): null

10-01-2025T03:05:37 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 0, dashboardName): null

10-01-2025T03:05:37 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 1, dZO): null

10-01-2025T03:05:37 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 2, typeOfData): null

10-01-2025T03:05:37 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 3, typeOfData): null

10-01-2025T03:05:37 - [TEST_STEP][PASSED] - if (typeOfData == "План"): null

10-01-2025T03:05:37 - [TEST_STEP][PASSED] - else if (typeOfData == "Факт"): null

10-01-2025T03:05:37 - [TEST_STEP][PASSED] - else if (vidget.contains("электроэнергии") == true): null

10-01-2025T03:05:37 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:05:37 - [TEST_STEP][PASSED] - if (o1R == null): null

10-01-2025T03:05:37 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:05:37 - [TEST_STEP][PASSED] - if (o1R == "нет данных"): null

10-01-2025T03:05:37 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 4, "нет данных"): null

10-01-2025T03:05:37 - [TEST_STEP][PASSED] - if (o1B == null): null

10-01-2025T03:05:37 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:05:37 - [TEST_STEP][PASSED] - if (o1B == "нет данных"): null

10-01-2025T03:05:37 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:05:37 - [TEST_STEP][PASSED] - FB = o1B.toDouble(): null

10-01-2025T03:05:37 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 5, FB): null

10-01-2025T03:05:37 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 6, m): null

10-01-2025T03:05:37 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 7, y): null

10-01-2025T03:05:37 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 8, todaysDate): null

10-01-2025T03:05:37 - [TEST_STEP][PASSED] - n = n + 1: null

10-01-2025T03:05:37 - [TEST_STEP][FAILED] - saveWorkbook(excelFilePath, workbook01): null

10-01-2025T03:05:37 - [TEST_STEP][FAILED] - if (verifyEqual(kR, kB) == false): null

10-01-2025T03:05:37 - [MESSAGE][FAILED] - Unable to verify equal between actual object 'Россети Кубань/нет данных/нет данных/нет данных/нет данных/нет данных/нет данных/нет данных/нет данных/нет данных' and expected object 'Россети Кубань/9.19/8.46/23489307/21501911/1987396/22568383/20493323/2075060/-0.73' (Root cause: com.kms.katalon.core.exception.StepFailedException: Actual object 'Россети Кубань/нет данных/нет данных/нет данных/нет данных/нет данных/нет данных/нет данных/нет данных/нет данных' and expected object 'Россети Кубань/9.19/8.46/23489307/21501911/1987396/22568383/20493323/2075060/-0.73' are not equal
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.doCall(VerifyEqualKeyword.groovy:58)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.call(VerifyEqualKeyword.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:75)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.verifyEqual(VerifyEqualKeyword.groovy:63)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.execute(VerifyEqualKeyword.groovy:44)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:74)
	at com.kms.katalon.core.keyword.BuiltinKeywords.verifyEqual(BuiltinKeywords.groovy:146)
	at jdk.internal.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at Выполнение бизнес-плана сверка дашбордов.run(Выполнение бизнес-плана сверка дашбордов:602)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:448)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:439)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:418)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:410)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:285)
	at com.kms.katalon.core.common.CommonExecutor.accessTestCaseMainPhase(CommonExecutor.java:65)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:150)
	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:106)
	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:180)
	at TempTestSuite1736466949911.run(TempTestSuite1736466949911.groovy:35)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
)

10-01-2025T03:05:37 - [TEST_STEP][PASSED] - result = CompareDZOData(a = kR, b = kB, dZO, typeOfData, PercPlanR, PercPlanB, PercFactR, PercFactB, todaysDate, x, vidget, tabR, tabB, o1R, o1B): null

10-01-2025T03:05:37 - [TEST_STEP][PASSED] - ii2 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:37 - [TEST_STEP][FAILED] - if (verifyEqual(a, b) == false): null

10-01-2025T03:05:37 - [MESSAGE][FAILED] - Unable to verify equal between actual object 'Россети Кубань/нет данных/нет данных/нет данных/нет данных/нет данных/нет данных/нет данных/нет данных/нет данных' and expected object 'Россети Кубань/9.19/8.46/23489307/21501911/1987396/22568383/20493323/2075060/-0.73' (Root cause: com.kms.katalon.core.exception.StepFailedException: Actual object 'Россети Кубань/нет данных/нет данных/нет данных/нет данных/нет данных/нет данных/нет данных/нет данных/нет данных' and expected object 'Россети Кубань/9.19/8.46/23489307/21501911/1987396/22568383/20493323/2075060/-0.73' are not equal
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.doCall(VerifyEqualKeyword.groovy:58)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.call(VerifyEqualKeyword.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:75)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.verifyEqual(VerifyEqualKeyword.groovy:63)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.execute(VerifyEqualKeyword.groovy:44)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:74)
	at com.kms.katalon.core.keyword.BuiltinKeywords.verifyEqual(BuiltinKeywords.groovy:146)
	at jdk.internal.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at Выполнение бизнес-плана сверка дашбордов.CompareDZOData(Выполнение бизнес-плана сверка дашбордов:673)
	at Выполнение бизнес-плана сверка дашбордов.run(Выполнение бизнес-плана сверка дашбордов:603)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:448)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:439)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:418)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:410)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:285)
	at com.kms.katalon.core.common.CommonExecutor.accessTestCaseMainPhase(CommonExecutor.java:65)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:150)
	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:106)
	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:180)
	at TempTestSuite1736466949911.run(TempTestSuite1736466949911.groovy:35)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
)

10-01-2025T03:05:37 - [TEST_STEP][PASSED] - vidget = "Уровень потерь электроэнергии": null

10-01-2025T03:05:37 - [TEST_STEP][PASSED] - typeOfData = "План": null

10-01-2025T03:05:37 - [TEST_STEP][PASSED] - PercPlanR = GetPercPlanR(x = a): null

10-01-2025T03:05:37 - [TEST_STEP][PASSED] - i1 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:37 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:37 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:37 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:37 - [TEST_STEP][PASSED] - i1 = x.indexOf("/"): null

10-01-2025T03:05:37 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:37 - [TEST_STEP][PASSED] - x = x.substring(0, i1): null

10-01-2025T03:05:37 - [TEST_STEP][PASSED] - return x: null

10-01-2025T03:05:37 - [TEST_STEP][PASSED] - PercPlanB = GetPercPlanB(x = b): null

10-01-2025T03:05:37 - [TEST_STEP][PASSED] - i1 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:37 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:37 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:37 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:37 - [TEST_STEP][PASSED] - i1 = x.indexOf("/"): null

10-01-2025T03:05:37 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:37 - [TEST_STEP][PASSED] - x = x.substring(0, i1): null

10-01-2025T03:05:37 - [TEST_STEP][FAILED] - return x: null

10-01-2025T03:05:37 - [TEST_STEP][FAILED] - if (verifyEqual(PercPlanR, PercPlanB) == false): null

10-01-2025T03:05:37 - [MESSAGE][FAILED] - Unable to verify equal between actual object 'нет данных' and expected object '9.19' (Root cause: com.kms.katalon.core.exception.StepFailedException: Actual object 'нет данных' and expected object '9.19' are not equal
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.doCall(VerifyEqualKeyword.groovy:58)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.call(VerifyEqualKeyword.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:75)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.verifyEqual(VerifyEqualKeyword.groovy:63)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.execute(VerifyEqualKeyword.groovy:44)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:74)
	at com.kms.katalon.core.keyword.BuiltinKeywords.verifyEqual(BuiltinKeywords.groovy:146)
	at jdk.internal.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at Выполнение бизнес-плана сверка дашбордов.CompareDZOData(Выполнение бизнес-плана сверка дашбордов:682)
	at Выполнение бизнес-плана сверка дашбордов.run(Выполнение бизнес-плана сверка дашбордов:603)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:448)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:439)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:418)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:410)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:285)
	at com.kms.katalon.core.common.CommonExecutor.accessTestCaseMainPhase(CommonExecutor.java:65)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:150)
	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:106)
	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:180)
	at TempTestSuite1736466949911.run(TempTestSuite1736466949911.groovy:35)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
)

10-01-2025T03:05:37 - [TEST_STEP][PASSED] - result = WriteToExcel(typeOfData, todaysDate, PercPlanR, PercPlanB, PercFactR, PercFactB, x, tabR, tabB, o1R, o1B, vidget): null

10-01-2025T03:05:37 - [TEST_STEP][PASSED] - iii = dZO.indexOf("/"): null

10-01-2025T03:05:37 - [TEST_STEP][PASSED] - println(iii): null

10-01-2025T03:05:37 - [TEST_STEP][PASSED] - dZO = dZO.substring(0, iii): null

10-01-2025T03:05:37 - [TEST_STEP][PASSED] - println(dZO): null

10-01-2025T03:05:37 - [TEST_STEP][PASSED] - println(PercPlanR): null

10-01-2025T03:05:37 - [TEST_STEP][PASSED] - println(PercPlanB): null

10-01-2025T03:05:37 - [TEST_STEP][PASSED] - println(PercFactR): null

10-01-2025T03:05:37 - [TEST_STEP][PASSED] - println(PercFactB): null

10-01-2025T03:05:37 - [TEST_STEP][PASSED] - println(tabR): null

10-01-2025T03:05:37 - [TEST_STEP][PASSED] - println(tabB): null

10-01-2025T03:05:37 - [TEST_STEP][PASSED] - println(o1R): null

10-01-2025T03:05:37 - [TEST_STEP][PASSED] - println(o1B): null

10-01-2025T03:05:37 - [TEST_STEP][PASSED] - PR = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:37 - [TEST_STEP][PASSED] - FR = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:37 - [TEST_STEP][PASSED] - PB = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:37 - [TEST_STEP][PASSED] - FB = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:37 - [TEST_STEP][PASSED] - TR = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:37 - [TEST_STEP][PASSED] - TB = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:37 - [TEST_STEP][PASSED] - sheetName = "Sheet1": null

10-01-2025T03:05:37 - [TEST_STEP][PASSED] - data = findTestData("PlanFact"): null

10-01-2025T03:05:37 - [TEST_STEP][PASSED] - n = data.getRowNumbers() + 1: null

10-01-2025T03:05:37 - [TEST_STEP][PASSED] - year = todaysDate.substring(todaysDate.length() - 4, todaysDate.length()): null

10-01-2025T03:05:37 - [TEST_STEP][PASSED] - y = year.toInteger(): null

10-01-2025T03:05:37 - [TEST_STEP][PASSED] - m = getText(findTestObject("Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Фильтр Дата")): Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Фильтр Дата' is: '1, 2, 3 кв., Октябрь, Ноябрь 2024 года'

10-01-2025T03:05:37 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Фильтр Дата' is: '1, 2, 3 кв., Октябрь, Ноябрь 2024 года'

10-01-2025T03:05:37 - [TEST_STEP][PASSED] - m = m.substring(0, m.indexOf("2024")): null

10-01-2025T03:05:37 - [TEST_STEP][PASSED] - m = m.trim(): null

10-01-2025T03:05:37 - [TEST_STEP][PASSED] - dashboardName = "Выполнение бизнес-плана": null

10-01-2025T03:05:37 - [TEST_STEP][PASSED] - workbook01 = getWorkbook(excelFilePath): null

10-01-2025T03:05:37 - [TEST_STEP][PASSED] - sheet01 = getExcelSheet(workbook01, sheetName): null

10-01-2025T03:05:37 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 0, dashboardName): null

10-01-2025T03:05:37 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 1, dZO): null

10-01-2025T03:05:37 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 2, typeOfData): null

10-01-2025T03:05:37 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 3, typeOfData): null

10-01-2025T03:05:37 - [TEST_STEP][PASSED] - if (typeOfData == "План"): null

10-01-2025T03:05:37 - [TEST_STEP][PASSED] - if (PercPlanR == null): null

10-01-2025T03:05:37 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:05:37 - [TEST_STEP][PASSED] - if (PercPlanR == "нет данных"): null

10-01-2025T03:05:37 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 4, "нет данных"): null

10-01-2025T03:05:37 - [TEST_STEP][PASSED] - if (PercPlanB == null): null

10-01-2025T03:05:37 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:05:37 - [TEST_STEP][PASSED] - if (PercPlanB == "нет данных"): null

10-01-2025T03:05:37 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:05:37 - [TEST_STEP][PASSED] - PB = PercPlanB.toDouble(): null

10-01-2025T03:05:37 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 5, PB): null

10-01-2025T03:05:37 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 6, m): null

10-01-2025T03:05:37 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 7, y): null

10-01-2025T03:05:37 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 8, todaysDate): null

10-01-2025T03:05:37 - [TEST_STEP][PASSED] - n = n + 1: null

10-01-2025T03:05:37 - [TEST_STEP][PASSED] - saveWorkbook(excelFilePath, workbook01): null

10-01-2025T03:05:37 - [TEST_STEP][PASSED] - typeOfData = "Факт": null

10-01-2025T03:05:37 - [TEST_STEP][PASSED] - PercFactR = GetPercFactR(x = a): null

10-01-2025T03:05:37 - [TEST_STEP][PASSED] - i1 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:37 - [TEST_STEP][PASSED] - ii = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:37 - [TEST_STEP][PASSED] - for ([ii = 1, ii < 3, (ii++)]): null

10-01-2025T03:05:37 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:37 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:37 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:37 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:37 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:37 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:37 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:37 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:37 - [TEST_STEP][PASSED] - i1 = x.indexOf("/"): null

10-01-2025T03:05:37 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:37 - [TEST_STEP][PASSED] - x = x.substring(0, i1): null

10-01-2025T03:05:37 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:37 - [TEST_STEP][PASSED] - return x: null

10-01-2025T03:05:37 - [TEST_STEP][PASSED] - PercFactB = GetPercFactB(x = b): null

10-01-2025T03:05:37 - [TEST_STEP][PASSED] - i1 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:37 - [TEST_STEP][PASSED] - ii = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:37 - [TEST_STEP][PASSED] - for ([ii = 1, ii < 3, (ii++)]): null

10-01-2025T03:05:37 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:37 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:37 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:37 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:37 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:37 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:37 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:37 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:37 - [TEST_STEP][PASSED] - i1 = x.indexOf("/"): null

10-01-2025T03:05:37 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:37 - [TEST_STEP][PASSED] - x = x.substring(0, i1): null

10-01-2025T03:05:37 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:37 - [TEST_STEP][FAILED] - return x: null

10-01-2025T03:05:37 - [TEST_STEP][FAILED] - if (verifyEqual(PercFactR, PercFactB) == false): null

10-01-2025T03:05:37 - [MESSAGE][FAILED] - Unable to verify equal between actual object 'нет данных' and expected object '8.46' (Root cause: com.kms.katalon.core.exception.StepFailedException: Actual object 'нет данных' and expected object '8.46' are not equal
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.doCall(VerifyEqualKeyword.groovy:58)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.call(VerifyEqualKeyword.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:75)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.verifyEqual(VerifyEqualKeyword.groovy:63)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.execute(VerifyEqualKeyword.groovy:44)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:74)
	at com.kms.katalon.core.keyword.BuiltinKeywords.verifyEqual(BuiltinKeywords.groovy:146)
	at jdk.internal.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at Выполнение бизнес-плана сверка дашбордов.CompareDZOData(Выполнение бизнес-плана сверка дашбордов:693)
	at Выполнение бизнес-плана сверка дашбордов.run(Выполнение бизнес-плана сверка дашбордов:603)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:448)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:439)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:418)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:410)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:285)
	at com.kms.katalon.core.common.CommonExecutor.accessTestCaseMainPhase(CommonExecutor.java:65)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:150)
	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:106)
	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:180)
	at TempTestSuite1736466949911.run(TempTestSuite1736466949911.groovy:35)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
)

10-01-2025T03:05:37 - [TEST_STEP][PASSED] - result = WriteToExcel(typeOfData, todaysDate, PercPlanR, PercPlanB, PercFactR, PercFactB, x, tabR, tabB, o1R, o1B, vidget): null

10-01-2025T03:05:37 - [TEST_STEP][PASSED] - iii = dZO.indexOf("/"): null

10-01-2025T03:05:37 - [TEST_STEP][PASSED] - println(iii): null

10-01-2025T03:05:37 - [TEST_STEP][PASSED] - dZO = dZO.substring(0, iii): null

10-01-2025T03:05:37 - [TEST_STEP][PASSED] - println(dZO): null

10-01-2025T03:05:37 - [TEST_STEP][PASSED] - println(PercPlanR): null

10-01-2025T03:05:37 - [TEST_STEP][PASSED] - println(PercPlanB): null

10-01-2025T03:05:37 - [TEST_STEP][PASSED] - println(PercFactR): null

10-01-2025T03:05:37 - [TEST_STEP][PASSED] - println(PercFactB): null

10-01-2025T03:05:37 - [TEST_STEP][PASSED] - println(tabR): null

10-01-2025T03:05:37 - [TEST_STEP][PASSED] - println(tabB): null

10-01-2025T03:05:37 - [TEST_STEP][PASSED] - println(o1R): null

10-01-2025T03:05:37 - [TEST_STEP][PASSED] - println(o1B): null

10-01-2025T03:05:37 - [TEST_STEP][PASSED] - PR = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:37 - [TEST_STEP][PASSED] - FR = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:37 - [TEST_STEP][PASSED] - PB = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:37 - [TEST_STEP][PASSED] - FB = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:37 - [TEST_STEP][PASSED] - TR = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:37 - [TEST_STEP][PASSED] - TB = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:37 - [TEST_STEP][PASSED] - sheetName = "Sheet1": null

10-01-2025T03:05:37 - [TEST_STEP][PASSED] - data = findTestData("PlanFact"): null

10-01-2025T03:05:38 - [TEST_STEP][PASSED] - n = data.getRowNumbers() + 1: null

10-01-2025T03:05:38 - [TEST_STEP][PASSED] - year = todaysDate.substring(todaysDate.length() - 4, todaysDate.length()): null

10-01-2025T03:05:38 - [TEST_STEP][PASSED] - y = year.toInteger(): null

10-01-2025T03:05:38 - [TEST_STEP][PASSED] - m = getText(findTestObject("Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Фильтр Дата")): Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Фильтр Дата' is: '1, 2, 3 кв., Октябрь, Ноябрь 2024 года'

10-01-2025T03:05:38 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Фильтр Дата' is: '1, 2, 3 кв., Октябрь, Ноябрь 2024 года'

10-01-2025T03:05:38 - [TEST_STEP][PASSED] - m = m.substring(0, m.indexOf("2024")): null

10-01-2025T03:05:38 - [TEST_STEP][PASSED] - m = m.trim(): null

10-01-2025T03:05:38 - [TEST_STEP][PASSED] - dashboardName = "Выполнение бизнес-плана": null

10-01-2025T03:05:38 - [TEST_STEP][PASSED] - workbook01 = getWorkbook(excelFilePath): null

10-01-2025T03:05:38 - [TEST_STEP][PASSED] - sheet01 = getExcelSheet(workbook01, sheetName): null

10-01-2025T03:05:38 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 0, dashboardName): null

10-01-2025T03:05:38 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 1, dZO): null

10-01-2025T03:05:38 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 2, typeOfData): null

10-01-2025T03:05:38 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 3, typeOfData): null

10-01-2025T03:05:38 - [TEST_STEP][PASSED] - if (typeOfData == "План"): null

10-01-2025T03:05:38 - [TEST_STEP][PASSED] - else if (typeOfData == "Факт"): null

10-01-2025T03:05:38 - [TEST_STEP][PASSED] - if (PercFactR == null): null

10-01-2025T03:05:38 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:05:38 - [TEST_STEP][PASSED] - if (PercFactR == "нет данных"): null

10-01-2025T03:05:38 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 4, "нет данных"): null

10-01-2025T03:05:38 - [TEST_STEP][PASSED] - if (PercFactB == null): null

10-01-2025T03:05:38 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:05:38 - [TEST_STEP][PASSED] - if (PercFactB == "нет данных"): null

10-01-2025T03:05:38 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:05:38 - [TEST_STEP][PASSED] - FB = PercFactB.toDouble(): null

10-01-2025T03:05:38 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 5, FB): null

10-01-2025T03:05:38 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 6, m): null

10-01-2025T03:05:38 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 7, y): null

10-01-2025T03:05:38 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 8, todaysDate): null

10-01-2025T03:05:38 - [TEST_STEP][PASSED] - n = n + 1: null

10-01-2025T03:05:38 - [TEST_STEP][PASSED] - saveWorkbook(excelFilePath, workbook01): null

10-01-2025T03:05:38 - [TEST_STEP][PASSED] - vidget = "Показатели баланса электроэнергии по ДЗО – Факт": null

10-01-2025T03:05:38 - [TEST_STEP][PASSED] - typeOfData = "Факт Отпуск в сеть": null

10-01-2025T03:05:38 - [TEST_STEP][PASSED] - tabR = GetOvSFactR(x = a): null

10-01-2025T03:05:38 - [TEST_STEP][PASSED] - i1 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:38 - [TEST_STEP][PASSED] - ii = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:38 - [TEST_STEP][PASSED] - for ([ii = 1, ii < 4, (ii++)]): null

10-01-2025T03:05:38 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:38 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:38 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:38 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:38 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:38 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:38 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:38 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:38 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:38 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:38 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:38 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:38 - [TEST_STEP][PASSED] - i1 = x.indexOf("/"): null

10-01-2025T03:05:38 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:38 - [TEST_STEP][PASSED] - x = x.substring(0, i1): null

10-01-2025T03:05:38 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:38 - [TEST_STEP][PASSED] - return x: null

10-01-2025T03:05:38 - [TEST_STEP][PASSED] - tabB = GetOvSFactB(x = b): null

10-01-2025T03:05:38 - [TEST_STEP][PASSED] - i1 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:38 - [TEST_STEP][PASSED] - ii = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:38 - [TEST_STEP][PASSED] - for ([ii = 1, ii < 4, (ii++)]): null

10-01-2025T03:05:38 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:38 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:38 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:38 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:38 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:38 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:38 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:38 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:38 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:38 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:38 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:38 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:38 - [TEST_STEP][PASSED] - i1 = x.indexOf("/"): null

10-01-2025T03:05:38 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:38 - [TEST_STEP][PASSED] - x = x.substring(0, i1): null

10-01-2025T03:05:38 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:38 - [TEST_STEP][FAILED] - return x: null

10-01-2025T03:05:38 - [TEST_STEP][FAILED] - if (verifyEqual(tabR, tabB) == false): null

10-01-2025T03:05:38 - [MESSAGE][FAILED] - Unable to verify equal between actual object 'нет данных' and expected object '23489307' (Root cause: com.kms.katalon.core.exception.StepFailedException: Actual object 'нет данных' and expected object '23489307' are not equal
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.doCall(VerifyEqualKeyword.groovy:58)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.call(VerifyEqualKeyword.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:75)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.verifyEqual(VerifyEqualKeyword.groovy:63)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.execute(VerifyEqualKeyword.groovy:44)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:74)
	at com.kms.katalon.core.keyword.BuiltinKeywords.verifyEqual(BuiltinKeywords.groovy:146)
	at jdk.internal.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at Выполнение бизнес-плана сверка дашбордов.CompareDZOData(Выполнение бизнес-плана сверка дашбордов:706)
	at Выполнение бизнес-плана сверка дашбордов.run(Выполнение бизнес-плана сверка дашбордов:603)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:448)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:439)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:418)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:410)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:285)
	at com.kms.katalon.core.common.CommonExecutor.accessTestCaseMainPhase(CommonExecutor.java:65)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:150)
	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:106)
	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:180)
	at TempTestSuite1736466949911.run(TempTestSuite1736466949911.groovy:35)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
)

10-01-2025T03:05:38 - [TEST_STEP][PASSED] - result = WriteToExcel(typeOfData, todaysDate, PercPlanR, PercPlanB, PercFactR, PercFactB, x, tabR, tabB, o1R, o1B, vidget): null

10-01-2025T03:05:38 - [TEST_STEP][PASSED] - iii = dZO.indexOf("/"): null

10-01-2025T03:05:38 - [TEST_STEP][PASSED] - println(iii): null

10-01-2025T03:05:38 - [TEST_STEP][PASSED] - dZO = dZO.substring(0, iii): null

10-01-2025T03:05:38 - [TEST_STEP][PASSED] - println(dZO): null

10-01-2025T03:05:38 - [TEST_STEP][PASSED] - println(PercPlanR): null

10-01-2025T03:05:38 - [TEST_STEP][PASSED] - println(PercPlanB): null

10-01-2025T03:05:38 - [TEST_STEP][PASSED] - println(PercFactR): null

10-01-2025T03:05:38 - [TEST_STEP][PASSED] - println(PercFactB): null

10-01-2025T03:05:38 - [TEST_STEP][PASSED] - println(tabR): null

10-01-2025T03:05:38 - [TEST_STEP][PASSED] - println(tabB): null

10-01-2025T03:05:38 - [TEST_STEP][PASSED] - println(o1R): null

10-01-2025T03:05:38 - [TEST_STEP][PASSED] - println(o1B): null

10-01-2025T03:05:38 - [TEST_STEP][PASSED] - PR = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:38 - [TEST_STEP][PASSED] - FR = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:38 - [TEST_STEP][PASSED] - PB = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:38 - [TEST_STEP][PASSED] - FB = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:38 - [TEST_STEP][PASSED] - TR = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:38 - [TEST_STEP][PASSED] - TB = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:38 - [TEST_STEP][PASSED] - sheetName = "Sheet1": null

10-01-2025T03:05:38 - [TEST_STEP][PASSED] - data = findTestData("PlanFact"): null

10-01-2025T03:05:38 - [TEST_STEP][PASSED] - n = data.getRowNumbers() + 1: null

10-01-2025T03:05:38 - [TEST_STEP][PASSED] - year = todaysDate.substring(todaysDate.length() - 4, todaysDate.length()): null

10-01-2025T03:05:38 - [TEST_STEP][PASSED] - y = year.toInteger(): null

10-01-2025T03:05:38 - [TEST_STEP][PASSED] - m = getText(findTestObject("Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Фильтр Дата")): Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Фильтр Дата' is: '1, 2, 3 кв., Октябрь, Ноябрь 2024 года'

10-01-2025T03:05:39 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Фильтр Дата' is: '1, 2, 3 кв., Октябрь, Ноябрь 2024 года'

10-01-2025T03:05:39 - [TEST_STEP][PASSED] - m = m.substring(0, m.indexOf("2024")): null

10-01-2025T03:05:39 - [TEST_STEP][PASSED] - m = m.trim(): null

10-01-2025T03:05:39 - [TEST_STEP][PASSED] - dashboardName = "Выполнение бизнес-плана": null

10-01-2025T03:05:39 - [TEST_STEP][PASSED] - workbook01 = getWorkbook(excelFilePath): null

10-01-2025T03:05:39 - [TEST_STEP][PASSED] - sheet01 = getExcelSheet(workbook01, sheetName): null

10-01-2025T03:05:39 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 0, dashboardName): null

10-01-2025T03:05:39 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 1, dZO): null

10-01-2025T03:05:39 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 2, typeOfData): null

10-01-2025T03:05:39 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 3, typeOfData): null

10-01-2025T03:05:39 - [TEST_STEP][PASSED] - if (typeOfData == "План"): null

10-01-2025T03:05:39 - [TEST_STEP][PASSED] - else if (typeOfData == "Факт"): null

10-01-2025T03:05:39 - [TEST_STEP][PASSED] - else if (vidget.contains("электроэнергии") == true): null

10-01-2025T03:05:39 - [TEST_STEP][PASSED] - if (tabR == null): null

10-01-2025T03:05:39 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:05:39 - [TEST_STEP][PASSED] - if (tabR == "нет данных"): null

10-01-2025T03:05:39 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 4, "нет данных"): null

10-01-2025T03:05:39 - [TEST_STEP][PASSED] - if (tabB == null): null

10-01-2025T03:05:39 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:05:39 - [TEST_STEP][PASSED] - if (tabB == "нет данных"): null

10-01-2025T03:05:39 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:05:39 - [TEST_STEP][PASSED] - TB = tabB.toInteger(): null

10-01-2025T03:05:39 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 5, TB): null

10-01-2025T03:05:39 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 6, m): null

10-01-2025T03:05:39 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 7, y): null

10-01-2025T03:05:39 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 8, todaysDate): null

10-01-2025T03:05:39 - [TEST_STEP][PASSED] - n = n + 1: null

10-01-2025T03:05:39 - [TEST_STEP][PASSED] - saveWorkbook(excelFilePath, workbook01): null

10-01-2025T03:05:39 - [TEST_STEP][PASSED] - typeOfData = "Факт Отпуск из сети": null

10-01-2025T03:05:39 - [TEST_STEP][PASSED] - tabR = GetOiSFactR(x = a): null

10-01-2025T03:05:39 - [TEST_STEP][PASSED] - i1 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:39 - [TEST_STEP][PASSED] - ii = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:39 - [TEST_STEP][PASSED] - for ([ii = 1, ii < 5, (ii++)]): null

10-01-2025T03:05:39 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:39 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:39 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:39 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:39 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:39 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:39 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:39 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:39 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:39 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:39 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:39 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:39 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:39 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:39 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:39 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:39 - [TEST_STEP][PASSED] - i1 = x.indexOf("/"): null

10-01-2025T03:05:39 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:39 - [TEST_STEP][PASSED] - x = x.substring(0, i1): null

10-01-2025T03:05:39 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:39 - [TEST_STEP][PASSED] - return x: null

10-01-2025T03:05:39 - [TEST_STEP][PASSED] - tabB = GetOiSFactB(x = b): null

10-01-2025T03:05:39 - [TEST_STEP][PASSED] - i1 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:39 - [TEST_STEP][PASSED] - ii = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:39 - [TEST_STEP][PASSED] - for ([ii = 1, ii < 5, (ii++)]): null

10-01-2025T03:05:39 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:39 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:39 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:39 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:39 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:39 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:39 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:39 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:39 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:39 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:39 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:39 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:39 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:39 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:39 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:39 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:39 - [TEST_STEP][PASSED] - i1 = x.indexOf("/"): null

10-01-2025T03:05:39 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:39 - [TEST_STEP][PASSED] - x = x.substring(0, i1): null

10-01-2025T03:05:39 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:39 - [TEST_STEP][FAILED] - return x: null

10-01-2025T03:05:39 - [TEST_STEP][FAILED] - if (verifyEqual(tabR, tabB) == false): null

10-01-2025T03:05:39 - [MESSAGE][FAILED] - Unable to verify equal between actual object 'нет данных' and expected object '21501911' (Root cause: com.kms.katalon.core.exception.StepFailedException: Actual object 'нет данных' and expected object '21501911' are not equal
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.doCall(VerifyEqualKeyword.groovy:58)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.call(VerifyEqualKeyword.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:75)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.verifyEqual(VerifyEqualKeyword.groovy:63)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.execute(VerifyEqualKeyword.groovy:44)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:74)
	at com.kms.katalon.core.keyword.BuiltinKeywords.verifyEqual(BuiltinKeywords.groovy:146)
	at jdk.internal.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at Выполнение бизнес-плана сверка дашбордов.CompareDZOData(Выполнение бизнес-плана сверка дашбордов:717)
	at Выполнение бизнес-плана сверка дашбордов.run(Выполнение бизнес-плана сверка дашбордов:603)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:448)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:439)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:418)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:410)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:285)
	at com.kms.katalon.core.common.CommonExecutor.accessTestCaseMainPhase(CommonExecutor.java:65)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:150)
	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:106)
	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:180)
	at TempTestSuite1736466949911.run(TempTestSuite1736466949911.groovy:35)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
)

10-01-2025T03:05:39 - [TEST_STEP][PASSED] - result = WriteToExcel(typeOfData, todaysDate, PercPlanR, PercPlanB, PercFactR, PercFactB, x, tabR, tabB, o1R, o1B, vidget): null

10-01-2025T03:05:39 - [TEST_STEP][PASSED] - iii = dZO.indexOf("/"): null

10-01-2025T03:05:39 - [TEST_STEP][PASSED] - println(iii): null

10-01-2025T03:05:39 - [TEST_STEP][PASSED] - dZO = dZO.substring(0, iii): null

10-01-2025T03:05:39 - [TEST_STEP][PASSED] - println(dZO): null

10-01-2025T03:05:39 - [TEST_STEP][PASSED] - println(PercPlanR): null

10-01-2025T03:05:39 - [TEST_STEP][PASSED] - println(PercPlanB): null

10-01-2025T03:05:39 - [TEST_STEP][PASSED] - println(PercFactR): null

10-01-2025T03:05:39 - [TEST_STEP][PASSED] - println(PercFactB): null

10-01-2025T03:05:39 - [TEST_STEP][PASSED] - println(tabR): null

10-01-2025T03:05:39 - [TEST_STEP][PASSED] - println(tabB): null

10-01-2025T03:05:39 - [TEST_STEP][PASSED] - println(o1R): null

10-01-2025T03:05:39 - [TEST_STEP][PASSED] - println(o1B): null

10-01-2025T03:05:39 - [TEST_STEP][PASSED] - PR = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:39 - [TEST_STEP][PASSED] - FR = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:39 - [TEST_STEP][PASSED] - PB = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:39 - [TEST_STEP][PASSED] - FB = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:39 - [TEST_STEP][PASSED] - TR = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:39 - [TEST_STEP][PASSED] - TB = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:39 - [TEST_STEP][PASSED] - sheetName = "Sheet1": null

10-01-2025T03:05:39 - [TEST_STEP][PASSED] - data = findTestData("PlanFact"): null

10-01-2025T03:05:39 - [TEST_STEP][PASSED] - n = data.getRowNumbers() + 1: null

10-01-2025T03:05:39 - [TEST_STEP][PASSED] - year = todaysDate.substring(todaysDate.length() - 4, todaysDate.length()): null

10-01-2025T03:05:39 - [TEST_STEP][PASSED] - y = year.toInteger(): null

10-01-2025T03:05:39 - [TEST_STEP][PASSED] - m = getText(findTestObject("Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Фильтр Дата")): Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Фильтр Дата' is: '1, 2, 3 кв., Октябрь, Ноябрь 2024 года'

10-01-2025T03:05:39 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Фильтр Дата' is: '1, 2, 3 кв., Октябрь, Ноябрь 2024 года'

10-01-2025T03:05:39 - [TEST_STEP][PASSED] - m = m.substring(0, m.indexOf("2024")): null

10-01-2025T03:05:39 - [TEST_STEP][PASSED] - m = m.trim(): null

10-01-2025T03:05:39 - [TEST_STEP][PASSED] - dashboardName = "Выполнение бизнес-плана": null

10-01-2025T03:05:39 - [TEST_STEP][PASSED] - workbook01 = getWorkbook(excelFilePath): null

10-01-2025T03:05:39 - [TEST_STEP][PASSED] - sheet01 = getExcelSheet(workbook01, sheetName): null

10-01-2025T03:05:39 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 0, dashboardName): null

10-01-2025T03:05:39 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 1, dZO): null

10-01-2025T03:05:39 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 2, typeOfData): null

10-01-2025T03:05:39 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 3, typeOfData): null

10-01-2025T03:05:39 - [TEST_STEP][PASSED] - if (typeOfData == "План"): null

10-01-2025T03:05:39 - [TEST_STEP][PASSED] - else if (typeOfData == "Факт"): null

10-01-2025T03:05:39 - [TEST_STEP][PASSED] - else if (vidget.contains("электроэнергии") == true): null

10-01-2025T03:05:39 - [TEST_STEP][PASSED] - if (tabR == null): null

10-01-2025T03:05:39 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:05:39 - [TEST_STEP][PASSED] - if (tabR == "нет данных"): null

10-01-2025T03:05:39 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 4, "нет данных"): null

10-01-2025T03:05:39 - [TEST_STEP][PASSED] - if (tabB == null): null

10-01-2025T03:05:39 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:05:39 - [TEST_STEP][PASSED] - if (tabB == "нет данных"): null

10-01-2025T03:05:39 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:05:39 - [TEST_STEP][PASSED] - TB = tabB.toInteger(): null

10-01-2025T03:05:39 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 5, TB): null

10-01-2025T03:05:39 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 6, m): null

10-01-2025T03:05:39 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 7, y): null

10-01-2025T03:05:39 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 8, todaysDate): null

10-01-2025T03:05:39 - [TEST_STEP][PASSED] - n = n + 1: null

10-01-2025T03:05:39 - [TEST_STEP][PASSED] - saveWorkbook(excelFilePath, workbook01): null

10-01-2025T03:05:40 - [TEST_STEP][PASSED] - typeOfData = "Факт Потери": null

10-01-2025T03:05:40 - [TEST_STEP][PASSED] - tabR = GetPFactR(x = a): null

10-01-2025T03:05:40 - [TEST_STEP][PASSED] - i1 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:40 - [TEST_STEP][PASSED] - ii = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:40 - [TEST_STEP][PASSED] - for ([ii = 1, ii < 6, (ii++)]): null

10-01-2025T03:05:40 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:40 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:40 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:40 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:40 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:40 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:40 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:40 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:40 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:40 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:40 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:40 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:40 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:40 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:40 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:40 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:40 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:40 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:40 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:40 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:40 - [TEST_STEP][PASSED] - i1 = x.indexOf("/"): null

10-01-2025T03:05:40 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:40 - [TEST_STEP][PASSED] - x = x.substring(0, i1): null

10-01-2025T03:05:40 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:40 - [TEST_STEP][PASSED] - return x: null

10-01-2025T03:05:40 - [TEST_STEP][PASSED] - tabB = GetPFactB(x = b): null

10-01-2025T03:05:40 - [TEST_STEP][PASSED] - i1 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:40 - [TEST_STEP][PASSED] - ii = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:40 - [TEST_STEP][PASSED] - for ([ii = 1, ii < 6, (ii++)]): null

10-01-2025T03:05:40 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:40 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:40 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:40 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:40 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:40 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:40 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:40 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:40 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:40 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:40 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:40 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:40 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:40 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:40 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:40 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:40 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:40 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:40 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:40 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:40 - [TEST_STEP][PASSED] - i1 = x.indexOf("/"): null

10-01-2025T03:05:40 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:40 - [TEST_STEP][PASSED] - x = x.substring(0, i1): null

10-01-2025T03:05:40 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:40 - [TEST_STEP][FAILED] - return x: null

10-01-2025T03:05:40 - [TEST_STEP][PASSED] - println(tabR + "/" + tabB): null

10-01-2025T03:05:40 - [TEST_STEP][FAILED] - if (verifyEqual(tabR, tabB) == false): null

10-01-2025T03:05:40 - [MESSAGE][FAILED] - Unable to verify equal between actual object 'нет данных' and expected object '1987396' (Root cause: com.kms.katalon.core.exception.StepFailedException: Actual object 'нет данных' and expected object '1987396' are not equal
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.doCall(VerifyEqualKeyword.groovy:58)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.call(VerifyEqualKeyword.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:75)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.verifyEqual(VerifyEqualKeyword.groovy:63)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.execute(VerifyEqualKeyword.groovy:44)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:74)
	at com.kms.katalon.core.keyword.BuiltinKeywords.verifyEqual(BuiltinKeywords.groovy:146)
	at jdk.internal.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at Выполнение бизнес-плана сверка дашбордов.CompareDZOData(Выполнение бизнес-плана сверка дашбордов:730)
	at Выполнение бизнес-плана сверка дашбордов.run(Выполнение бизнес-плана сверка дашбордов:603)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:448)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:439)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:418)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:410)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:285)
	at com.kms.katalon.core.common.CommonExecutor.accessTestCaseMainPhase(CommonExecutor.java:65)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:150)
	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:106)
	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:180)
	at TempTestSuite1736466949911.run(TempTestSuite1736466949911.groovy:35)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
)

10-01-2025T03:05:40 - [TEST_STEP][PASSED] - result = WriteToExcel(typeOfData, todaysDate, PercPlanR, PercPlanB, PercFactR, PercFactB, x, tabR, tabB, o1R, o1B, vidget): null

10-01-2025T03:05:40 - [TEST_STEP][PASSED] - iii = dZO.indexOf("/"): null

10-01-2025T03:05:40 - [TEST_STEP][PASSED] - println(iii): null

10-01-2025T03:05:40 - [TEST_STEP][PASSED] - dZO = dZO.substring(0, iii): null

10-01-2025T03:05:40 - [TEST_STEP][PASSED] - println(dZO): null

10-01-2025T03:05:40 - [TEST_STEP][PASSED] - println(PercPlanR): null

10-01-2025T03:05:40 - [TEST_STEP][PASSED] - println(PercPlanB): null

10-01-2025T03:05:40 - [TEST_STEP][PASSED] - println(PercFactR): null

10-01-2025T03:05:40 - [TEST_STEP][PASSED] - println(PercFactB): null

10-01-2025T03:05:40 - [TEST_STEP][PASSED] - println(tabR): null

10-01-2025T03:05:40 - [TEST_STEP][PASSED] - println(tabB): null

10-01-2025T03:05:40 - [TEST_STEP][PASSED] - println(o1R): null

10-01-2025T03:05:40 - [TEST_STEP][PASSED] - println(o1B): null

10-01-2025T03:05:40 - [TEST_STEP][PASSED] - PR = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:40 - [TEST_STEP][PASSED] - FR = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:40 - [TEST_STEP][PASSED] - PB = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:40 - [TEST_STEP][PASSED] - FB = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:40 - [TEST_STEP][PASSED] - TR = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:40 - [TEST_STEP][PASSED] - TB = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:40 - [TEST_STEP][PASSED] - sheetName = "Sheet1": null

10-01-2025T03:05:40 - [TEST_STEP][PASSED] - data = findTestData("PlanFact"): null

10-01-2025T03:05:40 - [TEST_STEP][PASSED] - n = data.getRowNumbers() + 1: null

10-01-2025T03:05:40 - [TEST_STEP][PASSED] - year = todaysDate.substring(todaysDate.length() - 4, todaysDate.length()): null

10-01-2025T03:05:40 - [TEST_STEP][PASSED] - y = year.toInteger(): null

10-01-2025T03:05:40 - [TEST_STEP][PASSED] - m = getText(findTestObject("Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Фильтр Дата")): Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Фильтр Дата' is: '1, 2, 3 кв., Октябрь, Ноябрь 2024 года'

10-01-2025T03:05:40 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Фильтр Дата' is: '1, 2, 3 кв., Октябрь, Ноябрь 2024 года'

10-01-2025T03:05:40 - [TEST_STEP][PASSED] - m = m.substring(0, m.indexOf("2024")): null

10-01-2025T03:05:40 - [TEST_STEP][PASSED] - m = m.trim(): null

10-01-2025T03:05:40 - [TEST_STEP][PASSED] - dashboardName = "Выполнение бизнес-плана": null

10-01-2025T03:05:40 - [TEST_STEP][PASSED] - workbook01 = getWorkbook(excelFilePath): null

10-01-2025T03:05:40 - [TEST_STEP][PASSED] - sheet01 = getExcelSheet(workbook01, sheetName): null

10-01-2025T03:05:40 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 0, dashboardName): null

10-01-2025T03:05:40 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 1, dZO): null

10-01-2025T03:05:40 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 2, typeOfData): null

10-01-2025T03:05:40 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 3, typeOfData): null

10-01-2025T03:05:40 - [TEST_STEP][PASSED] - if (typeOfData == "План"): null

10-01-2025T03:05:40 - [TEST_STEP][PASSED] - else if (typeOfData == "Факт"): null

10-01-2025T03:05:40 - [TEST_STEP][PASSED] - else if (vidget.contains("электроэнергии") == true): null

10-01-2025T03:05:40 - [TEST_STEP][PASSED] - if (tabR == null): null

10-01-2025T03:05:40 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:05:40 - [TEST_STEP][PASSED] - if (tabR == "нет данных"): null

10-01-2025T03:05:40 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 4, "нет данных"): null

10-01-2025T03:05:40 - [TEST_STEP][PASSED] - if (tabB == null): null

10-01-2025T03:05:40 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:05:40 - [TEST_STEP][PASSED] - if (tabB == "нет данных"): null

10-01-2025T03:05:40 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:05:40 - [TEST_STEP][PASSED] - TB = tabB.toInteger(): null

10-01-2025T03:05:40 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 5, TB): null

10-01-2025T03:05:40 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 6, m): null

10-01-2025T03:05:40 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 7, y): null

10-01-2025T03:05:40 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 8, todaysDate): null

10-01-2025T03:05:40 - [TEST_STEP][PASSED] - n = n + 1: null

10-01-2025T03:05:40 - [TEST_STEP][PASSED] - saveWorkbook(excelFilePath, workbook01): null

10-01-2025T03:05:40 - [TEST_STEP][PASSED] - vidget = "Показатели баланса электроэнергии по ДЗО – План": null

10-01-2025T03:05:40 - [TEST_STEP][PASSED] - typeOfData = "План Отпуск в сеть": null

10-01-2025T03:05:40 - [TEST_STEP][PASSED] - tabR = GetOvSPlanR(x = a): null

10-01-2025T03:05:40 - [TEST_STEP][PASSED] - i1 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:40 - [TEST_STEP][PASSED] - ii = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:40 - [TEST_STEP][PASSED] - for ([ii = 1, ii < 7, (ii++)]): null

10-01-2025T03:05:40 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:40 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:40 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:40 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:40 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:40 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:40 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:40 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:40 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:40 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:40 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:40 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:40 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:40 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:40 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:40 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:40 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:40 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:40 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:40 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:40 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:40 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:40 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:40 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:40 - [TEST_STEP][PASSED] - i1 = x.indexOf("/"): null

10-01-2025T03:05:40 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:40 - [TEST_STEP][PASSED] - x = x.substring(0, i1): null

10-01-2025T03:05:40 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:40 - [TEST_STEP][PASSED] - return x: null

10-01-2025T03:05:40 - [TEST_STEP][PASSED] - tabB = GetOvSPlanB(x = b): null

10-01-2025T03:05:40 - [TEST_STEP][PASSED] - i1 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:40 - [TEST_STEP][PASSED] - ii = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:40 - [TEST_STEP][PASSED] - for ([ii = 1, ii < 7, (ii++)]): null

10-01-2025T03:05:40 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:40 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:40 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:40 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:40 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:40 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:40 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:40 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:40 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:40 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:40 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:40 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:40 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:40 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:40 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:40 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:40 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:40 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:40 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:40 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:40 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:40 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:40 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:40 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:40 - [TEST_STEP][PASSED] - i1 = x.indexOf("/"): null

10-01-2025T03:05:40 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:40 - [TEST_STEP][PASSED] - x = x.substring(0, i1): null

10-01-2025T03:05:40 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:40 - [TEST_STEP][FAILED] - return x: null

10-01-2025T03:05:40 - [TEST_STEP][PASSED] - println(tabR + "/" + tabB): null

10-01-2025T03:05:40 - [TEST_STEP][FAILED] - if (verifyEqual(PercFactR, PercFactB) == false): null

10-01-2025T03:05:40 - [MESSAGE][FAILED] - Unable to verify equal between actual object 'нет данных' and expected object '8.46' (Root cause: com.kms.katalon.core.exception.StepFailedException: Actual object 'нет данных' and expected object '8.46' are not equal
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.doCall(VerifyEqualKeyword.groovy:58)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.call(VerifyEqualKeyword.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:75)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.verifyEqual(VerifyEqualKeyword.groovy:63)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.execute(VerifyEqualKeyword.groovy:44)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:74)
	at com.kms.katalon.core.keyword.BuiltinKeywords.verifyEqual(BuiltinKeywords.groovy:146)
	at jdk.internal.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at Выполнение бизнес-плана сверка дашбордов.CompareDZOData(Выполнение бизнес-плана сверка дашбордов:745)
	at Выполнение бизнес-плана сверка дашбордов.run(Выполнение бизнес-плана сверка дашбордов:603)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:448)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:439)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:418)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:410)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:285)
	at com.kms.katalon.core.common.CommonExecutor.accessTestCaseMainPhase(CommonExecutor.java:65)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:150)
	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:106)
	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:180)
	at TempTestSuite1736466949911.run(TempTestSuite1736466949911.groovy:35)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
)

10-01-2025T03:05:40 - [TEST_STEP][PASSED] - result = WriteToExcel(typeOfData, todaysDate, PercPlanR, PercPlanB, PercFactR, PercFactB, x, tabR, tabB, o1R, o1B, vidget): null

10-01-2025T03:05:40 - [TEST_STEP][PASSED] - iii = dZO.indexOf("/"): null

10-01-2025T03:05:40 - [TEST_STEP][PASSED] - println(iii): null

10-01-2025T03:05:40 - [TEST_STEP][PASSED] - dZO = dZO.substring(0, iii): null

10-01-2025T03:05:40 - [TEST_STEP][PASSED] - println(dZO): null

10-01-2025T03:05:40 - [TEST_STEP][PASSED] - println(PercPlanR): null

10-01-2025T03:05:40 - [TEST_STEP][PASSED] - println(PercPlanB): null

10-01-2025T03:05:40 - [TEST_STEP][PASSED] - println(PercFactR): null

10-01-2025T03:05:40 - [TEST_STEP][PASSED] - println(PercFactB): null

10-01-2025T03:05:40 - [TEST_STEP][PASSED] - println(tabR): null

10-01-2025T03:05:40 - [TEST_STEP][PASSED] - println(tabB): null

10-01-2025T03:05:40 - [TEST_STEP][PASSED] - println(o1R): null

10-01-2025T03:05:40 - [TEST_STEP][PASSED] - println(o1B): null

10-01-2025T03:05:40 - [TEST_STEP][PASSED] - PR = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:40 - [TEST_STEP][PASSED] - FR = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:40 - [TEST_STEP][PASSED] - PB = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:40 - [TEST_STEP][PASSED] - FB = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:40 - [TEST_STEP][PASSED] - TR = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:40 - [TEST_STEP][PASSED] - TB = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:40 - [TEST_STEP][PASSED] - sheetName = "Sheet1": null

10-01-2025T03:05:40 - [TEST_STEP][PASSED] - data = findTestData("PlanFact"): null

10-01-2025T03:05:40 - [TEST_STEP][PASSED] - n = data.getRowNumbers() + 1: null

10-01-2025T03:05:40 - [TEST_STEP][PASSED] - year = todaysDate.substring(todaysDate.length() - 4, todaysDate.length()): null

10-01-2025T03:05:40 - [TEST_STEP][PASSED] - y = year.toInteger(): null

10-01-2025T03:05:40 - [TEST_STEP][PASSED] - m = getText(findTestObject("Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Фильтр Дата")): Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Фильтр Дата' is: '1, 2, 3 кв., Октябрь, Ноябрь 2024 года'

10-01-2025T03:05:40 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Фильтр Дата' is: '1, 2, 3 кв., Октябрь, Ноябрь 2024 года'

10-01-2025T03:05:40 - [TEST_STEP][PASSED] - m = m.substring(0, m.indexOf("2024")): null

10-01-2025T03:05:40 - [TEST_STEP][PASSED] - m = m.trim(): null

10-01-2025T03:05:40 - [TEST_STEP][PASSED] - dashboardName = "Выполнение бизнес-плана": null

10-01-2025T03:05:40 - [TEST_STEP][PASSED] - workbook01 = getWorkbook(excelFilePath): null

10-01-2025T03:05:41 - [TEST_STEP][PASSED] - sheet01 = getExcelSheet(workbook01, sheetName): null

10-01-2025T03:05:41 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 0, dashboardName): null

10-01-2025T03:05:41 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 1, dZO): null

10-01-2025T03:05:41 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 2, typeOfData): null

10-01-2025T03:05:41 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 3, typeOfData): null

10-01-2025T03:05:41 - [TEST_STEP][PASSED] - if (typeOfData == "План"): null

10-01-2025T03:05:41 - [TEST_STEP][PASSED] - else if (typeOfData == "Факт"): null

10-01-2025T03:05:41 - [TEST_STEP][PASSED] - else if (vidget.contains("электроэнергии") == true): null

10-01-2025T03:05:41 - [TEST_STEP][PASSED] - if (tabR == null): null

10-01-2025T03:05:41 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:05:41 - [TEST_STEP][PASSED] - if (tabR == "нет данных"): null

10-01-2025T03:05:41 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 4, "нет данных"): null

10-01-2025T03:05:41 - [TEST_STEP][PASSED] - if (tabB == null): null

10-01-2025T03:05:41 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:05:41 - [TEST_STEP][PASSED] - if (tabB == "нет данных"): null

10-01-2025T03:05:41 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:05:41 - [TEST_STEP][PASSED] - TB = tabB.toInteger(): null

10-01-2025T03:05:41 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 5, TB): null

10-01-2025T03:05:41 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 6, m): null

10-01-2025T03:05:41 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 7, y): null

10-01-2025T03:05:41 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 8, todaysDate): null

10-01-2025T03:05:41 - [TEST_STEP][PASSED] - n = n + 1: null

10-01-2025T03:05:41 - [TEST_STEP][PASSED] - saveWorkbook(excelFilePath, workbook01): null

10-01-2025T03:05:41 - [TEST_STEP][PASSED] - typeOfData = "План Отпуск из сети": null

10-01-2025T03:05:41 - [TEST_STEP][PASSED] - tabR = GetOiSPlanR(x = a): null

10-01-2025T03:05:41 - [TEST_STEP][PASSED] - i1 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:41 - [TEST_STEP][PASSED] - ii = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:41 - [TEST_STEP][PASSED] - for ([ii = 1, ii < 8, (ii++)]): null

10-01-2025T03:05:41 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:41 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:41 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:41 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:41 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:41 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:41 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:41 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:41 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:41 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:41 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:41 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:41 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:41 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:41 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:41 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:41 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:41 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:41 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:41 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:41 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:41 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:41 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:41 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:41 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:41 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:41 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:41 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:41 - [TEST_STEP][PASSED] - i1 = x.indexOf("/"): null

10-01-2025T03:05:41 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:41 - [TEST_STEP][PASSED] - x = x.substring(0, i1): null

10-01-2025T03:05:41 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:41 - [TEST_STEP][PASSED] - return x: null

10-01-2025T03:05:41 - [TEST_STEP][PASSED] - tabB = GetOiSPlanB(x = b): null

10-01-2025T03:05:41 - [TEST_STEP][PASSED] - i1 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:41 - [TEST_STEP][PASSED] - ii = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:41 - [TEST_STEP][PASSED] - for ([ii = 1, ii < 8, (ii++)]): null

10-01-2025T03:05:41 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:41 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:41 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:41 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:41 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:41 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:41 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:41 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:41 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:41 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:41 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:41 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:41 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:41 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:41 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:41 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:41 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:41 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:41 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:41 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:41 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:41 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:41 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:41 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:41 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:41 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:41 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:41 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:41 - [TEST_STEP][PASSED] - i1 = x.indexOf("/"): null

10-01-2025T03:05:41 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:41 - [TEST_STEP][PASSED] - x = x.substring(0, i1): null

10-01-2025T03:05:41 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:41 - [TEST_STEP][FAILED] - return x: null

10-01-2025T03:05:41 - [TEST_STEP][PASSED] - println(tabR + "/" + tabB): null

10-01-2025T03:05:41 - [TEST_STEP][FAILED] - if (verifyEqual(PercFactR, PercFactB) == false): null

10-01-2025T03:05:41 - [MESSAGE][FAILED] - Unable to verify equal between actual object 'нет данных' and expected object '8.46' (Root cause: com.kms.katalon.core.exception.StepFailedException: Actual object 'нет данных' and expected object '8.46' are not equal
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.doCall(VerifyEqualKeyword.groovy:58)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.call(VerifyEqualKeyword.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:75)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.verifyEqual(VerifyEqualKeyword.groovy:63)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.execute(VerifyEqualKeyword.groovy:44)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:74)
	at com.kms.katalon.core.keyword.BuiltinKeywords.verifyEqual(BuiltinKeywords.groovy:146)
	at jdk.internal.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at Выполнение бизнес-плана сверка дашбордов.CompareDZOData(Выполнение бизнес-плана сверка дашбордов:758)
	at Выполнение бизнес-плана сверка дашбордов.run(Выполнение бизнес-плана сверка дашбордов:603)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:448)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:439)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:418)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:410)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:285)
	at com.kms.katalon.core.common.CommonExecutor.accessTestCaseMainPhase(CommonExecutor.java:65)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:150)
	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:106)
	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:180)
	at TempTestSuite1736466949911.run(TempTestSuite1736466949911.groovy:35)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
)

10-01-2025T03:05:41 - [TEST_STEP][PASSED] - result = WriteToExcel(typeOfData, todaysDate, PercPlanR, PercPlanB, PercFactR, PercFactB, x, tabR, tabB, o1R, o1B, vidget): null

10-01-2025T03:05:41 - [TEST_STEP][PASSED] - iii = dZO.indexOf("/"): null

10-01-2025T03:05:41 - [TEST_STEP][PASSED] - println(iii): null

10-01-2025T03:05:41 - [TEST_STEP][PASSED] - dZO = dZO.substring(0, iii): null

10-01-2025T03:05:41 - [TEST_STEP][PASSED] - println(dZO): null

10-01-2025T03:05:41 - [TEST_STEP][PASSED] - println(PercPlanR): null

10-01-2025T03:05:41 - [TEST_STEP][PASSED] - println(PercPlanB): null

10-01-2025T03:05:41 - [TEST_STEP][PASSED] - println(PercFactR): null

10-01-2025T03:05:41 - [TEST_STEP][PASSED] - println(PercFactB): null

10-01-2025T03:05:41 - [TEST_STEP][PASSED] - println(tabR): null

10-01-2025T03:05:41 - [TEST_STEP][PASSED] - println(tabB): null

10-01-2025T03:05:41 - [TEST_STEP][PASSED] - println(o1R): null

10-01-2025T03:05:41 - [TEST_STEP][PASSED] - println(o1B): null

10-01-2025T03:05:41 - [TEST_STEP][PASSED] - PR = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:41 - [TEST_STEP][PASSED] - FR = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:41 - [TEST_STEP][PASSED] - PB = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:41 - [TEST_STEP][PASSED] - FB = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:41 - [TEST_STEP][PASSED] - TR = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:41 - [TEST_STEP][PASSED] - TB = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:41 - [TEST_STEP][PASSED] - sheetName = "Sheet1": null

10-01-2025T03:05:41 - [TEST_STEP][PASSED] - data = findTestData("PlanFact"): null

10-01-2025T03:05:41 - [TEST_STEP][PASSED] - n = data.getRowNumbers() + 1: null

10-01-2025T03:05:41 - [TEST_STEP][PASSED] - year = todaysDate.substring(todaysDate.length() - 4, todaysDate.length()): null

10-01-2025T03:05:41 - [TEST_STEP][PASSED] - y = year.toInteger(): null

10-01-2025T03:05:41 - [TEST_STEP][PASSED] - m = getText(findTestObject("Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Фильтр Дата")): Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Фильтр Дата' is: '1, 2, 3 кв., Октябрь, Ноябрь 2024 года'

10-01-2025T03:05:41 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Фильтр Дата' is: '1, 2, 3 кв., Октябрь, Ноябрь 2024 года'

10-01-2025T03:05:41 - [TEST_STEP][PASSED] - m = m.substring(0, m.indexOf("2024")): null

10-01-2025T03:05:41 - [TEST_STEP][PASSED] - m = m.trim(): null

10-01-2025T03:05:41 - [TEST_STEP][PASSED] - dashboardName = "Выполнение бизнес-плана": null

10-01-2025T03:05:41 - [TEST_STEP][PASSED] - workbook01 = getWorkbook(excelFilePath): null

10-01-2025T03:05:41 - [TEST_STEP][PASSED] - sheet01 = getExcelSheet(workbook01, sheetName): null

10-01-2025T03:05:41 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 0, dashboardName): null

10-01-2025T03:05:41 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 1, dZO): null

10-01-2025T03:05:41 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 2, typeOfData): null

10-01-2025T03:05:41 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 3, typeOfData): null

10-01-2025T03:05:41 - [TEST_STEP][PASSED] - if (typeOfData == "План"): null

10-01-2025T03:05:41 - [TEST_STEP][PASSED] - else if (typeOfData == "Факт"): null

10-01-2025T03:05:41 - [TEST_STEP][PASSED] - else if (vidget.contains("электроэнергии") == true): null

10-01-2025T03:05:41 - [TEST_STEP][PASSED] - if (tabR == null): null

10-01-2025T03:05:41 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:05:41 - [TEST_STEP][PASSED] - if (tabR == "нет данных"): null

10-01-2025T03:05:41 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 4, "нет данных"): null

10-01-2025T03:05:41 - [TEST_STEP][PASSED] - if (tabB == null): null

10-01-2025T03:05:41 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:05:41 - [TEST_STEP][PASSED] - if (tabB == "нет данных"): null

10-01-2025T03:05:41 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:05:41 - [TEST_STEP][PASSED] - TB = tabB.toInteger(): null

10-01-2025T03:05:41 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 5, TB): null

10-01-2025T03:05:41 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 6, m): null

10-01-2025T03:05:41 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 7, y): null

10-01-2025T03:05:41 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 8, todaysDate): null

10-01-2025T03:05:41 - [TEST_STEP][PASSED] - n = n + 1: null

10-01-2025T03:05:41 - [TEST_STEP][PASSED] - saveWorkbook(excelFilePath, workbook01): null

10-01-2025T03:05:41 - [TEST_STEP][PASSED] - typeOfData = "План Потери": null

10-01-2025T03:05:41 - [TEST_STEP][PASSED] - tabR = GetPPlanR(x = a): null

10-01-2025T03:05:41 - [TEST_STEP][PASSED] - i1 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:41 - [TEST_STEP][PASSED] - ii = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:41 - [TEST_STEP][PASSED] - for ([ii = 1, ii < 9, (ii++)]): null

10-01-2025T03:05:41 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:41 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:41 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:41 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:41 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:41 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:41 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:41 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:41 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:41 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:41 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:41 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:41 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:41 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:41 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:41 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:41 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:41 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:41 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:41 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:41 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:41 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:41 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:41 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:41 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:41 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:41 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:41 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:41 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:41 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:41 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:41 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:41 - [TEST_STEP][PASSED] - i1 = x.indexOf("/"): null

10-01-2025T03:05:41 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:41 - [TEST_STEP][PASSED] - x = x.substring(0, i1): null

10-01-2025T03:05:41 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:41 - [TEST_STEP][PASSED] - return x: null

10-01-2025T03:05:41 - [TEST_STEP][PASSED] - tabB = GetPPlanB(x = b): null

10-01-2025T03:05:41 - [TEST_STEP][PASSED] - i1 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:41 - [TEST_STEP][PASSED] - ii = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:41 - [TEST_STEP][PASSED] - for ([ii = 1, ii < 9, (ii++)]): null

10-01-2025T03:05:41 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:41 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:41 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:41 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:41 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:41 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:41 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:41 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:41 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:41 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:41 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:41 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:41 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:41 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:41 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:41 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:41 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:41 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:41 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:41 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:41 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:41 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:41 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:41 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:41 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:41 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:41 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:41 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:41 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:41 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:41 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:41 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:41 - [TEST_STEP][PASSED] - i1 = x.indexOf("/"): null

10-01-2025T03:05:41 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:41 - [TEST_STEP][PASSED] - x = x.substring(0, i1): null

10-01-2025T03:05:41 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:41 - [TEST_STEP][FAILED] - return x: null

10-01-2025T03:05:41 - [TEST_STEP][PASSED] - println(tabR + "/" + tabB): null

10-01-2025T03:05:41 - [TEST_STEP][FAILED] - if (verifyEqual(PercFactR, PercFactB) == false): null

10-01-2025T03:05:41 - [MESSAGE][FAILED] - Unable to verify equal between actual object 'нет данных' and expected object '8.46' (Root cause: com.kms.katalon.core.exception.StepFailedException: Actual object 'нет данных' and expected object '8.46' are not equal
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.doCall(VerifyEqualKeyword.groovy:58)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.call(VerifyEqualKeyword.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:75)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.verifyEqual(VerifyEqualKeyword.groovy:63)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.execute(VerifyEqualKeyword.groovy:44)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:74)
	at com.kms.katalon.core.keyword.BuiltinKeywords.verifyEqual(BuiltinKeywords.groovy:146)
	at jdk.internal.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at Выполнение бизнес-плана сверка дашбордов.CompareDZOData(Выполнение бизнес-плана сверка дашбордов:771)
	at Выполнение бизнес-плана сверка дашбордов.run(Выполнение бизнес-плана сверка дашбордов:603)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:448)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:439)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:418)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:410)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:285)
	at com.kms.katalon.core.common.CommonExecutor.accessTestCaseMainPhase(CommonExecutor.java:65)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:150)
	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:106)
	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:180)
	at TempTestSuite1736466949911.run(TempTestSuite1736466949911.groovy:35)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
)

10-01-2025T03:05:41 - [TEST_STEP][PASSED] - result = WriteToExcel(typeOfData, todaysDate, PercPlanR, PercPlanB, PercFactR, PercFactB, x, tabR, tabB, o1R, o1B, vidget): null

10-01-2025T03:05:41 - [TEST_STEP][PASSED] - iii = dZO.indexOf("/"): null

10-01-2025T03:05:41 - [TEST_STEP][PASSED] - println(iii): null

10-01-2025T03:05:41 - [TEST_STEP][PASSED] - dZO = dZO.substring(0, iii): null

10-01-2025T03:05:41 - [TEST_STEP][PASSED] - println(dZO): null

10-01-2025T03:05:41 - [TEST_STEP][PASSED] - println(PercPlanR): null

10-01-2025T03:05:41 - [TEST_STEP][PASSED] - println(PercPlanB): null

10-01-2025T03:05:41 - [TEST_STEP][PASSED] - println(PercFactR): null

10-01-2025T03:05:41 - [TEST_STEP][PASSED] - println(PercFactB): null

10-01-2025T03:05:41 - [TEST_STEP][PASSED] - println(tabR): null

10-01-2025T03:05:41 - [TEST_STEP][PASSED] - println(tabB): null

10-01-2025T03:05:41 - [TEST_STEP][PASSED] - println(o1R): null

10-01-2025T03:05:41 - [TEST_STEP][PASSED] - println(o1B): null

10-01-2025T03:05:41 - [TEST_STEP][PASSED] - PR = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:41 - [TEST_STEP][PASSED] - FR = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:41 - [TEST_STEP][PASSED] - PB = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:41 - [TEST_STEP][PASSED] - FB = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:41 - [TEST_STEP][PASSED] - TR = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:41 - [TEST_STEP][PASSED] - TB = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:41 - [TEST_STEP][PASSED] - sheetName = "Sheet1": null

10-01-2025T03:05:41 - [TEST_STEP][PASSED] - data = findTestData("PlanFact"): null

10-01-2025T03:05:42 - [TEST_STEP][PASSED] - n = data.getRowNumbers() + 1: null

10-01-2025T03:05:42 - [TEST_STEP][PASSED] - year = todaysDate.substring(todaysDate.length() - 4, todaysDate.length()): null

10-01-2025T03:05:42 - [TEST_STEP][PASSED] - y = year.toInteger(): null

10-01-2025T03:05:42 - [TEST_STEP][PASSED] - m = getText(findTestObject("Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Фильтр Дата")): Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Фильтр Дата' is: '1, 2, 3 кв., Октябрь, Ноябрь 2024 года'

10-01-2025T03:05:42 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Фильтр Дата' is: '1, 2, 3 кв., Октябрь, Ноябрь 2024 года'

10-01-2025T03:05:42 - [TEST_STEP][PASSED] - m = m.substring(0, m.indexOf("2024")): null

10-01-2025T03:05:42 - [TEST_STEP][PASSED] - m = m.trim(): null

10-01-2025T03:05:42 - [TEST_STEP][PASSED] - dashboardName = "Выполнение бизнес-плана": null

10-01-2025T03:05:42 - [TEST_STEP][PASSED] - workbook01 = getWorkbook(excelFilePath): null

10-01-2025T03:05:42 - [TEST_STEP][PASSED] - sheet01 = getExcelSheet(workbook01, sheetName): null

10-01-2025T03:05:42 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 0, dashboardName): null

10-01-2025T03:05:42 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 1, dZO): null

10-01-2025T03:05:42 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 2, typeOfData): null

10-01-2025T03:05:42 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 3, typeOfData): null

10-01-2025T03:05:42 - [TEST_STEP][PASSED] - if (typeOfData == "План"): null

10-01-2025T03:05:42 - [TEST_STEP][PASSED] - else if (typeOfData == "Факт"): null

10-01-2025T03:05:42 - [TEST_STEP][PASSED] - else if (vidget.contains("электроэнергии") == true): null

10-01-2025T03:05:42 - [TEST_STEP][PASSED] - if (tabR == null): null

10-01-2025T03:05:42 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:05:42 - [TEST_STEP][PASSED] - if (tabR == "нет данных"): null

10-01-2025T03:05:42 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 4, "нет данных"): null

10-01-2025T03:05:42 - [TEST_STEP][PASSED] - if (tabB == null): null

10-01-2025T03:05:42 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:05:42 - [TEST_STEP][PASSED] - if (tabB == "нет данных"): null

10-01-2025T03:05:42 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:05:42 - [TEST_STEP][PASSED] - TB = tabB.toInteger(): null

10-01-2025T03:05:42 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 5, TB): null

10-01-2025T03:05:42 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 6, m): null

10-01-2025T03:05:42 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 7, y): null

10-01-2025T03:05:42 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 8, todaysDate): null

10-01-2025T03:05:42 - [TEST_STEP][PASSED] - n = n + 1: null

10-01-2025T03:05:42 - [TEST_STEP][PASSED] - saveWorkbook(excelFilePath, workbook01): null

10-01-2025T03:05:42 - [TEST_STEP][PASSED] - ii2 = a.indexOf("ПАО"): null

10-01-2025T03:05:42 - [TEST_STEP][PASSED] - if (ii2 == -1): null

10-01-2025T03:05:42 - [TEST_STEP][PASSED] - vidget = "Отклонения фактического уровня потерь от бизнес-плана": null

10-01-2025T03:05:42 - [TEST_STEP][PASSED] - typeOfData = "Коэффициент": null

10-01-2025T03:05:42 - [TEST_STEP][PASSED] - o1R = Geto1R(x = a): null

10-01-2025T03:05:42 - [TEST_STEP][PASSED] - i1 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:42 - [TEST_STEP][PASSED] - ii = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:42 - [TEST_STEP][PASSED] - for ([ii = 1, ii < 10, (ii++)]): null

10-01-2025T03:05:42 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:42 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:42 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:42 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:42 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:42 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:42 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:42 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:42 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:42 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:42 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:42 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:42 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:42 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:42 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:42 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:42 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:42 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:42 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:42 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:42 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:42 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:42 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:42 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:42 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:42 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:42 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:42 - [TEST_STEP][PASSED] - i1 = x.indexOf("/"): null

10-01-2025T03:05:42 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:42 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:42 - [TEST_STEP][PASSED] - return x: null

10-01-2025T03:05:42 - [TEST_STEP][PASSED] - o1B = Geto1B(x = b): null

10-01-2025T03:05:42 - [TEST_STEP][PASSED] - i1 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:42 - [TEST_STEP][PASSED] - ii = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:42 - [TEST_STEP][PASSED] - for ([ii = 1, ii < 10, (ii++)]): null

10-01-2025T03:05:42 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:42 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:42 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:42 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:42 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:42 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:42 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:42 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:42 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:42 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:42 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:42 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:42 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:42 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:42 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:42 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:42 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:42 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:42 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:42 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:42 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:42 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:42 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:42 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:42 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:42 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:42 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:42 - [TEST_STEP][PASSED] - i1 = x.indexOf("/"): null

10-01-2025T03:05:42 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:42 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:42 - [TEST_STEP][FAILED] - return x: null

10-01-2025T03:05:42 - [TEST_STEP][PASSED] - println(o1R + "/" + o1B): null

10-01-2025T03:05:42 - [TEST_STEP][FAILED] - if (verifyEqual(PercFactR, PercFactB) == false): null

10-01-2025T03:05:42 - [MESSAGE][FAILED] - Unable to verify equal between actual object 'нет данных' and expected object '8.46' (Root cause: com.kms.katalon.core.exception.StepFailedException: Actual object 'нет данных' and expected object '8.46' are not equal
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.doCall(VerifyEqualKeyword.groovy:58)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.call(VerifyEqualKeyword.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:75)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.verifyEqual(VerifyEqualKeyword.groovy:63)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.execute(VerifyEqualKeyword.groovy:44)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:74)
	at com.kms.katalon.core.keyword.BuiltinKeywords.verifyEqual(BuiltinKeywords.groovy:146)
	at jdk.internal.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at Выполнение бизнес-плана сверка дашбордов.CompareDZOData(Выполнение бизнес-плана сверка дашбордов:789)
	at Выполнение бизнес-плана сверка дашбордов.run(Выполнение бизнес-плана сверка дашбордов:603)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:448)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:439)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:418)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:410)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:285)
	at com.kms.katalon.core.common.CommonExecutor.accessTestCaseMainPhase(CommonExecutor.java:65)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:150)
	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:106)
	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:180)
	at TempTestSuite1736466949911.run(TempTestSuite1736466949911.groovy:35)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
)

10-01-2025T03:05:42 - [TEST_STEP][PASSED] - result = WriteToExcel(typeOfData, todaysDate, PercPlanR, PercPlanB, PercFactR, PercFactB, x, tabR, tabB, o1R, o1B, vidget): null

10-01-2025T03:05:42 - [TEST_STEP][PASSED] - iii = dZO.indexOf("/"): null

10-01-2025T03:05:42 - [TEST_STEP][PASSED] - println(iii): null

10-01-2025T03:05:42 - [TEST_STEP][PASSED] - dZO = dZO.substring(0, iii): null

10-01-2025T03:05:42 - [TEST_STEP][PASSED] - println(dZO): null

10-01-2025T03:05:42 - [TEST_STEP][PASSED] - println(PercPlanR): null

10-01-2025T03:05:42 - [TEST_STEP][PASSED] - println(PercPlanB): null

10-01-2025T03:05:42 - [TEST_STEP][PASSED] - println(PercFactR): null

10-01-2025T03:05:42 - [TEST_STEP][PASSED] - println(PercFactB): null

10-01-2025T03:05:42 - [TEST_STEP][PASSED] - println(tabR): null

10-01-2025T03:05:42 - [TEST_STEP][PASSED] - println(tabB): null

10-01-2025T03:05:42 - [TEST_STEP][PASSED] - println(o1R): null

10-01-2025T03:05:42 - [TEST_STEP][PASSED] - println(o1B): null

10-01-2025T03:05:42 - [TEST_STEP][PASSED] - PR = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:42 - [TEST_STEP][PASSED] - FR = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:42 - [TEST_STEP][PASSED] - PB = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:42 - [TEST_STEP][PASSED] - FB = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:42 - [TEST_STEP][PASSED] - TR = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:42 - [TEST_STEP][PASSED] - TB = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:42 - [TEST_STEP][PASSED] - sheetName = "Sheet1": null

10-01-2025T03:05:42 - [TEST_STEP][PASSED] - data = findTestData("PlanFact"): null

10-01-2025T03:05:42 - [TEST_STEP][PASSED] - n = data.getRowNumbers() + 1: null

10-01-2025T03:05:42 - [TEST_STEP][PASSED] - year = todaysDate.substring(todaysDate.length() - 4, todaysDate.length()): null

10-01-2025T03:05:42 - [TEST_STEP][PASSED] - y = year.toInteger(): null

10-01-2025T03:05:42 - [TEST_STEP][PASSED] - m = getText(findTestObject("Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Фильтр Дата")): Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Фильтр Дата' is: '1, 2, 3 кв., Октябрь, Ноябрь 2024 года'

10-01-2025T03:05:42 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Фильтр Дата' is: '1, 2, 3 кв., Октябрь, Ноябрь 2024 года'

10-01-2025T03:05:42 - [TEST_STEP][PASSED] - m = m.substring(0, m.indexOf("2024")): null

10-01-2025T03:05:42 - [TEST_STEP][PASSED] - m = m.trim(): null

10-01-2025T03:05:42 - [TEST_STEP][PASSED] - dashboardName = "Выполнение бизнес-плана": null

10-01-2025T03:05:42 - [TEST_STEP][PASSED] - workbook01 = getWorkbook(excelFilePath): null

10-01-2025T03:05:43 - [TEST_STEP][PASSED] - sheet01 = getExcelSheet(workbook01, sheetName): null

10-01-2025T03:05:43 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 0, dashboardName): null

10-01-2025T03:05:43 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 1, dZO): null

10-01-2025T03:05:43 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 2, typeOfData): null

10-01-2025T03:05:43 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 3, typeOfData): null

10-01-2025T03:05:43 - [TEST_STEP][PASSED] - if (typeOfData == "План"): null

10-01-2025T03:05:43 - [TEST_STEP][PASSED] - else if (typeOfData == "Факт"): null

10-01-2025T03:05:43 - [TEST_STEP][PASSED] - else if (vidget.contains("электроэнергии") == true): null

10-01-2025T03:05:43 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:05:43 - [TEST_STEP][PASSED] - if (o1R == null): null

10-01-2025T03:05:43 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:05:43 - [TEST_STEP][PASSED] - if (o1R == "нет данных"): null

10-01-2025T03:05:43 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 4, "нет данных"): null

10-01-2025T03:05:43 - [TEST_STEP][PASSED] - if (o1B == null): null

10-01-2025T03:05:43 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:05:43 - [TEST_STEP][PASSED] - if (o1B == "нет данных"): null

10-01-2025T03:05:43 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:05:43 - [TEST_STEP][PASSED] - FB = o1B.toDouble(): null

10-01-2025T03:05:43 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 5, FB): null

10-01-2025T03:05:43 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 6, m): null

10-01-2025T03:05:43 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 7, y): null

10-01-2025T03:05:43 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 8, todaysDate): null

10-01-2025T03:05:43 - [TEST_STEP][PASSED] - n = n + 1: null

10-01-2025T03:05:43 - [TEST_STEP][FAILED] - saveWorkbook(excelFilePath, workbook01): null

10-01-2025T03:05:43 - [TEST_STEP][FAILED] - if (verifyEqual(lR, lB) == false): null

10-01-2025T03:05:43 - [MESSAGE][FAILED] - Unable to verify equal between actual object 'Россети Ленэнерго (ГК)/нет данных/нет данных/нет данных/нет данных/нет данных/нет данных/нет данных/нет данных/нет данных' and expected object 'Россети Ленэнерго (ГК)/10.91/10.89/34954264/31148311/3805953/33422359/29775403/3646956/-0.02' (Root cause: com.kms.katalon.core.exception.StepFailedException: Actual object 'Россети Ленэнерго (ГК)/нет данных/нет данных/нет данных/нет данных/нет данных/нет данных/нет данных/нет данных/нет данных' and expected object 'Россети Ленэнерго (ГК)/10.91/10.89/34954264/31148311/3805953/33422359/29775403/3646956/-0.02' are not equal
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.doCall(VerifyEqualKeyword.groovy:58)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.call(VerifyEqualKeyword.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:75)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.verifyEqual(VerifyEqualKeyword.groovy:63)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.execute(VerifyEqualKeyword.groovy:44)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:74)
	at com.kms.katalon.core.keyword.BuiltinKeywords.verifyEqual(BuiltinKeywords.groovy:146)
	at jdk.internal.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at Выполнение бизнес-плана сверка дашбордов.run(Выполнение бизнес-плана сверка дашбордов:607)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:448)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:439)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:418)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:410)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:285)
	at com.kms.katalon.core.common.CommonExecutor.accessTestCaseMainPhase(CommonExecutor.java:65)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:150)
	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:106)
	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:180)
	at TempTestSuite1736466949911.run(TempTestSuite1736466949911.groovy:35)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
)

10-01-2025T03:05:43 - [TEST_STEP][PASSED] - result = CompareDZOData(a = lR, b = lB, dZO, typeOfData, PercPlanR, PercPlanB, PercFactR, PercFactB, todaysDate, x, vidget, tabR, tabB, o1R, o1B): null

10-01-2025T03:05:43 - [TEST_STEP][PASSED] - ii2 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:43 - [TEST_STEP][FAILED] - if (verifyEqual(a, b) == false): null

10-01-2025T03:05:43 - [MESSAGE][FAILED] - Unable to verify equal between actual object 'Россети Ленэнерго (ГК)/нет данных/нет данных/нет данных/нет данных/нет данных/нет данных/нет данных/нет данных/нет данных' and expected object 'Россети Ленэнерго (ГК)/10.91/10.89/34954264/31148311/3805953/33422359/29775403/3646956/-0.02' (Root cause: com.kms.katalon.core.exception.StepFailedException: Actual object 'Россети Ленэнерго (ГК)/нет данных/нет данных/нет данных/нет данных/нет данных/нет данных/нет данных/нет данных/нет данных' and expected object 'Россети Ленэнерго (ГК)/10.91/10.89/34954264/31148311/3805953/33422359/29775403/3646956/-0.02' are not equal
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.doCall(VerifyEqualKeyword.groovy:58)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.call(VerifyEqualKeyword.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:75)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.verifyEqual(VerifyEqualKeyword.groovy:63)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.execute(VerifyEqualKeyword.groovy:44)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:74)
	at com.kms.katalon.core.keyword.BuiltinKeywords.verifyEqual(BuiltinKeywords.groovy:146)
	at jdk.internal.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at Выполнение бизнес-плана сверка дашбордов.CompareDZOData(Выполнение бизнес-плана сверка дашбордов:673)
	at Выполнение бизнес-плана сверка дашбордов.run(Выполнение бизнес-плана сверка дашбордов:608)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:448)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:439)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:418)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:410)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:285)
	at com.kms.katalon.core.common.CommonExecutor.accessTestCaseMainPhase(CommonExecutor.java:65)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:150)
	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:106)
	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:180)
	at TempTestSuite1736466949911.run(TempTestSuite1736466949911.groovy:35)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
)

10-01-2025T03:05:43 - [TEST_STEP][PASSED] - vidget = "Уровень потерь электроэнергии": null

10-01-2025T03:05:43 - [TEST_STEP][PASSED] - typeOfData = "План": null

10-01-2025T03:05:43 - [TEST_STEP][PASSED] - PercPlanR = GetPercPlanR(x = a): null

10-01-2025T03:05:43 - [TEST_STEP][PASSED] - i1 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:43 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:43 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:43 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:43 - [TEST_STEP][PASSED] - i1 = x.indexOf("/"): null

10-01-2025T03:05:43 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:43 - [TEST_STEP][PASSED] - x = x.substring(0, i1): null

10-01-2025T03:05:43 - [TEST_STEP][PASSED] - return x: null

10-01-2025T03:05:43 - [TEST_STEP][PASSED] - PercPlanB = GetPercPlanB(x = b): null

10-01-2025T03:05:43 - [TEST_STEP][PASSED] - i1 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:43 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:43 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:43 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:43 - [TEST_STEP][PASSED] - i1 = x.indexOf("/"): null

10-01-2025T03:05:43 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:43 - [TEST_STEP][PASSED] - x = x.substring(0, i1): null

10-01-2025T03:05:43 - [TEST_STEP][FAILED] - return x: null

10-01-2025T03:05:43 - [TEST_STEP][FAILED] - if (verifyEqual(PercPlanR, PercPlanB) == false): null

10-01-2025T03:05:43 - [MESSAGE][FAILED] - Unable to verify equal between actual object 'нет данных' and expected object '10.91' (Root cause: com.kms.katalon.core.exception.StepFailedException: Actual object 'нет данных' and expected object '10.91' are not equal
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.doCall(VerifyEqualKeyword.groovy:58)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.call(VerifyEqualKeyword.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:75)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.verifyEqual(VerifyEqualKeyword.groovy:63)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.execute(VerifyEqualKeyword.groovy:44)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:74)
	at com.kms.katalon.core.keyword.BuiltinKeywords.verifyEqual(BuiltinKeywords.groovy:146)
	at jdk.internal.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at Выполнение бизнес-плана сверка дашбордов.CompareDZOData(Выполнение бизнес-плана сверка дашбордов:682)
	at Выполнение бизнес-плана сверка дашбордов.run(Выполнение бизнес-плана сверка дашбордов:608)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:448)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:439)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:418)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:410)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:285)
	at com.kms.katalon.core.common.CommonExecutor.accessTestCaseMainPhase(CommonExecutor.java:65)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:150)
	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:106)
	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:180)
	at TempTestSuite1736466949911.run(TempTestSuite1736466949911.groovy:35)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
)

10-01-2025T03:05:43 - [TEST_STEP][PASSED] - result = WriteToExcel(typeOfData, todaysDate, PercPlanR, PercPlanB, PercFactR, PercFactB, x, tabR, tabB, o1R, o1B, vidget): null

10-01-2025T03:05:43 - [TEST_STEP][PASSED] - iii = dZO.indexOf("/"): null

10-01-2025T03:05:43 - [TEST_STEP][PASSED] - println(iii): null

10-01-2025T03:05:43 - [TEST_STEP][PASSED] - dZO = dZO.substring(0, iii): null

10-01-2025T03:05:43 - [TEST_STEP][PASSED] - println(dZO): null

10-01-2025T03:05:43 - [TEST_STEP][PASSED] - println(PercPlanR): null

10-01-2025T03:05:43 - [TEST_STEP][PASSED] - println(PercPlanB): null

10-01-2025T03:05:43 - [TEST_STEP][PASSED] - println(PercFactR): null

10-01-2025T03:05:43 - [TEST_STEP][PASSED] - println(PercFactB): null

10-01-2025T03:05:43 - [TEST_STEP][PASSED] - println(tabR): null

10-01-2025T03:05:43 - [TEST_STEP][PASSED] - println(tabB): null

10-01-2025T03:05:43 - [TEST_STEP][PASSED] - println(o1R): null

10-01-2025T03:05:43 - [TEST_STEP][PASSED] - println(o1B): null

10-01-2025T03:05:43 - [TEST_STEP][PASSED] - PR = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:43 - [TEST_STEP][PASSED] - FR = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:43 - [TEST_STEP][PASSED] - PB = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:43 - [TEST_STEP][PASSED] - FB = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:43 - [TEST_STEP][PASSED] - TR = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:43 - [TEST_STEP][PASSED] - TB = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:43 - [TEST_STEP][PASSED] - sheetName = "Sheet1": null

10-01-2025T03:05:43 - [TEST_STEP][PASSED] - data = findTestData("PlanFact"): null

10-01-2025T03:05:43 - [TEST_STEP][PASSED] - n = data.getRowNumbers() + 1: null

10-01-2025T03:05:43 - [TEST_STEP][PASSED] - year = todaysDate.substring(todaysDate.length() - 4, todaysDate.length()): null

10-01-2025T03:05:43 - [TEST_STEP][PASSED] - y = year.toInteger(): null

10-01-2025T03:05:43 - [TEST_STEP][PASSED] - m = getText(findTestObject("Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Фильтр Дата")): Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Фильтр Дата' is: '1, 2, 3 кв., Октябрь, Ноябрь 2024 года'

10-01-2025T03:05:43 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Фильтр Дата' is: '1, 2, 3 кв., Октябрь, Ноябрь 2024 года'

10-01-2025T03:05:43 - [TEST_STEP][PASSED] - m = m.substring(0, m.indexOf("2024")): null

10-01-2025T03:05:43 - [TEST_STEP][PASSED] - m = m.trim(): null

10-01-2025T03:05:43 - [TEST_STEP][PASSED] - dashboardName = "Выполнение бизнес-плана": null

10-01-2025T03:05:43 - [TEST_STEP][PASSED] - workbook01 = getWorkbook(excelFilePath): null

10-01-2025T03:05:43 - [TEST_STEP][PASSED] - sheet01 = getExcelSheet(workbook01, sheetName): null

10-01-2025T03:05:43 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 0, dashboardName): null

10-01-2025T03:05:43 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 1, dZO): null

10-01-2025T03:05:43 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 2, typeOfData): null

10-01-2025T03:05:43 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 3, typeOfData): null

10-01-2025T03:05:43 - [TEST_STEP][PASSED] - if (typeOfData == "План"): null

10-01-2025T03:05:43 - [TEST_STEP][PASSED] - if (PercPlanR == null): null

10-01-2025T03:05:43 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:05:43 - [TEST_STEP][PASSED] - if (PercPlanR == "нет данных"): null

10-01-2025T03:05:43 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 4, "нет данных"): null

10-01-2025T03:05:43 - [TEST_STEP][PASSED] - if (PercPlanB == null): null

10-01-2025T03:05:43 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:05:43 - [TEST_STEP][PASSED] - if (PercPlanB == "нет данных"): null

10-01-2025T03:05:43 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:05:43 - [TEST_STEP][PASSED] - PB = PercPlanB.toDouble(): null

10-01-2025T03:05:43 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 5, PB): null

10-01-2025T03:05:43 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 6, m): null

10-01-2025T03:05:43 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 7, y): null

10-01-2025T03:05:43 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 8, todaysDate): null

10-01-2025T03:05:43 - [TEST_STEP][PASSED] - n = n + 1: null

10-01-2025T03:05:43 - [TEST_STEP][PASSED] - saveWorkbook(excelFilePath, workbook01): null

10-01-2025T03:05:43 - [TEST_STEP][PASSED] - typeOfData = "Факт": null

10-01-2025T03:05:43 - [TEST_STEP][PASSED] - PercFactR = GetPercFactR(x = a): null

10-01-2025T03:05:43 - [TEST_STEP][PASSED] - i1 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:43 - [TEST_STEP][PASSED] - ii = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:43 - [TEST_STEP][PASSED] - for ([ii = 1, ii < 3, (ii++)]): null

10-01-2025T03:05:43 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:43 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:43 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:43 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:43 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:43 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:43 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:43 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:43 - [TEST_STEP][PASSED] - i1 = x.indexOf("/"): null

10-01-2025T03:05:43 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:43 - [TEST_STEP][PASSED] - x = x.substring(0, i1): null

10-01-2025T03:05:43 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:43 - [TEST_STEP][PASSED] - return x: null

10-01-2025T03:05:43 - [TEST_STEP][PASSED] - PercFactB = GetPercFactB(x = b): null

10-01-2025T03:05:43 - [TEST_STEP][PASSED] - i1 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:43 - [TEST_STEP][PASSED] - ii = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:43 - [TEST_STEP][PASSED] - for ([ii = 1, ii < 3, (ii++)]): null

10-01-2025T03:05:43 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:43 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:43 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:43 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:43 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:43 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:43 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:43 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:43 - [TEST_STEP][PASSED] - i1 = x.indexOf("/"): null

10-01-2025T03:05:43 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:43 - [TEST_STEP][PASSED] - x = x.substring(0, i1): null

10-01-2025T03:05:43 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:43 - [TEST_STEP][FAILED] - return x: null

10-01-2025T03:05:43 - [TEST_STEP][FAILED] - if (verifyEqual(PercFactR, PercFactB) == false): null

10-01-2025T03:05:43 - [MESSAGE][FAILED] - Unable to verify equal between actual object 'нет данных' and expected object '10.89' (Root cause: com.kms.katalon.core.exception.StepFailedException: Actual object 'нет данных' and expected object '10.89' are not equal
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.doCall(VerifyEqualKeyword.groovy:58)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.call(VerifyEqualKeyword.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:75)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.verifyEqual(VerifyEqualKeyword.groovy:63)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.execute(VerifyEqualKeyword.groovy:44)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:74)
	at com.kms.katalon.core.keyword.BuiltinKeywords.verifyEqual(BuiltinKeywords.groovy:146)
	at jdk.internal.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at Выполнение бизнес-плана сверка дашбордов.CompareDZOData(Выполнение бизнес-плана сверка дашбордов:693)
	at Выполнение бизнес-плана сверка дашбордов.run(Выполнение бизнес-плана сверка дашбордов:608)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:448)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:439)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:418)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:410)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:285)
	at com.kms.katalon.core.common.CommonExecutor.accessTestCaseMainPhase(CommonExecutor.java:65)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:150)
	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:106)
	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:180)
	at TempTestSuite1736466949911.run(TempTestSuite1736466949911.groovy:35)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
)

10-01-2025T03:05:43 - [TEST_STEP][PASSED] - result = WriteToExcel(typeOfData, todaysDate, PercPlanR, PercPlanB, PercFactR, PercFactB, x, tabR, tabB, o1R, o1B, vidget): null

10-01-2025T03:05:43 - [TEST_STEP][PASSED] - iii = dZO.indexOf("/"): null

10-01-2025T03:05:43 - [TEST_STEP][PASSED] - println(iii): null

10-01-2025T03:05:43 - [TEST_STEP][PASSED] - dZO = dZO.substring(0, iii): null

10-01-2025T03:05:43 - [TEST_STEP][PASSED] - println(dZO): null

10-01-2025T03:05:43 - [TEST_STEP][PASSED] - println(PercPlanR): null

10-01-2025T03:05:43 - [TEST_STEP][PASSED] - println(PercPlanB): null

10-01-2025T03:05:43 - [TEST_STEP][PASSED] - println(PercFactR): null

10-01-2025T03:05:43 - [TEST_STEP][PASSED] - println(PercFactB): null

10-01-2025T03:05:43 - [TEST_STEP][PASSED] - println(tabR): null

10-01-2025T03:05:43 - [TEST_STEP][PASSED] - println(tabB): null

10-01-2025T03:05:43 - [TEST_STEP][PASSED] - println(o1R): null

10-01-2025T03:05:43 - [TEST_STEP][PASSED] - println(o1B): null

10-01-2025T03:05:43 - [TEST_STEP][PASSED] - PR = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:43 - [TEST_STEP][PASSED] - FR = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:43 - [TEST_STEP][PASSED] - PB = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:43 - [TEST_STEP][PASSED] - FB = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:43 - [TEST_STEP][PASSED] - TR = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:43 - [TEST_STEP][PASSED] - TB = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:43 - [TEST_STEP][PASSED] - sheetName = "Sheet1": null

10-01-2025T03:05:43 - [TEST_STEP][PASSED] - data = findTestData("PlanFact"): null

10-01-2025T03:05:43 - [TEST_STEP][PASSED] - n = data.getRowNumbers() + 1: null

10-01-2025T03:05:43 - [TEST_STEP][PASSED] - year = todaysDate.substring(todaysDate.length() - 4, todaysDate.length()): null

10-01-2025T03:05:43 - [TEST_STEP][PASSED] - y = year.toInteger(): null

10-01-2025T03:05:43 - [TEST_STEP][PASSED] - m = getText(findTestObject("Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Фильтр Дата")): Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Фильтр Дата' is: '1, 2, 3 кв., Октябрь, Ноябрь 2024 года'

10-01-2025T03:05:44 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Фильтр Дата' is: '1, 2, 3 кв., Октябрь, Ноябрь 2024 года'

10-01-2025T03:05:44 - [TEST_STEP][PASSED] - m = m.substring(0, m.indexOf("2024")): null

10-01-2025T03:05:44 - [TEST_STEP][PASSED] - m = m.trim(): null

10-01-2025T03:05:44 - [TEST_STEP][PASSED] - dashboardName = "Выполнение бизнес-плана": null

10-01-2025T03:05:44 - [TEST_STEP][PASSED] - workbook01 = getWorkbook(excelFilePath): null

10-01-2025T03:05:44 - [TEST_STEP][PASSED] - sheet01 = getExcelSheet(workbook01, sheetName): null

10-01-2025T03:05:44 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 0, dashboardName): null

10-01-2025T03:05:44 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 1, dZO): null

10-01-2025T03:05:44 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 2, typeOfData): null

10-01-2025T03:05:44 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 3, typeOfData): null

10-01-2025T03:05:44 - [TEST_STEP][PASSED] - if (typeOfData == "План"): null

10-01-2025T03:05:44 - [TEST_STEP][PASSED] - else if (typeOfData == "Факт"): null

10-01-2025T03:05:44 - [TEST_STEP][PASSED] - if (PercFactR == null): null

10-01-2025T03:05:44 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:05:44 - [TEST_STEP][PASSED] - if (PercFactR == "нет данных"): null

10-01-2025T03:05:44 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 4, "нет данных"): null

10-01-2025T03:05:44 - [TEST_STEP][PASSED] - if (PercFactB == null): null

10-01-2025T03:05:44 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:05:44 - [TEST_STEP][PASSED] - if (PercFactB == "нет данных"): null

10-01-2025T03:05:44 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:05:44 - [TEST_STEP][PASSED] - FB = PercFactB.toDouble(): null

10-01-2025T03:05:44 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 5, FB): null

10-01-2025T03:05:44 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 6, m): null

10-01-2025T03:05:44 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 7, y): null

10-01-2025T03:05:44 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 8, todaysDate): null

10-01-2025T03:05:44 - [TEST_STEP][PASSED] - n = n + 1: null

10-01-2025T03:05:44 - [TEST_STEP][PASSED] - saveWorkbook(excelFilePath, workbook01): null

10-01-2025T03:05:44 - [TEST_STEP][PASSED] - vidget = "Показатели баланса электроэнергии по ДЗО – Факт": null

10-01-2025T03:05:44 - [TEST_STEP][PASSED] - typeOfData = "Факт Отпуск в сеть": null

10-01-2025T03:05:44 - [TEST_STEP][PASSED] - tabR = GetOvSFactR(x = a): null

10-01-2025T03:05:44 - [TEST_STEP][PASSED] - i1 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:44 - [TEST_STEP][PASSED] - ii = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:44 - [TEST_STEP][PASSED] - for ([ii = 1, ii < 4, (ii++)]): null

10-01-2025T03:05:44 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:44 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:44 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:44 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:44 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:44 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:44 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:44 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:44 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:44 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:44 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:44 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:44 - [TEST_STEP][PASSED] - i1 = x.indexOf("/"): null

10-01-2025T03:05:44 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:44 - [TEST_STEP][PASSED] - x = x.substring(0, i1): null

10-01-2025T03:05:44 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:44 - [TEST_STEP][PASSED] - return x: null

10-01-2025T03:05:44 - [TEST_STEP][PASSED] - tabB = GetOvSFactB(x = b): null

10-01-2025T03:05:44 - [TEST_STEP][PASSED] - i1 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:44 - [TEST_STEP][PASSED] - ii = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:44 - [TEST_STEP][PASSED] - for ([ii = 1, ii < 4, (ii++)]): null

10-01-2025T03:05:44 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:44 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:44 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:44 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:44 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:44 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:44 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:44 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:44 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:44 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:44 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:44 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:44 - [TEST_STEP][PASSED] - i1 = x.indexOf("/"): null

10-01-2025T03:05:44 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:44 - [TEST_STEP][PASSED] - x = x.substring(0, i1): null

10-01-2025T03:05:44 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:44 - [TEST_STEP][FAILED] - return x: null

10-01-2025T03:05:44 - [TEST_STEP][FAILED] - if (verifyEqual(tabR, tabB) == false): null

10-01-2025T03:05:44 - [MESSAGE][FAILED] - Unable to verify equal between actual object 'нет данных' and expected object '34954264' (Root cause: com.kms.katalon.core.exception.StepFailedException: Actual object 'нет данных' and expected object '34954264' are not equal
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.doCall(VerifyEqualKeyword.groovy:58)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.call(VerifyEqualKeyword.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:75)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.verifyEqual(VerifyEqualKeyword.groovy:63)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.execute(VerifyEqualKeyword.groovy:44)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:74)
	at com.kms.katalon.core.keyword.BuiltinKeywords.verifyEqual(BuiltinKeywords.groovy:146)
	at jdk.internal.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at Выполнение бизнес-плана сверка дашбордов.CompareDZOData(Выполнение бизнес-плана сверка дашбордов:706)
	at Выполнение бизнес-плана сверка дашбордов.run(Выполнение бизнес-плана сверка дашбордов:608)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:448)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:439)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:418)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:410)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:285)
	at com.kms.katalon.core.common.CommonExecutor.accessTestCaseMainPhase(CommonExecutor.java:65)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:150)
	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:106)
	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:180)
	at TempTestSuite1736466949911.run(TempTestSuite1736466949911.groovy:35)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
)

10-01-2025T03:05:44 - [TEST_STEP][PASSED] - result = WriteToExcel(typeOfData, todaysDate, PercPlanR, PercPlanB, PercFactR, PercFactB, x, tabR, tabB, o1R, o1B, vidget): null

10-01-2025T03:05:44 - [TEST_STEP][PASSED] - iii = dZO.indexOf("/"): null

10-01-2025T03:05:44 - [TEST_STEP][PASSED] - println(iii): null

10-01-2025T03:05:44 - [TEST_STEP][PASSED] - dZO = dZO.substring(0, iii): null

10-01-2025T03:05:44 - [TEST_STEP][PASSED] - println(dZO): null

10-01-2025T03:05:44 - [TEST_STEP][PASSED] - println(PercPlanR): null

10-01-2025T03:05:44 - [TEST_STEP][PASSED] - println(PercPlanB): null

10-01-2025T03:05:44 - [TEST_STEP][PASSED] - println(PercFactR): null

10-01-2025T03:05:44 - [TEST_STEP][PASSED] - println(PercFactB): null

10-01-2025T03:05:44 - [TEST_STEP][PASSED] - println(tabR): null

10-01-2025T03:05:44 - [TEST_STEP][PASSED] - println(tabB): null

10-01-2025T03:05:44 - [TEST_STEP][PASSED] - println(o1R): null

10-01-2025T03:05:44 - [TEST_STEP][PASSED] - println(o1B): null

10-01-2025T03:05:44 - [TEST_STEP][PASSED] - PR = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:44 - [TEST_STEP][PASSED] - FR = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:44 - [TEST_STEP][PASSED] - PB = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:44 - [TEST_STEP][PASSED] - FB = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:44 - [TEST_STEP][PASSED] - TR = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:44 - [TEST_STEP][PASSED] - TB = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:44 - [TEST_STEP][PASSED] - sheetName = "Sheet1": null

10-01-2025T03:05:44 - [TEST_STEP][PASSED] - data = findTestData("PlanFact"): null

10-01-2025T03:05:44 - [TEST_STEP][PASSED] - n = data.getRowNumbers() + 1: null

10-01-2025T03:05:44 - [TEST_STEP][PASSED] - year = todaysDate.substring(todaysDate.length() - 4, todaysDate.length()): null

10-01-2025T03:05:44 - [TEST_STEP][PASSED] - y = year.toInteger(): null

10-01-2025T03:05:44 - [TEST_STEP][PASSED] - m = getText(findTestObject("Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Фильтр Дата")): Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Фильтр Дата' is: '1, 2, 3 кв., Октябрь, Ноябрь 2024 года'

10-01-2025T03:05:44 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Фильтр Дата' is: '1, 2, 3 кв., Октябрь, Ноябрь 2024 года'

10-01-2025T03:05:44 - [TEST_STEP][PASSED] - m = m.substring(0, m.indexOf("2024")): null

10-01-2025T03:05:44 - [TEST_STEP][PASSED] - m = m.trim(): null

10-01-2025T03:05:44 - [TEST_STEP][PASSED] - dashboardName = "Выполнение бизнес-плана": null

10-01-2025T03:05:44 - [TEST_STEP][PASSED] - workbook01 = getWorkbook(excelFilePath): null

10-01-2025T03:05:44 - [TEST_STEP][PASSED] - sheet01 = getExcelSheet(workbook01, sheetName): null

10-01-2025T03:05:44 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 0, dashboardName): null

10-01-2025T03:05:44 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 1, dZO): null

10-01-2025T03:05:44 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 2, typeOfData): null

10-01-2025T03:05:44 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 3, typeOfData): null

10-01-2025T03:05:44 - [TEST_STEP][PASSED] - if (typeOfData == "План"): null

10-01-2025T03:05:44 - [TEST_STEP][PASSED] - else if (typeOfData == "Факт"): null

10-01-2025T03:05:44 - [TEST_STEP][PASSED] - else if (vidget.contains("электроэнергии") == true): null

10-01-2025T03:05:44 - [TEST_STEP][PASSED] - if (tabR == null): null

10-01-2025T03:05:44 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:05:44 - [TEST_STEP][PASSED] - if (tabR == "нет данных"): null

10-01-2025T03:05:44 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 4, "нет данных"): null

10-01-2025T03:05:44 - [TEST_STEP][PASSED] - if (tabB == null): null

10-01-2025T03:05:44 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:05:44 - [TEST_STEP][PASSED] - if (tabB == "нет данных"): null

10-01-2025T03:05:44 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:05:44 - [TEST_STEP][PASSED] - TB = tabB.toInteger(): null

10-01-2025T03:05:44 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 5, TB): null

10-01-2025T03:05:44 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 6, m): null

10-01-2025T03:05:44 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 7, y): null

10-01-2025T03:05:44 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 8, todaysDate): null

10-01-2025T03:05:44 - [TEST_STEP][PASSED] - n = n + 1: null

10-01-2025T03:05:44 - [TEST_STEP][PASSED] - saveWorkbook(excelFilePath, workbook01): null

10-01-2025T03:05:45 - [TEST_STEP][PASSED] - typeOfData = "Факт Отпуск из сети": null

10-01-2025T03:05:45 - [TEST_STEP][PASSED] - tabR = GetOiSFactR(x = a): null

10-01-2025T03:05:45 - [TEST_STEP][PASSED] - i1 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:45 - [TEST_STEP][PASSED] - ii = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:45 - [TEST_STEP][PASSED] - for ([ii = 1, ii < 5, (ii++)]): null

10-01-2025T03:05:45 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:45 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:45 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:45 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:45 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:45 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:45 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:45 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:45 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:45 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:45 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:45 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:45 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:45 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:45 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:45 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:45 - [TEST_STEP][PASSED] - i1 = x.indexOf("/"): null

10-01-2025T03:05:45 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:45 - [TEST_STEP][PASSED] - x = x.substring(0, i1): null

10-01-2025T03:05:45 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:45 - [TEST_STEP][PASSED] - return x: null

10-01-2025T03:05:45 - [TEST_STEP][PASSED] - tabB = GetOiSFactB(x = b): null

10-01-2025T03:05:45 - [TEST_STEP][PASSED] - i1 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:45 - [TEST_STEP][PASSED] - ii = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:45 - [TEST_STEP][PASSED] - for ([ii = 1, ii < 5, (ii++)]): null

10-01-2025T03:05:45 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:45 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:45 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:45 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:45 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:45 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:45 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:45 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:45 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:45 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:45 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:45 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:45 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:45 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:45 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:45 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:45 - [TEST_STEP][PASSED] - i1 = x.indexOf("/"): null

10-01-2025T03:05:45 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:50 - [TEST_STEP][PASSED] - x = x.substring(0, i1): null

10-01-2025T03:05:50 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:50 - [TEST_STEP][FAILED] - return x: null

10-01-2025T03:05:50 - [TEST_STEP][FAILED] - if (verifyEqual(tabR, tabB) == false): null

10-01-2025T03:05:50 - [MESSAGE][FAILED] - Unable to verify equal between actual object 'нет данных' and expected object '31148311' (Root cause: com.kms.katalon.core.exception.StepFailedException: Actual object 'нет данных' and expected object '31148311' are not equal
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.doCall(VerifyEqualKeyword.groovy:58)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.call(VerifyEqualKeyword.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:75)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.verifyEqual(VerifyEqualKeyword.groovy:63)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.execute(VerifyEqualKeyword.groovy:44)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:74)
	at com.kms.katalon.core.keyword.BuiltinKeywords.verifyEqual(BuiltinKeywords.groovy:146)
	at jdk.internal.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at Выполнение бизнес-плана сверка дашбордов.CompareDZOData(Выполнение бизнес-плана сверка дашбордов:717)
	at Выполнение бизнес-плана сверка дашбордов.run(Выполнение бизнес-плана сверка дашбордов:608)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:448)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:439)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:418)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:410)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:285)
	at com.kms.katalon.core.common.CommonExecutor.accessTestCaseMainPhase(CommonExecutor.java:65)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:150)
	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:106)
	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:180)
	at TempTestSuite1736466949911.run(TempTestSuite1736466949911.groovy:35)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
)

10-01-2025T03:05:50 - [TEST_STEP][PASSED] - result = WriteToExcel(typeOfData, todaysDate, PercPlanR, PercPlanB, PercFactR, PercFactB, x, tabR, tabB, o1R, o1B, vidget): null

10-01-2025T03:05:50 - [TEST_STEP][PASSED] - iii = dZO.indexOf("/"): null

10-01-2025T03:05:50 - [TEST_STEP][PASSED] - println(iii): null

10-01-2025T03:05:50 - [TEST_STEP][PASSED] - dZO = dZO.substring(0, iii): null

10-01-2025T03:05:50 - [TEST_STEP][PASSED] - println(dZO): null

10-01-2025T03:05:50 - [TEST_STEP][PASSED] - println(PercPlanR): null

10-01-2025T03:05:50 - [TEST_STEP][PASSED] - println(PercPlanB): null

10-01-2025T03:05:50 - [TEST_STEP][PASSED] - println(PercFactR): null

10-01-2025T03:05:50 - [TEST_STEP][PASSED] - println(PercFactB): null

10-01-2025T03:05:50 - [TEST_STEP][PASSED] - println(tabR): null

10-01-2025T03:05:50 - [TEST_STEP][PASSED] - println(tabB): null

10-01-2025T03:05:50 - [TEST_STEP][PASSED] - println(o1R): null

10-01-2025T03:05:50 - [TEST_STEP][PASSED] - println(o1B): null

10-01-2025T03:05:50 - [TEST_STEP][PASSED] - PR = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:50 - [TEST_STEP][PASSED] - FR = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:50 - [TEST_STEP][PASSED] - PB = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:50 - [TEST_STEP][PASSED] - FB = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:50 - [TEST_STEP][PASSED] - TR = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:50 - [TEST_STEP][PASSED] - TB = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:50 - [TEST_STEP][PASSED] - sheetName = "Sheet1": null

10-01-2025T03:05:50 - [TEST_STEP][PASSED] - data = findTestData("PlanFact"): null

10-01-2025T03:05:50 - [TEST_STEP][PASSED] - n = data.getRowNumbers() + 1: null

10-01-2025T03:05:50 - [TEST_STEP][PASSED] - year = todaysDate.substring(todaysDate.length() - 4, todaysDate.length()): null

10-01-2025T03:05:50 - [TEST_STEP][PASSED] - y = year.toInteger(): null

10-01-2025T03:05:50 - [TEST_STEP][PASSED] - m = getText(findTestObject("Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Фильтр Дата")): Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Фильтр Дата' is: '1, 2, 3 кв., Октябрь, Ноябрь 2024 года'

10-01-2025T03:05:50 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Фильтр Дата' is: '1, 2, 3 кв., Октябрь, Ноябрь 2024 года'

10-01-2025T03:05:50 - [TEST_STEP][PASSED] - m = m.substring(0, m.indexOf("2024")): null

10-01-2025T03:05:50 - [TEST_STEP][PASSED] - m = m.trim(): null

10-01-2025T03:05:50 - [TEST_STEP][PASSED] - dashboardName = "Выполнение бизнес-плана": null

10-01-2025T03:05:50 - [TEST_STEP][PASSED] - workbook01 = getWorkbook(excelFilePath): null

10-01-2025T03:05:50 - [TEST_STEP][PASSED] - sheet01 = getExcelSheet(workbook01, sheetName): null

10-01-2025T03:05:50 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 0, dashboardName): null

10-01-2025T03:05:50 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 1, dZO): null

10-01-2025T03:05:50 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 2, typeOfData): null

10-01-2025T03:05:50 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 3, typeOfData): null

10-01-2025T03:05:50 - [TEST_STEP][PASSED] - if (typeOfData == "План"): null

10-01-2025T03:05:50 - [TEST_STEP][PASSED] - else if (typeOfData == "Факт"): null

10-01-2025T03:05:50 - [TEST_STEP][PASSED] - else if (vidget.contains("электроэнергии") == true): null

10-01-2025T03:05:50 - [TEST_STEP][PASSED] - if (tabR == null): null

10-01-2025T03:05:50 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:05:50 - [TEST_STEP][PASSED] - if (tabR == "нет данных"): null

10-01-2025T03:05:50 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 4, "нет данных"): null

10-01-2025T03:05:50 - [TEST_STEP][PASSED] - if (tabB == null): null

10-01-2025T03:05:50 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:05:50 - [TEST_STEP][PASSED] - if (tabB == "нет данных"): null

10-01-2025T03:05:50 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:05:50 - [TEST_STEP][PASSED] - TB = tabB.toInteger(): null

10-01-2025T03:05:50 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 5, TB): null

10-01-2025T03:05:50 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 6, m): null

10-01-2025T03:05:50 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 7, y): null

10-01-2025T03:05:50 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 8, todaysDate): null

10-01-2025T03:05:50 - [TEST_STEP][PASSED] - n = n + 1: null

10-01-2025T03:05:50 - [TEST_STEP][PASSED] - saveWorkbook(excelFilePath, workbook01): null

10-01-2025T03:05:51 - [TEST_STEP][PASSED] - typeOfData = "Факт Потери": null

10-01-2025T03:05:51 - [TEST_STEP][PASSED] - tabR = GetPFactR(x = a): null

10-01-2025T03:05:51 - [TEST_STEP][PASSED] - i1 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:51 - [TEST_STEP][PASSED] - ii = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:51 - [TEST_STEP][PASSED] - for ([ii = 1, ii < 6, (ii++)]): null

10-01-2025T03:05:51 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:51 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:51 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:51 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:51 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:51 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:51 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:51 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:51 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:51 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:51 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:51 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:51 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:51 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:51 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:51 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:51 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:51 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:51 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:51 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:51 - [TEST_STEP][PASSED] - i1 = x.indexOf("/"): null

10-01-2025T03:05:51 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:51 - [TEST_STEP][PASSED] - x = x.substring(0, i1): null

10-01-2025T03:05:51 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:51 - [TEST_STEP][PASSED] - return x: null

10-01-2025T03:05:51 - [TEST_STEP][PASSED] - tabB = GetPFactB(x = b): null

10-01-2025T03:05:51 - [TEST_STEP][PASSED] - i1 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:51 - [TEST_STEP][PASSED] - ii = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:51 - [TEST_STEP][PASSED] - for ([ii = 1, ii < 6, (ii++)]): null

10-01-2025T03:05:51 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:51 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:51 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:51 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:51 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:51 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:51 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:51 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:51 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:51 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:51 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:51 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:51 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:51 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:51 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:51 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:51 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:51 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:51 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:51 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:51 - [TEST_STEP][PASSED] - i1 = x.indexOf("/"): null

10-01-2025T03:05:51 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:51 - [TEST_STEP][PASSED] - x = x.substring(0, i1): null

10-01-2025T03:05:51 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:51 - [TEST_STEP][FAILED] - return x: null

10-01-2025T03:05:51 - [TEST_STEP][PASSED] - println(tabR + "/" + tabB): null

10-01-2025T03:05:51 - [TEST_STEP][FAILED] - if (verifyEqual(tabR, tabB) == false): null

10-01-2025T03:05:51 - [MESSAGE][FAILED] - Unable to verify equal between actual object 'нет данных' and expected object '3805953' (Root cause: com.kms.katalon.core.exception.StepFailedException: Actual object 'нет данных' and expected object '3805953' are not equal
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.doCall(VerifyEqualKeyword.groovy:58)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.call(VerifyEqualKeyword.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:75)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.verifyEqual(VerifyEqualKeyword.groovy:63)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.execute(VerifyEqualKeyword.groovy:44)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:74)
	at com.kms.katalon.core.keyword.BuiltinKeywords.verifyEqual(BuiltinKeywords.groovy:146)
	at jdk.internal.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at Выполнение бизнес-плана сверка дашбордов.CompareDZOData(Выполнение бизнес-плана сверка дашбордов:730)
	at Выполнение бизнес-плана сверка дашбордов.run(Выполнение бизнес-плана сверка дашбордов:608)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:448)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:439)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:418)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:410)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:285)
	at com.kms.katalon.core.common.CommonExecutor.accessTestCaseMainPhase(CommonExecutor.java:65)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:150)
	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:106)
	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:180)
	at TempTestSuite1736466949911.run(TempTestSuite1736466949911.groovy:35)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
)

10-01-2025T03:05:51 - [TEST_STEP][PASSED] - result = WriteToExcel(typeOfData, todaysDate, PercPlanR, PercPlanB, PercFactR, PercFactB, x, tabR, tabB, o1R, o1B, vidget): null

10-01-2025T03:05:51 - [TEST_STEP][PASSED] - iii = dZO.indexOf("/"): null

10-01-2025T03:05:51 - [TEST_STEP][PASSED] - println(iii): null

10-01-2025T03:05:51 - [TEST_STEP][PASSED] - dZO = dZO.substring(0, iii): null

10-01-2025T03:05:51 - [TEST_STEP][PASSED] - println(dZO): null

10-01-2025T03:05:51 - [TEST_STEP][PASSED] - println(PercPlanR): null

10-01-2025T03:05:51 - [TEST_STEP][PASSED] - println(PercPlanB): null

10-01-2025T03:05:51 - [TEST_STEP][PASSED] - println(PercFactR): null

10-01-2025T03:05:51 - [TEST_STEP][PASSED] - println(PercFactB): null

10-01-2025T03:05:51 - [TEST_STEP][PASSED] - println(tabR): null

10-01-2025T03:05:51 - [TEST_STEP][PASSED] - println(tabB): null

10-01-2025T03:05:51 - [TEST_STEP][PASSED] - println(o1R): null

10-01-2025T03:05:51 - [TEST_STEP][PASSED] - println(o1B): null

10-01-2025T03:05:51 - [TEST_STEP][PASSED] - PR = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:51 - [TEST_STEP][PASSED] - FR = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:51 - [TEST_STEP][PASSED] - PB = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:51 - [TEST_STEP][PASSED] - FB = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:51 - [TEST_STEP][PASSED] - TR = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:51 - [TEST_STEP][PASSED] - TB = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:51 - [TEST_STEP][PASSED] - sheetName = "Sheet1": null

10-01-2025T03:05:51 - [TEST_STEP][PASSED] - data = findTestData("PlanFact"): null

10-01-2025T03:05:51 - [TEST_STEP][PASSED] - n = data.getRowNumbers() + 1: null

10-01-2025T03:05:51 - [TEST_STEP][PASSED] - year = todaysDate.substring(todaysDate.length() - 4, todaysDate.length()): null

10-01-2025T03:05:51 - [TEST_STEP][PASSED] - y = year.toInteger(): null

10-01-2025T03:05:51 - [TEST_STEP][PASSED] - m = getText(findTestObject("Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Фильтр Дата")): Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Фильтр Дата' is: '1, 2, 3 кв., Октябрь, Ноябрь 2024 года'

10-01-2025T03:05:51 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Фильтр Дата' is: '1, 2, 3 кв., Октябрь, Ноябрь 2024 года'

10-01-2025T03:05:51 - [TEST_STEP][PASSED] - m = m.substring(0, m.indexOf("2024")): null

10-01-2025T03:05:51 - [TEST_STEP][PASSED] - m = m.trim(): null

10-01-2025T03:05:51 - [TEST_STEP][PASSED] - dashboardName = "Выполнение бизнес-плана": null

10-01-2025T03:05:51 - [TEST_STEP][PASSED] - workbook01 = getWorkbook(excelFilePath): null

10-01-2025T03:05:51 - [TEST_STEP][PASSED] - sheet01 = getExcelSheet(workbook01, sheetName): null

10-01-2025T03:05:51 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 0, dashboardName): null

10-01-2025T03:05:51 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 1, dZO): null

10-01-2025T03:05:51 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 2, typeOfData): null

10-01-2025T03:05:51 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 3, typeOfData): null

10-01-2025T03:05:51 - [TEST_STEP][PASSED] - if (typeOfData == "План"): null

10-01-2025T03:05:51 - [TEST_STEP][PASSED] - else if (typeOfData == "Факт"): null

10-01-2025T03:05:51 - [TEST_STEP][PASSED] - else if (vidget.contains("электроэнергии") == true): null

10-01-2025T03:05:51 - [TEST_STEP][PASSED] - if (tabR == null): null

10-01-2025T03:05:51 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:05:51 - [TEST_STEP][PASSED] - if (tabR == "нет данных"): null

10-01-2025T03:05:51 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 4, "нет данных"): null

10-01-2025T03:05:51 - [TEST_STEP][PASSED] - if (tabB == null): null

10-01-2025T03:05:51 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:05:51 - [TEST_STEP][PASSED] - if (tabB == "нет данных"): null

10-01-2025T03:05:51 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:05:51 - [TEST_STEP][PASSED] - TB = tabB.toInteger(): null

10-01-2025T03:05:51 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 5, TB): null

10-01-2025T03:05:51 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 6, m): null

10-01-2025T03:05:51 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 7, y): null

10-01-2025T03:05:51 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 8, todaysDate): null

10-01-2025T03:05:51 - [TEST_STEP][PASSED] - n = n + 1: null

10-01-2025T03:05:51 - [TEST_STEP][PASSED] - saveWorkbook(excelFilePath, workbook01): null

10-01-2025T03:05:51 - [TEST_STEP][PASSED] - vidget = "Показатели баланса электроэнергии по ДЗО – План": null

10-01-2025T03:05:51 - [TEST_STEP][PASSED] - typeOfData = "План Отпуск в сеть": null

10-01-2025T03:05:51 - [TEST_STEP][PASSED] - tabR = GetOvSPlanR(x = a): null

10-01-2025T03:05:51 - [TEST_STEP][PASSED] - i1 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:51 - [TEST_STEP][PASSED] - ii = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:51 - [TEST_STEP][PASSED] - for ([ii = 1, ii < 7, (ii++)]): null

10-01-2025T03:05:51 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:51 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:51 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:51 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:51 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:51 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:51 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:51 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:51 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:51 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:51 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:51 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:51 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:51 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:51 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:51 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:51 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:51 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:51 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:51 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:51 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:51 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:51 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:51 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:51 - [TEST_STEP][PASSED] - i1 = x.indexOf("/"): null

10-01-2025T03:05:51 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:51 - [TEST_STEP][PASSED] - x = x.substring(0, i1): null

10-01-2025T03:05:51 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:51 - [TEST_STEP][PASSED] - return x: null

10-01-2025T03:05:51 - [TEST_STEP][PASSED] - tabB = GetOvSPlanB(x = b): null

10-01-2025T03:05:51 - [TEST_STEP][PASSED] - i1 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:51 - [TEST_STEP][PASSED] - ii = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:51 - [TEST_STEP][PASSED] - for ([ii = 1, ii < 7, (ii++)]): null

10-01-2025T03:05:51 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:51 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:51 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:51 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:51 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:51 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:51 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:51 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:51 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:51 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:51 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:51 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:51 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:51 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:51 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:51 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:51 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:51 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:51 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:51 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:52 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:52 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:52 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:52 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:52 - [TEST_STEP][PASSED] - i1 = x.indexOf("/"): null

10-01-2025T03:05:52 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:52 - [TEST_STEP][PASSED] - x = x.substring(0, i1): null

10-01-2025T03:05:52 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:52 - [TEST_STEP][FAILED] - return x: null

10-01-2025T03:05:52 - [TEST_STEP][PASSED] - println(tabR + "/" + tabB): null

10-01-2025T03:05:52 - [TEST_STEP][FAILED] - if (verifyEqual(PercFactR, PercFactB) == false): null

10-01-2025T03:05:52 - [MESSAGE][FAILED] - Unable to verify equal between actual object 'нет данных' and expected object '10.89' (Root cause: com.kms.katalon.core.exception.StepFailedException: Actual object 'нет данных' and expected object '10.89' are not equal
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.doCall(VerifyEqualKeyword.groovy:58)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.call(VerifyEqualKeyword.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:75)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.verifyEqual(VerifyEqualKeyword.groovy:63)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.execute(VerifyEqualKeyword.groovy:44)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:74)
	at com.kms.katalon.core.keyword.BuiltinKeywords.verifyEqual(BuiltinKeywords.groovy:146)
	at jdk.internal.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at Выполнение бизнес-плана сверка дашбордов.CompareDZOData(Выполнение бизнес-плана сверка дашбордов:745)
	at Выполнение бизнес-плана сверка дашбордов.run(Выполнение бизнес-плана сверка дашбордов:608)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:448)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:439)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:418)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:410)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:285)
	at com.kms.katalon.core.common.CommonExecutor.accessTestCaseMainPhase(CommonExecutor.java:65)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:150)
	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:106)
	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:180)
	at TempTestSuite1736466949911.run(TempTestSuite1736466949911.groovy:35)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
)

10-01-2025T03:05:52 - [TEST_STEP][PASSED] - result = WriteToExcel(typeOfData, todaysDate, PercPlanR, PercPlanB, PercFactR, PercFactB, x, tabR, tabB, o1R, o1B, vidget): null

10-01-2025T03:05:52 - [TEST_STEP][PASSED] - iii = dZO.indexOf("/"): null

10-01-2025T03:05:52 - [TEST_STEP][PASSED] - println(iii): null

10-01-2025T03:05:52 - [TEST_STEP][PASSED] - dZO = dZO.substring(0, iii): null

10-01-2025T03:05:52 - [TEST_STEP][PASSED] - println(dZO): null

10-01-2025T03:05:52 - [TEST_STEP][PASSED] - println(PercPlanR): null

10-01-2025T03:05:52 - [TEST_STEP][PASSED] - println(PercPlanB): null

10-01-2025T03:05:52 - [TEST_STEP][PASSED] - println(PercFactR): null

10-01-2025T03:05:52 - [TEST_STEP][PASSED] - println(PercFactB): null

10-01-2025T03:05:52 - [TEST_STEP][PASSED] - println(tabR): null

10-01-2025T03:05:52 - [TEST_STEP][PASSED] - println(tabB): null

10-01-2025T03:05:52 - [TEST_STEP][PASSED] - println(o1R): null

10-01-2025T03:05:52 - [TEST_STEP][PASSED] - println(o1B): null

10-01-2025T03:05:52 - [TEST_STEP][PASSED] - PR = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:52 - [TEST_STEP][PASSED] - FR = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:52 - [TEST_STEP][PASSED] - PB = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:52 - [TEST_STEP][PASSED] - FB = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:52 - [TEST_STEP][PASSED] - TR = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:52 - [TEST_STEP][PASSED] - TB = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:52 - [TEST_STEP][PASSED] - sheetName = "Sheet1": null

10-01-2025T03:05:52 - [TEST_STEP][PASSED] - data = findTestData("PlanFact"): null

10-01-2025T03:05:52 - [TEST_STEP][PASSED] - n = data.getRowNumbers() + 1: null

10-01-2025T03:05:52 - [TEST_STEP][PASSED] - year = todaysDate.substring(todaysDate.length() - 4, todaysDate.length()): null

10-01-2025T03:05:52 - [TEST_STEP][PASSED] - y = year.toInteger(): null

10-01-2025T03:05:52 - [TEST_STEP][PASSED] - m = getText(findTestObject("Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Фильтр Дата")): Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Фильтр Дата' is: '1, 2, 3 кв., Октябрь, Ноябрь 2024 года'

10-01-2025T03:05:52 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Фильтр Дата' is: '1, 2, 3 кв., Октябрь, Ноябрь 2024 года'

10-01-2025T03:05:52 - [TEST_STEP][PASSED] - m = m.substring(0, m.indexOf("2024")): null

10-01-2025T03:05:52 - [TEST_STEP][PASSED] - m = m.trim(): null

10-01-2025T03:05:52 - [TEST_STEP][PASSED] - dashboardName = "Выполнение бизнес-плана": null

10-01-2025T03:05:52 - [TEST_STEP][PASSED] - workbook01 = getWorkbook(excelFilePath): null

10-01-2025T03:05:52 - [TEST_STEP][PASSED] - sheet01 = getExcelSheet(workbook01, sheetName): null

10-01-2025T03:05:52 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 0, dashboardName): null

10-01-2025T03:05:52 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 1, dZO): null

10-01-2025T03:05:52 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 2, typeOfData): null

10-01-2025T03:05:52 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 3, typeOfData): null

10-01-2025T03:05:52 - [TEST_STEP][PASSED] - if (typeOfData == "План"): null

10-01-2025T03:05:52 - [TEST_STEP][PASSED] - else if (typeOfData == "Факт"): null

10-01-2025T03:05:52 - [TEST_STEP][PASSED] - else if (vidget.contains("электроэнергии") == true): null

10-01-2025T03:05:52 - [TEST_STEP][PASSED] - if (tabR == null): null

10-01-2025T03:05:52 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:05:52 - [TEST_STEP][PASSED] - if (tabR == "нет данных"): null

10-01-2025T03:05:52 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 4, "нет данных"): null

10-01-2025T03:05:52 - [TEST_STEP][PASSED] - if (tabB == null): null

10-01-2025T03:05:52 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:05:52 - [TEST_STEP][PASSED] - if (tabB == "нет данных"): null

10-01-2025T03:05:52 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:05:52 - [TEST_STEP][PASSED] - TB = tabB.toInteger(): null

10-01-2025T03:05:52 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 5, TB): null

10-01-2025T03:05:52 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 6, m): null

10-01-2025T03:05:52 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 7, y): null

10-01-2025T03:05:52 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 8, todaysDate): null

10-01-2025T03:05:52 - [TEST_STEP][PASSED] - n = n + 1: null

10-01-2025T03:05:52 - [TEST_STEP][PASSED] - saveWorkbook(excelFilePath, workbook01): null

10-01-2025T03:05:52 - [TEST_STEP][PASSED] - typeOfData = "План Отпуск из сети": null

10-01-2025T03:05:52 - [TEST_STEP][PASSED] - tabR = GetOiSPlanR(x = a): null

10-01-2025T03:05:52 - [TEST_STEP][PASSED] - i1 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:52 - [TEST_STEP][PASSED] - ii = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:52 - [TEST_STEP][PASSED] - for ([ii = 1, ii < 8, (ii++)]): null

10-01-2025T03:05:52 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:52 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:52 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:52 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:52 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:52 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:52 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:52 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:52 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:52 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:52 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:52 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:52 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:52 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:52 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:52 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:52 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:52 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:52 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:52 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:52 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:52 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:52 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:52 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:52 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:52 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:52 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:52 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:52 - [TEST_STEP][PASSED] - i1 = x.indexOf("/"): null

10-01-2025T03:05:52 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:52 - [TEST_STEP][PASSED] - x = x.substring(0, i1): null

10-01-2025T03:05:52 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:52 - [TEST_STEP][PASSED] - return x: null

10-01-2025T03:05:52 - [TEST_STEP][PASSED] - tabB = GetOiSPlanB(x = b): null

10-01-2025T03:05:52 - [TEST_STEP][PASSED] - i1 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:52 - [TEST_STEP][PASSED] - ii = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:52 - [TEST_STEP][PASSED] - for ([ii = 1, ii < 8, (ii++)]): null

10-01-2025T03:05:52 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:52 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:52 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:52 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:52 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:52 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:52 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:52 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:52 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:52 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:52 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:52 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:52 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:52 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:52 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:52 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:52 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:52 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:52 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:52 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:52 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:52 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:52 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:52 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:52 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:52 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:52 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:52 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:52 - [TEST_STEP][PASSED] - i1 = x.indexOf("/"): null

10-01-2025T03:05:52 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:52 - [TEST_STEP][PASSED] - x = x.substring(0, i1): null

10-01-2025T03:05:52 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:52 - [TEST_STEP][FAILED] - return x: null

10-01-2025T03:05:52 - [TEST_STEP][PASSED] - println(tabR + "/" + tabB): null

10-01-2025T03:05:52 - [TEST_STEP][FAILED] - if (verifyEqual(PercFactR, PercFactB) == false): null

10-01-2025T03:05:52 - [MESSAGE][FAILED] - Unable to verify equal between actual object 'нет данных' and expected object '10.89' (Root cause: com.kms.katalon.core.exception.StepFailedException: Actual object 'нет данных' and expected object '10.89' are not equal
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.doCall(VerifyEqualKeyword.groovy:58)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.call(VerifyEqualKeyword.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:75)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.verifyEqual(VerifyEqualKeyword.groovy:63)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.execute(VerifyEqualKeyword.groovy:44)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:74)
	at com.kms.katalon.core.keyword.BuiltinKeywords.verifyEqual(BuiltinKeywords.groovy:146)
	at jdk.internal.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at Выполнение бизнес-плана сверка дашбордов.CompareDZOData(Выполнение бизнес-плана сверка дашбордов:758)
	at Выполнение бизнес-плана сверка дашбордов.run(Выполнение бизнес-плана сверка дашбордов:608)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:448)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:439)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:418)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:410)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:285)
	at com.kms.katalon.core.common.CommonExecutor.accessTestCaseMainPhase(CommonExecutor.java:65)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:150)
	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:106)
	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:180)
	at TempTestSuite1736466949911.run(TempTestSuite1736466949911.groovy:35)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
)

10-01-2025T03:05:52 - [TEST_STEP][PASSED] - result = WriteToExcel(typeOfData, todaysDate, PercPlanR, PercPlanB, PercFactR, PercFactB, x, tabR, tabB, o1R, o1B, vidget): null

10-01-2025T03:05:52 - [TEST_STEP][PASSED] - iii = dZO.indexOf("/"): null

10-01-2025T03:05:52 - [TEST_STEP][PASSED] - println(iii): null

10-01-2025T03:05:52 - [TEST_STEP][PASSED] - dZO = dZO.substring(0, iii): null

10-01-2025T03:05:52 - [TEST_STEP][PASSED] - println(dZO): null

10-01-2025T03:05:52 - [TEST_STEP][PASSED] - println(PercPlanR): null

10-01-2025T03:05:52 - [TEST_STEP][PASSED] - println(PercPlanB): null

10-01-2025T03:05:52 - [TEST_STEP][PASSED] - println(PercFactR): null

10-01-2025T03:05:52 - [TEST_STEP][PASSED] - println(PercFactB): null

10-01-2025T03:05:52 - [TEST_STEP][PASSED] - println(tabR): null

10-01-2025T03:05:52 - [TEST_STEP][PASSED] - println(tabB): null

10-01-2025T03:05:52 - [TEST_STEP][PASSED] - println(o1R): null

10-01-2025T03:05:52 - [TEST_STEP][PASSED] - println(o1B): null

10-01-2025T03:05:52 - [TEST_STEP][PASSED] - PR = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:52 - [TEST_STEP][PASSED] - FR = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:52 - [TEST_STEP][PASSED] - PB = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:52 - [TEST_STEP][PASSED] - FB = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:52 - [TEST_STEP][PASSED] - TR = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:52 - [TEST_STEP][PASSED] - TB = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:52 - [TEST_STEP][PASSED] - sheetName = "Sheet1": null

10-01-2025T03:05:52 - [TEST_STEP][PASSED] - data = findTestData("PlanFact"): null

10-01-2025T03:05:52 - [TEST_STEP][PASSED] - n = data.getRowNumbers() + 1: null

10-01-2025T03:05:52 - [TEST_STEP][PASSED] - year = todaysDate.substring(todaysDate.length() - 4, todaysDate.length()): null

10-01-2025T03:05:52 - [TEST_STEP][PASSED] - y = year.toInteger(): null

10-01-2025T03:05:52 - [TEST_STEP][PASSED] - m = getText(findTestObject("Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Фильтр Дата")): Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Фильтр Дата' is: '1, 2, 3 кв., Октябрь, Ноябрь 2024 года'

10-01-2025T03:05:53 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Фильтр Дата' is: '1, 2, 3 кв., Октябрь, Ноябрь 2024 года'

10-01-2025T03:05:53 - [TEST_STEP][PASSED] - m = m.substring(0, m.indexOf("2024")): null

10-01-2025T03:05:53 - [TEST_STEP][PASSED] - m = m.trim(): null

10-01-2025T03:05:53 - [TEST_STEP][PASSED] - dashboardName = "Выполнение бизнес-плана": null

10-01-2025T03:05:53 - [TEST_STEP][PASSED] - workbook01 = getWorkbook(excelFilePath): null

10-01-2025T03:05:53 - [TEST_STEP][PASSED] - sheet01 = getExcelSheet(workbook01, sheetName): null

10-01-2025T03:05:53 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 0, dashboardName): null

10-01-2025T03:05:53 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 1, dZO): null

10-01-2025T03:05:53 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 2, typeOfData): null

10-01-2025T03:05:53 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 3, typeOfData): null

10-01-2025T03:05:53 - [TEST_STEP][PASSED] - if (typeOfData == "План"): null

10-01-2025T03:05:53 - [TEST_STEP][PASSED] - else if (typeOfData == "Факт"): null

10-01-2025T03:05:53 - [TEST_STEP][PASSED] - else if (vidget.contains("электроэнергии") == true): null

10-01-2025T03:05:53 - [TEST_STEP][PASSED] - if (tabR == null): null

10-01-2025T03:05:53 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:05:53 - [TEST_STEP][PASSED] - if (tabR == "нет данных"): null

10-01-2025T03:05:53 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 4, "нет данных"): null

10-01-2025T03:05:53 - [TEST_STEP][PASSED] - if (tabB == null): null

10-01-2025T03:05:53 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:05:53 - [TEST_STEP][PASSED] - if (tabB == "нет данных"): null

10-01-2025T03:05:53 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:05:53 - [TEST_STEP][PASSED] - TB = tabB.toInteger(): null

10-01-2025T03:05:53 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 5, TB): null

10-01-2025T03:05:53 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 6, m): null

10-01-2025T03:05:53 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 7, y): null

10-01-2025T03:05:53 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 8, todaysDate): null

10-01-2025T03:05:53 - [TEST_STEP][PASSED] - n = n + 1: null

10-01-2025T03:05:53 - [TEST_STEP][PASSED] - saveWorkbook(excelFilePath, workbook01): null

10-01-2025T03:05:53 - [TEST_STEP][PASSED] - typeOfData = "План Потери": null

10-01-2025T03:05:53 - [TEST_STEP][PASSED] - tabR = GetPPlanR(x = a): null

10-01-2025T03:05:53 - [TEST_STEP][PASSED] - i1 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:53 - [TEST_STEP][PASSED] - ii = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:53 - [TEST_STEP][PASSED] - for ([ii = 1, ii < 9, (ii++)]): null

10-01-2025T03:05:53 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:53 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:53 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:53 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:53 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:53 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:53 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:53 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:53 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:53 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:53 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:53 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:53 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:53 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:53 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:53 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:53 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:53 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:53 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:53 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:53 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:53 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:53 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:53 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:53 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:53 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:53 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:53 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:53 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:53 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:53 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:53 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:53 - [TEST_STEP][PASSED] - i1 = x.indexOf("/"): null

10-01-2025T03:05:53 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:53 - [TEST_STEP][PASSED] - x = x.substring(0, i1): null

10-01-2025T03:05:53 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:53 - [TEST_STEP][PASSED] - return x: null

10-01-2025T03:05:53 - [TEST_STEP][PASSED] - tabB = GetPPlanB(x = b): null

10-01-2025T03:05:53 - [TEST_STEP][PASSED] - i1 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:53 - [TEST_STEP][PASSED] - ii = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:53 - [TEST_STEP][PASSED] - for ([ii = 1, ii < 9, (ii++)]): null

10-01-2025T03:05:53 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:53 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:53 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:53 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:53 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:53 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:53 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:53 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:53 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:53 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:53 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:53 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:53 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:53 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:53 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:53 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:53 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:53 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:53 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:53 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:53 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:53 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:53 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:53 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:53 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:53 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:53 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:53 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:53 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:53 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:53 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:53 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:53 - [TEST_STEP][PASSED] - i1 = x.indexOf("/"): null

10-01-2025T03:05:53 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:53 - [TEST_STEP][PASSED] - x = x.substring(0, i1): null

10-01-2025T03:05:53 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:53 - [TEST_STEP][FAILED] - return x: null

10-01-2025T03:05:53 - [TEST_STEP][PASSED] - println(tabR + "/" + tabB): null

10-01-2025T03:05:53 - [TEST_STEP][FAILED] - if (verifyEqual(PercFactR, PercFactB) == false): null

10-01-2025T03:05:53 - [MESSAGE][FAILED] - Unable to verify equal between actual object 'нет данных' and expected object '10.89' (Root cause: com.kms.katalon.core.exception.StepFailedException: Actual object 'нет данных' and expected object '10.89' are not equal
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.doCall(VerifyEqualKeyword.groovy:58)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.call(VerifyEqualKeyword.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:75)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.verifyEqual(VerifyEqualKeyword.groovy:63)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.execute(VerifyEqualKeyword.groovy:44)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:74)
	at com.kms.katalon.core.keyword.BuiltinKeywords.verifyEqual(BuiltinKeywords.groovy:146)
	at jdk.internal.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at Выполнение бизнес-плана сверка дашбордов.CompareDZOData(Выполнение бизнес-плана сверка дашбордов:771)
	at Выполнение бизнес-плана сверка дашбордов.run(Выполнение бизнес-плана сверка дашбордов:608)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:448)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:439)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:418)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:410)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:285)
	at com.kms.katalon.core.common.CommonExecutor.accessTestCaseMainPhase(CommonExecutor.java:65)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:150)
	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:106)
	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:180)
	at TempTestSuite1736466949911.run(TempTestSuite1736466949911.groovy:35)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
)

10-01-2025T03:05:53 - [TEST_STEP][PASSED] - result = WriteToExcel(typeOfData, todaysDate, PercPlanR, PercPlanB, PercFactR, PercFactB, x, tabR, tabB, o1R, o1B, vidget): null

10-01-2025T03:05:53 - [TEST_STEP][PASSED] - iii = dZO.indexOf("/"): null

10-01-2025T03:05:53 - [TEST_STEP][PASSED] - println(iii): null

10-01-2025T03:05:53 - [TEST_STEP][PASSED] - dZO = dZO.substring(0, iii): null

10-01-2025T03:05:53 - [TEST_STEP][PASSED] - println(dZO): null

10-01-2025T03:05:53 - [TEST_STEP][PASSED] - println(PercPlanR): null

10-01-2025T03:05:53 - [TEST_STEP][PASSED] - println(PercPlanB): null

10-01-2025T03:05:53 - [TEST_STEP][PASSED] - println(PercFactR): null

10-01-2025T03:05:53 - [TEST_STEP][PASSED] - println(PercFactB): null

10-01-2025T03:05:53 - [TEST_STEP][PASSED] - println(tabR): null

10-01-2025T03:05:53 - [TEST_STEP][PASSED] - println(tabB): null

10-01-2025T03:05:53 - [TEST_STEP][PASSED] - println(o1R): null

10-01-2025T03:05:53 - [TEST_STEP][PASSED] - println(o1B): null

10-01-2025T03:05:53 - [TEST_STEP][PASSED] - PR = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:53 - [TEST_STEP][PASSED] - FR = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:53 - [TEST_STEP][PASSED] - PB = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:53 - [TEST_STEP][PASSED] - FB = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:53 - [TEST_STEP][PASSED] - TR = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:53 - [TEST_STEP][PASSED] - TB = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:53 - [TEST_STEP][PASSED] - sheetName = "Sheet1": null

10-01-2025T03:05:53 - [TEST_STEP][PASSED] - data = findTestData("PlanFact"): null

10-01-2025T03:05:53 - [TEST_STEP][PASSED] - n = data.getRowNumbers() + 1: null

10-01-2025T03:05:53 - [TEST_STEP][PASSED] - year = todaysDate.substring(todaysDate.length() - 4, todaysDate.length()): null

10-01-2025T03:05:53 - [TEST_STEP][PASSED] - y = year.toInteger(): null

10-01-2025T03:05:53 - [TEST_STEP][PASSED] - m = getText(findTestObject("Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Фильтр Дата")): Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Фильтр Дата' is: '1, 2, 3 кв., Октябрь, Ноябрь 2024 года'

10-01-2025T03:05:53 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Фильтр Дата' is: '1, 2, 3 кв., Октябрь, Ноябрь 2024 года'

10-01-2025T03:05:53 - [TEST_STEP][PASSED] - m = m.substring(0, m.indexOf("2024")): null

10-01-2025T03:05:53 - [TEST_STEP][PASSED] - m = m.trim(): null

10-01-2025T03:05:53 - [TEST_STEP][PASSED] - dashboardName = "Выполнение бизнес-плана": null

10-01-2025T03:05:53 - [TEST_STEP][PASSED] - workbook01 = getWorkbook(excelFilePath): null

10-01-2025T03:05:54 - [TEST_STEP][PASSED] - sheet01 = getExcelSheet(workbook01, sheetName): null

10-01-2025T03:05:54 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 0, dashboardName): null

10-01-2025T03:05:54 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 1, dZO): null

10-01-2025T03:05:54 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 2, typeOfData): null

10-01-2025T03:05:54 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 3, typeOfData): null

10-01-2025T03:05:54 - [TEST_STEP][PASSED] - if (typeOfData == "План"): null

10-01-2025T03:05:54 - [TEST_STEP][PASSED] - else if (typeOfData == "Факт"): null

10-01-2025T03:05:54 - [TEST_STEP][PASSED] - else if (vidget.contains("электроэнергии") == true): null

10-01-2025T03:05:54 - [TEST_STEP][PASSED] - if (tabR == null): null

10-01-2025T03:05:54 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:05:54 - [TEST_STEP][PASSED] - if (tabR == "нет данных"): null

10-01-2025T03:05:54 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 4, "нет данных"): null

10-01-2025T03:05:54 - [TEST_STEP][PASSED] - if (tabB == null): null

10-01-2025T03:05:54 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:05:54 - [TEST_STEP][PASSED] - if (tabB == "нет данных"): null

10-01-2025T03:05:54 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:05:54 - [TEST_STEP][PASSED] - TB = tabB.toInteger(): null

10-01-2025T03:05:54 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 5, TB): null

10-01-2025T03:05:54 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 6, m): null

10-01-2025T03:05:54 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 7, y): null

10-01-2025T03:05:54 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 8, todaysDate): null

10-01-2025T03:05:54 - [TEST_STEP][PASSED] - n = n + 1: null

10-01-2025T03:05:54 - [TEST_STEP][PASSED] - saveWorkbook(excelFilePath, workbook01): null

10-01-2025T03:05:54 - [TEST_STEP][PASSED] - ii2 = a.indexOf("ПАО"): null

10-01-2025T03:05:54 - [TEST_STEP][PASSED] - if (ii2 == -1): null

10-01-2025T03:05:54 - [TEST_STEP][PASSED] - vidget = "Отклонения фактического уровня потерь от бизнес-плана": null

10-01-2025T03:05:54 - [TEST_STEP][PASSED] - typeOfData = "Коэффициент": null

10-01-2025T03:05:54 - [TEST_STEP][PASSED] - o1R = Geto1R(x = a): null

10-01-2025T03:05:54 - [TEST_STEP][PASSED] - i1 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:54 - [TEST_STEP][PASSED] - ii = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:54 - [TEST_STEP][PASSED] - for ([ii = 1, ii < 10, (ii++)]): null

10-01-2025T03:05:54 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:54 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:54 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:54 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:54 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:54 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:54 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:54 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:54 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:54 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:54 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:54 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:54 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:54 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:54 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:54 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:54 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:54 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:54 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:54 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:54 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:54 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:54 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:54 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:54 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:54 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:54 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:54 - [TEST_STEP][PASSED] - i1 = x.indexOf("/"): null

10-01-2025T03:05:54 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:54 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:54 - [TEST_STEP][PASSED] - return x: null

10-01-2025T03:05:54 - [TEST_STEP][PASSED] - o1B = Geto1B(x = b): null

10-01-2025T03:05:54 - [TEST_STEP][PASSED] - i1 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:54 - [TEST_STEP][PASSED] - ii = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:54 - [TEST_STEP][PASSED] - for ([ii = 1, ii < 10, (ii++)]): null

10-01-2025T03:05:54 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:54 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:54 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:54 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:54 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:54 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:54 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:54 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:54 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:54 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:54 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:54 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:54 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:54 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:54 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:54 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:54 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:54 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:54 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:54 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:54 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:54 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:54 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:54 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:54 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:54 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:54 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:54 - [TEST_STEP][PASSED] - i1 = x.indexOf("/"): null

10-01-2025T03:05:54 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:54 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:54 - [TEST_STEP][FAILED] - return x: null

10-01-2025T03:05:54 - [TEST_STEP][PASSED] - println(o1R + "/" + o1B): null

10-01-2025T03:05:54 - [TEST_STEP][FAILED] - if (verifyEqual(PercFactR, PercFactB) == false): null

10-01-2025T03:05:54 - [MESSAGE][FAILED] - Unable to verify equal between actual object 'нет данных' and expected object '10.89' (Root cause: com.kms.katalon.core.exception.StepFailedException: Actual object 'нет данных' and expected object '10.89' are not equal
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.doCall(VerifyEqualKeyword.groovy:58)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.call(VerifyEqualKeyword.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:75)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.verifyEqual(VerifyEqualKeyword.groovy:63)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.execute(VerifyEqualKeyword.groovy:44)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:74)
	at com.kms.katalon.core.keyword.BuiltinKeywords.verifyEqual(BuiltinKeywords.groovy:146)
	at jdk.internal.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at Выполнение бизнес-плана сверка дашбордов.CompareDZOData(Выполнение бизнес-плана сверка дашбордов:789)
	at Выполнение бизнес-плана сверка дашбордов.run(Выполнение бизнес-плана сверка дашбордов:608)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:448)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:439)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:418)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:410)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:285)
	at com.kms.katalon.core.common.CommonExecutor.accessTestCaseMainPhase(CommonExecutor.java:65)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:150)
	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:106)
	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:180)
	at TempTestSuite1736466949911.run(TempTestSuite1736466949911.groovy:35)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
)

10-01-2025T03:05:54 - [TEST_STEP][PASSED] - result = WriteToExcel(typeOfData, todaysDate, PercPlanR, PercPlanB, PercFactR, PercFactB, x, tabR, tabB, o1R, o1B, vidget): null

10-01-2025T03:05:54 - [TEST_STEP][PASSED] - iii = dZO.indexOf("/"): null

10-01-2025T03:05:54 - [TEST_STEP][PASSED] - println(iii): null

10-01-2025T03:05:54 - [TEST_STEP][PASSED] - dZO = dZO.substring(0, iii): null

10-01-2025T03:05:54 - [TEST_STEP][PASSED] - println(dZO): null

10-01-2025T03:05:54 - [TEST_STEP][PASSED] - println(PercPlanR): null

10-01-2025T03:05:54 - [TEST_STEP][PASSED] - println(PercPlanB): null

10-01-2025T03:05:54 - [TEST_STEP][PASSED] - println(PercFactR): null

10-01-2025T03:05:54 - [TEST_STEP][PASSED] - println(PercFactB): null

10-01-2025T03:05:54 - [TEST_STEP][PASSED] - println(tabR): null

10-01-2025T03:05:54 - [TEST_STEP][PASSED] - println(tabB): null

10-01-2025T03:05:54 - [TEST_STEP][PASSED] - println(o1R): null

10-01-2025T03:05:54 - [TEST_STEP][PASSED] - println(o1B): null

10-01-2025T03:05:54 - [TEST_STEP][PASSED] - PR = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:54 - [TEST_STEP][PASSED] - FR = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:54 - [TEST_STEP][PASSED] - PB = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:54 - [TEST_STEP][PASSED] - FB = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:54 - [TEST_STEP][PASSED] - TR = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:54 - [TEST_STEP][PASSED] - TB = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:54 - [TEST_STEP][PASSED] - sheetName = "Sheet1": null

10-01-2025T03:05:54 - [TEST_STEP][PASSED] - data = findTestData("PlanFact"): null

10-01-2025T03:05:54 - [TEST_STEP][PASSED] - n = data.getRowNumbers() + 1: null

10-01-2025T03:05:54 - [TEST_STEP][PASSED] - year = todaysDate.substring(todaysDate.length() - 4, todaysDate.length()): null

10-01-2025T03:05:54 - [TEST_STEP][PASSED] - y = year.toInteger(): null

10-01-2025T03:05:54 - [TEST_STEP][PASSED] - m = getText(findTestObject("Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Фильтр Дата")): Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Фильтр Дата' is: '1, 2, 3 кв., Октябрь, Ноябрь 2024 года'

10-01-2025T03:05:56 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Фильтр Дата' is: '1, 2, 3 кв., Октябрь, Ноябрь 2024 года'

10-01-2025T03:05:56 - [TEST_STEP][PASSED] - m = m.substring(0, m.indexOf("2024")): null

10-01-2025T03:05:56 - [TEST_STEP][PASSED] - m = m.trim(): null

10-01-2025T03:05:56 - [TEST_STEP][PASSED] - dashboardName = "Выполнение бизнес-плана": null

10-01-2025T03:05:56 - [TEST_STEP][PASSED] - workbook01 = getWorkbook(excelFilePath): null

10-01-2025T03:05:56 - [TEST_STEP][PASSED] - sheet01 = getExcelSheet(workbook01, sheetName): null

10-01-2025T03:05:56 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 0, dashboardName): null

10-01-2025T03:05:56 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 1, dZO): null

10-01-2025T03:05:56 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 2, typeOfData): null

10-01-2025T03:05:56 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 3, typeOfData): null

10-01-2025T03:05:56 - [TEST_STEP][PASSED] - if (typeOfData == "План"): null

10-01-2025T03:05:56 - [TEST_STEP][PASSED] - else if (typeOfData == "Факт"): null

10-01-2025T03:05:56 - [TEST_STEP][PASSED] - else if (vidget.contains("электроэнергии") == true): null

10-01-2025T03:05:56 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:05:56 - [TEST_STEP][PASSED] - if (o1R == null): null

10-01-2025T03:05:56 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:05:56 - [TEST_STEP][PASSED] - if (o1R == "нет данных"): null

10-01-2025T03:05:56 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 4, "нет данных"): null

10-01-2025T03:05:56 - [TEST_STEP][PASSED] - if (o1B == null): null

10-01-2025T03:05:56 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:05:56 - [TEST_STEP][PASSED] - if (o1B == "нет данных"): null

10-01-2025T03:05:56 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:05:56 - [TEST_STEP][PASSED] - FB = o1B.toDouble(): null

10-01-2025T03:05:56 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 5, FB): null

10-01-2025T03:05:56 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 6, m): null

10-01-2025T03:05:56 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 7, y): null

10-01-2025T03:05:56 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 8, todaysDate): null

10-01-2025T03:05:56 - [TEST_STEP][PASSED] - n = n + 1: null

10-01-2025T03:05:56 - [TEST_STEP][FAILED] - saveWorkbook(excelFilePath, workbook01): null

10-01-2025T03:05:56 - [TEST_STEP][FAILED] - if (verifyEqual(mR, mB) == false): null

10-01-2025T03:05:56 - [MESSAGE][FAILED] - Unable to verify equal between actual object 'Россети Московский регион/нет данных/нет данных/нет данных/нет данных/нет данных/нет данных/нет данных/нет данных/нет данных' and expected object 'Россети Московский регион/7.39/7.58/93807453/86700170/7107284/88890955/82321830/6569125/0.19' (Root cause: com.kms.katalon.core.exception.StepFailedException: Actual object 'Россети Московский регион/нет данных/нет данных/нет данных/нет данных/нет данных/нет данных/нет данных/нет данных/нет данных' and expected object 'Россети Московский регион/7.39/7.58/93807453/86700170/7107284/88890955/82321830/6569125/0.19' are not equal
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.doCall(VerifyEqualKeyword.groovy:58)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.call(VerifyEqualKeyword.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:75)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.verifyEqual(VerifyEqualKeyword.groovy:63)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.execute(VerifyEqualKeyword.groovy:44)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:74)
	at com.kms.katalon.core.keyword.BuiltinKeywords.verifyEqual(BuiltinKeywords.groovy:146)
	at jdk.internal.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at Выполнение бизнес-плана сверка дашбордов.run(Выполнение бизнес-плана сверка дашбордов:612)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:448)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:439)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:418)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:410)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:285)
	at com.kms.katalon.core.common.CommonExecutor.accessTestCaseMainPhase(CommonExecutor.java:65)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:150)
	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:106)
	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:180)
	at TempTestSuite1736466949911.run(TempTestSuite1736466949911.groovy:35)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
)

10-01-2025T03:05:56 - [TEST_STEP][PASSED] - result = CompareDZOData(a = mR, b = mB, dZO, typeOfData, PercPlanR, PercPlanB, PercFactR, PercFactB, todaysDate, x, vidget, tabR, tabB, o1R, o1B): null

10-01-2025T03:05:56 - [TEST_STEP][PASSED] - ii2 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:56 - [TEST_STEP][FAILED] - if (verifyEqual(a, b) == false): null

10-01-2025T03:05:56 - [MESSAGE][FAILED] - Unable to verify equal between actual object 'Россети Московский регион/нет данных/нет данных/нет данных/нет данных/нет данных/нет данных/нет данных/нет данных/нет данных' and expected object 'Россети Московский регион/7.39/7.58/93807453/86700170/7107284/88890955/82321830/6569125/0.19' (Root cause: com.kms.katalon.core.exception.StepFailedException: Actual object 'Россети Московский регион/нет данных/нет данных/нет данных/нет данных/нет данных/нет данных/нет данных/нет данных/нет данных' and expected object 'Россети Московский регион/7.39/7.58/93807453/86700170/7107284/88890955/82321830/6569125/0.19' are not equal
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.doCall(VerifyEqualKeyword.groovy:58)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.call(VerifyEqualKeyword.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:75)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.verifyEqual(VerifyEqualKeyword.groovy:63)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.execute(VerifyEqualKeyword.groovy:44)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:74)
	at com.kms.katalon.core.keyword.BuiltinKeywords.verifyEqual(BuiltinKeywords.groovy:146)
	at jdk.internal.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at Выполнение бизнес-плана сверка дашбордов.CompareDZOData(Выполнение бизнес-плана сверка дашбордов:673)
	at Выполнение бизнес-плана сверка дашбордов.run(Выполнение бизнес-плана сверка дашбордов:613)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:448)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:439)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:418)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:410)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:285)
	at com.kms.katalon.core.common.CommonExecutor.accessTestCaseMainPhase(CommonExecutor.java:65)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:150)
	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:106)
	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:180)
	at TempTestSuite1736466949911.run(TempTestSuite1736466949911.groovy:35)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
)

10-01-2025T03:05:56 - [TEST_STEP][PASSED] - vidget = "Уровень потерь электроэнергии": null

10-01-2025T03:05:56 - [TEST_STEP][PASSED] - typeOfData = "План": null

10-01-2025T03:05:56 - [TEST_STEP][PASSED] - PercPlanR = GetPercPlanR(x = a): null

10-01-2025T03:05:56 - [TEST_STEP][PASSED] - i1 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:56 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:56 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:56 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:56 - [TEST_STEP][PASSED] - i1 = x.indexOf("/"): null

10-01-2025T03:05:56 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:56 - [TEST_STEP][PASSED] - x = x.substring(0, i1): null

10-01-2025T03:05:56 - [TEST_STEP][PASSED] - return x: null

10-01-2025T03:05:56 - [TEST_STEP][PASSED] - PercPlanB = GetPercPlanB(x = b): null

10-01-2025T03:05:56 - [TEST_STEP][PASSED] - i1 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:56 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:56 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:56 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:56 - [TEST_STEP][PASSED] - i1 = x.indexOf("/"): null

10-01-2025T03:05:56 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:56 - [TEST_STEP][PASSED] - x = x.substring(0, i1): null

10-01-2025T03:05:56 - [TEST_STEP][FAILED] - return x: null

10-01-2025T03:05:56 - [TEST_STEP][FAILED] - if (verifyEqual(PercPlanR, PercPlanB) == false): null

10-01-2025T03:05:56 - [MESSAGE][FAILED] - Unable to verify equal between actual object 'нет данных' and expected object '7.39' (Root cause: com.kms.katalon.core.exception.StepFailedException: Actual object 'нет данных' and expected object '7.39' are not equal
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.doCall(VerifyEqualKeyword.groovy:58)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.call(VerifyEqualKeyword.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:75)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.verifyEqual(VerifyEqualKeyword.groovy:63)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.execute(VerifyEqualKeyword.groovy:44)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:74)
	at com.kms.katalon.core.keyword.BuiltinKeywords.verifyEqual(BuiltinKeywords.groovy:146)
	at jdk.internal.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at Выполнение бизнес-плана сверка дашбордов.CompareDZOData(Выполнение бизнес-плана сверка дашбордов:682)
	at Выполнение бизнес-плана сверка дашбордов.run(Выполнение бизнес-плана сверка дашбордов:613)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:448)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:439)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:418)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:410)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:285)
	at com.kms.katalon.core.common.CommonExecutor.accessTestCaseMainPhase(CommonExecutor.java:65)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:150)
	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:106)
	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:180)
	at TempTestSuite1736466949911.run(TempTestSuite1736466949911.groovy:35)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
)

10-01-2025T03:05:56 - [TEST_STEP][PASSED] - result = WriteToExcel(typeOfData, todaysDate, PercPlanR, PercPlanB, PercFactR, PercFactB, x, tabR, tabB, o1R, o1B, vidget): null

10-01-2025T03:05:56 - [TEST_STEP][PASSED] - iii = dZO.indexOf("/"): null

10-01-2025T03:05:56 - [TEST_STEP][PASSED] - println(iii): null

10-01-2025T03:05:56 - [TEST_STEP][PASSED] - dZO = dZO.substring(0, iii): null

10-01-2025T03:05:56 - [TEST_STEP][PASSED] - println(dZO): null

10-01-2025T03:05:56 - [TEST_STEP][PASSED] - println(PercPlanR): null

10-01-2025T03:05:56 - [TEST_STEP][PASSED] - println(PercPlanB): null

10-01-2025T03:05:56 - [TEST_STEP][PASSED] - println(PercFactR): null

10-01-2025T03:05:56 - [TEST_STEP][PASSED] - println(PercFactB): null

10-01-2025T03:05:56 - [TEST_STEP][PASSED] - println(tabR): null

10-01-2025T03:05:56 - [TEST_STEP][PASSED] - println(tabB): null

10-01-2025T03:05:56 - [TEST_STEP][PASSED] - println(o1R): null

10-01-2025T03:05:56 - [TEST_STEP][PASSED] - println(o1B): null

10-01-2025T03:05:56 - [TEST_STEP][PASSED] - PR = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:56 - [TEST_STEP][PASSED] - FR = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:56 - [TEST_STEP][PASSED] - PB = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:56 - [TEST_STEP][PASSED] - FB = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:56 - [TEST_STEP][PASSED] - TR = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:56 - [TEST_STEP][PASSED] - TB = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:56 - [TEST_STEP][PASSED] - sheetName = "Sheet1": null

10-01-2025T03:05:56 - [TEST_STEP][PASSED] - data = findTestData("PlanFact"): null

10-01-2025T03:05:56 - [TEST_STEP][PASSED] - n = data.getRowNumbers() + 1: null

10-01-2025T03:05:56 - [TEST_STEP][PASSED] - year = todaysDate.substring(todaysDate.length() - 4, todaysDate.length()): null

10-01-2025T03:05:56 - [TEST_STEP][PASSED] - y = year.toInteger(): null

10-01-2025T03:05:56 - [TEST_STEP][PASSED] - m = getText(findTestObject("Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Фильтр Дата")): Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Фильтр Дата' is: '1, 2, 3 кв., Октябрь, Ноябрь 2024 года'

10-01-2025T03:05:56 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Фильтр Дата' is: '1, 2, 3 кв., Октябрь, Ноябрь 2024 года'

10-01-2025T03:05:56 - [TEST_STEP][PASSED] - m = m.substring(0, m.indexOf("2024")): null

10-01-2025T03:05:56 - [TEST_STEP][PASSED] - m = m.trim(): null

10-01-2025T03:05:56 - [TEST_STEP][PASSED] - dashboardName = "Выполнение бизнес-плана": null

10-01-2025T03:05:56 - [TEST_STEP][PASSED] - workbook01 = getWorkbook(excelFilePath): null

10-01-2025T03:05:56 - [TEST_STEP][PASSED] - sheet01 = getExcelSheet(workbook01, sheetName): null

10-01-2025T03:05:56 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 0, dashboardName): null

10-01-2025T03:05:56 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 1, dZO): null

10-01-2025T03:05:56 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 2, typeOfData): null

10-01-2025T03:05:56 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 3, typeOfData): null

10-01-2025T03:05:56 - [TEST_STEP][PASSED] - if (typeOfData == "План"): null

10-01-2025T03:05:56 - [TEST_STEP][PASSED] - if (PercPlanR == null): null

10-01-2025T03:05:56 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:05:56 - [TEST_STEP][PASSED] - if (PercPlanR == "нет данных"): null

10-01-2025T03:05:56 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 4, "нет данных"): null

10-01-2025T03:05:56 - [TEST_STEP][PASSED] - if (PercPlanB == null): null

10-01-2025T03:05:56 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:05:56 - [TEST_STEP][PASSED] - if (PercPlanB == "нет данных"): null

10-01-2025T03:05:56 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:05:56 - [TEST_STEP][PASSED] - PB = PercPlanB.toDouble(): null

10-01-2025T03:05:56 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 5, PB): null

10-01-2025T03:05:56 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 6, m): null

10-01-2025T03:05:56 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 7, y): null

10-01-2025T03:05:56 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 8, todaysDate): null

10-01-2025T03:05:56 - [TEST_STEP][PASSED] - n = n + 1: null

10-01-2025T03:05:56 - [TEST_STEP][PASSED] - saveWorkbook(excelFilePath, workbook01): null

10-01-2025T03:05:57 - [TEST_STEP][PASSED] - typeOfData = "Факт": null

10-01-2025T03:05:57 - [TEST_STEP][PASSED] - PercFactR = GetPercFactR(x = a): null

10-01-2025T03:05:57 - [TEST_STEP][PASSED] - i1 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:57 - [TEST_STEP][PASSED] - ii = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:57 - [TEST_STEP][PASSED] - for ([ii = 1, ii < 3, (ii++)]): null

10-01-2025T03:05:57 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:57 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:57 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:57 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:57 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:57 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:57 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:57 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:57 - [TEST_STEP][PASSED] - i1 = x.indexOf("/"): null

10-01-2025T03:05:57 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:57 - [TEST_STEP][PASSED] - x = x.substring(0, i1): null

10-01-2025T03:05:57 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:57 - [TEST_STEP][PASSED] - return x: null

10-01-2025T03:05:57 - [TEST_STEP][PASSED] - PercFactB = GetPercFactB(x = b): null

10-01-2025T03:05:57 - [TEST_STEP][PASSED] - i1 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:57 - [TEST_STEP][PASSED] - ii = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:57 - [TEST_STEP][PASSED] - for ([ii = 1, ii < 3, (ii++)]): null

10-01-2025T03:05:57 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:57 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:57 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:57 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:57 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:57 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:57 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:57 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:57 - [TEST_STEP][PASSED] - i1 = x.indexOf("/"): null

10-01-2025T03:05:57 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:57 - [TEST_STEP][PASSED] - x = x.substring(0, i1): null

10-01-2025T03:05:57 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:57 - [TEST_STEP][FAILED] - return x: null

10-01-2025T03:05:57 - [TEST_STEP][FAILED] - if (verifyEqual(PercFactR, PercFactB) == false): null

10-01-2025T03:05:57 - [MESSAGE][FAILED] - Unable to verify equal between actual object 'нет данных' and expected object '7.58' (Root cause: com.kms.katalon.core.exception.StepFailedException: Actual object 'нет данных' and expected object '7.58' are not equal
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.doCall(VerifyEqualKeyword.groovy:58)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.call(VerifyEqualKeyword.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:75)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.verifyEqual(VerifyEqualKeyword.groovy:63)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.execute(VerifyEqualKeyword.groovy:44)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:74)
	at com.kms.katalon.core.keyword.BuiltinKeywords.verifyEqual(BuiltinKeywords.groovy:146)
	at jdk.internal.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at Выполнение бизнес-плана сверка дашбордов.CompareDZOData(Выполнение бизнес-плана сверка дашбордов:693)
	at Выполнение бизнес-плана сверка дашбордов.run(Выполнение бизнес-плана сверка дашбордов:613)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:448)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:439)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:418)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:410)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:285)
	at com.kms.katalon.core.common.CommonExecutor.accessTestCaseMainPhase(CommonExecutor.java:65)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:150)
	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:106)
	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:180)
	at TempTestSuite1736466949911.run(TempTestSuite1736466949911.groovy:35)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
)

10-01-2025T03:05:57 - [TEST_STEP][PASSED] - result = WriteToExcel(typeOfData, todaysDate, PercPlanR, PercPlanB, PercFactR, PercFactB, x, tabR, tabB, o1R, o1B, vidget): null

10-01-2025T03:05:57 - [TEST_STEP][PASSED] - iii = dZO.indexOf("/"): null

10-01-2025T03:05:57 - [TEST_STEP][PASSED] - println(iii): null

10-01-2025T03:05:57 - [TEST_STEP][PASSED] - dZO = dZO.substring(0, iii): null

10-01-2025T03:05:57 - [TEST_STEP][PASSED] - println(dZO): null

10-01-2025T03:05:57 - [TEST_STEP][PASSED] - println(PercPlanR): null

10-01-2025T03:05:57 - [TEST_STEP][PASSED] - println(PercPlanB): null

10-01-2025T03:05:57 - [TEST_STEP][PASSED] - println(PercFactR): null

10-01-2025T03:05:57 - [TEST_STEP][PASSED] - println(PercFactB): null

10-01-2025T03:05:57 - [TEST_STEP][PASSED] - println(tabR): null

10-01-2025T03:05:57 - [TEST_STEP][PASSED] - println(tabB): null

10-01-2025T03:05:57 - [TEST_STEP][PASSED] - println(o1R): null

10-01-2025T03:05:57 - [TEST_STEP][PASSED] - println(o1B): null

10-01-2025T03:05:57 - [TEST_STEP][PASSED] - PR = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:57 - [TEST_STEP][PASSED] - FR = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:57 - [TEST_STEP][PASSED] - PB = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:57 - [TEST_STEP][PASSED] - FB = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:57 - [TEST_STEP][PASSED] - TR = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:57 - [TEST_STEP][PASSED] - TB = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:57 - [TEST_STEP][PASSED] - sheetName = "Sheet1": null

10-01-2025T03:05:57 - [TEST_STEP][PASSED] - data = findTestData("PlanFact"): null

10-01-2025T03:05:57 - [TEST_STEP][PASSED] - n = data.getRowNumbers() + 1: null

10-01-2025T03:05:57 - [TEST_STEP][PASSED] - year = todaysDate.substring(todaysDate.length() - 4, todaysDate.length()): null

10-01-2025T03:05:57 - [TEST_STEP][PASSED] - y = year.toInteger(): null

10-01-2025T03:05:57 - [TEST_STEP][PASSED] - m = getText(findTestObject("Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Фильтр Дата")): Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Фильтр Дата' is: '1, 2, 3 кв., Октябрь, Ноябрь 2024 года'

10-01-2025T03:05:57 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Фильтр Дата' is: '1, 2, 3 кв., Октябрь, Ноябрь 2024 года'

10-01-2025T03:05:57 - [TEST_STEP][PASSED] - m = m.substring(0, m.indexOf("2024")): null

10-01-2025T03:05:57 - [TEST_STEP][PASSED] - m = m.trim(): null

10-01-2025T03:05:57 - [TEST_STEP][PASSED] - dashboardName = "Выполнение бизнес-плана": null

10-01-2025T03:05:57 - [TEST_STEP][PASSED] - workbook01 = getWorkbook(excelFilePath): null

10-01-2025T03:05:57 - [TEST_STEP][PASSED] - sheet01 = getExcelSheet(workbook01, sheetName): null

10-01-2025T03:05:57 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 0, dashboardName): null

10-01-2025T03:05:57 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 1, dZO): null

10-01-2025T03:05:57 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 2, typeOfData): null

10-01-2025T03:05:57 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 3, typeOfData): null

10-01-2025T03:05:57 - [TEST_STEP][PASSED] - if (typeOfData == "План"): null

10-01-2025T03:05:57 - [TEST_STEP][PASSED] - else if (typeOfData == "Факт"): null

10-01-2025T03:05:57 - [TEST_STEP][PASSED] - if (PercFactR == null): null

10-01-2025T03:05:57 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:05:57 - [TEST_STEP][PASSED] - if (PercFactR == "нет данных"): null

10-01-2025T03:05:57 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 4, "нет данных"): null

10-01-2025T03:05:57 - [TEST_STEP][PASSED] - if (PercFactB == null): null

10-01-2025T03:05:57 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:05:57 - [TEST_STEP][PASSED] - if (PercFactB == "нет данных"): null

10-01-2025T03:05:57 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:05:57 - [TEST_STEP][PASSED] - FB = PercFactB.toDouble(): null

10-01-2025T03:05:57 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 5, FB): null

10-01-2025T03:05:57 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 6, m): null

10-01-2025T03:05:57 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 7, y): null

10-01-2025T03:05:57 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 8, todaysDate): null

10-01-2025T03:05:57 - [TEST_STEP][PASSED] - n = n + 1: null

10-01-2025T03:05:57 - [TEST_STEP][PASSED] - saveWorkbook(excelFilePath, workbook01): null

10-01-2025T03:05:57 - [TEST_STEP][PASSED] - vidget = "Показатели баланса электроэнергии по ДЗО – Факт": null

10-01-2025T03:05:57 - [TEST_STEP][PASSED] - typeOfData = "Факт Отпуск в сеть": null

10-01-2025T03:05:57 - [TEST_STEP][PASSED] - tabR = GetOvSFactR(x = a): null

10-01-2025T03:05:57 - [TEST_STEP][PASSED] - i1 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:57 - [TEST_STEP][PASSED] - ii = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:57 - [TEST_STEP][PASSED] - for ([ii = 1, ii < 4, (ii++)]): null

10-01-2025T03:05:57 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:57 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:57 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:57 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:57 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:57 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:57 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:57 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:57 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:57 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:57 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:57 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:57 - [TEST_STEP][PASSED] - i1 = x.indexOf("/"): null

10-01-2025T03:05:57 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:57 - [TEST_STEP][PASSED] - x = x.substring(0, i1): null

10-01-2025T03:05:57 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:57 - [TEST_STEP][PASSED] - return x: null

10-01-2025T03:05:57 - [TEST_STEP][PASSED] - tabB = GetOvSFactB(x = b): null

10-01-2025T03:05:57 - [TEST_STEP][PASSED] - i1 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:57 - [TEST_STEP][PASSED] - ii = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:57 - [TEST_STEP][PASSED] - for ([ii = 1, ii < 4, (ii++)]): null

10-01-2025T03:05:57 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:57 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:57 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:57 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:57 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:57 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:57 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:57 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:57 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:57 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:57 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:57 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:57 - [TEST_STEP][PASSED] - i1 = x.indexOf("/"): null

10-01-2025T03:05:57 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:57 - [TEST_STEP][PASSED] - x = x.substring(0, i1): null

10-01-2025T03:05:57 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:57 - [TEST_STEP][FAILED] - return x: null

10-01-2025T03:05:57 - [TEST_STEP][FAILED] - if (verifyEqual(tabR, tabB) == false): null

10-01-2025T03:05:57 - [MESSAGE][FAILED] - Unable to verify equal between actual object 'нет данных' and expected object '93807453' (Root cause: com.kms.katalon.core.exception.StepFailedException: Actual object 'нет данных' and expected object '93807453' are not equal
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.doCall(VerifyEqualKeyword.groovy:58)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.call(VerifyEqualKeyword.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:75)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.verifyEqual(VerifyEqualKeyword.groovy:63)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.execute(VerifyEqualKeyword.groovy:44)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:74)
	at com.kms.katalon.core.keyword.BuiltinKeywords.verifyEqual(BuiltinKeywords.groovy:146)
	at jdk.internal.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at Выполнение бизнес-плана сверка дашбордов.CompareDZOData(Выполнение бизнес-плана сверка дашбордов:706)
	at Выполнение бизнес-плана сверка дашбордов.run(Выполнение бизнес-плана сверка дашбордов:613)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:448)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:439)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:418)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:410)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:285)
	at com.kms.katalon.core.common.CommonExecutor.accessTestCaseMainPhase(CommonExecutor.java:65)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:150)
	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:106)
	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:180)
	at TempTestSuite1736466949911.run(TempTestSuite1736466949911.groovy:35)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
)

10-01-2025T03:05:57 - [TEST_STEP][PASSED] - result = WriteToExcel(typeOfData, todaysDate, PercPlanR, PercPlanB, PercFactR, PercFactB, x, tabR, tabB, o1R, o1B, vidget): null

10-01-2025T03:05:57 - [TEST_STEP][PASSED] - iii = dZO.indexOf("/"): null

10-01-2025T03:05:57 - [TEST_STEP][PASSED] - println(iii): null

10-01-2025T03:05:57 - [TEST_STEP][PASSED] - dZO = dZO.substring(0, iii): null

10-01-2025T03:05:57 - [TEST_STEP][PASSED] - println(dZO): null

10-01-2025T03:05:57 - [TEST_STEP][PASSED] - println(PercPlanR): null

10-01-2025T03:05:57 - [TEST_STEP][PASSED] - println(PercPlanB): null

10-01-2025T03:05:57 - [TEST_STEP][PASSED] - println(PercFactR): null

10-01-2025T03:05:57 - [TEST_STEP][PASSED] - println(PercFactB): null

10-01-2025T03:05:57 - [TEST_STEP][PASSED] - println(tabR): null

10-01-2025T03:05:57 - [TEST_STEP][PASSED] - println(tabB): null

10-01-2025T03:05:57 - [TEST_STEP][PASSED] - println(o1R): null

10-01-2025T03:05:57 - [TEST_STEP][PASSED] - println(o1B): null

10-01-2025T03:05:57 - [TEST_STEP][PASSED] - PR = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:57 - [TEST_STEP][PASSED] - FR = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:57 - [TEST_STEP][PASSED] - PB = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:57 - [TEST_STEP][PASSED] - FB = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:57 - [TEST_STEP][PASSED] - TR = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:57 - [TEST_STEP][PASSED] - TB = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:57 - [TEST_STEP][PASSED] - sheetName = "Sheet1": null

10-01-2025T03:05:57 - [TEST_STEP][PASSED] - data = findTestData("PlanFact"): null

10-01-2025T03:05:57 - [TEST_STEP][PASSED] - n = data.getRowNumbers() + 1: null

10-01-2025T03:05:57 - [TEST_STEP][PASSED] - year = todaysDate.substring(todaysDate.length() - 4, todaysDate.length()): null

10-01-2025T03:05:57 - [TEST_STEP][PASSED] - y = year.toInteger(): null

10-01-2025T03:05:57 - [TEST_STEP][PASSED] - m = getText(findTestObject("Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Фильтр Дата")): Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Фильтр Дата' is: '1, 2, 3 кв., Октябрь, Ноябрь 2024 года'

10-01-2025T03:05:58 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Фильтр Дата' is: '1, 2, 3 кв., Октябрь, Ноябрь 2024 года'

10-01-2025T03:05:58 - [TEST_STEP][PASSED] - m = m.substring(0, m.indexOf("2024")): null

10-01-2025T03:05:58 - [TEST_STEP][PASSED] - m = m.trim(): null

10-01-2025T03:05:58 - [TEST_STEP][PASSED] - dashboardName = "Выполнение бизнес-плана": null

10-01-2025T03:05:58 - [TEST_STEP][PASSED] - workbook01 = getWorkbook(excelFilePath): null

10-01-2025T03:05:58 - [TEST_STEP][PASSED] - sheet01 = getExcelSheet(workbook01, sheetName): null

10-01-2025T03:05:58 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 0, dashboardName): null

10-01-2025T03:05:58 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 1, dZO): null

10-01-2025T03:05:58 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 2, typeOfData): null

10-01-2025T03:05:58 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 3, typeOfData): null

10-01-2025T03:05:58 - [TEST_STEP][PASSED] - if (typeOfData == "План"): null

10-01-2025T03:05:58 - [TEST_STEP][PASSED] - else if (typeOfData == "Факт"): null

10-01-2025T03:05:58 - [TEST_STEP][PASSED] - else if (vidget.contains("электроэнергии") == true): null

10-01-2025T03:05:58 - [TEST_STEP][PASSED] - if (tabR == null): null

10-01-2025T03:05:58 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:05:58 - [TEST_STEP][PASSED] - if (tabR == "нет данных"): null

10-01-2025T03:05:58 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 4, "нет данных"): null

10-01-2025T03:05:58 - [TEST_STEP][PASSED] - if (tabB == null): null

10-01-2025T03:05:58 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:05:58 - [TEST_STEP][PASSED] - if (tabB == "нет данных"): null

10-01-2025T03:05:58 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:05:58 - [TEST_STEP][PASSED] - TB = tabB.toInteger(): null

10-01-2025T03:05:58 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 5, TB): null

10-01-2025T03:05:58 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 6, m): null

10-01-2025T03:05:58 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 7, y): null

10-01-2025T03:05:58 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 8, todaysDate): null

10-01-2025T03:05:58 - [TEST_STEP][PASSED] - n = n + 1: null

10-01-2025T03:05:58 - [TEST_STEP][PASSED] - saveWorkbook(excelFilePath, workbook01): null

10-01-2025T03:05:58 - [TEST_STEP][PASSED] - typeOfData = "Факт Отпуск из сети": null

10-01-2025T03:05:58 - [TEST_STEP][PASSED] - tabR = GetOiSFactR(x = a): null

10-01-2025T03:05:58 - [TEST_STEP][PASSED] - i1 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:58 - [TEST_STEP][PASSED] - ii = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:58 - [TEST_STEP][PASSED] - for ([ii = 1, ii < 5, (ii++)]): null

10-01-2025T03:05:58 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:58 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:58 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:58 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:58 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:58 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:58 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:58 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:58 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:58 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:58 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:58 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:58 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:58 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:58 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:58 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:58 - [TEST_STEP][PASSED] - i1 = x.indexOf("/"): null

10-01-2025T03:05:58 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:58 - [TEST_STEP][PASSED] - x = x.substring(0, i1): null

10-01-2025T03:05:58 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:58 - [TEST_STEP][PASSED] - return x: null

10-01-2025T03:05:58 - [TEST_STEP][PASSED] - tabB = GetOiSFactB(x = b): null

10-01-2025T03:05:58 - [TEST_STEP][PASSED] - i1 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:58 - [TEST_STEP][PASSED] - ii = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:58 - [TEST_STEP][PASSED] - for ([ii = 1, ii < 5, (ii++)]): null

10-01-2025T03:05:58 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:58 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:58 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:58 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:58 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:58 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:58 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:58 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:58 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:58 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:58 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:58 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:58 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:58 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:58 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:58 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:58 - [TEST_STEP][PASSED] - i1 = x.indexOf("/"): null

10-01-2025T03:05:58 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:58 - [TEST_STEP][PASSED] - x = x.substring(0, i1): null

10-01-2025T03:05:58 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:58 - [TEST_STEP][FAILED] - return x: null

10-01-2025T03:05:58 - [TEST_STEP][FAILED] - if (verifyEqual(tabR, tabB) == false): null

10-01-2025T03:05:58 - [MESSAGE][FAILED] - Unable to verify equal between actual object 'нет данных' and expected object '86700170' (Root cause: com.kms.katalon.core.exception.StepFailedException: Actual object 'нет данных' and expected object '86700170' are not equal
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.doCall(VerifyEqualKeyword.groovy:58)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.call(VerifyEqualKeyword.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:75)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.verifyEqual(VerifyEqualKeyword.groovy:63)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.execute(VerifyEqualKeyword.groovy:44)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:74)
	at com.kms.katalon.core.keyword.BuiltinKeywords.verifyEqual(BuiltinKeywords.groovy:146)
	at jdk.internal.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at Выполнение бизнес-плана сверка дашбордов.CompareDZOData(Выполнение бизнес-плана сверка дашбордов:717)
	at Выполнение бизнес-плана сверка дашбордов.run(Выполнение бизнес-плана сверка дашбордов:613)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:448)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:439)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:418)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:410)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:285)
	at com.kms.katalon.core.common.CommonExecutor.accessTestCaseMainPhase(CommonExecutor.java:65)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:150)
	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:106)
	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:180)
	at TempTestSuite1736466949911.run(TempTestSuite1736466949911.groovy:35)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
)

10-01-2025T03:05:58 - [TEST_STEP][PASSED] - result = WriteToExcel(typeOfData, todaysDate, PercPlanR, PercPlanB, PercFactR, PercFactB, x, tabR, tabB, o1R, o1B, vidget): null

10-01-2025T03:05:58 - [TEST_STEP][PASSED] - iii = dZO.indexOf("/"): null

10-01-2025T03:05:58 - [TEST_STEP][PASSED] - println(iii): null

10-01-2025T03:05:58 - [TEST_STEP][PASSED] - dZO = dZO.substring(0, iii): null

10-01-2025T03:05:58 - [TEST_STEP][PASSED] - println(dZO): null

10-01-2025T03:05:58 - [TEST_STEP][PASSED] - println(PercPlanR): null

10-01-2025T03:05:58 - [TEST_STEP][PASSED] - println(PercPlanB): null

10-01-2025T03:05:58 - [TEST_STEP][PASSED] - println(PercFactR): null

10-01-2025T03:05:58 - [TEST_STEP][PASSED] - println(PercFactB): null

10-01-2025T03:05:58 - [TEST_STEP][PASSED] - println(tabR): null

10-01-2025T03:05:58 - [TEST_STEP][PASSED] - println(tabB): null

10-01-2025T03:05:58 - [TEST_STEP][PASSED] - println(o1R): null

10-01-2025T03:05:58 - [TEST_STEP][PASSED] - println(o1B): null

10-01-2025T03:05:58 - [TEST_STEP][PASSED] - PR = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:58 - [TEST_STEP][PASSED] - FR = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:58 - [TEST_STEP][PASSED] - PB = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:58 - [TEST_STEP][PASSED] - FB = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:58 - [TEST_STEP][PASSED] - TR = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:58 - [TEST_STEP][PASSED] - TB = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:58 - [TEST_STEP][PASSED] - sheetName = "Sheet1": null

10-01-2025T03:05:58 - [TEST_STEP][PASSED] - data = findTestData("PlanFact"): null

10-01-2025T03:05:58 - [TEST_STEP][PASSED] - n = data.getRowNumbers() + 1: null

10-01-2025T03:05:58 - [TEST_STEP][PASSED] - year = todaysDate.substring(todaysDate.length() - 4, todaysDate.length()): null

10-01-2025T03:05:58 - [TEST_STEP][PASSED] - y = year.toInteger(): null

10-01-2025T03:05:58 - [TEST_STEP][PASSED] - m = getText(findTestObject("Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Фильтр Дата")): Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Фильтр Дата' is: '1, 2, 3 кв., Октябрь, Ноябрь 2024 года'

10-01-2025T03:05:58 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Фильтр Дата' is: '1, 2, 3 кв., Октябрь, Ноябрь 2024 года'

10-01-2025T03:05:58 - [TEST_STEP][PASSED] - m = m.substring(0, m.indexOf("2024")): null

10-01-2025T03:05:58 - [TEST_STEP][PASSED] - m = m.trim(): null

10-01-2025T03:05:58 - [TEST_STEP][PASSED] - dashboardName = "Выполнение бизнес-плана": null

10-01-2025T03:05:58 - [TEST_STEP][PASSED] - workbook01 = getWorkbook(excelFilePath): null

10-01-2025T03:05:58 - [TEST_STEP][PASSED] - sheet01 = getExcelSheet(workbook01, sheetName): null

10-01-2025T03:05:58 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 0, dashboardName): null

10-01-2025T03:05:58 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 1, dZO): null

10-01-2025T03:05:58 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 2, typeOfData): null

10-01-2025T03:05:58 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 3, typeOfData): null

10-01-2025T03:05:58 - [TEST_STEP][PASSED] - if (typeOfData == "План"): null

10-01-2025T03:05:58 - [TEST_STEP][PASSED] - else if (typeOfData == "Факт"): null

10-01-2025T03:05:58 - [TEST_STEP][PASSED] - else if (vidget.contains("электроэнергии") == true): null

10-01-2025T03:05:58 - [TEST_STEP][PASSED] - if (tabR == null): null

10-01-2025T03:05:58 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:05:58 - [TEST_STEP][PASSED] - if (tabR == "нет данных"): null

10-01-2025T03:05:58 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 4, "нет данных"): null

10-01-2025T03:05:58 - [TEST_STEP][PASSED] - if (tabB == null): null

10-01-2025T03:05:58 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:05:58 - [TEST_STEP][PASSED] - if (tabB == "нет данных"): null

10-01-2025T03:05:58 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:05:58 - [TEST_STEP][PASSED] - TB = tabB.toInteger(): null

10-01-2025T03:05:58 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 5, TB): null

10-01-2025T03:05:58 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 6, m): null

10-01-2025T03:05:58 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 7, y): null

10-01-2025T03:05:58 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 8, todaysDate): null

10-01-2025T03:05:58 - [TEST_STEP][PASSED] - n = n + 1: null

10-01-2025T03:05:58 - [TEST_STEP][PASSED] - saveWorkbook(excelFilePath, workbook01): null

10-01-2025T03:05:59 - [TEST_STEP][PASSED] - typeOfData = "Факт Потери": null

10-01-2025T03:05:59 - [TEST_STEP][PASSED] - tabR = GetPFactR(x = a): null

10-01-2025T03:05:59 - [TEST_STEP][PASSED] - i1 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:59 - [TEST_STEP][PASSED] - ii = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:59 - [TEST_STEP][PASSED] - for ([ii = 1, ii < 6, (ii++)]): null

10-01-2025T03:05:59 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:59 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:59 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:59 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:59 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:59 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:59 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:59 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:59 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:59 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:59 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:59 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:59 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:59 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:59 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:59 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:59 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:59 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:59 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:59 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:59 - [TEST_STEP][PASSED] - i1 = x.indexOf("/"): null

10-01-2025T03:05:59 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:59 - [TEST_STEP][PASSED] - x = x.substring(0, i1): null

10-01-2025T03:05:59 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:59 - [TEST_STEP][PASSED] - return x: null

10-01-2025T03:05:59 - [TEST_STEP][PASSED] - tabB = GetPFactB(x = b): null

10-01-2025T03:05:59 - [TEST_STEP][PASSED] - i1 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:59 - [TEST_STEP][PASSED] - ii = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:59 - [TEST_STEP][PASSED] - for ([ii = 1, ii < 6, (ii++)]): null

10-01-2025T03:05:59 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:59 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:59 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:59 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:59 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:59 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:59 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:59 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:59 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:59 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:59 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:59 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:59 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:59 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:59 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:59 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:59 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:59 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:59 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:59 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:59 - [TEST_STEP][PASSED] - i1 = x.indexOf("/"): null

10-01-2025T03:05:59 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:59 - [TEST_STEP][PASSED] - x = x.substring(0, i1): null

10-01-2025T03:05:59 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:59 - [TEST_STEP][FAILED] - return x: null

10-01-2025T03:05:59 - [TEST_STEP][PASSED] - println(tabR + "/" + tabB): null

10-01-2025T03:05:59 - [TEST_STEP][FAILED] - if (verifyEqual(tabR, tabB) == false): null

10-01-2025T03:05:59 - [MESSAGE][FAILED] - Unable to verify equal between actual object 'нет данных' and expected object '7107284' (Root cause: com.kms.katalon.core.exception.StepFailedException: Actual object 'нет данных' and expected object '7107284' are not equal
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.doCall(VerifyEqualKeyword.groovy:58)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.call(VerifyEqualKeyword.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:75)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.verifyEqual(VerifyEqualKeyword.groovy:63)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.execute(VerifyEqualKeyword.groovy:44)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:74)
	at com.kms.katalon.core.keyword.BuiltinKeywords.verifyEqual(BuiltinKeywords.groovy:146)
	at jdk.internal.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at Выполнение бизнес-плана сверка дашбордов.CompareDZOData(Выполнение бизнес-плана сверка дашбордов:730)
	at Выполнение бизнес-плана сверка дашбордов.run(Выполнение бизнес-плана сверка дашбордов:613)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:448)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:439)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:418)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:410)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:285)
	at com.kms.katalon.core.common.CommonExecutor.accessTestCaseMainPhase(CommonExecutor.java:65)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:150)
	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:106)
	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:180)
	at TempTestSuite1736466949911.run(TempTestSuite1736466949911.groovy:35)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
)

10-01-2025T03:05:59 - [TEST_STEP][PASSED] - result = WriteToExcel(typeOfData, todaysDate, PercPlanR, PercPlanB, PercFactR, PercFactB, x, tabR, tabB, o1R, o1B, vidget): null

10-01-2025T03:05:59 - [TEST_STEP][PASSED] - iii = dZO.indexOf("/"): null

10-01-2025T03:05:59 - [TEST_STEP][PASSED] - println(iii): null

10-01-2025T03:05:59 - [TEST_STEP][PASSED] - dZO = dZO.substring(0, iii): null

10-01-2025T03:05:59 - [TEST_STEP][PASSED] - println(dZO): null

10-01-2025T03:05:59 - [TEST_STEP][PASSED] - println(PercPlanR): null

10-01-2025T03:05:59 - [TEST_STEP][PASSED] - println(PercPlanB): null

10-01-2025T03:05:59 - [TEST_STEP][PASSED] - println(PercFactR): null

10-01-2025T03:05:59 - [TEST_STEP][PASSED] - println(PercFactB): null

10-01-2025T03:05:59 - [TEST_STEP][PASSED] - println(tabR): null

10-01-2025T03:05:59 - [TEST_STEP][PASSED] - println(tabB): null

10-01-2025T03:05:59 - [TEST_STEP][PASSED] - println(o1R): null

10-01-2025T03:05:59 - [TEST_STEP][PASSED] - println(o1B): null

10-01-2025T03:05:59 - [TEST_STEP][PASSED] - PR = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:59 - [TEST_STEP][PASSED] - FR = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:59 - [TEST_STEP][PASSED] - PB = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:59 - [TEST_STEP][PASSED] - FB = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:59 - [TEST_STEP][PASSED] - TR = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:59 - [TEST_STEP][PASSED] - TB = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:59 - [TEST_STEP][PASSED] - sheetName = "Sheet1": null

10-01-2025T03:05:59 - [TEST_STEP][PASSED] - data = findTestData("PlanFact"): null

10-01-2025T03:05:59 - [TEST_STEP][PASSED] - n = data.getRowNumbers() + 1: null

10-01-2025T03:05:59 - [TEST_STEP][PASSED] - year = todaysDate.substring(todaysDate.length() - 4, todaysDate.length()): null

10-01-2025T03:05:59 - [TEST_STEP][PASSED] - y = year.toInteger(): null

10-01-2025T03:05:59 - [TEST_STEP][PASSED] - m = getText(findTestObject("Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Фильтр Дата")): Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Фильтр Дата' is: '1, 2, 3 кв., Октябрь, Ноябрь 2024 года'

10-01-2025T03:05:59 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Фильтр Дата' is: '1, 2, 3 кв., Октябрь, Ноябрь 2024 года'

10-01-2025T03:05:59 - [TEST_STEP][PASSED] - m = m.substring(0, m.indexOf("2024")): null

10-01-2025T03:05:59 - [TEST_STEP][PASSED] - m = m.trim(): null

10-01-2025T03:05:59 - [TEST_STEP][PASSED] - dashboardName = "Выполнение бизнес-плана": null

10-01-2025T03:05:59 - [TEST_STEP][PASSED] - workbook01 = getWorkbook(excelFilePath): null

10-01-2025T03:05:59 - [TEST_STEP][PASSED] - sheet01 = getExcelSheet(workbook01, sheetName): null

10-01-2025T03:05:59 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 0, dashboardName): null

10-01-2025T03:05:59 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 1, dZO): null

10-01-2025T03:05:59 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 2, typeOfData): null

10-01-2025T03:05:59 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 3, typeOfData): null

10-01-2025T03:05:59 - [TEST_STEP][PASSED] - if (typeOfData == "План"): null

10-01-2025T03:05:59 - [TEST_STEP][PASSED] - else if (typeOfData == "Факт"): null

10-01-2025T03:05:59 - [TEST_STEP][PASSED] - else if (vidget.contains("электроэнергии") == true): null

10-01-2025T03:05:59 - [TEST_STEP][PASSED] - if (tabR == null): null

10-01-2025T03:05:59 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:05:59 - [TEST_STEP][PASSED] - if (tabR == "нет данных"): null

10-01-2025T03:05:59 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 4, "нет данных"): null

10-01-2025T03:05:59 - [TEST_STEP][PASSED] - if (tabB == null): null

10-01-2025T03:05:59 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:05:59 - [TEST_STEP][PASSED] - if (tabB == "нет данных"): null

10-01-2025T03:05:59 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:05:59 - [TEST_STEP][PASSED] - TB = tabB.toInteger(): null

10-01-2025T03:05:59 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 5, TB): null

10-01-2025T03:05:59 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 6, m): null

10-01-2025T03:05:59 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 7, y): null

10-01-2025T03:05:59 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 8, todaysDate): null

10-01-2025T03:05:59 - [TEST_STEP][PASSED] - n = n + 1: null

10-01-2025T03:05:59 - [TEST_STEP][PASSED] - saveWorkbook(excelFilePath, workbook01): null

10-01-2025T03:05:59 - [TEST_STEP][PASSED] - vidget = "Показатели баланса электроэнергии по ДЗО – План": null

10-01-2025T03:05:59 - [TEST_STEP][PASSED] - typeOfData = "План Отпуск в сеть": null

10-01-2025T03:05:59 - [TEST_STEP][PASSED] - tabR = GetOvSPlanR(x = a): null

10-01-2025T03:05:59 - [TEST_STEP][PASSED] - i1 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:59 - [TEST_STEP][PASSED] - ii = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:59 - [TEST_STEP][PASSED] - for ([ii = 1, ii < 7, (ii++)]): null

10-01-2025T03:05:59 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:59 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:59 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:59 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:59 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:59 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:59 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:59 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:59 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:59 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:59 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:59 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:59 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:59 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:59 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:59 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:59 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:59 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:59 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:59 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:59 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:59 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:59 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:59 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:59 - [TEST_STEP][PASSED] - i1 = x.indexOf("/"): null

10-01-2025T03:05:59 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:59 - [TEST_STEP][PASSED] - x = x.substring(0, i1): null

10-01-2025T03:05:59 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:59 - [TEST_STEP][PASSED] - return x: null

10-01-2025T03:05:59 - [TEST_STEP][PASSED] - tabB = GetOvSPlanB(x = b): null

10-01-2025T03:05:59 - [TEST_STEP][PASSED] - i1 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:59 - [TEST_STEP][PASSED] - ii = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:05:59 - [TEST_STEP][PASSED] - for ([ii = 1, ii < 7, (ii++)]): null

10-01-2025T03:05:59 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:59 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:59 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:59 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:59 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:59 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:59 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:59 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:59 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:59 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:59 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:59 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:59 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:59 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:59 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:59 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:59 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:59 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:59 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:05:59 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:05:59 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:05:59 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:05:59 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:06:00 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:06:00 - [TEST_STEP][PASSED] - i1 = x.indexOf("/"): null

10-01-2025T03:06:00 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:06:00 - [TEST_STEP][PASSED] - x = x.substring(0, i1): null

10-01-2025T03:06:00 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:06:00 - [TEST_STEP][FAILED] - return x: null

10-01-2025T03:06:00 - [TEST_STEP][PASSED] - println(tabR + "/" + tabB): null

10-01-2025T03:06:00 - [TEST_STEP][FAILED] - if (verifyEqual(PercFactR, PercFactB) == false): null

10-01-2025T03:06:00 - [MESSAGE][FAILED] - Unable to verify equal between actual object 'нет данных' and expected object '7.58' (Root cause: com.kms.katalon.core.exception.StepFailedException: Actual object 'нет данных' and expected object '7.58' are not equal
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.doCall(VerifyEqualKeyword.groovy:58)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.call(VerifyEqualKeyword.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:75)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.verifyEqual(VerifyEqualKeyword.groovy:63)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.execute(VerifyEqualKeyword.groovy:44)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:74)
	at com.kms.katalon.core.keyword.BuiltinKeywords.verifyEqual(BuiltinKeywords.groovy:146)
	at jdk.internal.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at Выполнение бизнес-плана сверка дашбордов.CompareDZOData(Выполнение бизнес-плана сверка дашбордов:745)
	at Выполнение бизнес-плана сверка дашбордов.run(Выполнение бизнес-плана сверка дашбордов:613)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:448)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:439)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:418)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:410)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:285)
	at com.kms.katalon.core.common.CommonExecutor.accessTestCaseMainPhase(CommonExecutor.java:65)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:150)
	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:106)
	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:180)
	at TempTestSuite1736466949911.run(TempTestSuite1736466949911.groovy:35)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
)

10-01-2025T03:06:00 - [TEST_STEP][PASSED] - result = WriteToExcel(typeOfData, todaysDate, PercPlanR, PercPlanB, PercFactR, PercFactB, x, tabR, tabB, o1R, o1B, vidget): null

10-01-2025T03:06:00 - [TEST_STEP][PASSED] - iii = dZO.indexOf("/"): null

10-01-2025T03:06:00 - [TEST_STEP][PASSED] - println(iii): null

10-01-2025T03:06:00 - [TEST_STEP][PASSED] - dZO = dZO.substring(0, iii): null

10-01-2025T03:06:00 - [TEST_STEP][PASSED] - println(dZO): null

10-01-2025T03:06:00 - [TEST_STEP][PASSED] - println(PercPlanR): null

10-01-2025T03:06:00 - [TEST_STEP][PASSED] - println(PercPlanB): null

10-01-2025T03:06:00 - [TEST_STEP][PASSED] - println(PercFactR): null

10-01-2025T03:06:00 - [TEST_STEP][PASSED] - println(PercFactB): null

10-01-2025T03:06:00 - [TEST_STEP][PASSED] - println(tabR): null

10-01-2025T03:06:00 - [TEST_STEP][PASSED] - println(tabB): null

10-01-2025T03:06:00 - [TEST_STEP][PASSED] - println(o1R): null

10-01-2025T03:06:00 - [TEST_STEP][PASSED] - println(o1B): null

10-01-2025T03:06:00 - [TEST_STEP][PASSED] - PR = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:06:00 - [TEST_STEP][PASSED] - FR = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:06:00 - [TEST_STEP][PASSED] - PB = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:06:00 - [TEST_STEP][PASSED] - FB = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:06:00 - [TEST_STEP][PASSED] - TR = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:06:00 - [TEST_STEP][PASSED] - TB = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:06:00 - [TEST_STEP][PASSED] - sheetName = "Sheet1": null

10-01-2025T03:06:00 - [TEST_STEP][PASSED] - data = findTestData("PlanFact"): null

10-01-2025T03:06:00 - [TEST_STEP][PASSED] - n = data.getRowNumbers() + 1: null

10-01-2025T03:06:00 - [TEST_STEP][PASSED] - year = todaysDate.substring(todaysDate.length() - 4, todaysDate.length()): null

10-01-2025T03:06:00 - [TEST_STEP][PASSED] - y = year.toInteger(): null

10-01-2025T03:06:00 - [TEST_STEP][PASSED] - m = getText(findTestObject("Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Фильтр Дата")): Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Фильтр Дата' is: '1, 2, 3 кв., Октябрь, Ноябрь 2024 года'

10-01-2025T03:06:00 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Фильтр Дата' is: '1, 2, 3 кв., Октябрь, Ноябрь 2024 года'

10-01-2025T03:06:00 - [TEST_STEP][PASSED] - m = m.substring(0, m.indexOf("2024")): null

10-01-2025T03:06:00 - [TEST_STEP][PASSED] - m = m.trim(): null

10-01-2025T03:06:00 - [TEST_STEP][PASSED] - dashboardName = "Выполнение бизнес-плана": null

10-01-2025T03:06:00 - [TEST_STEP][PASSED] - workbook01 = getWorkbook(excelFilePath): null

10-01-2025T03:06:00 - [TEST_STEP][PASSED] - sheet01 = getExcelSheet(workbook01, sheetName): null

10-01-2025T03:06:00 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 0, dashboardName): null

10-01-2025T03:06:00 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 1, dZO): null

10-01-2025T03:06:00 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 2, typeOfData): null

10-01-2025T03:06:00 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 3, typeOfData): null

10-01-2025T03:06:00 - [TEST_STEP][PASSED] - if (typeOfData == "План"): null

10-01-2025T03:06:00 - [TEST_STEP][PASSED] - else if (typeOfData == "Факт"): null

10-01-2025T03:06:00 - [TEST_STEP][PASSED] - else if (vidget.contains("электроэнергии") == true): null

10-01-2025T03:06:00 - [TEST_STEP][PASSED] - if (tabR == null): null

10-01-2025T03:06:00 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:06:00 - [TEST_STEP][PASSED] - if (tabR == "нет данных"): null

10-01-2025T03:06:00 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 4, "нет данных"): null

10-01-2025T03:06:00 - [TEST_STEP][PASSED] - if (tabB == null): null

10-01-2025T03:06:00 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:06:00 - [TEST_STEP][PASSED] - if (tabB == "нет данных"): null

10-01-2025T03:06:00 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:06:00 - [TEST_STEP][PASSED] - TB = tabB.toInteger(): null

10-01-2025T03:06:00 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 5, TB): null

10-01-2025T03:06:00 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 6, m): null

10-01-2025T03:06:00 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 7, y): null

10-01-2025T03:06:00 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 8, todaysDate): null

10-01-2025T03:06:00 - [TEST_STEP][PASSED] - n = n + 1: null

10-01-2025T03:06:00 - [TEST_STEP][PASSED] - saveWorkbook(excelFilePath, workbook01): null

10-01-2025T03:06:00 - [TEST_STEP][PASSED] - typeOfData = "План Отпуск из сети": null

10-01-2025T03:06:00 - [TEST_STEP][PASSED] - tabR = GetOiSPlanR(x = a): null

10-01-2025T03:06:00 - [TEST_STEP][PASSED] - i1 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:06:00 - [TEST_STEP][PASSED] - ii = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:06:00 - [TEST_STEP][PASSED] - for ([ii = 1, ii < 8, (ii++)]): null

10-01-2025T03:06:00 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:06:00 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:06:00 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:06:00 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:06:00 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:06:00 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:06:00 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:06:00 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:06:00 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:06:00 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:06:00 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:06:00 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:06:00 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:06:00 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:06:00 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:06:00 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:06:00 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:06:00 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:06:00 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:06:00 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:06:00 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:06:00 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:06:00 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:06:00 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:06:00 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:06:00 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:06:00 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:06:00 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:06:00 - [TEST_STEP][PASSED] - i1 = x.indexOf("/"): null

10-01-2025T03:06:00 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:06:00 - [TEST_STEP][PASSED] - x = x.substring(0, i1): null

10-01-2025T03:06:00 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:06:00 - [TEST_STEP][PASSED] - return x: null

10-01-2025T03:06:00 - [TEST_STEP][PASSED] - tabB = GetOiSPlanB(x = b): null

10-01-2025T03:06:00 - [TEST_STEP][PASSED] - i1 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:06:00 - [TEST_STEP][PASSED] - ii = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:06:00 - [TEST_STEP][PASSED] - for ([ii = 1, ii < 8, (ii++)]): null

10-01-2025T03:06:00 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:06:00 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:06:00 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:06:00 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:06:00 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:06:00 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:06:00 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:06:00 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:06:00 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:06:00 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:06:00 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:06:00 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:06:00 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:06:00 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:06:00 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:06:00 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:06:00 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:06:00 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:06:00 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:06:00 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:06:00 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:06:00 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:06:00 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:06:00 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:06:00 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:06:00 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:06:00 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:06:00 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:06:00 - [TEST_STEP][PASSED] - i1 = x.indexOf("/"): null

10-01-2025T03:06:00 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:06:00 - [TEST_STEP][PASSED] - x = x.substring(0, i1): null

10-01-2025T03:06:00 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:06:00 - [TEST_STEP][FAILED] - return x: null

10-01-2025T03:06:00 - [TEST_STEP][PASSED] - println(tabR + "/" + tabB): null

10-01-2025T03:06:00 - [TEST_STEP][FAILED] - if (verifyEqual(PercFactR, PercFactB) == false): null

10-01-2025T03:06:00 - [MESSAGE][FAILED] - Unable to verify equal between actual object 'нет данных' and expected object '7.58' (Root cause: com.kms.katalon.core.exception.StepFailedException: Actual object 'нет данных' and expected object '7.58' are not equal
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.doCall(VerifyEqualKeyword.groovy:58)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.call(VerifyEqualKeyword.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:75)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.verifyEqual(VerifyEqualKeyword.groovy:63)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.execute(VerifyEqualKeyword.groovy:44)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:74)
	at com.kms.katalon.core.keyword.BuiltinKeywords.verifyEqual(BuiltinKeywords.groovy:146)
	at jdk.internal.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at Выполнение бизнес-плана сверка дашбордов.CompareDZOData(Выполнение бизнес-плана сверка дашбордов:758)
	at Выполнение бизнес-плана сверка дашбордов.run(Выполнение бизнес-плана сверка дашбордов:613)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:448)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:439)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:418)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:410)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:285)
	at com.kms.katalon.core.common.CommonExecutor.accessTestCaseMainPhase(CommonExecutor.java:65)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:150)
	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:106)
	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:180)
	at TempTestSuite1736466949911.run(TempTestSuite1736466949911.groovy:35)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
)

10-01-2025T03:06:00 - [TEST_STEP][PASSED] - result = WriteToExcel(typeOfData, todaysDate, PercPlanR, PercPlanB, PercFactR, PercFactB, x, tabR, tabB, o1R, o1B, vidget): null

10-01-2025T03:06:00 - [TEST_STEP][PASSED] - iii = dZO.indexOf("/"): null

10-01-2025T03:06:00 - [TEST_STEP][PASSED] - println(iii): null

10-01-2025T03:06:00 - [TEST_STEP][PASSED] - dZO = dZO.substring(0, iii): null

10-01-2025T03:06:00 - [TEST_STEP][PASSED] - println(dZO): null

10-01-2025T03:06:00 - [TEST_STEP][PASSED] - println(PercPlanR): null

10-01-2025T03:06:00 - [TEST_STEP][PASSED] - println(PercPlanB): null

10-01-2025T03:06:00 - [TEST_STEP][PASSED] - println(PercFactR): null

10-01-2025T03:06:00 - [TEST_STEP][PASSED] - println(PercFactB): null

10-01-2025T03:06:00 - [TEST_STEP][PASSED] - println(tabR): null

10-01-2025T03:06:00 - [TEST_STEP][PASSED] - println(tabB): null

10-01-2025T03:06:00 - [TEST_STEP][PASSED] - println(o1R): null

10-01-2025T03:06:00 - [TEST_STEP][PASSED] - println(o1B): null

10-01-2025T03:06:00 - [TEST_STEP][PASSED] - PR = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:06:00 - [TEST_STEP][PASSED] - FR = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:06:00 - [TEST_STEP][PASSED] - PB = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:06:00 - [TEST_STEP][PASSED] - FB = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:06:00 - [TEST_STEP][PASSED] - TR = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:06:00 - [TEST_STEP][PASSED] - TB = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:06:00 - [TEST_STEP][PASSED] - sheetName = "Sheet1": null

10-01-2025T03:06:00 - [TEST_STEP][PASSED] - data = findTestData("PlanFact"): null

10-01-2025T03:06:00 - [TEST_STEP][PASSED] - n = data.getRowNumbers() + 1: null

10-01-2025T03:06:00 - [TEST_STEP][PASSED] - year = todaysDate.substring(todaysDate.length() - 4, todaysDate.length()): null

10-01-2025T03:06:00 - [TEST_STEP][PASSED] - y = year.toInteger(): null

10-01-2025T03:06:00 - [TEST_STEP][PASSED] - m = getText(findTestObject("Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Фильтр Дата")): Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Фильтр Дата' is: '1, 2, 3 кв., Октябрь, Ноябрь 2024 года'

10-01-2025T03:06:01 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Фильтр Дата' is: '1, 2, 3 кв., Октябрь, Ноябрь 2024 года'

10-01-2025T03:06:01 - [TEST_STEP][PASSED] - m = m.substring(0, m.indexOf("2024")): null

10-01-2025T03:06:01 - [TEST_STEP][PASSED] - m = m.trim(): null

10-01-2025T03:06:01 - [TEST_STEP][PASSED] - dashboardName = "Выполнение бизнес-плана": null

10-01-2025T03:06:01 - [TEST_STEP][PASSED] - workbook01 = getWorkbook(excelFilePath): null

10-01-2025T03:06:01 - [TEST_STEP][PASSED] - sheet01 = getExcelSheet(workbook01, sheetName): null

10-01-2025T03:06:01 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 0, dashboardName): null

10-01-2025T03:06:01 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 1, dZO): null

10-01-2025T03:06:01 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 2, typeOfData): null

10-01-2025T03:06:01 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 3, typeOfData): null

10-01-2025T03:06:01 - [TEST_STEP][PASSED] - if (typeOfData == "План"): null

10-01-2025T03:06:01 - [TEST_STEP][PASSED] - else if (typeOfData == "Факт"): null

10-01-2025T03:06:01 - [TEST_STEP][PASSED] - else if (vidget.contains("электроэнергии") == true): null

10-01-2025T03:06:01 - [TEST_STEP][PASSED] - if (tabR == null): null

10-01-2025T03:06:01 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:06:01 - [TEST_STEP][PASSED] - if (tabR == "нет данных"): null

10-01-2025T03:06:01 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 4, "нет данных"): null

10-01-2025T03:06:01 - [TEST_STEP][PASSED] - if (tabB == null): null

10-01-2025T03:06:01 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:06:01 - [TEST_STEP][PASSED] - if (tabB == "нет данных"): null

10-01-2025T03:06:01 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:06:01 - [TEST_STEP][PASSED] - TB = tabB.toInteger(): null

10-01-2025T03:06:01 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 5, TB): null

10-01-2025T03:06:01 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 6, m): null

10-01-2025T03:06:01 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 7, y): null

10-01-2025T03:06:01 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 8, todaysDate): null

10-01-2025T03:06:01 - [TEST_STEP][PASSED] - n = n + 1: null

10-01-2025T03:06:01 - [TEST_STEP][PASSED] - saveWorkbook(excelFilePath, workbook01): null

10-01-2025T03:06:01 - [TEST_STEP][PASSED] - typeOfData = "План Потери": null

10-01-2025T03:06:01 - [TEST_STEP][PASSED] - tabR = GetPPlanR(x = a): null

10-01-2025T03:06:01 - [TEST_STEP][PASSED] - i1 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:06:01 - [TEST_STEP][PASSED] - ii = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:06:01 - [TEST_STEP][PASSED] - for ([ii = 1, ii < 9, (ii++)]): null

10-01-2025T03:06:01 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:06:01 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:06:01 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:06:01 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:06:01 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:06:01 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:06:01 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:06:01 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:06:01 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:06:01 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:06:01 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:06:01 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:06:01 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:06:01 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:06:01 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:06:01 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:06:01 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:06:01 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:06:01 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:06:01 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:06:01 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:06:01 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:06:01 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:06:01 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:06:01 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:06:01 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:06:01 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:06:01 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:06:01 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:06:01 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:06:01 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:06:01 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:06:01 - [TEST_STEP][PASSED] - i1 = x.indexOf("/"): null

10-01-2025T03:06:01 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:06:01 - [TEST_STEP][PASSED] - x = x.substring(0, i1): null

10-01-2025T03:06:01 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:06:01 - [TEST_STEP][PASSED] - return x: null

10-01-2025T03:06:01 - [TEST_STEP][PASSED] - tabB = GetPPlanB(x = b): null

10-01-2025T03:06:01 - [TEST_STEP][PASSED] - i1 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:06:01 - [TEST_STEP][PASSED] - ii = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:06:01 - [TEST_STEP][PASSED] - for ([ii = 1, ii < 9, (ii++)]): null

10-01-2025T03:06:01 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:06:01 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:06:01 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:06:01 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:06:01 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:06:01 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:06:01 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:06:01 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:06:01 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:06:01 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:06:01 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:06:01 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:06:01 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:06:01 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:06:01 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:06:01 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:06:01 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:06:01 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:06:01 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:06:01 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:06:01 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:06:01 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:06:01 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:06:01 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:06:01 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:06:01 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:06:01 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:06:01 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:06:01 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:06:01 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:06:01 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:06:01 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:06:01 - [TEST_STEP][PASSED] - i1 = x.indexOf("/"): null

10-01-2025T03:06:01 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:06:01 - [TEST_STEP][PASSED] - x = x.substring(0, i1): null

10-01-2025T03:06:01 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:06:01 - [TEST_STEP][FAILED] - return x: null

10-01-2025T03:06:01 - [TEST_STEP][PASSED] - println(tabR + "/" + tabB): null

10-01-2025T03:06:01 - [TEST_STEP][FAILED] - if (verifyEqual(PercFactR, PercFactB) == false): null

10-01-2025T03:06:01 - [MESSAGE][FAILED] - Unable to verify equal between actual object 'нет данных' and expected object '7.58' (Root cause: com.kms.katalon.core.exception.StepFailedException: Actual object 'нет данных' and expected object '7.58' are not equal
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.doCall(VerifyEqualKeyword.groovy:58)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.call(VerifyEqualKeyword.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:75)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.verifyEqual(VerifyEqualKeyword.groovy:63)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.execute(VerifyEqualKeyword.groovy:44)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:74)
	at com.kms.katalon.core.keyword.BuiltinKeywords.verifyEqual(BuiltinKeywords.groovy:146)
	at jdk.internal.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at Выполнение бизнес-плана сверка дашбордов.CompareDZOData(Выполнение бизнес-плана сверка дашбордов:771)
	at Выполнение бизнес-плана сверка дашбордов.run(Выполнение бизнес-плана сверка дашбордов:613)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:448)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:439)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:418)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:410)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:285)
	at com.kms.katalon.core.common.CommonExecutor.accessTestCaseMainPhase(CommonExecutor.java:65)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:150)
	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:106)
	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:180)
	at TempTestSuite1736466949911.run(TempTestSuite1736466949911.groovy:35)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
)

10-01-2025T03:06:01 - [TEST_STEP][PASSED] - result = WriteToExcel(typeOfData, todaysDate, PercPlanR, PercPlanB, PercFactR, PercFactB, x, tabR, tabB, o1R, o1B, vidget): null

10-01-2025T03:06:01 - [TEST_STEP][PASSED] - iii = dZO.indexOf("/"): null

10-01-2025T03:06:01 - [TEST_STEP][PASSED] - println(iii): null

10-01-2025T03:06:01 - [TEST_STEP][PASSED] - dZO = dZO.substring(0, iii): null

10-01-2025T03:06:01 - [TEST_STEP][PASSED] - println(dZO): null

10-01-2025T03:06:01 - [TEST_STEP][PASSED] - println(PercPlanR): null

10-01-2025T03:06:01 - [TEST_STEP][PASSED] - println(PercPlanB): null

10-01-2025T03:06:01 - [TEST_STEP][PASSED] - println(PercFactR): null

10-01-2025T03:06:01 - [TEST_STEP][PASSED] - println(PercFactB): null

10-01-2025T03:06:01 - [TEST_STEP][PASSED] - println(tabR): null

10-01-2025T03:06:01 - [TEST_STEP][PASSED] - println(tabB): null

10-01-2025T03:06:01 - [TEST_STEP][PASSED] - println(o1R): null

10-01-2025T03:06:01 - [TEST_STEP][PASSED] - println(o1B): null

10-01-2025T03:06:01 - [TEST_STEP][PASSED] - PR = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:06:01 - [TEST_STEP][PASSED] - FR = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:06:01 - [TEST_STEP][PASSED] - PB = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:06:01 - [TEST_STEP][PASSED] - FB = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:06:01 - [TEST_STEP][PASSED] - TR = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:06:01 - [TEST_STEP][PASSED] - TB = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:06:01 - [TEST_STEP][PASSED] - sheetName = "Sheet1": null

10-01-2025T03:06:01 - [TEST_STEP][PASSED] - data = findTestData("PlanFact"): null

10-01-2025T03:06:01 - [TEST_STEP][PASSED] - n = data.getRowNumbers() + 1: null

10-01-2025T03:06:01 - [TEST_STEP][PASSED] - year = todaysDate.substring(todaysDate.length() - 4, todaysDate.length()): null

10-01-2025T03:06:01 - [TEST_STEP][PASSED] - y = year.toInteger(): null

10-01-2025T03:06:01 - [TEST_STEP][PASSED] - m = getText(findTestObject("Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Фильтр Дата")): Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Фильтр Дата' is: '1, 2, 3 кв., Октябрь, Ноябрь 2024 года'

10-01-2025T03:06:01 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Фильтр Дата' is: '1, 2, 3 кв., Октябрь, Ноябрь 2024 года'

10-01-2025T03:06:01 - [TEST_STEP][PASSED] - m = m.substring(0, m.indexOf("2024")): null

10-01-2025T03:06:01 - [TEST_STEP][PASSED] - m = m.trim(): null

10-01-2025T03:06:01 - [TEST_STEP][PASSED] - dashboardName = "Выполнение бизнес-плана": null

10-01-2025T03:06:01 - [TEST_STEP][PASSED] - workbook01 = getWorkbook(excelFilePath): null

10-01-2025T03:06:01 - [TEST_STEP][PASSED] - sheet01 = getExcelSheet(workbook01, sheetName): null

10-01-2025T03:06:01 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 0, dashboardName): null

10-01-2025T03:06:01 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 1, dZO): null

10-01-2025T03:06:01 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 2, typeOfData): null

10-01-2025T03:06:01 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 3, typeOfData): null

10-01-2025T03:06:01 - [TEST_STEP][PASSED] - if (typeOfData == "План"): null

10-01-2025T03:06:01 - [TEST_STEP][PASSED] - else if (typeOfData == "Факт"): null

10-01-2025T03:06:01 - [TEST_STEP][PASSED] - else if (vidget.contains("электроэнергии") == true): null

10-01-2025T03:06:01 - [TEST_STEP][PASSED] - if (tabR == null): null

10-01-2025T03:06:01 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:06:01 - [TEST_STEP][PASSED] - if (tabR == "нет данных"): null

10-01-2025T03:06:01 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 4, "нет данных"): null

10-01-2025T03:06:01 - [TEST_STEP][PASSED] - if (tabB == null): null

10-01-2025T03:06:01 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:06:01 - [TEST_STEP][PASSED] - if (tabB == "нет данных"): null

10-01-2025T03:06:01 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:06:01 - [TEST_STEP][PASSED] - TB = tabB.toInteger(): null

10-01-2025T03:06:01 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 5, TB): null

10-01-2025T03:06:01 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 6, m): null

10-01-2025T03:06:01 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 7, y): null

10-01-2025T03:06:01 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 8, todaysDate): null

10-01-2025T03:06:01 - [TEST_STEP][PASSED] - n = n + 1: null

10-01-2025T03:06:01 - [TEST_STEP][PASSED] - saveWorkbook(excelFilePath, workbook01): null

10-01-2025T03:06:02 - [TEST_STEP][PASSED] - ii2 = a.indexOf("ПАО"): null

10-01-2025T03:06:02 - [TEST_STEP][PASSED] - if (ii2 == -1): null

10-01-2025T03:06:02 - [TEST_STEP][PASSED] - vidget = "Отклонения фактического уровня потерь от бизнес-плана": null

10-01-2025T03:06:02 - [TEST_STEP][PASSED] - typeOfData = "Коэффициент": null

10-01-2025T03:06:02 - [TEST_STEP][PASSED] - o1R = Geto1R(x = a): null

10-01-2025T03:06:02 - [TEST_STEP][PASSED] - i1 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:06:02 - [TEST_STEP][PASSED] - ii = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:06:02 - [TEST_STEP][PASSED] - for ([ii = 1, ii < 10, (ii++)]): null

10-01-2025T03:06:02 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:06:02 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:06:02 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:06:02 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:06:02 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:06:02 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:06:02 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:06:02 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:06:02 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:06:02 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:06:02 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:06:02 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:06:02 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:06:02 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:06:02 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:06:02 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:06:02 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:06:02 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:06:02 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:06:02 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:06:02 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:06:02 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:06:02 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:06:02 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:06:02 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:06:02 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:06:02 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:06:02 - [TEST_STEP][PASSED] - i1 = x.indexOf("/"): null

10-01-2025T03:06:02 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:06:02 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:06:02 - [TEST_STEP][PASSED] - return x: null

10-01-2025T03:06:02 - [TEST_STEP][PASSED] - o1B = Geto1B(x = b): null

10-01-2025T03:06:02 - [TEST_STEP][PASSED] - i1 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:06:02 - [TEST_STEP][PASSED] - ii = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:06:02 - [TEST_STEP][PASSED] - for ([ii = 1, ii < 10, (ii++)]): null

10-01-2025T03:06:02 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:06:02 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:06:02 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:06:02 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:06:02 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:06:02 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:06:02 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:06:02 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:06:02 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:06:02 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:06:02 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:06:02 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:06:02 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:06:02 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:06:02 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:06:02 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:06:02 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:06:02 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:06:02 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:06:02 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:06:02 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:06:02 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:06:02 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:06:02 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:06:02 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:06:02 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:06:02 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:06:02 - [TEST_STEP][PASSED] - i1 = x.indexOf("/"): null

10-01-2025T03:06:02 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:06:02 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:06:02 - [TEST_STEP][FAILED] - return x: null

10-01-2025T03:06:02 - [TEST_STEP][PASSED] - println(o1R + "/" + o1B): null

10-01-2025T03:06:02 - [TEST_STEP][FAILED] - if (verifyEqual(PercFactR, PercFactB) == false): null

10-01-2025T03:06:02 - [MESSAGE][FAILED] - Unable to verify equal between actual object 'нет данных' and expected object '7.58' (Root cause: com.kms.katalon.core.exception.StepFailedException: Actual object 'нет данных' and expected object '7.58' are not equal
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.doCall(VerifyEqualKeyword.groovy:58)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.call(VerifyEqualKeyword.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:75)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.verifyEqual(VerifyEqualKeyword.groovy:63)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.execute(VerifyEqualKeyword.groovy:44)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:74)
	at com.kms.katalon.core.keyword.BuiltinKeywords.verifyEqual(BuiltinKeywords.groovy:146)
	at jdk.internal.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at Выполнение бизнес-плана сверка дашбордов.CompareDZOData(Выполнение бизнес-плана сверка дашбордов:789)
	at Выполнение бизнес-плана сверка дашбордов.run(Выполнение бизнес-плана сверка дашбордов:613)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:448)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:439)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:418)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:410)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:285)
	at com.kms.katalon.core.common.CommonExecutor.accessTestCaseMainPhase(CommonExecutor.java:65)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:150)
	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:106)
	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:180)
	at TempTestSuite1736466949911.run(TempTestSuite1736466949911.groovy:35)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
)

10-01-2025T03:06:02 - [TEST_STEP][PASSED] - result = WriteToExcel(typeOfData, todaysDate, PercPlanR, PercPlanB, PercFactR, PercFactB, x, tabR, tabB, o1R, o1B, vidget): null

10-01-2025T03:06:02 - [TEST_STEP][PASSED] - iii = dZO.indexOf("/"): null

10-01-2025T03:06:02 - [TEST_STEP][PASSED] - println(iii): null

10-01-2025T03:06:02 - [TEST_STEP][PASSED] - dZO = dZO.substring(0, iii): null

10-01-2025T03:06:02 - [TEST_STEP][PASSED] - println(dZO): null

10-01-2025T03:06:02 - [TEST_STEP][PASSED] - println(PercPlanR): null

10-01-2025T03:06:02 - [TEST_STEP][PASSED] - println(PercPlanB): null

10-01-2025T03:06:02 - [TEST_STEP][PASSED] - println(PercFactR): null

10-01-2025T03:06:02 - [TEST_STEP][PASSED] - println(PercFactB): null

10-01-2025T03:06:02 - [TEST_STEP][PASSED] - println(tabR): null

10-01-2025T03:06:02 - [TEST_STEP][PASSED] - println(tabB): null

10-01-2025T03:06:02 - [TEST_STEP][PASSED] - println(o1R): null

10-01-2025T03:06:02 - [TEST_STEP][PASSED] - println(o1B): null

10-01-2025T03:06:02 - [TEST_STEP][PASSED] - PR = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:06:02 - [TEST_STEP][PASSED] - FR = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:06:02 - [TEST_STEP][PASSED] - PB = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:06:02 - [TEST_STEP][PASSED] - FB = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:06:02 - [TEST_STEP][PASSED] - TR = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:06:02 - [TEST_STEP][PASSED] - TB = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:06:02 - [TEST_STEP][PASSED] - sheetName = "Sheet1": null

10-01-2025T03:06:02 - [TEST_STEP][PASSED] - data = findTestData("PlanFact"): null

10-01-2025T03:06:02 - [TEST_STEP][PASSED] - n = data.getRowNumbers() + 1: null

10-01-2025T03:06:02 - [TEST_STEP][PASSED] - year = todaysDate.substring(todaysDate.length() - 4, todaysDate.length()): null

10-01-2025T03:06:02 - [TEST_STEP][PASSED] - y = year.toInteger(): null

10-01-2025T03:06:02 - [TEST_STEP][PASSED] - m = getText(findTestObject("Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Фильтр Дата")): Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Фильтр Дата' is: '1, 2, 3 кв., Октябрь, Ноябрь 2024 года'

10-01-2025T03:06:02 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Фильтр Дата' is: '1, 2, 3 кв., Октябрь, Ноябрь 2024 года'

10-01-2025T03:06:02 - [TEST_STEP][PASSED] - m = m.substring(0, m.indexOf("2024")): null

10-01-2025T03:06:02 - [TEST_STEP][PASSED] - m = m.trim(): null

10-01-2025T03:06:02 - [TEST_STEP][PASSED] - dashboardName = "Выполнение бизнес-плана": null

10-01-2025T03:06:02 - [TEST_STEP][PASSED] - workbook01 = getWorkbook(excelFilePath): null

10-01-2025T03:06:02 - [TEST_STEP][PASSED] - sheet01 = getExcelSheet(workbook01, sheetName): null

10-01-2025T03:06:02 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 0, dashboardName): null

10-01-2025T03:06:02 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 1, dZO): null

10-01-2025T03:06:02 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 2, typeOfData): null

10-01-2025T03:06:02 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 3, typeOfData): null

10-01-2025T03:06:02 - [TEST_STEP][PASSED] - if (typeOfData == "План"): null

10-01-2025T03:06:02 - [TEST_STEP][PASSED] - else if (typeOfData == "Факт"): null

10-01-2025T03:06:02 - [TEST_STEP][PASSED] - else if (vidget.contains("электроэнергии") == true): null

10-01-2025T03:06:02 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:06:02 - [TEST_STEP][PASSED] - if (o1R == null): null

10-01-2025T03:06:02 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:06:02 - [TEST_STEP][PASSED] - if (o1R == "нет данных"): null

10-01-2025T03:06:02 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 4, "нет данных"): null

10-01-2025T03:06:02 - [TEST_STEP][PASSED] - if (o1B == null): null

10-01-2025T03:06:02 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:06:02 - [TEST_STEP][PASSED] - if (o1B == "нет данных"): null

10-01-2025T03:06:02 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:06:02 - [TEST_STEP][PASSED] - FB = o1B.toDouble(): null

10-01-2025T03:06:02 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 5, FB): null

10-01-2025T03:06:02 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 6, m): null

10-01-2025T03:06:02 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 7, y): null

10-01-2025T03:06:02 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 8, todaysDate): null

10-01-2025T03:06:02 - [TEST_STEP][PASSED] - n = n + 1: null

10-01-2025T03:06:02 - [TEST_STEP][FAILED] - saveWorkbook(excelFilePath, workbook01): null

10-01-2025T03:06:02 - [TEST_STEP][FAILED] - if (verifyEqual(sKR, sKB) == false): null

10-01-2025T03:06:02 - [MESSAGE][FAILED] - Unable to verify equal between actual object 'Россети Северный Кавказ (ГК)/23.32/27.05/20651499/15078002/5573496/19485633/14949980/4535653/3.73' and expected object 'Россети Северный Кавказ (ГК)/23.32/27.05/20498248/14954088/5544160/19485633/14949980/4535653/3.73' (Root cause: com.kms.katalon.core.exception.StepFailedException: Actual object 'Россети Северный Кавказ (ГК)/23.32/27.05/20651499/15078002/5573496/19485633/14949980/4535653/3.73' and expected object 'Россети Северный Кавказ (ГК)/23.32/27.05/20498248/14954088/5544160/19485633/14949980/4535653/3.73' are not equal
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.doCall(VerifyEqualKeyword.groovy:58)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.call(VerifyEqualKeyword.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:75)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.verifyEqual(VerifyEqualKeyword.groovy:63)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.execute(VerifyEqualKeyword.groovy:44)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:74)
	at com.kms.katalon.core.keyword.BuiltinKeywords.verifyEqual(BuiltinKeywords.groovy:146)
	at jdk.internal.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at Выполнение бизнес-плана сверка дашбордов.run(Выполнение бизнес-плана сверка дашбордов:617)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:448)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:439)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:418)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:410)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:285)
	at com.kms.katalon.core.common.CommonExecutor.accessTestCaseMainPhase(CommonExecutor.java:65)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:150)
	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:106)
	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:180)
	at TempTestSuite1736466949911.run(TempTestSuite1736466949911.groovy:35)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
)

10-01-2025T03:06:02 - [TEST_STEP][PASSED] - result = CompareDZOData(a = sKR, b = sKB, dZO, typeOfData, PercPlanR, PercPlanB, PercFactR, PercFactB, todaysDate, x, vidget, tabR, tabB, o1R, o1B): null

10-01-2025T03:06:02 - [TEST_STEP][PASSED] - ii2 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:06:02 - [TEST_STEP][FAILED] - if (verifyEqual(a, b) == false): null

10-01-2025T03:06:02 - [MESSAGE][FAILED] - Unable to verify equal between actual object 'Россети Северный Кавказ (ГК)/23.32/27.05/20651499/15078002/5573496/19485633/14949980/4535653/3.73' and expected object 'Россети Северный Кавказ (ГК)/23.32/27.05/20498248/14954088/5544160/19485633/14949980/4535653/3.73' (Root cause: com.kms.katalon.core.exception.StepFailedException: Actual object 'Россети Северный Кавказ (ГК)/23.32/27.05/20651499/15078002/5573496/19485633/14949980/4535653/3.73' and expected object 'Россети Северный Кавказ (ГК)/23.32/27.05/20498248/14954088/5544160/19485633/14949980/4535653/3.73' are not equal
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.doCall(VerifyEqualKeyword.groovy:58)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.call(VerifyEqualKeyword.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:75)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.verifyEqual(VerifyEqualKeyword.groovy:63)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.execute(VerifyEqualKeyword.groovy:44)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:74)
	at com.kms.katalon.core.keyword.BuiltinKeywords.verifyEqual(BuiltinKeywords.groovy:146)
	at jdk.internal.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at Выполнение бизнес-плана сверка дашбордов.CompareDZOData(Выполнение бизнес-плана сверка дашбордов:673)
	at Выполнение бизнес-плана сверка дашбордов.run(Выполнение бизнес-плана сверка дашбордов:618)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:448)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:439)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:418)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:410)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:285)
	at com.kms.katalon.core.common.CommonExecutor.accessTestCaseMainPhase(CommonExecutor.java:65)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:150)
	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:106)
	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:180)
	at TempTestSuite1736466949911.run(TempTestSuite1736466949911.groovy:35)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
)

10-01-2025T03:06:02 - [TEST_STEP][PASSED] - vidget = "Уровень потерь электроэнергии": null

10-01-2025T03:06:02 - [TEST_STEP][PASSED] - typeOfData = "План": null

10-01-2025T03:06:02 - [TEST_STEP][PASSED] - PercPlanR = GetPercPlanR(x = a): null

10-01-2025T03:06:02 - [TEST_STEP][PASSED] - i1 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:06:02 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:06:02 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:06:02 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:06:02 - [TEST_STEP][PASSED] - i1 = x.indexOf("/"): null

10-01-2025T03:06:02 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:06:02 - [TEST_STEP][PASSED] - x = x.substring(0, i1): null

10-01-2025T03:06:02 - [TEST_STEP][PASSED] - return x: null

10-01-2025T03:06:02 - [TEST_STEP][PASSED] - PercPlanB = GetPercPlanB(x = b): null

10-01-2025T03:06:02 - [TEST_STEP][PASSED] - i1 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:06:02 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:06:02 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:06:02 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:06:02 - [TEST_STEP][PASSED] - i1 = x.indexOf("/"): null

10-01-2025T03:06:02 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:06:02 - [TEST_STEP][PASSED] - x = x.substring(0, i1): null

10-01-2025T03:06:02 - [TEST_STEP][PASSED] - return x: null

10-01-2025T03:06:02 - [TEST_STEP][PASSED] - if (verifyEqual(PercPlanR, PercPlanB) == false): Actual object '23.32' and expected object '23.32' are equal

10-01-2025T03:06:02 - [MESSAGE][PASSED] - Actual object '23.32' and expected object '23.32' are equal

10-01-2025T03:06:02 - [TEST_STEP][PASSED] - typeOfData = "Факт": null

10-01-2025T03:06:02 - [TEST_STEP][PASSED] - PercFactR = GetPercFactR(x = a): null

10-01-2025T03:06:02 - [TEST_STEP][PASSED] - i1 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:06:02 - [TEST_STEP][PASSED] - ii = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:06:02 - [TEST_STEP][PASSED] - for ([ii = 1, ii < 3, (ii++)]): null

10-01-2025T03:06:02 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:06:02 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:06:02 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:06:02 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:06:02 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:06:02 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:06:02 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:06:02 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:06:02 - [TEST_STEP][PASSED] - i1 = x.indexOf("/"): null

10-01-2025T03:06:02 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:06:02 - [TEST_STEP][PASSED] - x = x.substring(0, i1): null

10-01-2025T03:06:02 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:06:02 - [TEST_STEP][PASSED] - return x: null

10-01-2025T03:06:02 - [TEST_STEP][PASSED] - PercFactB = GetPercFactB(x = b): null

10-01-2025T03:06:02 - [TEST_STEP][PASSED] - i1 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:06:02 - [TEST_STEP][PASSED] - ii = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:06:02 - [TEST_STEP][PASSED] - for ([ii = 1, ii < 3, (ii++)]): null

10-01-2025T03:06:02 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:06:02 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:06:02 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:06:02 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:06:02 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:06:02 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:06:02 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:06:02 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:06:02 - [TEST_STEP][PASSED] - i1 = x.indexOf("/"): null

10-01-2025T03:06:02 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:06:02 - [TEST_STEP][PASSED] - x = x.substring(0, i1): null

10-01-2025T03:06:02 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:06:02 - [TEST_STEP][PASSED] - return x: null

10-01-2025T03:06:02 - [TEST_STEP][PASSED] - if (verifyEqual(PercFactR, PercFactB) == false): Actual object '27.05' and expected object '27.05' are equal

10-01-2025T03:06:02 - [MESSAGE][PASSED] - Actual object '27.05' and expected object '27.05' are equal

10-01-2025T03:06:02 - [TEST_STEP][PASSED] - vidget = "Показатели баланса электроэнергии по ДЗО – Факт": null

10-01-2025T03:06:02 - [TEST_STEP][PASSED] - typeOfData = "Факт Отпуск в сеть": null

10-01-2025T03:06:02 - [TEST_STEP][PASSED] - tabR = GetOvSFactR(x = a): null

10-01-2025T03:06:02 - [TEST_STEP][PASSED] - i1 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:06:02 - [TEST_STEP][PASSED] - ii = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:06:02 - [TEST_STEP][PASSED] - for ([ii = 1, ii < 4, (ii++)]): null

10-01-2025T03:06:02 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:06:02 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:06:02 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:06:02 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:06:02 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:06:02 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:06:02 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:06:02 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:06:02 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:06:02 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:06:02 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:06:02 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:06:02 - [TEST_STEP][PASSED] - i1 = x.indexOf("/"): null

10-01-2025T03:06:02 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:06:02 - [TEST_STEP][PASSED] - x = x.substring(0, i1): null

10-01-2025T03:06:02 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:06:02 - [TEST_STEP][PASSED] - return x: null

10-01-2025T03:06:02 - [TEST_STEP][PASSED] - tabB = GetOvSFactB(x = b): null

10-01-2025T03:06:02 - [TEST_STEP][PASSED] - i1 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:06:02 - [TEST_STEP][PASSED] - ii = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:06:02 - [TEST_STEP][PASSED] - for ([ii = 1, ii < 4, (ii++)]): null

10-01-2025T03:06:02 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:06:02 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:06:02 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:06:02 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:06:02 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:06:02 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:06:02 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:06:02 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:06:02 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:06:02 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:06:02 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:06:02 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:06:02 - [TEST_STEP][PASSED] - i1 = x.indexOf("/"): null

10-01-2025T03:06:02 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:06:02 - [TEST_STEP][PASSED] - x = x.substring(0, i1): null

10-01-2025T03:06:02 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:06:02 - [TEST_STEP][FAILED] - return x: null

10-01-2025T03:06:02 - [TEST_STEP][FAILED] - if (verifyEqual(tabR, tabB) == false): null

10-01-2025T03:06:02 - [MESSAGE][FAILED] - Unable to verify equal between actual object '20651499' and expected object '20498248' (Root cause: com.kms.katalon.core.exception.StepFailedException: Actual object '20651499' and expected object '20498248' are not equal
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.doCall(VerifyEqualKeyword.groovy:58)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.call(VerifyEqualKeyword.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:75)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.verifyEqual(VerifyEqualKeyword.groovy:63)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.execute(VerifyEqualKeyword.groovy:44)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:74)
	at com.kms.katalon.core.keyword.BuiltinKeywords.verifyEqual(BuiltinKeywords.groovy:146)
	at jdk.internal.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at Выполнение бизнес-плана сверка дашбордов.CompareDZOData(Выполнение бизнес-плана сверка дашбордов:706)
	at Выполнение бизнес-плана сверка дашбордов.run(Выполнение бизнес-плана сверка дашбордов:618)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:448)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:439)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:418)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:410)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:285)
	at com.kms.katalon.core.common.CommonExecutor.accessTestCaseMainPhase(CommonExecutor.java:65)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:150)
	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:106)
	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:180)
	at TempTestSuite1736466949911.run(TempTestSuite1736466949911.groovy:35)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
)

10-01-2025T03:06:02 - [TEST_STEP][PASSED] - result = WriteToExcel(typeOfData, todaysDate, PercPlanR, PercPlanB, PercFactR, PercFactB, x, tabR, tabB, o1R, o1B, vidget): null

10-01-2025T03:06:02 - [TEST_STEP][PASSED] - iii = dZO.indexOf("/"): null

10-01-2025T03:06:02 - [TEST_STEP][PASSED] - println(iii): null

10-01-2025T03:06:02 - [TEST_STEP][PASSED] - dZO = dZO.substring(0, iii): null

10-01-2025T03:06:02 - [TEST_STEP][PASSED] - println(dZO): null

10-01-2025T03:06:02 - [TEST_STEP][PASSED] - println(PercPlanR): null

10-01-2025T03:06:02 - [TEST_STEP][PASSED] - println(PercPlanB): null

10-01-2025T03:06:02 - [TEST_STEP][PASSED] - println(PercFactR): null

10-01-2025T03:06:02 - [TEST_STEP][PASSED] - println(PercFactB): null

10-01-2025T03:06:02 - [TEST_STEP][PASSED] - println(tabR): null

10-01-2025T03:06:02 - [TEST_STEP][PASSED] - println(tabB): null

10-01-2025T03:06:02 - [TEST_STEP][PASSED] - println(o1R): null

10-01-2025T03:06:02 - [TEST_STEP][PASSED] - println(o1B): null

10-01-2025T03:06:02 - [TEST_STEP][PASSED] - PR = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:06:02 - [TEST_STEP][PASSED] - FR = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:06:02 - [TEST_STEP][PASSED] - PB = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:06:02 - [TEST_STEP][PASSED] - FB = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:06:02 - [TEST_STEP][PASSED] - TR = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:06:02 - [TEST_STEP][PASSED] - TB = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:06:02 - [TEST_STEP][PASSED] - sheetName = "Sheet1": null

10-01-2025T03:06:02 - [TEST_STEP][PASSED] - data = findTestData("PlanFact"): null

10-01-2025T03:06:03 - [TEST_STEP][PASSED] - n = data.getRowNumbers() + 1: null

10-01-2025T03:06:03 - [TEST_STEP][PASSED] - year = todaysDate.substring(todaysDate.length() - 4, todaysDate.length()): null

10-01-2025T03:06:03 - [TEST_STEP][PASSED] - y = year.toInteger(): null

10-01-2025T03:06:03 - [TEST_STEP][PASSED] - m = getText(findTestObject("Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Фильтр Дата")): Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Фильтр Дата' is: '1, 2, 3 кв., Октябрь, Ноябрь 2024 года'

10-01-2025T03:06:03 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Фильтр Дата' is: '1, 2, 3 кв., Октябрь, Ноябрь 2024 года'

10-01-2025T03:06:03 - [TEST_STEP][PASSED] - m = m.substring(0, m.indexOf("2024")): null

10-01-2025T03:06:03 - [TEST_STEP][PASSED] - m = m.trim(): null

10-01-2025T03:06:03 - [TEST_STEP][PASSED] - dashboardName = "Выполнение бизнес-плана": null

10-01-2025T03:06:03 - [TEST_STEP][PASSED] - workbook01 = getWorkbook(excelFilePath): null

10-01-2025T03:06:03 - [TEST_STEP][PASSED] - sheet01 = getExcelSheet(workbook01, sheetName): null

10-01-2025T03:06:03 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 0, dashboardName): null

10-01-2025T03:06:03 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 1, dZO): null

10-01-2025T03:06:03 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 2, typeOfData): null

10-01-2025T03:06:03 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 3, typeOfData): null

10-01-2025T03:06:03 - [TEST_STEP][PASSED] - if (typeOfData == "План"): null

10-01-2025T03:06:03 - [TEST_STEP][PASSED] - else if (typeOfData == "Факт"): null

10-01-2025T03:06:03 - [TEST_STEP][PASSED] - else if (vidget.contains("электроэнергии") == true): null

10-01-2025T03:06:03 - [TEST_STEP][PASSED] - if (tabR == null): null

10-01-2025T03:06:03 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:06:03 - [TEST_STEP][PASSED] - if (tabR == "нет данных"): null

10-01-2025T03:06:03 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:06:03 - [TEST_STEP][PASSED] - TR = tabR.toInteger(): null

10-01-2025T03:06:03 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 4, TR): null

10-01-2025T03:06:03 - [TEST_STEP][PASSED] - if (tabB == null): null

10-01-2025T03:06:03 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:06:03 - [TEST_STEP][PASSED] - if (tabB == "нет данных"): null

10-01-2025T03:06:03 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:06:03 - [TEST_STEP][PASSED] - TB = tabB.toInteger(): null

10-01-2025T03:06:03 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 5, TB): null

10-01-2025T03:06:03 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 6, m): null

10-01-2025T03:06:03 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 7, y): null

10-01-2025T03:06:03 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 8, todaysDate): null

10-01-2025T03:06:03 - [TEST_STEP][PASSED] - n = n + 1: null

10-01-2025T03:06:03 - [TEST_STEP][PASSED] - saveWorkbook(excelFilePath, workbook01): null

10-01-2025T03:06:03 - [TEST_STEP][PASSED] - typeOfData = "Факт Отпуск из сети": null

10-01-2025T03:06:03 - [TEST_STEP][PASSED] - tabR = GetOiSFactR(x = a): null

10-01-2025T03:06:03 - [TEST_STEP][PASSED] - i1 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:06:03 - [TEST_STEP][PASSED] - ii = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:06:03 - [TEST_STEP][PASSED] - for ([ii = 1, ii < 5, (ii++)]): null

10-01-2025T03:06:03 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:06:03 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:06:03 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:06:03 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:06:03 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:06:03 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:06:03 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:06:03 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:06:03 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:06:03 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:06:03 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:06:03 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:06:03 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:06:03 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:06:03 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:06:03 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:06:03 - [TEST_STEP][PASSED] - i1 = x.indexOf("/"): null

10-01-2025T03:06:03 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:06:03 - [TEST_STEP][PASSED] - x = x.substring(0, i1): null

10-01-2025T03:06:03 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:06:03 - [TEST_STEP][PASSED] - return x: null

10-01-2025T03:06:03 - [TEST_STEP][PASSED] - tabB = GetOiSFactB(x = b): null

10-01-2025T03:06:03 - [TEST_STEP][PASSED] - i1 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:06:03 - [TEST_STEP][PASSED] - ii = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:06:03 - [TEST_STEP][PASSED] - for ([ii = 1, ii < 5, (ii++)]): null

10-01-2025T03:06:03 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:06:03 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:06:03 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:06:03 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:06:03 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:06:03 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:06:03 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:06:03 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:06:03 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:06:03 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:06:03 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:06:03 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:06:03 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:06:03 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:06:03 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:06:03 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:06:03 - [TEST_STEP][PASSED] - i1 = x.indexOf("/"): null

10-01-2025T03:06:03 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:06:03 - [TEST_STEP][PASSED] - x = x.substring(0, i1): null

10-01-2025T03:06:03 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:06:03 - [TEST_STEP][FAILED] - return x: null

10-01-2025T03:06:03 - [TEST_STEP][FAILED] - if (verifyEqual(tabR, tabB) == false): null

10-01-2025T03:06:03 - [MESSAGE][FAILED] - Unable to verify equal between actual object '15078002' and expected object '14954088' (Root cause: com.kms.katalon.core.exception.StepFailedException: Actual object '15078002' and expected object '14954088' are not equal
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.doCall(VerifyEqualKeyword.groovy:58)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.call(VerifyEqualKeyword.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:75)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.verifyEqual(VerifyEqualKeyword.groovy:63)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.execute(VerifyEqualKeyword.groovy:44)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:74)
	at com.kms.katalon.core.keyword.BuiltinKeywords.verifyEqual(BuiltinKeywords.groovy:146)
	at jdk.internal.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at Выполнение бизнес-плана сверка дашбордов.CompareDZOData(Выполнение бизнес-плана сверка дашбордов:717)
	at Выполнение бизнес-плана сверка дашбордов.run(Выполнение бизнес-плана сверка дашбордов:618)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:448)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:439)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:418)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:410)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:285)
	at com.kms.katalon.core.common.CommonExecutor.accessTestCaseMainPhase(CommonExecutor.java:65)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:150)
	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:106)
	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:180)
	at TempTestSuite1736466949911.run(TempTestSuite1736466949911.groovy:35)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
)

10-01-2025T03:06:03 - [TEST_STEP][PASSED] - result = WriteToExcel(typeOfData, todaysDate, PercPlanR, PercPlanB, PercFactR, PercFactB, x, tabR, tabB, o1R, o1B, vidget): null

10-01-2025T03:06:03 - [TEST_STEP][PASSED] - iii = dZO.indexOf("/"): null

10-01-2025T03:06:03 - [TEST_STEP][PASSED] - println(iii): null

10-01-2025T03:06:03 - [TEST_STEP][PASSED] - dZO = dZO.substring(0, iii): null

10-01-2025T03:06:03 - [TEST_STEP][PASSED] - println(dZO): null

10-01-2025T03:06:03 - [TEST_STEP][PASSED] - println(PercPlanR): null

10-01-2025T03:06:03 - [TEST_STEP][PASSED] - println(PercPlanB): null

10-01-2025T03:06:03 - [TEST_STEP][PASSED] - println(PercFactR): null

10-01-2025T03:06:03 - [TEST_STEP][PASSED] - println(PercFactB): null

10-01-2025T03:06:03 - [TEST_STEP][PASSED] - println(tabR): null

10-01-2025T03:06:03 - [TEST_STEP][PASSED] - println(tabB): null

10-01-2025T03:06:03 - [TEST_STEP][PASSED] - println(o1R): null

10-01-2025T03:06:03 - [TEST_STEP][PASSED] - println(o1B): null

10-01-2025T03:06:03 - [TEST_STEP][PASSED] - PR = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:06:03 - [TEST_STEP][PASSED] - FR = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:06:03 - [TEST_STEP][PASSED] - PB = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:06:03 - [TEST_STEP][PASSED] - FB = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:06:03 - [TEST_STEP][PASSED] - TR = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:06:03 - [TEST_STEP][PASSED] - TB = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:06:03 - [TEST_STEP][PASSED] - sheetName = "Sheet1": null

10-01-2025T03:06:03 - [TEST_STEP][PASSED] - data = findTestData("PlanFact"): null

10-01-2025T03:06:03 - [TEST_STEP][PASSED] - n = data.getRowNumbers() + 1: null

10-01-2025T03:06:03 - [TEST_STEP][PASSED] - year = todaysDate.substring(todaysDate.length() - 4, todaysDate.length()): null

10-01-2025T03:06:03 - [TEST_STEP][PASSED] - y = year.toInteger(): null

10-01-2025T03:06:03 - [TEST_STEP][PASSED] - m = getText(findTestObject("Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Фильтр Дата")): Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Фильтр Дата' is: '1, 2, 3 кв., Октябрь, Ноябрь 2024 года'

10-01-2025T03:06:03 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Фильтр Дата' is: '1, 2, 3 кв., Октябрь, Ноябрь 2024 года'

10-01-2025T03:06:03 - [TEST_STEP][PASSED] - m = m.substring(0, m.indexOf("2024")): null

10-01-2025T03:06:03 - [TEST_STEP][PASSED] - m = m.trim(): null

10-01-2025T03:06:03 - [TEST_STEP][PASSED] - dashboardName = "Выполнение бизнес-плана": null

10-01-2025T03:06:03 - [TEST_STEP][PASSED] - workbook01 = getWorkbook(excelFilePath): null

10-01-2025T03:06:04 - [TEST_STEP][PASSED] - sheet01 = getExcelSheet(workbook01, sheetName): null

10-01-2025T03:06:04 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 0, dashboardName): null

10-01-2025T03:06:04 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 1, dZO): null

10-01-2025T03:06:04 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 2, typeOfData): null

10-01-2025T03:06:04 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 3, typeOfData): null

10-01-2025T03:06:04 - [TEST_STEP][PASSED] - if (typeOfData == "План"): null

10-01-2025T03:06:04 - [TEST_STEP][PASSED] - else if (typeOfData == "Факт"): null

10-01-2025T03:06:04 - [TEST_STEP][PASSED] - else if (vidget.contains("электроэнергии") == true): null

10-01-2025T03:06:04 - [TEST_STEP][PASSED] - if (tabR == null): null

10-01-2025T03:06:04 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:06:04 - [TEST_STEP][PASSED] - if (tabR == "нет данных"): null

10-01-2025T03:06:04 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:06:04 - [TEST_STEP][PASSED] - TR = tabR.toInteger(): null

10-01-2025T03:06:04 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 4, TR): null

10-01-2025T03:06:04 - [TEST_STEP][PASSED] - if (tabB == null): null

10-01-2025T03:06:04 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:06:04 - [TEST_STEP][PASSED] - if (tabB == "нет данных"): null

10-01-2025T03:06:04 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:06:04 - [TEST_STEP][PASSED] - TB = tabB.toInteger(): null

10-01-2025T03:06:04 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 5, TB): null

10-01-2025T03:06:04 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 6, m): null

10-01-2025T03:06:04 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 7, y): null

10-01-2025T03:06:04 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 8, todaysDate): null

10-01-2025T03:06:04 - [TEST_STEP][PASSED] - n = n + 1: null

10-01-2025T03:06:04 - [TEST_STEP][PASSED] - saveWorkbook(excelFilePath, workbook01): null

10-01-2025T03:06:04 - [TEST_STEP][PASSED] - typeOfData = "Факт Потери": null

10-01-2025T03:06:04 - [TEST_STEP][PASSED] - tabR = GetPFactR(x = a): null

10-01-2025T03:06:04 - [TEST_STEP][PASSED] - i1 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:06:04 - [TEST_STEP][PASSED] - ii = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:06:04 - [TEST_STEP][PASSED] - for ([ii = 1, ii < 6, (ii++)]): null

10-01-2025T03:06:04 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:06:04 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:06:04 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:06:04 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:06:04 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:06:04 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:06:04 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:06:04 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:06:04 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:06:04 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:06:04 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:06:04 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:06:04 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:06:04 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:06:04 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:06:04 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:06:04 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:06:04 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:06:04 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:06:04 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:06:04 - [TEST_STEP][PASSED] - i1 = x.indexOf("/"): null

10-01-2025T03:06:04 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:06:04 - [TEST_STEP][PASSED] - x = x.substring(0, i1): null

10-01-2025T03:06:04 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:06:04 - [TEST_STEP][PASSED] - return x: null

10-01-2025T03:06:04 - [TEST_STEP][PASSED] - tabB = GetPFactB(x = b): null

10-01-2025T03:06:04 - [TEST_STEP][PASSED] - i1 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:06:04 - [TEST_STEP][PASSED] - ii = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:06:04 - [TEST_STEP][PASSED] - for ([ii = 1, ii < 6, (ii++)]): null

10-01-2025T03:06:04 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:06:04 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:06:04 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:06:04 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:06:04 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:06:04 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:06:04 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:06:04 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:06:04 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:06:04 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:06:04 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:06:04 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:06:04 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:06:04 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:06:04 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:06:04 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:06:04 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:06:04 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:06:04 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:06:04 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:06:04 - [TEST_STEP][PASSED] - i1 = x.indexOf("/"): null

10-01-2025T03:06:04 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:06:04 - [TEST_STEP][PASSED] - x = x.substring(0, i1): null

10-01-2025T03:06:04 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:06:04 - [TEST_STEP][FAILED] - return x: null

10-01-2025T03:06:04 - [TEST_STEP][PASSED] - println(tabR + "/" + tabB): null

10-01-2025T03:06:04 - [TEST_STEP][FAILED] - if (verifyEqual(tabR, tabB) == false): null

10-01-2025T03:06:04 - [MESSAGE][FAILED] - Unable to verify equal between actual object '5573496' and expected object '5544160' (Root cause: com.kms.katalon.core.exception.StepFailedException: Actual object '5573496' and expected object '5544160' are not equal
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.doCall(VerifyEqualKeyword.groovy:58)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.call(VerifyEqualKeyword.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:75)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.verifyEqual(VerifyEqualKeyword.groovy:63)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.execute(VerifyEqualKeyword.groovy:44)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:74)
	at com.kms.katalon.core.keyword.BuiltinKeywords.verifyEqual(BuiltinKeywords.groovy:146)
	at jdk.internal.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at Выполнение бизнес-плана сверка дашбордов.CompareDZOData(Выполнение бизнес-плана сверка дашбордов:730)
	at Выполнение бизнес-плана сверка дашбордов.run(Выполнение бизнес-плана сверка дашбордов:618)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:448)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:439)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:418)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:410)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:285)
	at com.kms.katalon.core.common.CommonExecutor.accessTestCaseMainPhase(CommonExecutor.java:65)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:150)
	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:106)
	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:180)
	at TempTestSuite1736466949911.run(TempTestSuite1736466949911.groovy:35)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
)

10-01-2025T03:06:04 - [TEST_STEP][PASSED] - result = WriteToExcel(typeOfData, todaysDate, PercPlanR, PercPlanB, PercFactR, PercFactB, x, tabR, tabB, o1R, o1B, vidget): null

10-01-2025T03:06:04 - [TEST_STEP][PASSED] - iii = dZO.indexOf("/"): null

10-01-2025T03:06:04 - [TEST_STEP][PASSED] - println(iii): null

10-01-2025T03:06:04 - [TEST_STEP][PASSED] - dZO = dZO.substring(0, iii): null

10-01-2025T03:06:04 - [TEST_STEP][PASSED] - println(dZO): null

10-01-2025T03:06:04 - [TEST_STEP][PASSED] - println(PercPlanR): null

10-01-2025T03:06:04 - [TEST_STEP][PASSED] - println(PercPlanB): null

10-01-2025T03:06:04 - [TEST_STEP][PASSED] - println(PercFactR): null

10-01-2025T03:06:04 - [TEST_STEP][PASSED] - println(PercFactB): null

10-01-2025T03:06:04 - [TEST_STEP][PASSED] - println(tabR): null

10-01-2025T03:06:04 - [TEST_STEP][PASSED] - println(tabB): null

10-01-2025T03:06:04 - [TEST_STEP][PASSED] - println(o1R): null

10-01-2025T03:06:04 - [TEST_STEP][PASSED] - println(o1B): null

10-01-2025T03:06:04 - [TEST_STEP][PASSED] - PR = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:06:04 - [TEST_STEP][PASSED] - FR = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:06:04 - [TEST_STEP][PASSED] - PB = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:06:04 - [TEST_STEP][PASSED] - FB = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:06:04 - [TEST_STEP][PASSED] - TR = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:06:04 - [TEST_STEP][PASSED] - TB = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:06:04 - [TEST_STEP][PASSED] - sheetName = "Sheet1": null

10-01-2025T03:06:04 - [TEST_STEP][PASSED] - data = findTestData("PlanFact"): null

10-01-2025T03:06:04 - [TEST_STEP][PASSED] - n = data.getRowNumbers() + 1: null

10-01-2025T03:06:04 - [TEST_STEP][PASSED] - year = todaysDate.substring(todaysDate.length() - 4, todaysDate.length()): null

10-01-2025T03:06:04 - [TEST_STEP][PASSED] - y = year.toInteger(): null

10-01-2025T03:06:04 - [TEST_STEP][PASSED] - m = getText(findTestObject("Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Фильтр Дата")): Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Фильтр Дата' is: '1, 2, 3 кв., Октябрь, Ноябрь 2024 года'

10-01-2025T03:06:04 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Фильтр Дата' is: '1, 2, 3 кв., Октябрь, Ноябрь 2024 года'

10-01-2025T03:06:04 - [TEST_STEP][PASSED] - m = m.substring(0, m.indexOf("2024")): null

10-01-2025T03:06:04 - [TEST_STEP][PASSED] - m = m.trim(): null

10-01-2025T03:06:04 - [TEST_STEP][PASSED] - dashboardName = "Выполнение бизнес-плана": null

10-01-2025T03:06:04 - [TEST_STEP][PASSED] - workbook01 = getWorkbook(excelFilePath): null

10-01-2025T03:06:04 - [TEST_STEP][PASSED] - sheet01 = getExcelSheet(workbook01, sheetName): null

10-01-2025T03:06:04 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 0, dashboardName): null

10-01-2025T03:06:04 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 1, dZO): null

10-01-2025T03:06:04 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 2, typeOfData): null

10-01-2025T03:06:04 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 3, typeOfData): null

10-01-2025T03:06:04 - [TEST_STEP][PASSED] - if (typeOfData == "План"): null

10-01-2025T03:06:04 - [TEST_STEP][PASSED] - else if (typeOfData == "Факт"): null

10-01-2025T03:06:04 - [TEST_STEP][PASSED] - else if (vidget.contains("электроэнергии") == true): null

10-01-2025T03:06:04 - [TEST_STEP][PASSED] - if (tabR == null): null

10-01-2025T03:06:04 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:06:04 - [TEST_STEP][PASSED] - if (tabR == "нет данных"): null

10-01-2025T03:06:04 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:06:04 - [TEST_STEP][PASSED] - TR = tabR.toInteger(): null

10-01-2025T03:06:04 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 4, TR): null

10-01-2025T03:06:04 - [TEST_STEP][PASSED] - if (tabB == null): null

10-01-2025T03:06:04 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:06:04 - [TEST_STEP][PASSED] - if (tabB == "нет данных"): null

10-01-2025T03:06:04 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:06:04 - [TEST_STEP][PASSED] - TB = tabB.toInteger(): null

10-01-2025T03:06:04 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 5, TB): null

10-01-2025T03:06:04 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 6, m): null

10-01-2025T03:06:04 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 7, y): null

10-01-2025T03:06:04 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 8, todaysDate): null

10-01-2025T03:06:04 - [TEST_STEP][PASSED] - n = n + 1: null

10-01-2025T03:06:04 - [TEST_STEP][PASSED] - saveWorkbook(excelFilePath, workbook01): null

10-01-2025T03:06:05 - [TEST_STEP][PASSED] - vidget = "Показатели баланса электроэнергии по ДЗО – План": null

10-01-2025T03:06:05 - [TEST_STEP][PASSED] - typeOfData = "План Отпуск в сеть": null

10-01-2025T03:06:05 - [TEST_STEP][PASSED] - tabR = GetOvSPlanR(x = a): null

10-01-2025T03:06:05 - [TEST_STEP][PASSED] - i1 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:06:05 - [TEST_STEP][PASSED] - ii = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:06:05 - [TEST_STEP][PASSED] - for ([ii = 1, ii < 7, (ii++)]): null

10-01-2025T03:06:05 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:06:05 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:06:05 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:06:05 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:06:05 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:06:05 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:06:05 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:06:05 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:06:05 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:06:05 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:06:05 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:06:05 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:06:05 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:06:05 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:06:05 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:06:05 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:06:05 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:06:05 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:06:05 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:06:05 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:06:05 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:06:05 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:06:05 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:06:05 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:06:05 - [TEST_STEP][PASSED] - i1 = x.indexOf("/"): null

10-01-2025T03:06:05 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:06:05 - [TEST_STEP][PASSED] - x = x.substring(0, i1): null

10-01-2025T03:06:05 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:06:05 - [TEST_STEP][PASSED] - return x: null

10-01-2025T03:06:05 - [TEST_STEP][PASSED] - tabB = GetOvSPlanB(x = b): null

10-01-2025T03:06:05 - [TEST_STEP][PASSED] - i1 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:06:05 - [TEST_STEP][PASSED] - ii = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:06:05 - [TEST_STEP][PASSED] - for ([ii = 1, ii < 7, (ii++)]): null

10-01-2025T03:06:05 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:06:05 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:06:05 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:06:05 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:06:05 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:06:05 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:06:05 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:06:05 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:06:05 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:06:05 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:06:05 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:06:05 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:06:05 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:06:05 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:06:05 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:06:05 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:06:05 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:06:05 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:06:05 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:06:05 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:06:05 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:06:05 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:06:05 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:06:05 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:06:05 - [TEST_STEP][PASSED] - i1 = x.indexOf("/"): null

10-01-2025T03:06:05 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:06:05 - [TEST_STEP][PASSED] - x = x.substring(0, i1): null

10-01-2025T03:06:05 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:06:05 - [TEST_STEP][PASSED] - return x: null

10-01-2025T03:06:05 - [TEST_STEP][PASSED] - println(tabR + "/" + tabB): null

10-01-2025T03:06:05 - [TEST_STEP][PASSED] - if (verifyEqual(PercFactR, PercFactB) == false): Actual object '27.05' and expected object '27.05' are equal

10-01-2025T03:06:05 - [MESSAGE][PASSED] - Actual object '27.05' and expected object '27.05' are equal

10-01-2025T03:06:05 - [TEST_STEP][PASSED] - typeOfData = "План Отпуск из сети": null

10-01-2025T03:06:05 - [TEST_STEP][PASSED] - tabR = GetOiSPlanR(x = a): null

10-01-2025T03:06:05 - [TEST_STEP][PASSED] - i1 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:06:05 - [TEST_STEP][PASSED] - ii = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:06:05 - [TEST_STEP][PASSED] - for ([ii = 1, ii < 8, (ii++)]): null

10-01-2025T03:06:05 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:06:05 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:06:05 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:06:05 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:06:05 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:06:05 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:06:05 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:06:05 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:06:05 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:06:05 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:06:05 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:06:05 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:06:05 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:06:05 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:06:05 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:06:05 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:06:05 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:06:05 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:06:05 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:06:05 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:06:05 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:06:05 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:06:05 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:06:05 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:06:05 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:06:05 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:06:05 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:06:05 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:06:52 - [TEST_STEP][PASSED] - i1 = x.indexOf("/"): null

10-01-2025T03:06:52 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:06:52 - [TEST_STEP][PASSED] - x = x.substring(0, i1): null

10-01-2025T03:06:52 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:06:52 - [TEST_STEP][PASSED] - return x: null

10-01-2025T03:06:52 - [TEST_STEP][PASSED] - tabB = GetOiSPlanB(x = b): null

10-01-2025T03:06:52 - [TEST_STEP][PASSED] - i1 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:06:52 - [TEST_STEP][PASSED] - ii = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:06:52 - [TEST_STEP][PASSED] - for ([ii = 1, ii < 8, (ii++)]): null

10-01-2025T03:06:52 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:06:52 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:06:52 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:06:52 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:06:52 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:06:52 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:06:52 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:06:52 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:06:52 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:06:52 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:06:52 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:06:52 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:06:52 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:06:52 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:06:52 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:06:52 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:06:52 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:06:52 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:06:52 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:06:52 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:06:52 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:06:52 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:06:52 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:06:52 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:06:52 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:06:52 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:06:52 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:06:52 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:06:52 - [TEST_STEP][PASSED] - i1 = x.indexOf("/"): null

10-01-2025T03:06:52 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:06:52 - [TEST_STEP][PASSED] - x = x.substring(0, i1): null

10-01-2025T03:06:52 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:06:52 - [TEST_STEP][PASSED] - return x: null

10-01-2025T03:06:52 - [TEST_STEP][PASSED] - println(tabR + "/" + tabB): null

10-01-2025T03:06:52 - [TEST_STEP][PASSED] - if (verifyEqual(PercFactR, PercFactB) == false): Actual object '27.05' and expected object '27.05' are equal

10-01-2025T03:06:52 - [MESSAGE][PASSED] - Actual object '27.05' and expected object '27.05' are equal

10-01-2025T03:06:52 - [TEST_STEP][PASSED] - typeOfData = "План Потери": null

10-01-2025T03:06:52 - [TEST_STEP][PASSED] - tabR = GetPPlanR(x = a): null

10-01-2025T03:06:52 - [TEST_STEP][PASSED] - i1 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:06:52 - [TEST_STEP][PASSED] - ii = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:06:52 - [TEST_STEP][PASSED] - for ([ii = 1, ii < 9, (ii++)]): null

10-01-2025T03:06:52 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:06:52 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:06:52 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:06:52 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:06:52 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:06:52 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:06:52 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:06:52 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:06:52 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:06:52 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:06:52 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:06:52 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:06:52 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:06:52 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:06:52 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:06:52 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:06:52 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:06:52 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:06:52 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:06:52 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:06:52 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:06:52 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:06:52 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:06:52 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:06:52 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:06:52 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:06:52 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:06:52 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:06:52 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:06:52 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:06:52 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:06:52 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:06:52 - [TEST_STEP][PASSED] - i1 = x.indexOf("/"): null

10-01-2025T03:06:52 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:06:52 - [TEST_STEP][PASSED] - x = x.substring(0, i1): null

10-01-2025T03:06:52 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:06:52 - [TEST_STEP][PASSED] - return x: null

10-01-2025T03:06:52 - [TEST_STEP][PASSED] - tabB = GetPPlanB(x = b): null

10-01-2025T03:06:52 - [TEST_STEP][PASSED] - i1 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:06:52 - [TEST_STEP][PASSED] - ii = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:06:52 - [TEST_STEP][PASSED] - for ([ii = 1, ii < 9, (ii++)]): null

10-01-2025T03:06:52 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:06:52 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:06:52 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:06:52 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:06:52 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:06:52 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:06:52 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:06:52 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:06:52 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:06:52 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:06:52 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:06:52 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:06:52 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:06:52 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:06:52 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:06:52 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:06:52 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:06:52 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:06:52 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:06:52 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:06:52 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:06:52 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:06:52 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:06:52 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:06:52 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:06:52 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:06:52 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:06:52 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:06:52 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:06:52 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:06:52 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:06:52 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:06:52 - [TEST_STEP][PASSED] - i1 = x.indexOf("/"): null

10-01-2025T03:06:52 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:06:52 - [TEST_STEP][PASSED] - x = x.substring(0, i1): null

10-01-2025T03:06:52 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:06:52 - [TEST_STEP][PASSED] - return x: null

10-01-2025T03:06:52 - [TEST_STEP][PASSED] - println(tabR + "/" + tabB): null

10-01-2025T03:06:52 - [TEST_STEP][PASSED] - if (verifyEqual(PercFactR, PercFactB) == false): Actual object '27.05' and expected object '27.05' are equal

10-01-2025T03:06:52 - [MESSAGE][PASSED] - Actual object '27.05' and expected object '27.05' are equal

10-01-2025T03:06:52 - [TEST_STEP][PASSED] - ii2 = a.indexOf("ПАО"): null

10-01-2025T03:06:52 - [TEST_STEP][PASSED] - if (ii2 == -1): null

10-01-2025T03:06:52 - [TEST_STEP][PASSED] - vidget = "Отклонения фактического уровня потерь от бизнес-плана": null

10-01-2025T03:06:52 - [TEST_STEP][PASSED] - typeOfData = "Коэффициент": null

10-01-2025T03:06:52 - [TEST_STEP][PASSED] - o1R = Geto1R(x = a): null

10-01-2025T03:06:52 - [TEST_STEP][PASSED] - i1 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:06:52 - [TEST_STEP][PASSED] - ii = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:06:52 - [TEST_STEP][PASSED] - for ([ii = 1, ii < 10, (ii++)]): null

10-01-2025T03:06:52 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:06:52 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:06:52 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:06:52 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:06:52 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:06:52 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:06:52 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:06:52 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:06:52 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:06:52 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:06:52 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:06:52 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:06:52 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:06:52 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:06:52 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:06:52 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:06:52 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:06:52 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:06:52 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:06:52 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:06:52 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:06:52 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:06:52 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:06:52 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:06:52 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:06:52 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:06:52 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:06:52 - [TEST_STEP][PASSED] - i1 = x.indexOf("/"): null

10-01-2025T03:06:52 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:06:52 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:06:52 - [TEST_STEP][PASSED] - return x: null

10-01-2025T03:06:52 - [TEST_STEP][PASSED] - o1B = Geto1B(x = b): null

10-01-2025T03:06:52 - [TEST_STEP][PASSED] - i1 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:06:52 - [TEST_STEP][PASSED] - ii = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:06:52 - [TEST_STEP][PASSED] - for ([ii = 1, ii < 10, (ii++)]): null

10-01-2025T03:06:52 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:06:52 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:06:52 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:06:52 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:06:52 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:06:52 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:06:52 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:06:52 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:06:52 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:06:52 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:06:52 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:06:52 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:06:52 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:06:52 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:06:52 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:06:52 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:06:52 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:06:52 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:06:52 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:06:52 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:06:52 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:06:52 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:06:52 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:06:52 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:06:52 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:06:52 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:06:52 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:06:52 - [TEST_STEP][PASSED] - i1 = x.indexOf("/"): null

10-01-2025T03:06:52 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:06:52 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:06:52 - [TEST_STEP][FAILED] - return x: null

10-01-2025T03:06:52 - [TEST_STEP][PASSED] - println(o1R + "/" + o1B): null

10-01-2025T03:06:52 - [TEST_STEP][PASSED] - if (verifyEqual(PercFactR, PercFactB) == false): Actual object '27.05' and expected object '27.05' are equal

10-01-2025T03:06:52 - [MESSAGE][PASSED] - Actual object '27.05' and expected object '27.05' are equal

10-01-2025T03:06:52 - [TEST_STEP][FAILED] - if (verifyEqual(sZR, sZB) == false): null

10-01-2025T03:06:52 - [MESSAGE][FAILED] - Unable to verify equal between actual object 'Россети Северо-Запад/нет данных/нет данных/нет данных/нет данных/нет данных/нет данных/нет данных/нет данных/нет данных' and expected object 'Россети Северо-Запад/5.81/5.39/30027512/28409686/1617826/29644473/27921280/1723193/-0.43' (Root cause: com.kms.katalon.core.exception.StepFailedException: Actual object 'Россети Северо-Запад/нет данных/нет данных/нет данных/нет данных/нет данных/нет данных/нет данных/нет данных/нет данных' and expected object 'Россети Северо-Запад/5.81/5.39/30027512/28409686/1617826/29644473/27921280/1723193/-0.43' are not equal
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.doCall(VerifyEqualKeyword.groovy:58)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.call(VerifyEqualKeyword.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:75)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.verifyEqual(VerifyEqualKeyword.groovy:63)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.execute(VerifyEqualKeyword.groovy:44)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:74)
	at com.kms.katalon.core.keyword.BuiltinKeywords.verifyEqual(BuiltinKeywords.groovy:146)
	at jdk.internal.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at Выполнение бизнес-плана сверка дашбордов.run(Выполнение бизнес-плана сверка дашбордов:622)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:448)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:439)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:418)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:410)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:285)
	at com.kms.katalon.core.common.CommonExecutor.accessTestCaseMainPhase(CommonExecutor.java:65)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:150)
	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:106)
	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:180)
	at TempTestSuite1736466949911.run(TempTestSuite1736466949911.groovy:35)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
)

10-01-2025T03:06:52 - [TEST_STEP][PASSED] - result = CompareDZOData(a = sZR, b = sZB, dZO, typeOfData, PercPlanR, PercPlanB, PercFactR, PercFactB, todaysDate, x, vidget, tabR, tabB, o1R, o1B): null

10-01-2025T03:06:52 - [TEST_STEP][PASSED] - ii2 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:06:52 - [TEST_STEP][FAILED] - if (verifyEqual(a, b) == false): null

10-01-2025T03:06:52 - [MESSAGE][FAILED] - Unable to verify equal between actual object 'Россети Северо-Запад/нет данных/нет данных/нет данных/нет данных/нет данных/нет данных/нет данных/нет данных/нет данных' and expected object 'Россети Северо-Запад/5.81/5.39/30027512/28409686/1617826/29644473/27921280/1723193/-0.43' (Root cause: com.kms.katalon.core.exception.StepFailedException: Actual object 'Россети Северо-Запад/нет данных/нет данных/нет данных/нет данных/нет данных/нет данных/нет данных/нет данных/нет данных' and expected object 'Россети Северо-Запад/5.81/5.39/30027512/28409686/1617826/29644473/27921280/1723193/-0.43' are not equal
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.doCall(VerifyEqualKeyword.groovy:58)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.call(VerifyEqualKeyword.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:75)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.verifyEqual(VerifyEqualKeyword.groovy:63)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.execute(VerifyEqualKeyword.groovy:44)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:74)
	at com.kms.katalon.core.keyword.BuiltinKeywords.verifyEqual(BuiltinKeywords.groovy:146)
	at jdk.internal.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at Выполнение бизнес-плана сверка дашбордов.CompareDZOData(Выполнение бизнес-плана сверка дашбордов:673)
	at Выполнение бизнес-плана сверка дашбордов.run(Выполнение бизнес-плана сверка дашбордов:623)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:448)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:439)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:418)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:410)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:285)
	at com.kms.katalon.core.common.CommonExecutor.accessTestCaseMainPhase(CommonExecutor.java:65)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:150)
	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:106)
	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:180)
	at TempTestSuite1736466949911.run(TempTestSuite1736466949911.groovy:35)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
)

10-01-2025T03:06:52 - [TEST_STEP][PASSED] - vidget = "Уровень потерь электроэнергии": null

10-01-2025T03:06:52 - [TEST_STEP][PASSED] - typeOfData = "План": null

10-01-2025T03:06:52 - [TEST_STEP][PASSED] - PercPlanR = GetPercPlanR(x = a): null

10-01-2025T03:06:52 - [TEST_STEP][PASSED] - i1 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:06:52 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:06:52 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:06:52 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:06:52 - [TEST_STEP][PASSED] - i1 = x.indexOf("/"): null

10-01-2025T03:06:52 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:06:52 - [TEST_STEP][PASSED] - x = x.substring(0, i1): null

10-01-2025T03:06:52 - [TEST_STEP][PASSED] - return x: null

10-01-2025T03:06:52 - [TEST_STEP][PASSED] - PercPlanB = GetPercPlanB(x = b): null

10-01-2025T03:06:52 - [TEST_STEP][PASSED] - i1 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:06:52 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:06:52 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:06:52 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:06:52 - [TEST_STEP][PASSED] - i1 = x.indexOf("/"): null

10-01-2025T03:06:52 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:06:52 - [TEST_STEP][PASSED] - x = x.substring(0, i1): null

10-01-2025T03:06:52 - [TEST_STEP][FAILED] - return x: null

10-01-2025T03:06:52 - [TEST_STEP][FAILED] - if (verifyEqual(PercPlanR, PercPlanB) == false): null

10-01-2025T03:06:52 - [MESSAGE][FAILED] - Unable to verify equal between actual object 'нет данных' and expected object '5.81' (Root cause: com.kms.katalon.core.exception.StepFailedException: Actual object 'нет данных' and expected object '5.81' are not equal
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.doCall(VerifyEqualKeyword.groovy:58)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.call(VerifyEqualKeyword.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:75)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.verifyEqual(VerifyEqualKeyword.groovy:63)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.execute(VerifyEqualKeyword.groovy:44)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:74)
	at com.kms.katalon.core.keyword.BuiltinKeywords.verifyEqual(BuiltinKeywords.groovy:146)
	at jdk.internal.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at Выполнение бизнес-плана сверка дашбордов.CompareDZOData(Выполнение бизнес-плана сверка дашбордов:682)
	at Выполнение бизнес-плана сверка дашбордов.run(Выполнение бизнес-плана сверка дашбордов:623)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:448)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:439)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:418)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:410)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:285)
	at com.kms.katalon.core.common.CommonExecutor.accessTestCaseMainPhase(CommonExecutor.java:65)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:150)
	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:106)
	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:180)
	at TempTestSuite1736466949911.run(TempTestSuite1736466949911.groovy:35)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
)

10-01-2025T03:06:52 - [TEST_STEP][PASSED] - result = WriteToExcel(typeOfData, todaysDate, PercPlanR, PercPlanB, PercFactR, PercFactB, x, tabR, tabB, o1R, o1B, vidget): null

10-01-2025T03:06:52 - [TEST_STEP][PASSED] - iii = dZO.indexOf("/"): null

10-01-2025T03:06:52 - [TEST_STEP][PASSED] - println(iii): null

10-01-2025T03:06:52 - [TEST_STEP][PASSED] - dZO = dZO.substring(0, iii): null

10-01-2025T03:06:52 - [TEST_STEP][PASSED] - println(dZO): null

10-01-2025T03:06:52 - [TEST_STEP][PASSED] - println(PercPlanR): null

10-01-2025T03:06:52 - [TEST_STEP][PASSED] - println(PercPlanB): null

10-01-2025T03:06:52 - [TEST_STEP][PASSED] - println(PercFactR): null

10-01-2025T03:06:52 - [TEST_STEP][PASSED] - println(PercFactB): null

10-01-2025T03:06:52 - [TEST_STEP][PASSED] - println(tabR): null

10-01-2025T03:06:52 - [TEST_STEP][PASSED] - println(tabB): null

10-01-2025T03:06:52 - [TEST_STEP][PASSED] - println(o1R): null

10-01-2025T03:06:52 - [TEST_STEP][PASSED] - println(o1B): null

10-01-2025T03:06:52 - [TEST_STEP][PASSED] - PR = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:06:52 - [TEST_STEP][PASSED] - FR = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:06:52 - [TEST_STEP][PASSED] - PB = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:06:52 - [TEST_STEP][PASSED] - FB = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:06:52 - [TEST_STEP][PASSED] - TR = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:06:52 - [TEST_STEP][PASSED] - TB = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:06:52 - [TEST_STEP][PASSED] - sheetName = "Sheet1": null

10-01-2025T03:06:52 - [TEST_STEP][PASSED] - data = findTestData("PlanFact"): null

10-01-2025T03:06:52 - [TEST_STEP][PASSED] - n = data.getRowNumbers() + 1: null

10-01-2025T03:06:52 - [TEST_STEP][PASSED] - year = todaysDate.substring(todaysDate.length() - 4, todaysDate.length()): null

10-01-2025T03:06:52 - [TEST_STEP][PASSED] - y = year.toInteger(): null

10-01-2025T03:06:52 - [TEST_STEP][PASSED] - m = getText(findTestObject("Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Фильтр Дата")): Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Фильтр Дата' is: '1, 2, 3 кв., Октябрь, Ноябрь 2024 года'

10-01-2025T03:06:52 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Фильтр Дата' is: '1, 2, 3 кв., Октябрь, Ноябрь 2024 года'

10-01-2025T03:06:52 - [TEST_STEP][PASSED] - m = m.substring(0, m.indexOf("2024")): null

10-01-2025T03:06:52 - [TEST_STEP][PASSED] - m = m.trim(): null

10-01-2025T03:06:52 - [TEST_STEP][PASSED] - dashboardName = "Выполнение бизнес-плана": null

10-01-2025T03:06:52 - [TEST_STEP][PASSED] - workbook01 = getWorkbook(excelFilePath): null

10-01-2025T03:06:52 - [TEST_STEP][PASSED] - sheet01 = getExcelSheet(workbook01, sheetName): null

10-01-2025T03:06:52 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 0, dashboardName): null

10-01-2025T03:06:52 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 1, dZO): null

10-01-2025T03:06:52 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 2, typeOfData): null

10-01-2025T03:06:52 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 3, typeOfData): null

10-01-2025T03:06:52 - [TEST_STEP][PASSED] - if (typeOfData == "План"): null

10-01-2025T03:06:52 - [TEST_STEP][PASSED] - if (PercPlanR == null): null

10-01-2025T03:06:52 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:06:52 - [TEST_STEP][PASSED] - if (PercPlanR == "нет данных"): null

10-01-2025T03:06:52 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 4, "нет данных"): null

10-01-2025T03:06:52 - [TEST_STEP][PASSED] - if (PercPlanB == null): null

10-01-2025T03:06:52 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:06:52 - [TEST_STEP][PASSED] - if (PercPlanB == "нет данных"): null

10-01-2025T03:06:52 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:06:52 - [TEST_STEP][PASSED] - PB = PercPlanB.toDouble(): null

10-01-2025T03:06:52 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 5, PB): null

10-01-2025T03:06:52 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 6, m): null

10-01-2025T03:06:52 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 7, y): null

10-01-2025T03:06:52 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 8, todaysDate): null

10-01-2025T03:06:52 - [TEST_STEP][PASSED] - n = n + 1: null

10-01-2025T03:06:52 - [TEST_STEP][PASSED] - saveWorkbook(excelFilePath, workbook01): null

10-01-2025T03:06:53 - [TEST_STEP][PASSED] - typeOfData = "Факт": null

10-01-2025T03:06:53 - [TEST_STEP][PASSED] - PercFactR = GetPercFactR(x = a): null

10-01-2025T03:06:53 - [TEST_STEP][PASSED] - i1 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:06:53 - [TEST_STEP][PASSED] - ii = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:06:53 - [TEST_STEP][PASSED] - for ([ii = 1, ii < 3, (ii++)]): null

10-01-2025T03:06:53 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:06:53 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:06:53 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:06:53 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:06:53 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:06:53 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:06:53 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:06:53 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:06:53 - [TEST_STEP][PASSED] - i1 = x.indexOf("/"): null

10-01-2025T03:06:53 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:06:53 - [TEST_STEP][PASSED] - x = x.substring(0, i1): null

10-01-2025T03:06:53 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:06:53 - [TEST_STEP][PASSED] - return x: null

10-01-2025T03:06:53 - [TEST_STEP][PASSED] - PercFactB = GetPercFactB(x = b): null

10-01-2025T03:06:53 - [TEST_STEP][PASSED] - i1 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:06:53 - [TEST_STEP][PASSED] - ii = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:06:53 - [TEST_STEP][PASSED] - for ([ii = 1, ii < 3, (ii++)]): null

10-01-2025T03:06:53 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:06:53 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:06:53 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:06:53 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:06:53 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:06:53 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:06:53 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:06:53 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:06:53 - [TEST_STEP][PASSED] - i1 = x.indexOf("/"): null

10-01-2025T03:06:53 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:06:53 - [TEST_STEP][PASSED] - x = x.substring(0, i1): null

10-01-2025T03:06:53 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:06:53 - [TEST_STEP][FAILED] - return x: null

10-01-2025T03:06:53 - [TEST_STEP][FAILED] - if (verifyEqual(PercFactR, PercFactB) == false): null

10-01-2025T03:06:53 - [MESSAGE][FAILED] - Unable to verify equal between actual object 'нет данных' and expected object '5.39' (Root cause: com.kms.katalon.core.exception.StepFailedException: Actual object 'нет данных' and expected object '5.39' are not equal
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.doCall(VerifyEqualKeyword.groovy:58)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.call(VerifyEqualKeyword.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:75)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.verifyEqual(VerifyEqualKeyword.groovy:63)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.execute(VerifyEqualKeyword.groovy:44)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:74)
	at com.kms.katalon.core.keyword.BuiltinKeywords.verifyEqual(BuiltinKeywords.groovy:146)
	at jdk.internal.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at Выполнение бизнес-плана сверка дашбордов.CompareDZOData(Выполнение бизнес-плана сверка дашбордов:693)
	at Выполнение бизнес-плана сверка дашбордов.run(Выполнение бизнес-плана сверка дашбордов:623)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:448)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:439)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:418)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:410)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:285)
	at com.kms.katalon.core.common.CommonExecutor.accessTestCaseMainPhase(CommonExecutor.java:65)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:150)
	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:106)
	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:180)
	at TempTestSuite1736466949911.run(TempTestSuite1736466949911.groovy:35)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
)

10-01-2025T03:06:53 - [TEST_STEP][PASSED] - result = WriteToExcel(typeOfData, todaysDate, PercPlanR, PercPlanB, PercFactR, PercFactB, x, tabR, tabB, o1R, o1B, vidget): null

10-01-2025T03:06:53 - [TEST_STEP][PASSED] - iii = dZO.indexOf("/"): null

10-01-2025T03:06:53 - [TEST_STEP][PASSED] - println(iii): null

10-01-2025T03:06:53 - [TEST_STEP][PASSED] - dZO = dZO.substring(0, iii): null

10-01-2025T03:06:53 - [TEST_STEP][PASSED] - println(dZO): null

10-01-2025T03:06:53 - [TEST_STEP][PASSED] - println(PercPlanR): null

10-01-2025T03:06:53 - [TEST_STEP][PASSED] - println(PercPlanB): null

10-01-2025T03:06:53 - [TEST_STEP][PASSED] - println(PercFactR): null

10-01-2025T03:06:53 - [TEST_STEP][PASSED] - println(PercFactB): null

10-01-2025T03:06:53 - [TEST_STEP][PASSED] - println(tabR): null

10-01-2025T03:06:53 - [TEST_STEP][PASSED] - println(tabB): null

10-01-2025T03:06:53 - [TEST_STEP][PASSED] - println(o1R): null

10-01-2025T03:06:53 - [TEST_STEP][PASSED] - println(o1B): null

10-01-2025T03:06:53 - [TEST_STEP][PASSED] - PR = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:06:53 - [TEST_STEP][PASSED] - FR = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:06:53 - [TEST_STEP][PASSED] - PB = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:06:53 - [TEST_STEP][PASSED] - FB = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:06:53 - [TEST_STEP][PASSED] - TR = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:06:53 - [TEST_STEP][PASSED] - TB = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:06:53 - [TEST_STEP][PASSED] - sheetName = "Sheet1": null

10-01-2025T03:06:53 - [TEST_STEP][PASSED] - data = findTestData("PlanFact"): null

10-01-2025T03:06:53 - [TEST_STEP][PASSED] - n = data.getRowNumbers() + 1: null

10-01-2025T03:06:53 - [TEST_STEP][PASSED] - year = todaysDate.substring(todaysDate.length() - 4, todaysDate.length()): null

10-01-2025T03:06:53 - [TEST_STEP][PASSED] - y = year.toInteger(): null

10-01-2025T03:06:53 - [TEST_STEP][PASSED] - m = getText(findTestObject("Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Фильтр Дата")): Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Фильтр Дата' is: '1, 2, 3 кв., Октябрь, Ноябрь 2024 года'

10-01-2025T03:06:53 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Фильтр Дата' is: '1, 2, 3 кв., Октябрь, Ноябрь 2024 года'

10-01-2025T03:06:53 - [TEST_STEP][PASSED] - m = m.substring(0, m.indexOf("2024")): null

10-01-2025T03:06:53 - [TEST_STEP][PASSED] - m = m.trim(): null

10-01-2025T03:06:53 - [TEST_STEP][PASSED] - dashboardName = "Выполнение бизнес-плана": null

10-01-2025T03:06:53 - [TEST_STEP][PASSED] - workbook01 = getWorkbook(excelFilePath): null

10-01-2025T03:06:53 - [TEST_STEP][PASSED] - sheet01 = getExcelSheet(workbook01, sheetName): null

10-01-2025T03:06:53 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 0, dashboardName): null

10-01-2025T03:06:53 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 1, dZO): null

10-01-2025T03:06:53 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 2, typeOfData): null

10-01-2025T03:06:53 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 3, typeOfData): null

10-01-2025T03:06:53 - [TEST_STEP][PASSED] - if (typeOfData == "План"): null

10-01-2025T03:06:53 - [TEST_STEP][PASSED] - else if (typeOfData == "Факт"): null

10-01-2025T03:06:53 - [TEST_STEP][PASSED] - if (PercFactR == null): null

10-01-2025T03:06:53 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:06:53 - [TEST_STEP][PASSED] - if (PercFactR == "нет данных"): null

10-01-2025T03:06:53 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 4, "нет данных"): null

10-01-2025T03:06:53 - [TEST_STEP][PASSED] - if (PercFactB == null): null

10-01-2025T03:06:53 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:06:53 - [TEST_STEP][PASSED] - if (PercFactB == "нет данных"): null

10-01-2025T03:06:53 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:06:53 - [TEST_STEP][PASSED] - FB = PercFactB.toDouble(): null

10-01-2025T03:06:53 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 5, FB): null

10-01-2025T03:06:53 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 6, m): null

10-01-2025T03:06:53 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 7, y): null

10-01-2025T03:06:53 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 8, todaysDate): null

10-01-2025T03:06:53 - [TEST_STEP][PASSED] - n = n + 1: null

10-01-2025T03:06:53 - [TEST_STEP][PASSED] - saveWorkbook(excelFilePath, workbook01): null

10-01-2025T03:06:53 - [TEST_STEP][PASSED] - vidget = "Показатели баланса электроэнергии по ДЗО – Факт": null

10-01-2025T03:06:53 - [TEST_STEP][PASSED] - typeOfData = "Факт Отпуск в сеть": null

10-01-2025T03:06:53 - [TEST_STEP][PASSED] - tabR = GetOvSFactR(x = a): null

10-01-2025T03:06:53 - [TEST_STEP][PASSED] - i1 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:06:53 - [TEST_STEP][PASSED] - ii = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:06:53 - [TEST_STEP][PASSED] - for ([ii = 1, ii < 4, (ii++)]): null

10-01-2025T03:06:53 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:06:53 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:07:05 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:07:05 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:07:05 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:07:05 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:07:05 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:07:05 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:07:05 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:07:05 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:07:05 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:07:05 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:07:05 - [TEST_STEP][PASSED] - i1 = x.indexOf("/"): null

10-01-2025T03:07:05 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:07:05 - [TEST_STEP][PASSED] - x = x.substring(0, i1): null

10-01-2025T03:07:05 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:07:05 - [TEST_STEP][PASSED] - return x: null

10-01-2025T03:07:05 - [TEST_STEP][PASSED] - tabB = GetOvSFactB(x = b): null

10-01-2025T03:07:05 - [TEST_STEP][PASSED] - i1 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:07:05 - [TEST_STEP][PASSED] - ii = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:07:05 - [TEST_STEP][PASSED] - for ([ii = 1, ii < 4, (ii++)]): null

10-01-2025T03:07:05 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:07:05 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:07:05 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:07:05 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:07:05 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:07:05 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:07:05 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:07:05 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:07:05 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:07:05 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:07:05 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:07:05 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:07:05 - [TEST_STEP][PASSED] - i1 = x.indexOf("/"): null

10-01-2025T03:07:05 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:07:05 - [TEST_STEP][PASSED] - x = x.substring(0, i1): null

10-01-2025T03:07:05 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:07:05 - [TEST_STEP][FAILED] - return x: null

10-01-2025T03:07:05 - [TEST_STEP][FAILED] - if (verifyEqual(tabR, tabB) == false): null

10-01-2025T03:07:05 - [MESSAGE][FAILED] - Unable to verify equal between actual object 'нет данных' and expected object '30027512' (Root cause: com.kms.katalon.core.exception.StepFailedException: Actual object 'нет данных' and expected object '30027512' are not equal
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.doCall(VerifyEqualKeyword.groovy:58)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.call(VerifyEqualKeyword.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:75)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.verifyEqual(VerifyEqualKeyword.groovy:63)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.execute(VerifyEqualKeyword.groovy:44)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:74)
	at com.kms.katalon.core.keyword.BuiltinKeywords.verifyEqual(BuiltinKeywords.groovy:146)
	at jdk.internal.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at Выполнение бизнес-плана сверка дашбордов.CompareDZOData(Выполнение бизнес-плана сверка дашбордов:706)
	at Выполнение бизнес-плана сверка дашбордов.run(Выполнение бизнес-плана сверка дашбордов:623)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:448)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:439)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:418)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:410)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:285)
	at com.kms.katalon.core.common.CommonExecutor.accessTestCaseMainPhase(CommonExecutor.java:65)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:150)
	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:106)
	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:180)
	at TempTestSuite1736466949911.run(TempTestSuite1736466949911.groovy:35)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
)

10-01-2025T03:07:05 - [TEST_STEP][PASSED] - result = WriteToExcel(typeOfData, todaysDate, PercPlanR, PercPlanB, PercFactR, PercFactB, x, tabR, tabB, o1R, o1B, vidget): null

10-01-2025T03:07:05 - [TEST_STEP][PASSED] - iii = dZO.indexOf("/"): null

10-01-2025T03:07:05 - [TEST_STEP][PASSED] - println(iii): null

10-01-2025T03:07:05 - [TEST_STEP][PASSED] - dZO = dZO.substring(0, iii): null

10-01-2025T03:07:05 - [TEST_STEP][PASSED] - println(dZO): null

10-01-2025T03:07:05 - [TEST_STEP][PASSED] - println(PercPlanR): null

10-01-2025T03:07:05 - [TEST_STEP][PASSED] - println(PercPlanB): null

10-01-2025T03:07:05 - [TEST_STEP][PASSED] - println(PercFactR): null

10-01-2025T03:07:05 - [TEST_STEP][PASSED] - println(PercFactB): null

10-01-2025T03:07:05 - [TEST_STEP][PASSED] - println(tabR): null

10-01-2025T03:07:05 - [TEST_STEP][PASSED] - println(tabB): null

10-01-2025T03:07:05 - [TEST_STEP][PASSED] - println(o1R): null

10-01-2025T03:07:05 - [TEST_STEP][PASSED] - println(o1B): null

10-01-2025T03:07:05 - [TEST_STEP][PASSED] - PR = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:07:05 - [TEST_STEP][PASSED] - FR = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:07:05 - [TEST_STEP][PASSED] - PB = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:07:05 - [TEST_STEP][PASSED] - FB = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:07:05 - [TEST_STEP][PASSED] - TR = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:07:05 - [TEST_STEP][PASSED] - TB = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:07:05 - [TEST_STEP][PASSED] - sheetName = "Sheet1": null

10-01-2025T03:07:05 - [TEST_STEP][PASSED] - data = findTestData("PlanFact"): null

10-01-2025T03:07:05 - [TEST_STEP][PASSED] - n = data.getRowNumbers() + 1: null

10-01-2025T03:07:05 - [TEST_STEP][PASSED] - year = todaysDate.substring(todaysDate.length() - 4, todaysDate.length()): null

10-01-2025T03:07:05 - [TEST_STEP][PASSED] - y = year.toInteger(): null

10-01-2025T03:07:05 - [TEST_STEP][PASSED] - m = getText(findTestObject("Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Фильтр Дата")): Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Фильтр Дата' is: '1, 2, 3 кв., Октябрь, Ноябрь 2024 года'

10-01-2025T03:07:06 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Фильтр Дата' is: '1, 2, 3 кв., Октябрь, Ноябрь 2024 года'

10-01-2025T03:07:06 - [TEST_STEP][PASSED] - m = m.substring(0, m.indexOf("2024")): null

10-01-2025T03:07:06 - [TEST_STEP][PASSED] - m = m.trim(): null

10-01-2025T03:07:06 - [TEST_STEP][PASSED] - dashboardName = "Выполнение бизнес-плана": null

10-01-2025T03:07:06 - [TEST_STEP][PASSED] - workbook01 = getWorkbook(excelFilePath): null

10-01-2025T03:07:06 - [TEST_STEP][PASSED] - sheet01 = getExcelSheet(workbook01, sheetName): null

10-01-2025T03:07:06 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 0, dashboardName): null

10-01-2025T03:07:06 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 1, dZO): null

10-01-2025T03:07:06 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 2, typeOfData): null

10-01-2025T03:07:06 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 3, typeOfData): null

10-01-2025T03:07:06 - [TEST_STEP][PASSED] - if (typeOfData == "План"): null

10-01-2025T03:07:06 - [TEST_STEP][PASSED] - else if (typeOfData == "Факт"): null

10-01-2025T03:07:06 - [TEST_STEP][PASSED] - else if (vidget.contains("электроэнергии") == true): null

10-01-2025T03:07:06 - [TEST_STEP][PASSED] - if (tabR == null): null

10-01-2025T03:07:06 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:07:06 - [TEST_STEP][PASSED] - if (tabR == "нет данных"): null

10-01-2025T03:07:06 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 4, "нет данных"): null

10-01-2025T03:07:06 - [TEST_STEP][PASSED] - if (tabB == null): null

10-01-2025T03:07:06 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:07:06 - [TEST_STEP][PASSED] - if (tabB == "нет данных"): null

10-01-2025T03:07:06 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:07:06 - [TEST_STEP][PASSED] - TB = tabB.toInteger(): null

10-01-2025T03:07:06 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 5, TB): null

10-01-2025T03:07:06 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 6, m): null

10-01-2025T03:07:06 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 7, y): null

10-01-2025T03:07:06 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 8, todaysDate): null

10-01-2025T03:07:06 - [TEST_STEP][PASSED] - n = n + 1: null

10-01-2025T03:07:06 - [TEST_STEP][PASSED] - saveWorkbook(excelFilePath, workbook01): null

10-01-2025T03:07:06 - [TEST_STEP][PASSED] - typeOfData = "Факт Отпуск из сети": null

10-01-2025T03:07:06 - [TEST_STEP][PASSED] - tabR = GetOiSFactR(x = a): null

10-01-2025T03:07:06 - [TEST_STEP][PASSED] - i1 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:07:06 - [TEST_STEP][PASSED] - ii = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:07:06 - [TEST_STEP][PASSED] - for ([ii = 1, ii < 5, (ii++)]): null

10-01-2025T03:07:06 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:07:06 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:07:06 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:07:06 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:07:06 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:07:06 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:07:06 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:07:06 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:07:06 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:07:06 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:07:06 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:07:06 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:07:06 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:07:06 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:07:06 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:07:06 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:07:06 - [TEST_STEP][PASSED] - i1 = x.indexOf("/"): null

10-01-2025T03:07:06 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:07:06 - [TEST_STEP][PASSED] - x = x.substring(0, i1): null

10-01-2025T03:07:06 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:07:06 - [TEST_STEP][PASSED] - return x: null

10-01-2025T03:07:06 - [TEST_STEP][PASSED] - tabB = GetOiSFactB(x = b): null

10-01-2025T03:07:06 - [TEST_STEP][PASSED] - i1 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:07:06 - [TEST_STEP][PASSED] - ii = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:07:06 - [TEST_STEP][PASSED] - for ([ii = 1, ii < 5, (ii++)]): null

10-01-2025T03:07:06 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:07:06 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:07:06 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:07:06 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:07:06 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:07:06 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:07:06 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:07:06 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:07:06 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:07:06 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:07:06 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:07:06 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:07:06 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:07:06 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:07:06 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:07:06 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:07:06 - [TEST_STEP][PASSED] - i1 = x.indexOf("/"): null

10-01-2025T03:07:06 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:07:06 - [TEST_STEP][PASSED] - x = x.substring(0, i1): null

10-01-2025T03:07:06 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:07:06 - [TEST_STEP][FAILED] - return x: null

10-01-2025T03:07:06 - [TEST_STEP][FAILED] - if (verifyEqual(tabR, tabB) == false): null

10-01-2025T03:07:06 - [MESSAGE][FAILED] - Unable to verify equal between actual object 'нет данных' and expected object '28409686' (Root cause: com.kms.katalon.core.exception.StepFailedException: Actual object 'нет данных' and expected object '28409686' are not equal
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.doCall(VerifyEqualKeyword.groovy:58)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.call(VerifyEqualKeyword.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:75)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.verifyEqual(VerifyEqualKeyword.groovy:63)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.execute(VerifyEqualKeyword.groovy:44)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:74)
	at com.kms.katalon.core.keyword.BuiltinKeywords.verifyEqual(BuiltinKeywords.groovy:146)
	at jdk.internal.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at Выполнение бизнес-плана сверка дашбордов.CompareDZOData(Выполнение бизнес-плана сверка дашбордов:717)
	at Выполнение бизнес-плана сверка дашбордов.run(Выполнение бизнес-плана сверка дашбордов:623)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:448)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:439)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:418)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:410)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:285)
	at com.kms.katalon.core.common.CommonExecutor.accessTestCaseMainPhase(CommonExecutor.java:65)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:150)
	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:106)
	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:180)
	at TempTestSuite1736466949911.run(TempTestSuite1736466949911.groovy:35)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
)

10-01-2025T03:07:06 - [TEST_STEP][PASSED] - result = WriteToExcel(typeOfData, todaysDate, PercPlanR, PercPlanB, PercFactR, PercFactB, x, tabR, tabB, o1R, o1B, vidget): null

10-01-2025T03:07:06 - [TEST_STEP][PASSED] - iii = dZO.indexOf("/"): null

10-01-2025T03:07:06 - [TEST_STEP][PASSED] - println(iii): null

10-01-2025T03:07:06 - [TEST_STEP][PASSED] - dZO = dZO.substring(0, iii): null

10-01-2025T03:07:06 - [TEST_STEP][PASSED] - println(dZO): null

10-01-2025T03:07:06 - [TEST_STEP][PASSED] - println(PercPlanR): null

10-01-2025T03:07:06 - [TEST_STEP][PASSED] - println(PercPlanB): null

10-01-2025T03:07:06 - [TEST_STEP][PASSED] - println(PercFactR): null

10-01-2025T03:07:06 - [TEST_STEP][PASSED] - println(PercFactB): null

10-01-2025T03:07:06 - [TEST_STEP][PASSED] - println(tabR): null

10-01-2025T03:07:06 - [TEST_STEP][PASSED] - println(tabB): null

10-01-2025T03:07:06 - [TEST_STEP][PASSED] - println(o1R): null

10-01-2025T03:07:06 - [TEST_STEP][PASSED] - println(o1B): null

10-01-2025T03:07:06 - [TEST_STEP][PASSED] - PR = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:07:06 - [TEST_STEP][PASSED] - FR = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:07:06 - [TEST_STEP][PASSED] - PB = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:07:06 - [TEST_STEP][PASSED] - FB = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:07:06 - [TEST_STEP][PASSED] - TR = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:07:06 - [TEST_STEP][PASSED] - TB = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:07:06 - [TEST_STEP][PASSED] - sheetName = "Sheet1": null

10-01-2025T03:07:06 - [TEST_STEP][PASSED] - data = findTestData("PlanFact"): null

10-01-2025T03:07:06 - [TEST_STEP][PASSED] - n = data.getRowNumbers() + 1: null

10-01-2025T03:07:06 - [TEST_STEP][PASSED] - year = todaysDate.substring(todaysDate.length() - 4, todaysDate.length()): null

10-01-2025T03:07:06 - [TEST_STEP][PASSED] - y = year.toInteger(): null

10-01-2025T03:07:06 - [TEST_STEP][PASSED] - m = getText(findTestObject("Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Фильтр Дата")): Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Фильтр Дата' is: '1, 2, 3 кв., Октябрь, Ноябрь 2024 года'

10-01-2025T03:07:07 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Фильтр Дата' is: '1, 2, 3 кв., Октябрь, Ноябрь 2024 года'

10-01-2025T03:07:07 - [TEST_STEP][PASSED] - m = m.substring(0, m.indexOf("2024")): null

10-01-2025T03:07:07 - [TEST_STEP][PASSED] - m = m.trim(): null

10-01-2025T03:07:07 - [TEST_STEP][PASSED] - dashboardName = "Выполнение бизнес-плана": null

10-01-2025T03:07:07 - [TEST_STEP][PASSED] - workbook01 = getWorkbook(excelFilePath): null

10-01-2025T03:07:07 - [TEST_STEP][PASSED] - sheet01 = getExcelSheet(workbook01, sheetName): null

10-01-2025T03:07:07 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 0, dashboardName): null

10-01-2025T03:07:07 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 1, dZO): null

10-01-2025T03:07:07 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 2, typeOfData): null

10-01-2025T03:07:07 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 3, typeOfData): null

10-01-2025T03:07:07 - [TEST_STEP][PASSED] - if (typeOfData == "План"): null

10-01-2025T03:07:07 - [TEST_STEP][PASSED] - else if (typeOfData == "Факт"): null

10-01-2025T03:07:07 - [TEST_STEP][PASSED] - else if (vidget.contains("электроэнергии") == true): null

10-01-2025T03:07:07 - [TEST_STEP][PASSED] - if (tabR == null): null

10-01-2025T03:07:07 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:07:07 - [TEST_STEP][PASSED] - if (tabR == "нет данных"): null

10-01-2025T03:07:07 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 4, "нет данных"): null

10-01-2025T03:07:07 - [TEST_STEP][PASSED] - if (tabB == null): null

10-01-2025T03:07:07 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:07:07 - [TEST_STEP][PASSED] - if (tabB == "нет данных"): null

10-01-2025T03:07:07 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:07:07 - [TEST_STEP][PASSED] - TB = tabB.toInteger(): null

10-01-2025T03:07:07 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 5, TB): null

10-01-2025T03:07:07 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 6, m): null

10-01-2025T03:07:07 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 7, y): null

10-01-2025T03:07:07 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 8, todaysDate): null

10-01-2025T03:07:07 - [TEST_STEP][PASSED] - n = n + 1: null

10-01-2025T03:07:07 - [TEST_STEP][PASSED] - saveWorkbook(excelFilePath, workbook01): null

10-01-2025T03:07:07 - [TEST_STEP][PASSED] - typeOfData = "Факт Потери": null

10-01-2025T03:07:07 - [TEST_STEP][PASSED] - tabR = GetPFactR(x = a): null

10-01-2025T03:07:07 - [TEST_STEP][PASSED] - i1 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:07:07 - [TEST_STEP][PASSED] - ii = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:07:07 - [TEST_STEP][PASSED] - for ([ii = 1, ii < 6, (ii++)]): null

10-01-2025T03:07:07 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:07:07 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:07:07 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:07:07 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:07:07 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:07:07 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:07:07 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:07:07 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:07:07 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:07:07 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:07:07 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:07:07 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:07:07 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:07:07 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:07:07 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:07:07 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:07:07 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:07:07 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:07:07 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:07:07 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:07:07 - [TEST_STEP][PASSED] - i1 = x.indexOf("/"): null

10-01-2025T03:07:07 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:07:07 - [TEST_STEP][PASSED] - x = x.substring(0, i1): null

10-01-2025T03:07:07 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:07:07 - [TEST_STEP][PASSED] - return x: null

10-01-2025T03:07:07 - [TEST_STEP][PASSED] - tabB = GetPFactB(x = b): null

10-01-2025T03:07:07 - [TEST_STEP][PASSED] - i1 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:07:07 - [TEST_STEP][PASSED] - ii = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:07:07 - [TEST_STEP][PASSED] - for ([ii = 1, ii < 6, (ii++)]): null

10-01-2025T03:07:07 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:07:07 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:07:07 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:07:07 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:07:07 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:07:07 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:07:07 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:07:07 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:07:07 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:07:07 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:07:07 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:07:07 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:07:07 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:07:07 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:07:07 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:07:07 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:07:07 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:07:07 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:07:07 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:07:07 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:07:07 - [TEST_STEP][PASSED] - i1 = x.indexOf("/"): null

10-01-2025T03:07:07 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:07:07 - [TEST_STEP][PASSED] - x = x.substring(0, i1): null

10-01-2025T03:07:07 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:07:07 - [TEST_STEP][FAILED] - return x: null

10-01-2025T03:07:07 - [TEST_STEP][PASSED] - println(tabR + "/" + tabB): null

10-01-2025T03:07:07 - [TEST_STEP][FAILED] - if (verifyEqual(tabR, tabB) == false): null

10-01-2025T03:07:07 - [MESSAGE][FAILED] - Unable to verify equal between actual object 'нет данных' and expected object '1617826' (Root cause: com.kms.katalon.core.exception.StepFailedException: Actual object 'нет данных' and expected object '1617826' are not equal
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.doCall(VerifyEqualKeyword.groovy:58)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.call(VerifyEqualKeyword.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:75)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.verifyEqual(VerifyEqualKeyword.groovy:63)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.execute(VerifyEqualKeyword.groovy:44)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:74)
	at com.kms.katalon.core.keyword.BuiltinKeywords.verifyEqual(BuiltinKeywords.groovy:146)
	at jdk.internal.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at Выполнение бизнес-плана сверка дашбордов.CompareDZOData(Выполнение бизнес-плана сверка дашбордов:730)
	at Выполнение бизнес-плана сверка дашбордов.run(Выполнение бизнес-плана сверка дашбордов:623)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:448)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:439)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:418)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:410)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:285)
	at com.kms.katalon.core.common.CommonExecutor.accessTestCaseMainPhase(CommonExecutor.java:65)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:150)
	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:106)
	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:180)
	at TempTestSuite1736466949911.run(TempTestSuite1736466949911.groovy:35)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
)

10-01-2025T03:07:07 - [TEST_STEP][PASSED] - result = WriteToExcel(typeOfData, todaysDate, PercPlanR, PercPlanB, PercFactR, PercFactB, x, tabR, tabB, o1R, o1B, vidget): null

10-01-2025T03:07:07 - [TEST_STEP][PASSED] - iii = dZO.indexOf("/"): null

10-01-2025T03:07:07 - [TEST_STEP][PASSED] - println(iii): null

10-01-2025T03:07:07 - [TEST_STEP][PASSED] - dZO = dZO.substring(0, iii): null

10-01-2025T03:07:07 - [TEST_STEP][PASSED] - println(dZO): null

10-01-2025T03:07:07 - [TEST_STEP][PASSED] - println(PercPlanR): null

10-01-2025T03:07:07 - [TEST_STEP][PASSED] - println(PercPlanB): null

10-01-2025T03:07:07 - [TEST_STEP][PASSED] - println(PercFactR): null

10-01-2025T03:07:07 - [TEST_STEP][PASSED] - println(PercFactB): null

10-01-2025T03:07:07 - [TEST_STEP][PASSED] - println(tabR): null

10-01-2025T03:07:07 - [TEST_STEP][PASSED] - println(tabB): null

10-01-2025T03:07:07 - [TEST_STEP][PASSED] - println(o1R): null

10-01-2025T03:07:07 - [TEST_STEP][PASSED] - println(o1B): null

10-01-2025T03:07:07 - [TEST_STEP][PASSED] - PR = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:07:07 - [TEST_STEP][PASSED] - FR = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:07:07 - [TEST_STEP][PASSED] - PB = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:07:07 - [TEST_STEP][PASSED] - FB = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:07:07 - [TEST_STEP][PASSED] - TR = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:07:07 - [TEST_STEP][PASSED] - TB = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:07:07 - [TEST_STEP][PASSED] - sheetName = "Sheet1": null

10-01-2025T03:07:07 - [TEST_STEP][PASSED] - data = findTestData("PlanFact"): null

10-01-2025T03:07:07 - [TEST_STEP][PASSED] - n = data.getRowNumbers() + 1: null

10-01-2025T03:07:07 - [TEST_STEP][PASSED] - year = todaysDate.substring(todaysDate.length() - 4, todaysDate.length()): null

10-01-2025T03:07:07 - [TEST_STEP][PASSED] - y = year.toInteger(): null

10-01-2025T03:07:07 - [TEST_STEP][PASSED] - m = getText(findTestObject("Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Фильтр Дата")): Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Фильтр Дата' is: '1, 2, 3 кв., Октябрь, Ноябрь 2024 года'

10-01-2025T03:07:07 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Фильтр Дата' is: '1, 2, 3 кв., Октябрь, Ноябрь 2024 года'

10-01-2025T03:07:07 - [TEST_STEP][PASSED] - m = m.substring(0, m.indexOf("2024")): null

10-01-2025T03:07:07 - [TEST_STEP][PASSED] - m = m.trim(): null

10-01-2025T03:07:07 - [TEST_STEP][PASSED] - dashboardName = "Выполнение бизнес-плана": null

10-01-2025T03:07:07 - [TEST_STEP][PASSED] - workbook01 = getWorkbook(excelFilePath): null

10-01-2025T03:07:07 - [TEST_STEP][PASSED] - sheet01 = getExcelSheet(workbook01, sheetName): null

10-01-2025T03:07:07 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 0, dashboardName): null

10-01-2025T03:07:07 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 1, dZO): null

10-01-2025T03:07:07 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 2, typeOfData): null

10-01-2025T03:07:07 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 3, typeOfData): null

10-01-2025T03:07:07 - [TEST_STEP][PASSED] - if (typeOfData == "План"): null

10-01-2025T03:07:07 - [TEST_STEP][PASSED] - else if (typeOfData == "Факт"): null

10-01-2025T03:07:07 - [TEST_STEP][PASSED] - else if (vidget.contains("электроэнергии") == true): null

10-01-2025T03:07:07 - [TEST_STEP][PASSED] - if (tabR == null): null

10-01-2025T03:07:07 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:07:07 - [TEST_STEP][PASSED] - if (tabR == "нет данных"): null

10-01-2025T03:07:07 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 4, "нет данных"): null

10-01-2025T03:07:07 - [TEST_STEP][PASSED] - if (tabB == null): null

10-01-2025T03:07:07 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:07:07 - [TEST_STEP][PASSED] - if (tabB == "нет данных"): null

10-01-2025T03:07:07 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:07:07 - [TEST_STEP][PASSED] - TB = tabB.toInteger(): null

10-01-2025T03:07:07 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 5, TB): null

10-01-2025T03:07:07 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 6, m): null

10-01-2025T03:07:07 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 7, y): null

10-01-2025T03:07:07 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 8, todaysDate): null

10-01-2025T03:07:07 - [TEST_STEP][PASSED] - n = n + 1: null

10-01-2025T03:07:07 - [TEST_STEP][PASSED] - saveWorkbook(excelFilePath, workbook01): null

10-01-2025T03:07:08 - [TEST_STEP][PASSED] - vidget = "Показатели баланса электроэнергии по ДЗО – План": null

10-01-2025T03:07:08 - [TEST_STEP][PASSED] - typeOfData = "План Отпуск в сеть": null

10-01-2025T03:07:08 - [TEST_STEP][PASSED] - tabR = GetOvSPlanR(x = a): null

10-01-2025T03:07:08 - [TEST_STEP][PASSED] - i1 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:07:08 - [TEST_STEP][PASSED] - ii = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:07:08 - [TEST_STEP][PASSED] - for ([ii = 1, ii < 7, (ii++)]): null

10-01-2025T03:07:08 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:07:08 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:07:08 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:07:08 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:07:08 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:07:08 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:07:08 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:07:08 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:07:08 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:07:08 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:07:08 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:07:08 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:07:08 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:07:08 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:07:08 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:07:08 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:07:08 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:07:08 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:07:08 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:07:08 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:07:08 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:07:08 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:07:08 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:07:08 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:07:08 - [TEST_STEP][PASSED] - i1 = x.indexOf("/"): null

10-01-2025T03:07:08 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:07:08 - [TEST_STEP][PASSED] - x = x.substring(0, i1): null

10-01-2025T03:07:08 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:07:08 - [TEST_STEP][PASSED] - return x: null

10-01-2025T03:07:08 - [TEST_STEP][PASSED] - tabB = GetOvSPlanB(x = b): null

10-01-2025T03:07:08 - [TEST_STEP][PASSED] - i1 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:07:08 - [TEST_STEP][PASSED] - ii = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:07:08 - [TEST_STEP][PASSED] - for ([ii = 1, ii < 7, (ii++)]): null

10-01-2025T03:07:08 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:07:08 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:07:08 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:07:08 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:07:08 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:07:08 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:07:08 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:07:08 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:07:08 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:07:08 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:07:08 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:07:08 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:07:08 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:07:08 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:07:08 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:07:08 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:07:08 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:07:08 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:07:08 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:07:08 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:07:08 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:07:08 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:07:08 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:07:08 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:07:08 - [TEST_STEP][PASSED] - i1 = x.indexOf("/"): null

10-01-2025T03:07:08 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:07:08 - [TEST_STEP][PASSED] - x = x.substring(0, i1): null

10-01-2025T03:07:08 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:07:08 - [TEST_STEP][FAILED] - return x: null

10-01-2025T03:07:08 - [TEST_STEP][PASSED] - println(tabR + "/" + tabB): null

10-01-2025T03:07:08 - [TEST_STEP][FAILED] - if (verifyEqual(PercFactR, PercFactB) == false): null

10-01-2025T03:07:08 - [MESSAGE][FAILED] - Unable to verify equal between actual object 'нет данных' and expected object '5.39' (Root cause: com.kms.katalon.core.exception.StepFailedException: Actual object 'нет данных' and expected object '5.39' are not equal
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.doCall(VerifyEqualKeyword.groovy:58)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.call(VerifyEqualKeyword.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:75)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.verifyEqual(VerifyEqualKeyword.groovy:63)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.execute(VerifyEqualKeyword.groovy:44)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:74)
	at com.kms.katalon.core.keyword.BuiltinKeywords.verifyEqual(BuiltinKeywords.groovy:146)
	at jdk.internal.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at Выполнение бизнес-плана сверка дашбордов.CompareDZOData(Выполнение бизнес-плана сверка дашбордов:745)
	at Выполнение бизнес-плана сверка дашбордов.run(Выполнение бизнес-плана сверка дашбордов:623)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:448)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:439)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:418)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:410)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:285)
	at com.kms.katalon.core.common.CommonExecutor.accessTestCaseMainPhase(CommonExecutor.java:65)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:150)
	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:106)
	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:180)
	at TempTestSuite1736466949911.run(TempTestSuite1736466949911.groovy:35)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
)

10-01-2025T03:07:08 - [TEST_STEP][PASSED] - result = WriteToExcel(typeOfData, todaysDate, PercPlanR, PercPlanB, PercFactR, PercFactB, x, tabR, tabB, o1R, o1B, vidget): null

10-01-2025T03:07:08 - [TEST_STEP][PASSED] - iii = dZO.indexOf("/"): null

10-01-2025T03:07:08 - [TEST_STEP][PASSED] - println(iii): null

10-01-2025T03:07:08 - [TEST_STEP][PASSED] - dZO = dZO.substring(0, iii): null

10-01-2025T03:07:08 - [TEST_STEP][PASSED] - println(dZO): null

10-01-2025T03:07:08 - [TEST_STEP][PASSED] - println(PercPlanR): null

10-01-2025T03:07:08 - [TEST_STEP][PASSED] - println(PercPlanB): null

10-01-2025T03:07:08 - [TEST_STEP][PASSED] - println(PercFactR): null

10-01-2025T03:07:08 - [TEST_STEP][PASSED] - println(PercFactB): null

10-01-2025T03:07:08 - [TEST_STEP][PASSED] - println(tabR): null

10-01-2025T03:07:08 - [TEST_STEP][PASSED] - println(tabB): null

10-01-2025T03:07:08 - [TEST_STEP][PASSED] - println(o1R): null

10-01-2025T03:07:08 - [TEST_STEP][PASSED] - println(o1B): null

10-01-2025T03:07:08 - [TEST_STEP][PASSED] - PR = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:07:08 - [TEST_STEP][PASSED] - FR = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:07:08 - [TEST_STEP][PASSED] - PB = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:07:08 - [TEST_STEP][PASSED] - FB = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:07:08 - [TEST_STEP][PASSED] - TR = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:07:08 - [TEST_STEP][PASSED] - TB = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:07:08 - [TEST_STEP][PASSED] - sheetName = "Sheet1": null

10-01-2025T03:07:08 - [TEST_STEP][PASSED] - data = findTestData("PlanFact"): null

10-01-2025T03:07:08 - [TEST_STEP][PASSED] - n = data.getRowNumbers() + 1: null

10-01-2025T03:07:08 - [TEST_STEP][PASSED] - year = todaysDate.substring(todaysDate.length() - 4, todaysDate.length()): null

10-01-2025T03:07:08 - [TEST_STEP][PASSED] - y = year.toInteger(): null

10-01-2025T03:07:08 - [TEST_STEP][PASSED] - m = getText(findTestObject("Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Фильтр Дата")): Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Фильтр Дата' is: '1, 2, 3 кв., Октябрь, Ноябрь 2024 года'

10-01-2025T03:07:08 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Фильтр Дата' is: '1, 2, 3 кв., Октябрь, Ноябрь 2024 года'

10-01-2025T03:07:08 - [TEST_STEP][PASSED] - m = m.substring(0, m.indexOf("2024")): null

10-01-2025T03:07:08 - [TEST_STEP][PASSED] - m = m.trim(): null

10-01-2025T03:07:08 - [TEST_STEP][PASSED] - dashboardName = "Выполнение бизнес-плана": null

10-01-2025T03:07:08 - [TEST_STEP][PASSED] - workbook01 = getWorkbook(excelFilePath): null

10-01-2025T03:07:08 - [TEST_STEP][PASSED] - sheet01 = getExcelSheet(workbook01, sheetName): null

10-01-2025T03:07:08 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 0, dashboardName): null

10-01-2025T03:07:08 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 1, dZO): null

10-01-2025T03:07:08 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 2, typeOfData): null

10-01-2025T03:07:08 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 3, typeOfData): null

10-01-2025T03:07:08 - [TEST_STEP][PASSED] - if (typeOfData == "План"): null

10-01-2025T03:07:08 - [TEST_STEP][PASSED] - else if (typeOfData == "Факт"): null

10-01-2025T03:07:08 - [TEST_STEP][PASSED] - else if (vidget.contains("электроэнергии") == true): null

10-01-2025T03:07:08 - [TEST_STEP][PASSED] - if (tabR == null): null

10-01-2025T03:07:08 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:07:08 - [TEST_STEP][PASSED] - if (tabR == "нет данных"): null

10-01-2025T03:07:08 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 4, "нет данных"): null

10-01-2025T03:07:08 - [TEST_STEP][PASSED] - if (tabB == null): null

10-01-2025T03:07:08 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:07:08 - [TEST_STEP][PASSED] - if (tabB == "нет данных"): null

10-01-2025T03:07:08 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:07:08 - [TEST_STEP][PASSED] - TB = tabB.toInteger(): null

10-01-2025T03:07:08 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 5, TB): null

10-01-2025T03:07:08 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 6, m): null

10-01-2025T03:07:08 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 7, y): null

10-01-2025T03:07:08 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 8, todaysDate): null

10-01-2025T03:07:08 - [TEST_STEP][PASSED] - n = n + 1: null

10-01-2025T03:07:08 - [TEST_STEP][PASSED] - saveWorkbook(excelFilePath, workbook01): null

10-01-2025T03:07:09 - [TEST_STEP][PASSED] - typeOfData = "План Отпуск из сети": null

10-01-2025T03:07:09 - [TEST_STEP][PASSED] - tabR = GetOiSPlanR(x = a): null

10-01-2025T03:07:09 - [TEST_STEP][PASSED] - i1 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:07:09 - [TEST_STEP][PASSED] - ii = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:07:09 - [TEST_STEP][PASSED] - for ([ii = 1, ii < 8, (ii++)]): null

10-01-2025T03:07:09 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:07:09 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:07:09 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:07:09 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:07:09 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:07:09 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:07:09 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:07:09 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:07:09 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:07:09 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:07:09 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:07:09 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:07:09 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:07:09 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:07:09 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:07:09 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:07:09 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:07:09 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:07:09 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:07:09 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:07:09 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:07:09 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:07:09 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:07:09 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:07:09 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:07:09 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:07:09 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:07:09 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:07:09 - [TEST_STEP][PASSED] - i1 = x.indexOf("/"): null

10-01-2025T03:07:09 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:07:09 - [TEST_STEP][PASSED] - x = x.substring(0, i1): null

10-01-2025T03:07:09 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:07:09 - [TEST_STEP][PASSED] - return x: null

10-01-2025T03:07:09 - [TEST_STEP][PASSED] - tabB = GetOiSPlanB(x = b): null

10-01-2025T03:07:09 - [TEST_STEP][PASSED] - i1 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:07:09 - [TEST_STEP][PASSED] - ii = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:07:09 - [TEST_STEP][PASSED] - for ([ii = 1, ii < 8, (ii++)]): null

10-01-2025T03:07:09 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:07:09 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:07:09 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:07:09 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:07:09 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:07:09 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:07:09 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:07:09 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:07:09 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:07:09 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:07:09 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:07:09 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:07:09 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:07:09 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:07:09 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:07:09 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:07:09 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:07:09 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:07:09 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:07:09 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:07:09 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:07:09 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:07:09 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:07:09 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:07:09 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:07:09 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:07:09 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:07:09 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:07:09 - [TEST_STEP][PASSED] - i1 = x.indexOf("/"): null

10-01-2025T03:07:09 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:07:09 - [TEST_STEP][PASSED] - x = x.substring(0, i1): null

10-01-2025T03:07:09 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:07:09 - [TEST_STEP][FAILED] - return x: null

10-01-2025T03:07:09 - [TEST_STEP][PASSED] - println(tabR + "/" + tabB): null

10-01-2025T03:07:09 - [TEST_STEP][FAILED] - if (verifyEqual(PercFactR, PercFactB) == false): null

10-01-2025T03:07:09 - [MESSAGE][FAILED] - Unable to verify equal between actual object 'нет данных' and expected object '5.39' (Root cause: com.kms.katalon.core.exception.StepFailedException: Actual object 'нет данных' and expected object '5.39' are not equal
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.doCall(VerifyEqualKeyword.groovy:58)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.call(VerifyEqualKeyword.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:75)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.verifyEqual(VerifyEqualKeyword.groovy:63)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.execute(VerifyEqualKeyword.groovy:44)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:74)
	at com.kms.katalon.core.keyword.BuiltinKeywords.verifyEqual(BuiltinKeywords.groovy:146)
	at jdk.internal.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at Выполнение бизнес-плана сверка дашбордов.CompareDZOData(Выполнение бизнес-плана сверка дашбордов:758)
	at Выполнение бизнес-плана сверка дашбордов.run(Выполнение бизнес-плана сверка дашбордов:623)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:448)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:439)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:418)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:410)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:285)
	at com.kms.katalon.core.common.CommonExecutor.accessTestCaseMainPhase(CommonExecutor.java:65)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:150)
	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:106)
	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:180)
	at TempTestSuite1736466949911.run(TempTestSuite1736466949911.groovy:35)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
)

10-01-2025T03:07:09 - [TEST_STEP][PASSED] - result = WriteToExcel(typeOfData, todaysDate, PercPlanR, PercPlanB, PercFactR, PercFactB, x, tabR, tabB, o1R, o1B, vidget): null

10-01-2025T03:07:09 - [TEST_STEP][PASSED] - iii = dZO.indexOf("/"): null

10-01-2025T03:07:09 - [TEST_STEP][PASSED] - println(iii): null

10-01-2025T03:07:09 - [TEST_STEP][PASSED] - dZO = dZO.substring(0, iii): null

10-01-2025T03:07:09 - [TEST_STEP][PASSED] - println(dZO): null

10-01-2025T03:07:09 - [TEST_STEP][PASSED] - println(PercPlanR): null

10-01-2025T03:07:09 - [TEST_STEP][PASSED] - println(PercPlanB): null

10-01-2025T03:07:09 - [TEST_STEP][PASSED] - println(PercFactR): null

10-01-2025T03:07:09 - [TEST_STEP][PASSED] - println(PercFactB): null

10-01-2025T03:07:09 - [TEST_STEP][PASSED] - println(tabR): null

10-01-2025T03:07:09 - [TEST_STEP][PASSED] - println(tabB): null

10-01-2025T03:07:09 - [TEST_STEP][PASSED] - println(o1R): null

10-01-2025T03:07:09 - [TEST_STEP][PASSED] - println(o1B): null

10-01-2025T03:07:09 - [TEST_STEP][PASSED] - PR = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:07:09 - [TEST_STEP][PASSED] - FR = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:07:09 - [TEST_STEP][PASSED] - PB = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:07:09 - [TEST_STEP][PASSED] - FB = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:07:09 - [TEST_STEP][PASSED] - TR = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:07:09 - [TEST_STEP][PASSED] - TB = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:07:09 - [TEST_STEP][PASSED] - sheetName = "Sheet1": null

10-01-2025T03:07:09 - [TEST_STEP][PASSED] - data = findTestData("PlanFact"): null

10-01-2025T03:07:09 - [TEST_STEP][PASSED] - n = data.getRowNumbers() + 1: null

10-01-2025T03:07:09 - [TEST_STEP][PASSED] - year = todaysDate.substring(todaysDate.length() - 4, todaysDate.length()): null

10-01-2025T03:07:09 - [TEST_STEP][PASSED] - y = year.toInteger(): null

10-01-2025T03:07:09 - [TEST_STEP][PASSED] - m = getText(findTestObject("Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Фильтр Дата")): Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Фильтр Дата' is: '1, 2, 3 кв., Октябрь, Ноябрь 2024 года'

10-01-2025T03:07:09 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Фильтр Дата' is: '1, 2, 3 кв., Октябрь, Ноябрь 2024 года'

10-01-2025T03:07:09 - [TEST_STEP][PASSED] - m = m.substring(0, m.indexOf("2024")): null

10-01-2025T03:07:09 - [TEST_STEP][PASSED] - m = m.trim(): null

10-01-2025T03:07:09 - [TEST_STEP][PASSED] - dashboardName = "Выполнение бизнес-плана": null

10-01-2025T03:07:09 - [TEST_STEP][PASSED] - workbook01 = getWorkbook(excelFilePath): null

10-01-2025T03:07:09 - [TEST_STEP][PASSED] - sheet01 = getExcelSheet(workbook01, sheetName): null

10-01-2025T03:07:09 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 0, dashboardName): null

10-01-2025T03:07:09 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 1, dZO): null

10-01-2025T03:07:09 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 2, typeOfData): null

10-01-2025T03:07:09 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 3, typeOfData): null

10-01-2025T03:07:09 - [TEST_STEP][PASSED] - if (typeOfData == "План"): null

10-01-2025T03:07:09 - [TEST_STEP][PASSED] - else if (typeOfData == "Факт"): null

10-01-2025T03:07:09 - [TEST_STEP][PASSED] - else if (vidget.contains("электроэнергии") == true): null

10-01-2025T03:07:09 - [TEST_STEP][PASSED] - if (tabR == null): null

10-01-2025T03:07:09 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:07:09 - [TEST_STEP][PASSED] - if (tabR == "нет данных"): null

10-01-2025T03:07:09 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 4, "нет данных"): null

10-01-2025T03:07:09 - [TEST_STEP][PASSED] - if (tabB == null): null

10-01-2025T03:07:09 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:07:09 - [TEST_STEP][PASSED] - if (tabB == "нет данных"): null

10-01-2025T03:07:09 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:07:09 - [TEST_STEP][PASSED] - TB = tabB.toInteger(): null

10-01-2025T03:07:09 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 5, TB): null

10-01-2025T03:07:09 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 6, m): null

10-01-2025T03:07:09 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 7, y): null

10-01-2025T03:07:09 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 8, todaysDate): null

10-01-2025T03:07:09 - [TEST_STEP][PASSED] - n = n + 1: null

10-01-2025T03:07:09 - [TEST_STEP][PASSED] - saveWorkbook(excelFilePath, workbook01): null

10-01-2025T03:07:09 - [TEST_STEP][PASSED] - typeOfData = "План Потери": null

10-01-2025T03:07:09 - [TEST_STEP][PASSED] - tabR = GetPPlanR(x = a): null

10-01-2025T03:07:09 - [TEST_STEP][PASSED] - i1 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:07:09 - [TEST_STEP][PASSED] - ii = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:07:09 - [TEST_STEP][PASSED] - for ([ii = 1, ii < 9, (ii++)]): null

10-01-2025T03:07:09 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:07:09 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:07:09 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:07:09 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:07:09 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:07:09 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:07:09 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:07:09 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:07:09 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:07:09 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:07:09 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:07:09 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:07:09 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:07:09 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:07:09 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:07:09 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:07:09 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:07:09 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:07:09 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:07:09 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:07:09 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:07:09 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:07:09 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:07:09 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:07:09 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:07:09 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:07:09 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:07:09 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:07:09 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:07:09 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:07:09 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:07:09 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:07:09 - [TEST_STEP][PASSED] - i1 = x.indexOf("/"): null

10-01-2025T03:07:09 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:07:09 - [TEST_STEP][PASSED] - x = x.substring(0, i1): null

10-01-2025T03:07:09 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:07:09 - [TEST_STEP][PASSED] - return x: null

10-01-2025T03:07:09 - [TEST_STEP][PASSED] - tabB = GetPPlanB(x = b): null

10-01-2025T03:07:09 - [TEST_STEP][PASSED] - i1 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:07:09 - [TEST_STEP][PASSED] - ii = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:07:09 - [TEST_STEP][PASSED] - for ([ii = 1, ii < 9, (ii++)]): null

10-01-2025T03:07:09 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:07:09 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:07:09 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:07:09 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:07:09 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:07:09 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:07:09 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:07:09 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:07:09 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:07:09 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:07:09 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:07:09 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:07:09 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:07:09 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:07:09 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:07:09 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:07:09 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:07:09 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:07:09 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:07:09 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:07:09 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:07:09 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:07:09 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:07:09 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:07:09 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:07:09 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:07:09 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:07:09 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:07:09 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:07:09 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:07:09 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:07:09 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:07:09 - [TEST_STEP][PASSED] - i1 = x.indexOf("/"): null

10-01-2025T03:07:09 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:07:09 - [TEST_STEP][PASSED] - x = x.substring(0, i1): null

10-01-2025T03:07:09 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:07:09 - [TEST_STEP][FAILED] - return x: null

10-01-2025T03:07:09 - [TEST_STEP][PASSED] - println(tabR + "/" + tabB): null

10-01-2025T03:07:09 - [TEST_STEP][FAILED] - if (verifyEqual(PercFactR, PercFactB) == false): null

10-01-2025T03:07:09 - [MESSAGE][FAILED] - Unable to verify equal between actual object 'нет данных' and expected object '5.39' (Root cause: com.kms.katalon.core.exception.StepFailedException: Actual object 'нет данных' and expected object '5.39' are not equal
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.doCall(VerifyEqualKeyword.groovy:58)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.call(VerifyEqualKeyword.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:75)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.verifyEqual(VerifyEqualKeyword.groovy:63)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.execute(VerifyEqualKeyword.groovy:44)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:74)
	at com.kms.katalon.core.keyword.BuiltinKeywords.verifyEqual(BuiltinKeywords.groovy:146)
	at jdk.internal.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at Выполнение бизнес-плана сверка дашбордов.CompareDZOData(Выполнение бизнес-плана сверка дашбордов:771)
	at Выполнение бизнес-плана сверка дашбордов.run(Выполнение бизнес-плана сверка дашбордов:623)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:448)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:439)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:418)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:410)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:285)
	at com.kms.katalon.core.common.CommonExecutor.accessTestCaseMainPhase(CommonExecutor.java:65)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:150)
	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:106)
	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:180)
	at TempTestSuite1736466949911.run(TempTestSuite1736466949911.groovy:35)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
)

10-01-2025T03:07:09 - [TEST_STEP][PASSED] - result = WriteToExcel(typeOfData, todaysDate, PercPlanR, PercPlanB, PercFactR, PercFactB, x, tabR, tabB, o1R, o1B, vidget): null

10-01-2025T03:07:09 - [TEST_STEP][PASSED] - iii = dZO.indexOf("/"): null

10-01-2025T03:07:09 - [TEST_STEP][PASSED] - println(iii): null

10-01-2025T03:07:09 - [TEST_STEP][PASSED] - dZO = dZO.substring(0, iii): null

10-01-2025T03:07:09 - [TEST_STEP][PASSED] - println(dZO): null

10-01-2025T03:07:09 - [TEST_STEP][PASSED] - println(PercPlanR): null

10-01-2025T03:07:09 - [TEST_STEP][PASSED] - println(PercPlanB): null

10-01-2025T03:07:09 - [TEST_STEP][PASSED] - println(PercFactR): null

10-01-2025T03:07:09 - [TEST_STEP][PASSED] - println(PercFactB): null

10-01-2025T03:07:09 - [TEST_STEP][PASSED] - println(tabR): null

10-01-2025T03:07:09 - [TEST_STEP][PASSED] - println(tabB): null

10-01-2025T03:07:09 - [TEST_STEP][PASSED] - println(o1R): null

10-01-2025T03:07:09 - [TEST_STEP][PASSED] - println(o1B): null

10-01-2025T03:07:09 - [TEST_STEP][PASSED] - PR = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:07:09 - [TEST_STEP][PASSED] - FR = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:07:09 - [TEST_STEP][PASSED] - PB = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:07:09 - [TEST_STEP][PASSED] - FB = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:07:09 - [TEST_STEP][PASSED] - TR = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:07:09 - [TEST_STEP][PASSED] - TB = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:07:09 - [TEST_STEP][PASSED] - sheetName = "Sheet1": null

10-01-2025T03:07:09 - [TEST_STEP][PASSED] - data = findTestData("PlanFact"): null

10-01-2025T03:07:09 - [TEST_STEP][PASSED] - n = data.getRowNumbers() + 1: null

10-01-2025T03:07:09 - [TEST_STEP][PASSED] - year = todaysDate.substring(todaysDate.length() - 4, todaysDate.length()): null

10-01-2025T03:07:09 - [TEST_STEP][PASSED] - y = year.toInteger(): null

10-01-2025T03:07:09 - [TEST_STEP][PASSED] - m = getText(findTestObject("Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Фильтр Дата")): Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Фильтр Дата' is: '1, 2, 3 кв., Октябрь, Ноябрь 2024 года'

10-01-2025T03:07:10 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Фильтр Дата' is: '1, 2, 3 кв., Октябрь, Ноябрь 2024 года'

10-01-2025T03:07:10 - [TEST_STEP][PASSED] - m = m.substring(0, m.indexOf("2024")): null

10-01-2025T03:07:10 - [TEST_STEP][PASSED] - m = m.trim(): null

10-01-2025T03:07:10 - [TEST_STEP][PASSED] - dashboardName = "Выполнение бизнес-плана": null

10-01-2025T03:07:10 - [TEST_STEP][PASSED] - workbook01 = getWorkbook(excelFilePath): null

10-01-2025T03:07:10 - [TEST_STEP][PASSED] - sheet01 = getExcelSheet(workbook01, sheetName): null

10-01-2025T03:07:10 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 0, dashboardName): null

10-01-2025T03:07:10 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 1, dZO): null

10-01-2025T03:07:10 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 2, typeOfData): null

10-01-2025T03:07:10 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 3, typeOfData): null

10-01-2025T03:07:10 - [TEST_STEP][PASSED] - if (typeOfData == "План"): null

10-01-2025T03:07:10 - [TEST_STEP][PASSED] - else if (typeOfData == "Факт"): null

10-01-2025T03:07:10 - [TEST_STEP][PASSED] - else if (vidget.contains("электроэнергии") == true): null

10-01-2025T03:07:10 - [TEST_STEP][PASSED] - if (tabR == null): null

10-01-2025T03:07:10 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:07:10 - [TEST_STEP][PASSED] - if (tabR == "нет данных"): null

10-01-2025T03:07:10 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 4, "нет данных"): null

10-01-2025T03:07:10 - [TEST_STEP][PASSED] - if (tabB == null): null

10-01-2025T03:07:10 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:07:10 - [TEST_STEP][PASSED] - if (tabB == "нет данных"): null

10-01-2025T03:07:10 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:07:10 - [TEST_STEP][PASSED] - TB = tabB.toInteger(): null

10-01-2025T03:07:10 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 5, TB): null

10-01-2025T03:07:10 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 6, m): null

10-01-2025T03:07:10 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 7, y): null

10-01-2025T03:07:10 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 8, todaysDate): null

10-01-2025T03:07:10 - [TEST_STEP][PASSED] - n = n + 1: null

10-01-2025T03:07:10 - [TEST_STEP][PASSED] - saveWorkbook(excelFilePath, workbook01): null

10-01-2025T03:07:10 - [TEST_STEP][PASSED] - ii2 = a.indexOf("ПАО"): null

10-01-2025T03:07:10 - [TEST_STEP][PASSED] - if (ii2 == -1): null

10-01-2025T03:07:10 - [TEST_STEP][PASSED] - vidget = "Отклонения фактического уровня потерь от бизнес-плана": null

10-01-2025T03:07:10 - [TEST_STEP][PASSED] - typeOfData = "Коэффициент": null

10-01-2025T03:07:10 - [TEST_STEP][PASSED] - o1R = Geto1R(x = a): null

10-01-2025T03:07:10 - [TEST_STEP][PASSED] - i1 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:07:10 - [TEST_STEP][PASSED] - ii = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:07:10 - [TEST_STEP][PASSED] - for ([ii = 1, ii < 10, (ii++)]): null

10-01-2025T03:07:10 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:07:10 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:07:10 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:07:10 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:07:10 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:07:10 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:07:10 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:07:10 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:07:10 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:07:10 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:07:10 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:07:10 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:07:10 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:07:10 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:07:10 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:07:10 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:07:10 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:07:10 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:07:10 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:07:10 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:07:10 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:07:10 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:07:10 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:07:10 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:07:10 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:07:10 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:07:10 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:07:10 - [TEST_STEP][PASSED] - i1 = x.indexOf("/"): null

10-01-2025T03:07:10 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:07:10 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:07:10 - [TEST_STEP][PASSED] - return x: null

10-01-2025T03:07:10 - [TEST_STEP][PASSED] - o1B = Geto1B(x = b): null

10-01-2025T03:07:10 - [TEST_STEP][PASSED] - i1 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:07:10 - [TEST_STEP][PASSED] - ii = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:07:10 - [TEST_STEP][PASSED] - for ([ii = 1, ii < 10, (ii++)]): null

10-01-2025T03:07:10 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:07:10 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:07:10 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:07:10 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:07:10 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:07:10 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:07:10 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:07:10 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:07:10 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:07:10 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:07:10 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:07:10 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:07:10 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:07:10 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:07:10 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:07:10 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:07:10 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:07:10 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:07:10 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:07:10 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:07:10 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:07:10 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:07:10 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:07:10 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:07:10 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:07:10 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:07:10 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:07:10 - [TEST_STEP][PASSED] - i1 = x.indexOf("/"): null

10-01-2025T03:07:10 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:07:10 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:07:10 - [TEST_STEP][FAILED] - return x: null

10-01-2025T03:07:10 - [TEST_STEP][PASSED] - println(o1R + "/" + o1B): null

10-01-2025T03:07:10 - [TEST_STEP][FAILED] - if (verifyEqual(PercFactR, PercFactB) == false): null

10-01-2025T03:07:10 - [MESSAGE][FAILED] - Unable to verify equal between actual object 'нет данных' and expected object '5.39' (Root cause: com.kms.katalon.core.exception.StepFailedException: Actual object 'нет данных' and expected object '5.39' are not equal
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.doCall(VerifyEqualKeyword.groovy:58)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.call(VerifyEqualKeyword.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:75)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.verifyEqual(VerifyEqualKeyword.groovy:63)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.execute(VerifyEqualKeyword.groovy:44)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:74)
	at com.kms.katalon.core.keyword.BuiltinKeywords.verifyEqual(BuiltinKeywords.groovy:146)
	at jdk.internal.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at Выполнение бизнес-плана сверка дашбордов.CompareDZOData(Выполнение бизнес-плана сверка дашбордов:789)
	at Выполнение бизнес-плана сверка дашбордов.run(Выполнение бизнес-плана сверка дашбордов:623)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:448)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:439)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:418)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:410)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:285)
	at com.kms.katalon.core.common.CommonExecutor.accessTestCaseMainPhase(CommonExecutor.java:65)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:150)
	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:106)
	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:180)
	at TempTestSuite1736466949911.run(TempTestSuite1736466949911.groovy:35)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
)

10-01-2025T03:07:10 - [TEST_STEP][PASSED] - result = WriteToExcel(typeOfData, todaysDate, PercPlanR, PercPlanB, PercFactR, PercFactB, x, tabR, tabB, o1R, o1B, vidget): null

10-01-2025T03:07:10 - [TEST_STEP][PASSED] - iii = dZO.indexOf("/"): null

10-01-2025T03:07:10 - [TEST_STEP][PASSED] - println(iii): null

10-01-2025T03:07:10 - [TEST_STEP][PASSED] - dZO = dZO.substring(0, iii): null

10-01-2025T03:07:10 - [TEST_STEP][PASSED] - println(dZO): null

10-01-2025T03:07:10 - [TEST_STEP][PASSED] - println(PercPlanR): null

10-01-2025T03:07:10 - [TEST_STEP][PASSED] - println(PercPlanB): null

10-01-2025T03:07:10 - [TEST_STEP][PASSED] - println(PercFactR): null

10-01-2025T03:07:10 - [TEST_STEP][PASSED] - println(PercFactB): null

10-01-2025T03:07:10 - [TEST_STEP][PASSED] - println(tabR): null

10-01-2025T03:07:10 - [TEST_STEP][PASSED] - println(tabB): null

10-01-2025T03:07:10 - [TEST_STEP][PASSED] - println(o1R): null

10-01-2025T03:07:10 - [TEST_STEP][PASSED] - println(o1B): null

10-01-2025T03:07:10 - [TEST_STEP][PASSED] - PR = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:07:10 - [TEST_STEP][PASSED] - FR = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:07:10 - [TEST_STEP][PASSED] - PB = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:07:10 - [TEST_STEP][PASSED] - FB = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:07:10 - [TEST_STEP][PASSED] - TR = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:07:10 - [TEST_STEP][PASSED] - TB = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:07:10 - [TEST_STEP][PASSED] - sheetName = "Sheet1": null

10-01-2025T03:07:10 - [TEST_STEP][PASSED] - data = findTestData("PlanFact"): null

10-01-2025T03:07:10 - [TEST_STEP][PASSED] - n = data.getRowNumbers() + 1: null

10-01-2025T03:07:10 - [TEST_STEP][PASSED] - year = todaysDate.substring(todaysDate.length() - 4, todaysDate.length()): null

10-01-2025T03:07:10 - [TEST_STEP][PASSED] - y = year.toInteger(): null

10-01-2025T03:07:10 - [TEST_STEP][PASSED] - m = getText(findTestObject("Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Фильтр Дата")): Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Фильтр Дата' is: '1, 2, 3 кв., Октябрь, Ноябрь 2024 года'

10-01-2025T03:07:11 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Фильтр Дата' is: '1, 2, 3 кв., Октябрь, Ноябрь 2024 года'

10-01-2025T03:07:11 - [TEST_STEP][PASSED] - m = m.substring(0, m.indexOf("2024")): null

10-01-2025T03:07:11 - [TEST_STEP][PASSED] - m = m.trim(): null

10-01-2025T03:07:11 - [TEST_STEP][PASSED] - dashboardName = "Выполнение бизнес-плана": null

10-01-2025T03:07:11 - [TEST_STEP][PASSED] - workbook01 = getWorkbook(excelFilePath): null

10-01-2025T03:07:11 - [TEST_STEP][PASSED] - sheet01 = getExcelSheet(workbook01, sheetName): null

10-01-2025T03:07:11 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 0, dashboardName): null

10-01-2025T03:07:11 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 1, dZO): null

10-01-2025T03:07:11 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 2, typeOfData): null

10-01-2025T03:07:11 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 3, typeOfData): null

10-01-2025T03:07:11 - [TEST_STEP][PASSED] - if (typeOfData == "План"): null

10-01-2025T03:07:11 - [TEST_STEP][PASSED] - else if (typeOfData == "Факт"): null

10-01-2025T03:07:11 - [TEST_STEP][PASSED] - else if (vidget.contains("электроэнергии") == true): null

10-01-2025T03:07:11 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:07:11 - [TEST_STEP][PASSED] - if (o1R == null): null

10-01-2025T03:07:11 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:07:11 - [TEST_STEP][PASSED] - if (o1R == "нет данных"): null

10-01-2025T03:07:11 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 4, "нет данных"): null

10-01-2025T03:07:11 - [TEST_STEP][PASSED] - if (o1B == null): null

10-01-2025T03:07:11 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:07:11 - [TEST_STEP][PASSED] - if (o1B == "нет данных"): null

10-01-2025T03:07:11 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:07:11 - [TEST_STEP][PASSED] - FB = o1B.toDouble(): null

10-01-2025T03:07:11 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 5, FB): null

10-01-2025T03:07:11 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 6, m): null

10-01-2025T03:07:11 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 7, y): null

10-01-2025T03:07:11 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 8, todaysDate): null

10-01-2025T03:07:11 - [TEST_STEP][PASSED] - n = n + 1: null

10-01-2025T03:07:11 - [TEST_STEP][FAILED] - saveWorkbook(excelFilePath, workbook01): null

10-01-2025T03:07:11 - [TEST_STEP][PASSED] - if (verifyEqual(siR, siB) == false): Actual object 'Россети Сибирь (ГК)/7.14/7.09/52412668/48697705/3714964/50003068/46434624/3568444/-0.05' and expected object 'Россети Сибирь (ГК)/7.14/7.09/52412668/48697705/3714964/50003068/46434624/3568444/-0.05' are equal

10-01-2025T03:07:11 - [MESSAGE][PASSED] - Actual object 'Россети Сибирь (ГК)/7.14/7.09/52412668/48697705/3714964/50003068/46434624/3568444/-0.05' and expected object 'Россети Сибирь (ГК)/7.14/7.09/52412668/48697705/3714964/50003068/46434624/3568444/-0.05' are equal

10-01-2025T03:07:11 - [TEST_STEP][FAILED] - if (verifyEqual(tomR, tomB) == false): null

10-01-2025T03:07:11 - [MESSAGE][FAILED] - Unable to verify equal between actual object 'Россети Томск/нет данных/нет данных/нет данных/нет данных/нет данных/нет данных/нет данных/нет данных/нет данных' and expected object 'Россети Томск/8.61/8.58/4685132/4283226/401906/4514319/4125742/388577/-0.03' (Root cause: com.kms.katalon.core.exception.StepFailedException: Actual object 'Россети Томск/нет данных/нет данных/нет данных/нет данных/нет данных/нет данных/нет данных/нет данных/нет данных' and expected object 'Россети Томск/8.61/8.58/4685132/4283226/401906/4514319/4125742/388577/-0.03' are not equal
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.doCall(VerifyEqualKeyword.groovy:58)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.call(VerifyEqualKeyword.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:75)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.verifyEqual(VerifyEqualKeyword.groovy:63)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.execute(VerifyEqualKeyword.groovy:44)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:74)
	at com.kms.katalon.core.keyword.BuiltinKeywords.verifyEqual(BuiltinKeywords.groovy:146)
	at jdk.internal.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at Выполнение бизнес-плана сверка дашбордов.run(Выполнение бизнес-плана сверка дашбордов:632)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:448)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:439)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:418)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:410)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:285)
	at com.kms.katalon.core.common.CommonExecutor.accessTestCaseMainPhase(CommonExecutor.java:65)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:150)
	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:106)
	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:180)
	at TempTestSuite1736466949911.run(TempTestSuite1736466949911.groovy:35)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
)

10-01-2025T03:07:11 - [TEST_STEP][PASSED] - result = CompareDZOData(a = tomR, b = tomB, dZO, typeOfData, PercPlanR, PercPlanB, PercFactR, PercFactB, todaysDate, x, vidget, tabR, tabB, o1R, o1B): null

10-01-2025T03:07:11 - [TEST_STEP][PASSED] - ii2 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:07:11 - [TEST_STEP][FAILED] - if (verifyEqual(a, b) == false): null

10-01-2025T03:07:11 - [MESSAGE][FAILED] - Unable to verify equal between actual object 'Россети Томск/нет данных/нет данных/нет данных/нет данных/нет данных/нет данных/нет данных/нет данных/нет данных' and expected object 'Россети Томск/8.61/8.58/4685132/4283226/401906/4514319/4125742/388577/-0.03' (Root cause: com.kms.katalon.core.exception.StepFailedException: Actual object 'Россети Томск/нет данных/нет данных/нет данных/нет данных/нет данных/нет данных/нет данных/нет данных/нет данных' and expected object 'Россети Томск/8.61/8.58/4685132/4283226/401906/4514319/4125742/388577/-0.03' are not equal
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.doCall(VerifyEqualKeyword.groovy:58)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.call(VerifyEqualKeyword.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:75)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.verifyEqual(VerifyEqualKeyword.groovy:63)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.execute(VerifyEqualKeyword.groovy:44)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:74)
	at com.kms.katalon.core.keyword.BuiltinKeywords.verifyEqual(BuiltinKeywords.groovy:146)
	at jdk.internal.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at Выполнение бизнес-плана сверка дашбордов.CompareDZOData(Выполнение бизнес-плана сверка дашбордов:673)
	at Выполнение бизнес-плана сверка дашбордов.run(Выполнение бизнес-плана сверка дашбордов:633)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:448)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:439)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:418)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:410)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:285)
	at com.kms.katalon.core.common.CommonExecutor.accessTestCaseMainPhase(CommonExecutor.java:65)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:150)
	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:106)
	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:180)
	at TempTestSuite1736466949911.run(TempTestSuite1736466949911.groovy:35)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
)

10-01-2025T03:07:11 - [TEST_STEP][PASSED] - vidget = "Уровень потерь электроэнергии": null

10-01-2025T03:07:11 - [TEST_STEP][PASSED] - typeOfData = "План": null

10-01-2025T03:07:11 - [TEST_STEP][PASSED] - PercPlanR = GetPercPlanR(x = a): null

10-01-2025T03:07:11 - [TEST_STEP][PASSED] - i1 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:07:11 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:07:11 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:07:11 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:07:11 - [TEST_STEP][PASSED] - i1 = x.indexOf("/"): null

10-01-2025T03:07:11 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:07:11 - [TEST_STEP][PASSED] - x = x.substring(0, i1): null

10-01-2025T03:07:11 - [TEST_STEP][PASSED] - return x: null

10-01-2025T03:07:11 - [TEST_STEP][PASSED] - PercPlanB = GetPercPlanB(x = b): null

10-01-2025T03:07:11 - [TEST_STEP][PASSED] - i1 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:07:11 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:07:11 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:07:11 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:07:11 - [TEST_STEP][PASSED] - i1 = x.indexOf("/"): null

10-01-2025T03:07:11 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:07:11 - [TEST_STEP][PASSED] - x = x.substring(0, i1): null

10-01-2025T03:07:11 - [TEST_STEP][FAILED] - return x: null

10-01-2025T03:07:11 - [TEST_STEP][FAILED] - if (verifyEqual(PercPlanR, PercPlanB) == false): null

10-01-2025T03:07:11 - [MESSAGE][FAILED] - Unable to verify equal between actual object 'нет данных' and expected object '8.61' (Root cause: com.kms.katalon.core.exception.StepFailedException: Actual object 'нет данных' and expected object '8.61' are not equal
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.doCall(VerifyEqualKeyword.groovy:58)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.call(VerifyEqualKeyword.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:75)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.verifyEqual(VerifyEqualKeyword.groovy:63)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.execute(VerifyEqualKeyword.groovy:44)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:74)
	at com.kms.katalon.core.keyword.BuiltinKeywords.verifyEqual(BuiltinKeywords.groovy:146)
	at jdk.internal.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at Выполнение бизнес-плана сверка дашбордов.CompareDZOData(Выполнение бизнес-плана сверка дашбордов:682)
	at Выполнение бизнес-плана сверка дашбордов.run(Выполнение бизнес-плана сверка дашбордов:633)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:448)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:439)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:418)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:410)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:285)
	at com.kms.katalon.core.common.CommonExecutor.accessTestCaseMainPhase(CommonExecutor.java:65)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:150)
	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:106)
	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:180)
	at TempTestSuite1736466949911.run(TempTestSuite1736466949911.groovy:35)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
)

10-01-2025T03:07:11 - [TEST_STEP][PASSED] - result = WriteToExcel(typeOfData, todaysDate, PercPlanR, PercPlanB, PercFactR, PercFactB, x, tabR, tabB, o1R, o1B, vidget): null

10-01-2025T03:07:11 - [TEST_STEP][PASSED] - iii = dZO.indexOf("/"): null

10-01-2025T03:07:11 - [TEST_STEP][PASSED] - println(iii): null

10-01-2025T03:07:11 - [TEST_STEP][PASSED] - dZO = dZO.substring(0, iii): null

10-01-2025T03:07:11 - [TEST_STEP][PASSED] - println(dZO): null

10-01-2025T03:07:11 - [TEST_STEP][PASSED] - println(PercPlanR): null

10-01-2025T03:07:11 - [TEST_STEP][PASSED] - println(PercPlanB): null

10-01-2025T03:07:11 - [TEST_STEP][PASSED] - println(PercFactR): null

10-01-2025T03:07:11 - [TEST_STEP][PASSED] - println(PercFactB): null

10-01-2025T03:07:11 - [TEST_STEP][PASSED] - println(tabR): null

10-01-2025T03:07:11 - [TEST_STEP][PASSED] - println(tabB): null

10-01-2025T03:07:11 - [TEST_STEP][PASSED] - println(o1R): null

10-01-2025T03:07:11 - [TEST_STEP][PASSED] - println(o1B): null

10-01-2025T03:07:11 - [TEST_STEP][PASSED] - PR = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:07:11 - [TEST_STEP][PASSED] - FR = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:07:11 - [TEST_STEP][PASSED] - PB = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:07:11 - [TEST_STEP][PASSED] - FB = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:07:11 - [TEST_STEP][PASSED] - TR = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:07:11 - [TEST_STEP][PASSED] - TB = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:07:11 - [TEST_STEP][PASSED] - sheetName = "Sheet1": null

10-01-2025T03:07:11 - [TEST_STEP][PASSED] - data = findTestData("PlanFact"): null

10-01-2025T03:07:11 - [TEST_STEP][PASSED] - n = data.getRowNumbers() + 1: null

10-01-2025T03:07:11 - [TEST_STEP][PASSED] - year = todaysDate.substring(todaysDate.length() - 4, todaysDate.length()): null

10-01-2025T03:07:11 - [TEST_STEP][PASSED] - y = year.toInteger(): null

10-01-2025T03:07:11 - [TEST_STEP][PASSED] - m = getText(findTestObject("Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Фильтр Дата")): Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Фильтр Дата' is: '1, 2, 3 кв., Октябрь, Ноябрь 2024 года'

10-01-2025T03:07:11 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Фильтр Дата' is: '1, 2, 3 кв., Октябрь, Ноябрь 2024 года'

10-01-2025T03:07:11 - [TEST_STEP][PASSED] - m = m.substring(0, m.indexOf("2024")): null

10-01-2025T03:07:11 - [TEST_STEP][PASSED] - m = m.trim(): null

10-01-2025T03:07:11 - [TEST_STEP][PASSED] - dashboardName = "Выполнение бизнес-плана": null

10-01-2025T03:07:11 - [TEST_STEP][PASSED] - workbook01 = getWorkbook(excelFilePath): null

10-01-2025T03:07:11 - [TEST_STEP][PASSED] - sheet01 = getExcelSheet(workbook01, sheetName): null

10-01-2025T03:07:11 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 0, dashboardName): null

10-01-2025T03:07:11 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 1, dZO): null

10-01-2025T03:07:11 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 2, typeOfData): null

10-01-2025T03:07:11 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 3, typeOfData): null

10-01-2025T03:07:11 - [TEST_STEP][PASSED] - if (typeOfData == "План"): null

10-01-2025T03:07:11 - [TEST_STEP][PASSED] - if (PercPlanR == null): null

10-01-2025T03:07:11 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:07:11 - [TEST_STEP][PASSED] - if (PercPlanR == "нет данных"): null

10-01-2025T03:07:11 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 4, "нет данных"): null

10-01-2025T03:07:11 - [TEST_STEP][PASSED] - if (PercPlanB == null): null

10-01-2025T03:07:11 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:07:11 - [TEST_STEP][PASSED] - if (PercPlanB == "нет данных"): null

10-01-2025T03:07:11 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:07:11 - [TEST_STEP][PASSED] - PB = PercPlanB.toDouble(): null

10-01-2025T03:07:11 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 5, PB): null

10-01-2025T03:07:11 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 6, m): null

10-01-2025T03:07:11 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 7, y): null

10-01-2025T03:07:11 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 8, todaysDate): null

10-01-2025T03:07:11 - [TEST_STEP][PASSED] - n = n + 1: null

10-01-2025T03:07:11 - [TEST_STEP][PASSED] - saveWorkbook(excelFilePath, workbook01): null

10-01-2025T03:07:12 - [TEST_STEP][PASSED] - typeOfData = "Факт": null

10-01-2025T03:07:12 - [TEST_STEP][PASSED] - PercFactR = GetPercFactR(x = a): null

10-01-2025T03:07:12 - [TEST_STEP][PASSED] - i1 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:07:12 - [TEST_STEP][PASSED] - ii = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:07:12 - [TEST_STEP][PASSED] - for ([ii = 1, ii < 3, (ii++)]): null

10-01-2025T03:07:12 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:07:12 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:07:12 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:07:12 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:07:12 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:07:12 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:07:12 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:07:12 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:07:12 - [TEST_STEP][PASSED] - i1 = x.indexOf("/"): null

10-01-2025T03:07:12 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:07:12 - [TEST_STEP][PASSED] - x = x.substring(0, i1): null

10-01-2025T03:07:12 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:07:12 - [TEST_STEP][PASSED] - return x: null

10-01-2025T03:07:12 - [TEST_STEP][PASSED] - PercFactB = GetPercFactB(x = b): null

10-01-2025T03:07:12 - [TEST_STEP][PASSED] - i1 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:07:12 - [TEST_STEP][PASSED] - ii = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:07:12 - [TEST_STEP][PASSED] - for ([ii = 1, ii < 3, (ii++)]): null

10-01-2025T03:07:12 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:07:12 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:07:12 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:07:12 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:07:12 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:07:12 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:07:12 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:07:12 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:07:12 - [TEST_STEP][PASSED] - i1 = x.indexOf("/"): null

10-01-2025T03:07:12 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:07:12 - [TEST_STEP][PASSED] - x = x.substring(0, i1): null

10-01-2025T03:07:12 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:07:12 - [TEST_STEP][FAILED] - return x: null

10-01-2025T03:07:12 - [TEST_STEP][FAILED] - if (verifyEqual(PercFactR, PercFactB) == false): null

10-01-2025T03:07:12 - [MESSAGE][FAILED] - Unable to verify equal between actual object 'нет данных' and expected object '8.58' (Root cause: com.kms.katalon.core.exception.StepFailedException: Actual object 'нет данных' and expected object '8.58' are not equal
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.doCall(VerifyEqualKeyword.groovy:58)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.call(VerifyEqualKeyword.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:75)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.verifyEqual(VerifyEqualKeyword.groovy:63)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.execute(VerifyEqualKeyword.groovy:44)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:74)
	at com.kms.katalon.core.keyword.BuiltinKeywords.verifyEqual(BuiltinKeywords.groovy:146)
	at jdk.internal.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at Выполнение бизнес-плана сверка дашбордов.CompareDZOData(Выполнение бизнес-плана сверка дашбордов:693)
	at Выполнение бизнес-плана сверка дашбордов.run(Выполнение бизнес-плана сверка дашбордов:633)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:448)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:439)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:418)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:410)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:285)
	at com.kms.katalon.core.common.CommonExecutor.accessTestCaseMainPhase(CommonExecutor.java:65)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:150)
	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:106)
	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:180)
	at TempTestSuite1736466949911.run(TempTestSuite1736466949911.groovy:35)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
)

10-01-2025T03:07:12 - [TEST_STEP][PASSED] - result = WriteToExcel(typeOfData, todaysDate, PercPlanR, PercPlanB, PercFactR, PercFactB, x, tabR, tabB, o1R, o1B, vidget): null

10-01-2025T03:07:12 - [TEST_STEP][PASSED] - iii = dZO.indexOf("/"): null

10-01-2025T03:07:12 - [TEST_STEP][PASSED] - println(iii): null

10-01-2025T03:07:12 - [TEST_STEP][PASSED] - dZO = dZO.substring(0, iii): null

10-01-2025T03:07:12 - [TEST_STEP][PASSED] - println(dZO): null

10-01-2025T03:07:12 - [TEST_STEP][PASSED] - println(PercPlanR): null

10-01-2025T03:07:12 - [TEST_STEP][PASSED] - println(PercPlanB): null

10-01-2025T03:07:12 - [TEST_STEP][PASSED] - println(PercFactR): null

10-01-2025T03:07:12 - [TEST_STEP][PASSED] - println(PercFactB): null

10-01-2025T03:07:12 - [TEST_STEP][PASSED] - println(tabR): null

10-01-2025T03:07:12 - [TEST_STEP][PASSED] - println(tabB): null

10-01-2025T03:07:12 - [TEST_STEP][PASSED] - println(o1R): null

10-01-2025T03:07:12 - [TEST_STEP][PASSED] - println(o1B): null

10-01-2025T03:07:12 - [TEST_STEP][PASSED] - PR = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:07:12 - [TEST_STEP][PASSED] - FR = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:07:12 - [TEST_STEP][PASSED] - PB = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:07:12 - [TEST_STEP][PASSED] - FB = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:07:12 - [TEST_STEP][PASSED] - TR = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:07:12 - [TEST_STEP][PASSED] - TB = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:07:12 - [TEST_STEP][PASSED] - sheetName = "Sheet1": null

10-01-2025T03:07:12 - [TEST_STEP][PASSED] - data = findTestData("PlanFact"): null

10-01-2025T03:07:12 - [TEST_STEP][PASSED] - n = data.getRowNumbers() + 1: null

10-01-2025T03:07:12 - [TEST_STEP][PASSED] - year = todaysDate.substring(todaysDate.length() - 4, todaysDate.length()): null

10-01-2025T03:07:12 - [TEST_STEP][PASSED] - y = year.toInteger(): null

10-01-2025T03:07:12 - [TEST_STEP][PASSED] - m = getText(findTestObject("Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Фильтр Дата")): Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Фильтр Дата' is: '1, 2, 3 кв., Октябрь, Ноябрь 2024 года'

10-01-2025T03:07:12 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Фильтр Дата' is: '1, 2, 3 кв., Октябрь, Ноябрь 2024 года'

10-01-2025T03:07:12 - [TEST_STEP][PASSED] - m = m.substring(0, m.indexOf("2024")): null

10-01-2025T03:07:12 - [TEST_STEP][PASSED] - m = m.trim(): null

10-01-2025T03:07:12 - [TEST_STEP][PASSED] - dashboardName = "Выполнение бизнес-плана": null

10-01-2025T03:07:12 - [TEST_STEP][PASSED] - workbook01 = getWorkbook(excelFilePath): null

10-01-2025T03:07:12 - [TEST_STEP][PASSED] - sheet01 = getExcelSheet(workbook01, sheetName): null

10-01-2025T03:07:12 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 0, dashboardName): null

10-01-2025T03:07:12 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 1, dZO): null

10-01-2025T03:07:12 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 2, typeOfData): null

10-01-2025T03:07:12 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 3, typeOfData): null

10-01-2025T03:07:12 - [TEST_STEP][PASSED] - if (typeOfData == "План"): null

10-01-2025T03:07:12 - [TEST_STEP][PASSED] - else if (typeOfData == "Факт"): null

10-01-2025T03:07:12 - [TEST_STEP][PASSED] - if (PercFactR == null): null

10-01-2025T03:07:12 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:07:12 - [TEST_STEP][PASSED] - if (PercFactR == "нет данных"): null

10-01-2025T03:07:12 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 4, "нет данных"): null

10-01-2025T03:07:12 - [TEST_STEP][PASSED] - if (PercFactB == null): null

10-01-2025T03:07:12 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:07:12 - [TEST_STEP][PASSED] - if (PercFactB == "нет данных"): null

10-01-2025T03:07:12 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:07:12 - [TEST_STEP][PASSED] - FB = PercFactB.toDouble(): null

10-01-2025T03:07:12 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 5, FB): null

10-01-2025T03:07:12 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 6, m): null

10-01-2025T03:07:12 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 7, y): null

10-01-2025T03:07:12 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 8, todaysDate): null

10-01-2025T03:07:12 - [TEST_STEP][PASSED] - n = n + 1: null

10-01-2025T03:07:12 - [TEST_STEP][PASSED] - saveWorkbook(excelFilePath, workbook01): null

10-01-2025T03:07:13 - [TEST_STEP][PASSED] - vidget = "Показатели баланса электроэнергии по ДЗО – Факт": null

10-01-2025T03:07:13 - [TEST_STEP][PASSED] - typeOfData = "Факт Отпуск в сеть": null

10-01-2025T03:07:13 - [TEST_STEP][PASSED] - tabR = GetOvSFactR(x = a): null

10-01-2025T03:07:13 - [TEST_STEP][PASSED] - i1 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:07:13 - [TEST_STEP][PASSED] - ii = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:07:13 - [TEST_STEP][PASSED] - for ([ii = 1, ii < 4, (ii++)]): null

10-01-2025T03:07:13 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:07:13 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:07:13 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:07:13 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:07:13 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:07:13 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:07:13 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:07:13 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:07:13 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:07:13 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:07:13 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:07:13 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:07:13 - [TEST_STEP][PASSED] - i1 = x.indexOf("/"): null

10-01-2025T03:07:13 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:07:13 - [TEST_STEP][PASSED] - x = x.substring(0, i1): null

10-01-2025T03:07:13 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:07:13 - [TEST_STEP][PASSED] - return x: null

10-01-2025T03:07:13 - [TEST_STEP][PASSED] - tabB = GetOvSFactB(x = b): null

10-01-2025T03:07:13 - [TEST_STEP][PASSED] - i1 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:07:13 - [TEST_STEP][PASSED] - ii = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:07:13 - [TEST_STEP][PASSED] - for ([ii = 1, ii < 4, (ii++)]): null

10-01-2025T03:07:13 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:07:13 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:07:13 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:07:13 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:07:13 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:07:13 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:07:13 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:07:13 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:07:13 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:07:13 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:07:13 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:07:13 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:07:13 - [TEST_STEP][PASSED] - i1 = x.indexOf("/"): null

10-01-2025T03:07:13 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:07:13 - [TEST_STEP][PASSED] - x = x.substring(0, i1): null

10-01-2025T03:07:13 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:07:13 - [TEST_STEP][FAILED] - return x: null

10-01-2025T03:07:13 - [TEST_STEP][FAILED] - if (verifyEqual(tabR, tabB) == false): null

10-01-2025T03:07:13 - [MESSAGE][FAILED] - Unable to verify equal between actual object 'нет данных' and expected object '4685132' (Root cause: com.kms.katalon.core.exception.StepFailedException: Actual object 'нет данных' and expected object '4685132' are not equal
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.doCall(VerifyEqualKeyword.groovy:58)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.call(VerifyEqualKeyword.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:75)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.verifyEqual(VerifyEqualKeyword.groovy:63)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.execute(VerifyEqualKeyword.groovy:44)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:74)
	at com.kms.katalon.core.keyword.BuiltinKeywords.verifyEqual(BuiltinKeywords.groovy:146)
	at jdk.internal.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at Выполнение бизнес-плана сверка дашбордов.CompareDZOData(Выполнение бизнес-плана сверка дашбордов:706)
	at Выполнение бизнес-плана сверка дашбордов.run(Выполнение бизнес-плана сверка дашбордов:633)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:448)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:439)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:418)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:410)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:285)
	at com.kms.katalon.core.common.CommonExecutor.accessTestCaseMainPhase(CommonExecutor.java:65)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:150)
	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:106)
	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:180)
	at TempTestSuite1736466949911.run(TempTestSuite1736466949911.groovy:35)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
)

10-01-2025T03:07:13 - [TEST_STEP][PASSED] - result = WriteToExcel(typeOfData, todaysDate, PercPlanR, PercPlanB, PercFactR, PercFactB, x, tabR, tabB, o1R, o1B, vidget): null

10-01-2025T03:07:13 - [TEST_STEP][PASSED] - iii = dZO.indexOf("/"): null

10-01-2025T03:07:13 - [TEST_STEP][PASSED] - println(iii): null

10-01-2025T03:07:13 - [TEST_STEP][PASSED] - dZO = dZO.substring(0, iii): null

10-01-2025T03:07:13 - [TEST_STEP][PASSED] - println(dZO): null

10-01-2025T03:07:13 - [TEST_STEP][PASSED] - println(PercPlanR): null

10-01-2025T03:07:13 - [TEST_STEP][PASSED] - println(PercPlanB): null

10-01-2025T03:07:13 - [TEST_STEP][PASSED] - println(PercFactR): null

10-01-2025T03:07:13 - [TEST_STEP][PASSED] - println(PercFactB): null

10-01-2025T03:07:13 - [TEST_STEP][PASSED] - println(tabR): null

10-01-2025T03:07:13 - [TEST_STEP][PASSED] - println(tabB): null

10-01-2025T03:07:13 - [TEST_STEP][PASSED] - println(o1R): null

10-01-2025T03:07:13 - [TEST_STEP][PASSED] - println(o1B): null

10-01-2025T03:07:13 - [TEST_STEP][PASSED] - PR = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:07:13 - [TEST_STEP][PASSED] - FR = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:07:13 - [TEST_STEP][PASSED] - PB = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:07:13 - [TEST_STEP][PASSED] - FB = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:07:13 - [TEST_STEP][PASSED] - TR = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:07:13 - [TEST_STEP][PASSED] - TB = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:07:13 - [TEST_STEP][PASSED] - sheetName = "Sheet1": null

10-01-2025T03:07:13 - [TEST_STEP][PASSED] - data = findTestData("PlanFact"): null

10-01-2025T03:07:13 - [TEST_STEP][PASSED] - n = data.getRowNumbers() + 1: null

10-01-2025T03:07:13 - [TEST_STEP][PASSED] - year = todaysDate.substring(todaysDate.length() - 4, todaysDate.length()): null

10-01-2025T03:07:13 - [TEST_STEP][PASSED] - y = year.toInteger(): null

10-01-2025T03:07:13 - [TEST_STEP][PASSED] - m = getText(findTestObject("Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Фильтр Дата")): Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Фильтр Дата' is: '1, 2, 3 кв., Октябрь, Ноябрь 2024 года'

10-01-2025T03:07:13 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Фильтр Дата' is: '1, 2, 3 кв., Октябрь, Ноябрь 2024 года'

10-01-2025T03:07:13 - [TEST_STEP][PASSED] - m = m.substring(0, m.indexOf("2024")): null

10-01-2025T03:07:13 - [TEST_STEP][PASSED] - m = m.trim(): null

10-01-2025T03:07:13 - [TEST_STEP][PASSED] - dashboardName = "Выполнение бизнес-плана": null

10-01-2025T03:07:13 - [TEST_STEP][PASSED] - workbook01 = getWorkbook(excelFilePath): null

10-01-2025T03:07:13 - [TEST_STEP][PASSED] - sheet01 = getExcelSheet(workbook01, sheetName): null

10-01-2025T03:07:13 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 0, dashboardName): null

10-01-2025T03:07:13 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 1, dZO): null

10-01-2025T03:07:13 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 2, typeOfData): null

10-01-2025T03:07:13 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 3, typeOfData): null

10-01-2025T03:07:13 - [TEST_STEP][PASSED] - if (typeOfData == "План"): null

10-01-2025T03:07:13 - [TEST_STEP][PASSED] - else if (typeOfData == "Факт"): null

10-01-2025T03:07:13 - [TEST_STEP][PASSED] - else if (vidget.contains("электроэнергии") == true): null

10-01-2025T03:07:13 - [TEST_STEP][PASSED] - if (tabR == null): null

10-01-2025T03:07:13 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:07:13 - [TEST_STEP][PASSED] - if (tabR == "нет данных"): null

10-01-2025T03:07:13 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 4, "нет данных"): null

10-01-2025T03:07:13 - [TEST_STEP][PASSED] - if (tabB == null): null

10-01-2025T03:07:13 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:07:13 - [TEST_STEP][PASSED] - if (tabB == "нет данных"): null

10-01-2025T03:07:13 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:07:13 - [TEST_STEP][PASSED] - TB = tabB.toInteger(): null

10-01-2025T03:07:13 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 5, TB): null

10-01-2025T03:07:13 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 6, m): null

10-01-2025T03:07:13 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 7, y): null

10-01-2025T03:07:13 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 8, todaysDate): null

10-01-2025T03:07:13 - [TEST_STEP][PASSED] - n = n + 1: null

10-01-2025T03:07:13 - [TEST_STEP][PASSED] - saveWorkbook(excelFilePath, workbook01): null

10-01-2025T03:07:13 - [TEST_STEP][PASSED] - typeOfData = "Факт Отпуск из сети": null

10-01-2025T03:07:13 - [TEST_STEP][PASSED] - tabR = GetOiSFactR(x = a): null

10-01-2025T03:07:13 - [TEST_STEP][PASSED] - i1 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:07:13 - [TEST_STEP][PASSED] - ii = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:07:13 - [TEST_STEP][PASSED] - for ([ii = 1, ii < 5, (ii++)]): null

10-01-2025T03:07:13 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:07:13 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:07:13 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:07:13 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:07:13 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:07:13 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:07:13 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:07:13 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:07:13 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:07:13 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:07:13 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:07:13 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:07:13 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:07:13 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:07:13 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:07:13 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:07:13 - [TEST_STEP][PASSED] - i1 = x.indexOf("/"): null

10-01-2025T03:07:13 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:07:13 - [TEST_STEP][PASSED] - x = x.substring(0, i1): null

10-01-2025T03:07:13 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:07:13 - [TEST_STEP][PASSED] - return x: null

10-01-2025T03:07:13 - [TEST_STEP][PASSED] - tabB = GetOiSFactB(x = b): null

10-01-2025T03:07:13 - [TEST_STEP][PASSED] - i1 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:07:13 - [TEST_STEP][PASSED] - ii = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:07:13 - [TEST_STEP][PASSED] - for ([ii = 1, ii < 5, (ii++)]): null

10-01-2025T03:07:13 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:07:13 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:07:13 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:07:13 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:07:13 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:07:13 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:07:13 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:07:13 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:07:13 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:07:13 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:07:13 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:07:13 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:07:13 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:07:13 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:07:13 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:07:13 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:07:13 - [TEST_STEP][PASSED] - i1 = x.indexOf("/"): null

10-01-2025T03:07:13 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:07:13 - [TEST_STEP][PASSED] - x = x.substring(0, i1): null

10-01-2025T03:07:13 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:07:13 - [TEST_STEP][FAILED] - return x: null

10-01-2025T03:07:13 - [TEST_STEP][FAILED] - if (verifyEqual(tabR, tabB) == false): null

10-01-2025T03:07:13 - [MESSAGE][FAILED] - Unable to verify equal between actual object 'нет данных' and expected object '4283226' (Root cause: com.kms.katalon.core.exception.StepFailedException: Actual object 'нет данных' and expected object '4283226' are not equal
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.doCall(VerifyEqualKeyword.groovy:58)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.call(VerifyEqualKeyword.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:75)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.verifyEqual(VerifyEqualKeyword.groovy:63)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.execute(VerifyEqualKeyword.groovy:44)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:74)
	at com.kms.katalon.core.keyword.BuiltinKeywords.verifyEqual(BuiltinKeywords.groovy:146)
	at jdk.internal.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at Выполнение бизнес-плана сверка дашбордов.CompareDZOData(Выполнение бизнес-плана сверка дашбордов:717)
	at Выполнение бизнес-плана сверка дашбордов.run(Выполнение бизнес-плана сверка дашбордов:633)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:448)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:439)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:418)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:410)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:285)
	at com.kms.katalon.core.common.CommonExecutor.accessTestCaseMainPhase(CommonExecutor.java:65)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:150)
	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:106)
	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:180)
	at TempTestSuite1736466949911.run(TempTestSuite1736466949911.groovy:35)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
)

10-01-2025T03:07:13 - [TEST_STEP][PASSED] - result = WriteToExcel(typeOfData, todaysDate, PercPlanR, PercPlanB, PercFactR, PercFactB, x, tabR, tabB, o1R, o1B, vidget): null

10-01-2025T03:07:13 - [TEST_STEP][PASSED] - iii = dZO.indexOf("/"): null

10-01-2025T03:07:13 - [TEST_STEP][PASSED] - println(iii): null

10-01-2025T03:07:13 - [TEST_STEP][PASSED] - dZO = dZO.substring(0, iii): null

10-01-2025T03:07:13 - [TEST_STEP][PASSED] - println(dZO): null

10-01-2025T03:07:13 - [TEST_STEP][PASSED] - println(PercPlanR): null

10-01-2025T03:07:13 - [TEST_STEP][PASSED] - println(PercPlanB): null

10-01-2025T03:07:13 - [TEST_STEP][PASSED] - println(PercFactR): null

10-01-2025T03:07:13 - [TEST_STEP][PASSED] - println(PercFactB): null

10-01-2025T03:07:13 - [TEST_STEP][PASSED] - println(tabR): null

10-01-2025T03:07:13 - [TEST_STEP][PASSED] - println(tabB): null

10-01-2025T03:07:13 - [TEST_STEP][PASSED] - println(o1R): null

10-01-2025T03:07:13 - [TEST_STEP][PASSED] - println(o1B): null

10-01-2025T03:07:13 - [TEST_STEP][PASSED] - PR = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:07:13 - [TEST_STEP][PASSED] - FR = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:07:13 - [TEST_STEP][PASSED] - PB = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:07:13 - [TEST_STEP][PASSED] - FB = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:07:13 - [TEST_STEP][PASSED] - TR = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:07:13 - [TEST_STEP][PASSED] - TB = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:07:13 - [TEST_STEP][PASSED] - sheetName = "Sheet1": null

10-01-2025T03:07:13 - [TEST_STEP][PASSED] - data = findTestData("PlanFact"): null

10-01-2025T03:07:14 - [TEST_STEP][PASSED] - n = data.getRowNumbers() + 1: null

10-01-2025T03:07:14 - [TEST_STEP][PASSED] - year = todaysDate.substring(todaysDate.length() - 4, todaysDate.length()): null

10-01-2025T03:07:14 - [TEST_STEP][PASSED] - y = year.toInteger(): null

10-01-2025T03:07:14 - [TEST_STEP][PASSED] - m = getText(findTestObject("Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Фильтр Дата")): Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Фильтр Дата' is: '1, 2, 3 кв., Октябрь, Ноябрь 2024 года'

10-01-2025T03:07:14 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Фильтр Дата' is: '1, 2, 3 кв., Октябрь, Ноябрь 2024 года'

10-01-2025T03:07:14 - [TEST_STEP][PASSED] - m = m.substring(0, m.indexOf("2024")): null

10-01-2025T03:07:14 - [TEST_STEP][PASSED] - m = m.trim(): null

10-01-2025T03:07:14 - [TEST_STEP][PASSED] - dashboardName = "Выполнение бизнес-плана": null

10-01-2025T03:07:14 - [TEST_STEP][PASSED] - workbook01 = getWorkbook(excelFilePath): null

10-01-2025T03:07:14 - [TEST_STEP][PASSED] - sheet01 = getExcelSheet(workbook01, sheetName): null

10-01-2025T03:07:14 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 0, dashboardName): null

10-01-2025T03:07:14 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 1, dZO): null

10-01-2025T03:07:14 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 2, typeOfData): null

10-01-2025T03:07:14 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 3, typeOfData): null

10-01-2025T03:07:14 - [TEST_STEP][PASSED] - if (typeOfData == "План"): null

10-01-2025T03:07:14 - [TEST_STEP][PASSED] - else if (typeOfData == "Факт"): null

10-01-2025T03:07:14 - [TEST_STEP][PASSED] - else if (vidget.contains("электроэнергии") == true): null

10-01-2025T03:07:14 - [TEST_STEP][PASSED] - if (tabR == null): null

10-01-2025T03:07:14 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:07:14 - [TEST_STEP][PASSED] - if (tabR == "нет данных"): null

10-01-2025T03:07:14 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 4, "нет данных"): null

10-01-2025T03:07:14 - [TEST_STEP][PASSED] - if (tabB == null): null

10-01-2025T03:07:14 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:07:14 - [TEST_STEP][PASSED] - if (tabB == "нет данных"): null

10-01-2025T03:07:14 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:07:14 - [TEST_STEP][PASSED] - TB = tabB.toInteger(): null

10-01-2025T03:07:14 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 5, TB): null

10-01-2025T03:07:14 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 6, m): null

10-01-2025T03:07:14 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 7, y): null

10-01-2025T03:07:14 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 8, todaysDate): null

10-01-2025T03:07:14 - [TEST_STEP][PASSED] - n = n + 1: null

10-01-2025T03:07:14 - [TEST_STEP][PASSED] - saveWorkbook(excelFilePath, workbook01): null

10-01-2025T03:07:14 - [TEST_STEP][PASSED] - typeOfData = "Факт Потери": null

10-01-2025T03:07:14 - [TEST_STEP][PASSED] - tabR = GetPFactR(x = a): null

10-01-2025T03:07:14 - [TEST_STEP][PASSED] - i1 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:07:14 - [TEST_STEP][PASSED] - ii = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:07:14 - [TEST_STEP][PASSED] - for ([ii = 1, ii < 6, (ii++)]): null

10-01-2025T03:07:14 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:07:14 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:07:14 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:07:14 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:07:14 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:07:14 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:07:14 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:07:14 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:07:14 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:07:14 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:07:14 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:07:14 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:07:14 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:07:14 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:07:14 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:07:14 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:07:14 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:07:14 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:07:14 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:07:14 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:07:14 - [TEST_STEP][PASSED] - i1 = x.indexOf("/"): null

10-01-2025T03:07:14 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:07:14 - [TEST_STEP][PASSED] - x = x.substring(0, i1): null

10-01-2025T03:07:14 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:07:14 - [TEST_STEP][PASSED] - return x: null

10-01-2025T03:07:14 - [TEST_STEP][PASSED] - tabB = GetPFactB(x = b): null

10-01-2025T03:07:14 - [TEST_STEP][PASSED] - i1 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:07:14 - [TEST_STEP][PASSED] - ii = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:07:14 - [TEST_STEP][PASSED] - for ([ii = 1, ii < 6, (ii++)]): null

10-01-2025T03:07:14 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:07:14 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:07:14 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:07:14 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:07:14 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:07:14 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:07:14 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:07:14 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:07:14 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:07:14 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:07:14 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:07:14 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:07:14 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:07:14 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:07:14 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:07:14 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:07:14 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:07:14 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:07:14 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:07:14 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:07:14 - [TEST_STEP][PASSED] - i1 = x.indexOf("/"): null

10-01-2025T03:07:14 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:07:14 - [TEST_STEP][PASSED] - x = x.substring(0, i1): null

10-01-2025T03:07:14 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:07:14 - [TEST_STEP][FAILED] - return x: null

10-01-2025T03:07:14 - [TEST_STEP][PASSED] - println(tabR + "/" + tabB): null

10-01-2025T03:07:14 - [TEST_STEP][FAILED] - if (verifyEqual(tabR, tabB) == false): null

10-01-2025T03:07:14 - [MESSAGE][FAILED] - Unable to verify equal between actual object 'нет данных' and expected object '401906' (Root cause: com.kms.katalon.core.exception.StepFailedException: Actual object 'нет данных' and expected object '401906' are not equal
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.doCall(VerifyEqualKeyword.groovy:58)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.call(VerifyEqualKeyword.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:75)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.verifyEqual(VerifyEqualKeyword.groovy:63)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.execute(VerifyEqualKeyword.groovy:44)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:74)
	at com.kms.katalon.core.keyword.BuiltinKeywords.verifyEqual(BuiltinKeywords.groovy:146)
	at jdk.internal.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at Выполнение бизнес-плана сверка дашбордов.CompareDZOData(Выполнение бизнес-плана сверка дашбордов:730)
	at Выполнение бизнес-плана сверка дашбордов.run(Выполнение бизнес-плана сверка дашбордов:633)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:448)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:439)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:418)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:410)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:285)
	at com.kms.katalon.core.common.CommonExecutor.accessTestCaseMainPhase(CommonExecutor.java:65)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:150)
	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:106)
	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:180)
	at TempTestSuite1736466949911.run(TempTestSuite1736466949911.groovy:35)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
)

10-01-2025T03:07:14 - [TEST_STEP][PASSED] - result = WriteToExcel(typeOfData, todaysDate, PercPlanR, PercPlanB, PercFactR, PercFactB, x, tabR, tabB, o1R, o1B, vidget): null

10-01-2025T03:07:14 - [TEST_STEP][PASSED] - iii = dZO.indexOf("/"): null

10-01-2025T03:07:14 - [TEST_STEP][PASSED] - println(iii): null

10-01-2025T03:07:14 - [TEST_STEP][PASSED] - dZO = dZO.substring(0, iii): null

10-01-2025T03:07:14 - [TEST_STEP][PASSED] - println(dZO): null

10-01-2025T03:07:14 - [TEST_STEP][PASSED] - println(PercPlanR): null

10-01-2025T03:07:14 - [TEST_STEP][PASSED] - println(PercPlanB): null

10-01-2025T03:07:14 - [TEST_STEP][PASSED] - println(PercFactR): null

10-01-2025T03:07:14 - [TEST_STEP][PASSED] - println(PercFactB): null

10-01-2025T03:07:14 - [TEST_STEP][PASSED] - println(tabR): null

10-01-2025T03:07:14 - [TEST_STEP][PASSED] - println(tabB): null

10-01-2025T03:07:14 - [TEST_STEP][PASSED] - println(o1R): null

10-01-2025T03:07:14 - [TEST_STEP][PASSED] - println(o1B): null

10-01-2025T03:07:14 - [TEST_STEP][PASSED] - PR = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:07:14 - [TEST_STEP][PASSED] - FR = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:07:14 - [TEST_STEP][PASSED] - PB = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:07:14 - [TEST_STEP][PASSED] - FB = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:07:14 - [TEST_STEP][PASSED] - TR = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:07:14 - [TEST_STEP][PASSED] - TB = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:07:14 - [TEST_STEP][PASSED] - sheetName = "Sheet1": null

10-01-2025T03:07:14 - [TEST_STEP][PASSED] - data = findTestData("PlanFact"): null

10-01-2025T03:07:14 - [TEST_STEP][PASSED] - n = data.getRowNumbers() + 1: null

10-01-2025T03:07:14 - [TEST_STEP][PASSED] - year = todaysDate.substring(todaysDate.length() - 4, todaysDate.length()): null

10-01-2025T03:07:14 - [TEST_STEP][PASSED] - y = year.toInteger(): null

10-01-2025T03:07:14 - [TEST_STEP][PASSED] - m = getText(findTestObject("Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Фильтр Дата")): Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Фильтр Дата' is: '1, 2, 3 кв., Октябрь, Ноябрь 2024 года'

10-01-2025T03:07:15 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Фильтр Дата' is: '1, 2, 3 кв., Октябрь, Ноябрь 2024 года'

10-01-2025T03:07:15 - [TEST_STEP][PASSED] - m = m.substring(0, m.indexOf("2024")): null

10-01-2025T03:07:15 - [TEST_STEP][PASSED] - m = m.trim(): null

10-01-2025T03:07:15 - [TEST_STEP][PASSED] - dashboardName = "Выполнение бизнес-плана": null

10-01-2025T03:07:15 - [TEST_STEP][PASSED] - workbook01 = getWorkbook(excelFilePath): null

10-01-2025T03:07:15 - [TEST_STEP][PASSED] - sheet01 = getExcelSheet(workbook01, sheetName): null

10-01-2025T03:07:15 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 0, dashboardName): null

10-01-2025T03:07:15 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 1, dZO): null

10-01-2025T03:07:15 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 2, typeOfData): null

10-01-2025T03:07:15 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 3, typeOfData): null

10-01-2025T03:07:15 - [TEST_STEP][PASSED] - if (typeOfData == "План"): null

10-01-2025T03:07:15 - [TEST_STEP][PASSED] - else if (typeOfData == "Факт"): null

10-01-2025T03:07:15 - [TEST_STEP][PASSED] - else if (vidget.contains("электроэнергии") == true): null

10-01-2025T03:07:15 - [TEST_STEP][PASSED] - if (tabR == null): null

10-01-2025T03:07:15 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:07:15 - [TEST_STEP][PASSED] - if (tabR == "нет данных"): null

10-01-2025T03:07:15 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 4, "нет данных"): null

10-01-2025T03:07:15 - [TEST_STEP][PASSED] - if (tabB == null): null

10-01-2025T03:07:15 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:07:15 - [TEST_STEP][PASSED] - if (tabB == "нет данных"): null

10-01-2025T03:07:15 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:07:15 - [TEST_STEP][PASSED] - TB = tabB.toInteger(): null

10-01-2025T03:07:15 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 5, TB): null

10-01-2025T03:07:15 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 6, m): null

10-01-2025T03:07:15 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 7, y): null

10-01-2025T03:07:15 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 8, todaysDate): null

10-01-2025T03:07:15 - [TEST_STEP][PASSED] - n = n + 1: null

10-01-2025T03:07:15 - [TEST_STEP][PASSED] - saveWorkbook(excelFilePath, workbook01): null

10-01-2025T03:07:15 - [TEST_STEP][PASSED] - vidget = "Показатели баланса электроэнергии по ДЗО – План": null

10-01-2025T03:07:15 - [TEST_STEP][PASSED] - typeOfData = "План Отпуск в сеть": null

10-01-2025T03:07:15 - [TEST_STEP][PASSED] - tabR = GetOvSPlanR(x = a): null

10-01-2025T03:07:15 - [TEST_STEP][PASSED] - i1 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:07:15 - [TEST_STEP][PASSED] - ii = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:07:15 - [TEST_STEP][PASSED] - for ([ii = 1, ii < 7, (ii++)]): null

10-01-2025T03:07:15 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:07:15 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:07:15 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:07:15 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:07:15 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:07:15 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:07:15 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:07:15 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:07:15 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:07:15 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:07:15 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:07:15 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:07:15 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:07:15 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:07:15 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:07:15 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:07:15 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:07:15 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:07:15 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:07:15 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:07:15 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:07:15 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:07:15 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:07:15 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:07:15 - [TEST_STEP][PASSED] - i1 = x.indexOf("/"): null

10-01-2025T03:07:15 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:07:15 - [TEST_STEP][PASSED] - x = x.substring(0, i1): null

10-01-2025T03:07:15 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:07:15 - [TEST_STEP][PASSED] - return x: null

10-01-2025T03:07:15 - [TEST_STEP][PASSED] - tabB = GetOvSPlanB(x = b): null

10-01-2025T03:07:15 - [TEST_STEP][PASSED] - i1 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:07:15 - [TEST_STEP][PASSED] - ii = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:07:15 - [TEST_STEP][PASSED] - for ([ii = 1, ii < 7, (ii++)]): null

10-01-2025T03:07:15 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:07:15 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:07:15 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:07:15 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:07:15 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:07:15 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:07:15 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:07:15 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:07:15 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:07:15 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:07:15 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:07:15 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:07:15 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:07:15 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:07:15 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:07:15 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:07:15 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:07:15 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:07:15 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:07:15 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:07:15 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:07:15 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:07:15 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:07:15 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:07:15 - [TEST_STEP][PASSED] - i1 = x.indexOf("/"): null

10-01-2025T03:07:15 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:07:15 - [TEST_STEP][PASSED] - x = x.substring(0, i1): null

10-01-2025T03:07:15 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:07:15 - [TEST_STEP][FAILED] - return x: null

10-01-2025T03:07:15 - [TEST_STEP][PASSED] - println(tabR + "/" + tabB): null

10-01-2025T03:07:15 - [TEST_STEP][FAILED] - if (verifyEqual(PercFactR, PercFactB) == false): null

10-01-2025T03:07:15 - [MESSAGE][FAILED] - Unable to verify equal between actual object 'нет данных' and expected object '8.58' (Root cause: com.kms.katalon.core.exception.StepFailedException: Actual object 'нет данных' and expected object '8.58' are not equal
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.doCall(VerifyEqualKeyword.groovy:58)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.call(VerifyEqualKeyword.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:75)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.verifyEqual(VerifyEqualKeyword.groovy:63)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.execute(VerifyEqualKeyword.groovy:44)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:74)
	at com.kms.katalon.core.keyword.BuiltinKeywords.verifyEqual(BuiltinKeywords.groovy:146)
	at jdk.internal.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at Выполнение бизнес-плана сверка дашбордов.CompareDZOData(Выполнение бизнес-плана сверка дашбордов:745)
	at Выполнение бизнес-плана сверка дашбордов.run(Выполнение бизнес-плана сверка дашбордов:633)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:448)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:439)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:418)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:410)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:285)
	at com.kms.katalon.core.common.CommonExecutor.accessTestCaseMainPhase(CommonExecutor.java:65)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:150)
	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:106)
	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:180)
	at TempTestSuite1736466949911.run(TempTestSuite1736466949911.groovy:35)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
)

10-01-2025T03:07:15 - [TEST_STEP][PASSED] - result = WriteToExcel(typeOfData, todaysDate, PercPlanR, PercPlanB, PercFactR, PercFactB, x, tabR, tabB, o1R, o1B, vidget): null

10-01-2025T03:07:15 - [TEST_STEP][PASSED] - iii = dZO.indexOf("/"): null

10-01-2025T03:07:15 - [TEST_STEP][PASSED] - println(iii): null

10-01-2025T03:07:15 - [TEST_STEP][PASSED] - dZO = dZO.substring(0, iii): null

10-01-2025T03:07:15 - [TEST_STEP][PASSED] - println(dZO): null

10-01-2025T03:07:15 - [TEST_STEP][PASSED] - println(PercPlanR): null

10-01-2025T03:07:15 - [TEST_STEP][PASSED] - println(PercPlanB): null

10-01-2025T03:07:15 - [TEST_STEP][PASSED] - println(PercFactR): null

10-01-2025T03:07:15 - [TEST_STEP][PASSED] - println(PercFactB): null

10-01-2025T03:07:15 - [TEST_STEP][PASSED] - println(tabR): null

10-01-2025T03:07:15 - [TEST_STEP][PASSED] - println(tabB): null

10-01-2025T03:07:15 - [TEST_STEP][PASSED] - println(o1R): null

10-01-2025T03:07:15 - [TEST_STEP][PASSED] - println(o1B): null

10-01-2025T03:07:15 - [TEST_STEP][PASSED] - PR = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:07:15 - [TEST_STEP][PASSED] - FR = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:07:15 - [TEST_STEP][PASSED] - PB = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:07:15 - [TEST_STEP][PASSED] - FB = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:07:15 - [TEST_STEP][PASSED] - TR = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:07:15 - [TEST_STEP][PASSED] - TB = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:07:15 - [TEST_STEP][PASSED] - sheetName = "Sheet1": null

10-01-2025T03:07:15 - [TEST_STEP][PASSED] - data = findTestData("PlanFact"): null

10-01-2025T03:07:15 - [TEST_STEP][PASSED] - n = data.getRowNumbers() + 1: null

10-01-2025T03:07:15 - [TEST_STEP][PASSED] - year = todaysDate.substring(todaysDate.length() - 4, todaysDate.length()): null

10-01-2025T03:07:15 - [TEST_STEP][PASSED] - y = year.toInteger(): null

10-01-2025T03:07:15 - [TEST_STEP][PASSED] - m = getText(findTestObject("Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Фильтр Дата")): Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Фильтр Дата' is: '1, 2, 3 кв., Октябрь, Ноябрь 2024 года'

10-01-2025T03:07:15 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Фильтр Дата' is: '1, 2, 3 кв., Октябрь, Ноябрь 2024 года'

10-01-2025T03:07:15 - [TEST_STEP][PASSED] - m = m.substring(0, m.indexOf("2024")): null

10-01-2025T03:07:15 - [TEST_STEP][PASSED] - m = m.trim(): null

10-01-2025T03:07:15 - [TEST_STEP][PASSED] - dashboardName = "Выполнение бизнес-плана": null

10-01-2025T03:07:15 - [TEST_STEP][PASSED] - workbook01 = getWorkbook(excelFilePath): null

10-01-2025T03:07:15 - [TEST_STEP][PASSED] - sheet01 = getExcelSheet(workbook01, sheetName): null

10-01-2025T03:07:15 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 0, dashboardName): null

10-01-2025T03:07:15 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 1, dZO): null

10-01-2025T03:07:15 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 2, typeOfData): null

10-01-2025T03:07:15 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 3, typeOfData): null

10-01-2025T03:07:15 - [TEST_STEP][PASSED] - if (typeOfData == "План"): null

10-01-2025T03:07:15 - [TEST_STEP][PASSED] - else if (typeOfData == "Факт"): null

10-01-2025T03:07:15 - [TEST_STEP][PASSED] - else if (vidget.contains("электроэнергии") == true): null

10-01-2025T03:07:15 - [TEST_STEP][PASSED] - if (tabR == null): null

10-01-2025T03:07:15 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:07:15 - [TEST_STEP][PASSED] - if (tabR == "нет данных"): null

10-01-2025T03:07:15 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 4, "нет данных"): null

10-01-2025T03:07:15 - [TEST_STEP][PASSED] - if (tabB == null): null

10-01-2025T03:07:15 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:07:15 - [TEST_STEP][PASSED] - if (tabB == "нет данных"): null

10-01-2025T03:07:15 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:07:15 - [TEST_STEP][PASSED] - TB = tabB.toInteger(): null

10-01-2025T03:07:15 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 5, TB): null

10-01-2025T03:07:15 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 6, m): null

10-01-2025T03:07:15 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 7, y): null

10-01-2025T03:07:15 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 8, todaysDate): null

10-01-2025T03:07:15 - [TEST_STEP][PASSED] - n = n + 1: null

10-01-2025T03:07:15 - [TEST_STEP][PASSED] - saveWorkbook(excelFilePath, workbook01): null

10-01-2025T03:07:16 - [TEST_STEP][PASSED] - typeOfData = "План Отпуск из сети": null

10-01-2025T03:07:16 - [TEST_STEP][PASSED] - tabR = GetOiSPlanR(x = a): null

10-01-2025T03:07:16 - [TEST_STEP][PASSED] - i1 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:07:16 - [TEST_STEP][PASSED] - ii = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:07:16 - [TEST_STEP][PASSED] - for ([ii = 1, ii < 8, (ii++)]): null

10-01-2025T03:07:16 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:07:16 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:07:16 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:07:16 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:07:16 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:07:16 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:07:16 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:07:16 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:07:16 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:07:16 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:07:16 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:07:16 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:07:16 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:07:16 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:07:16 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:07:16 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:07:16 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:07:16 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:07:16 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:07:16 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:07:16 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:07:16 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:07:16 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:07:16 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:07:16 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:07:16 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:07:16 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:07:16 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:07:16 - [TEST_STEP][PASSED] - i1 = x.indexOf("/"): null

10-01-2025T03:07:16 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:07:16 - [TEST_STEP][PASSED] - x = x.substring(0, i1): null

10-01-2025T03:07:16 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:07:16 - [TEST_STEP][PASSED] - return x: null

10-01-2025T03:07:16 - [TEST_STEP][PASSED] - tabB = GetOiSPlanB(x = b): null

10-01-2025T03:07:16 - [TEST_STEP][PASSED] - i1 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:07:16 - [TEST_STEP][PASSED] - ii = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:07:16 - [TEST_STEP][PASSED] - for ([ii = 1, ii < 8, (ii++)]): null

10-01-2025T03:07:16 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:07:16 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:07:16 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:07:16 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:07:16 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:07:16 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:07:16 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:07:16 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:07:16 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:07:16 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:07:16 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:07:16 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:07:16 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:07:16 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:07:16 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:07:16 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:07:16 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:07:16 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:07:16 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:07:16 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:07:16 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:07:16 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:07:16 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:07:16 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:07:16 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:07:16 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:07:16 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:07:16 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:07:16 - [TEST_STEP][PASSED] - i1 = x.indexOf("/"): null

10-01-2025T03:07:16 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:07:16 - [TEST_STEP][PASSED] - x = x.substring(0, i1): null

10-01-2025T03:07:16 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:07:16 - [TEST_STEP][FAILED] - return x: null

10-01-2025T03:07:16 - [TEST_STEP][PASSED] - println(tabR + "/" + tabB): null

10-01-2025T03:07:16 - [TEST_STEP][FAILED] - if (verifyEqual(PercFactR, PercFactB) == false): null

10-01-2025T03:07:16 - [MESSAGE][FAILED] - Unable to verify equal between actual object 'нет данных' and expected object '8.58' (Root cause: com.kms.katalon.core.exception.StepFailedException: Actual object 'нет данных' and expected object '8.58' are not equal
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.doCall(VerifyEqualKeyword.groovy:58)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.call(VerifyEqualKeyword.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:75)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.verifyEqual(VerifyEqualKeyword.groovy:63)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.execute(VerifyEqualKeyword.groovy:44)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:74)
	at com.kms.katalon.core.keyword.BuiltinKeywords.verifyEqual(BuiltinKeywords.groovy:146)
	at jdk.internal.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at Выполнение бизнес-плана сверка дашбордов.CompareDZOData(Выполнение бизнес-плана сверка дашбордов:758)
	at Выполнение бизнес-плана сверка дашбордов.run(Выполнение бизнес-плана сверка дашбордов:633)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:448)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:439)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:418)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:410)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:285)
	at com.kms.katalon.core.common.CommonExecutor.accessTestCaseMainPhase(CommonExecutor.java:65)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:150)
	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:106)
	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:180)
	at TempTestSuite1736466949911.run(TempTestSuite1736466949911.groovy:35)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
)

10-01-2025T03:07:16 - [TEST_STEP][PASSED] - result = WriteToExcel(typeOfData, todaysDate, PercPlanR, PercPlanB, PercFactR, PercFactB, x, tabR, tabB, o1R, o1B, vidget): null

10-01-2025T03:07:16 - [TEST_STEP][PASSED] - iii = dZO.indexOf("/"): null

10-01-2025T03:07:16 - [TEST_STEP][PASSED] - println(iii): null

10-01-2025T03:07:16 - [TEST_STEP][PASSED] - dZO = dZO.substring(0, iii): null

10-01-2025T03:07:16 - [TEST_STEP][PASSED] - println(dZO): null

10-01-2025T03:07:16 - [TEST_STEP][PASSED] - println(PercPlanR): null

10-01-2025T03:07:16 - [TEST_STEP][PASSED] - println(PercPlanB): null

10-01-2025T03:07:16 - [TEST_STEP][PASSED] - println(PercFactR): null

10-01-2025T03:07:16 - [TEST_STEP][PASSED] - println(PercFactB): null

10-01-2025T03:07:16 - [TEST_STEP][PASSED] - println(tabR): null

10-01-2025T03:07:16 - [TEST_STEP][PASSED] - println(tabB): null

10-01-2025T03:07:16 - [TEST_STEP][PASSED] - println(o1R): null

10-01-2025T03:07:16 - [TEST_STEP][PASSED] - println(o1B): null

10-01-2025T03:07:16 - [TEST_STEP][PASSED] - PR = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:07:16 - [TEST_STEP][PASSED] - FR = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:07:16 - [TEST_STEP][PASSED] - PB = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:07:16 - [TEST_STEP][PASSED] - FB = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:07:16 - [TEST_STEP][PASSED] - TR = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:07:16 - [TEST_STEP][PASSED] - TB = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:07:16 - [TEST_STEP][PASSED] - sheetName = "Sheet1": null

10-01-2025T03:07:16 - [TEST_STEP][PASSED] - data = findTestData("PlanFact"): null

10-01-2025T03:07:16 - [TEST_STEP][PASSED] - n = data.getRowNumbers() + 1: null

10-01-2025T03:07:16 - [TEST_STEP][PASSED] - year = todaysDate.substring(todaysDate.length() - 4, todaysDate.length()): null

10-01-2025T03:07:16 - [TEST_STEP][PASSED] - y = year.toInteger(): null

10-01-2025T03:07:16 - [TEST_STEP][PASSED] - m = getText(findTestObject("Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Фильтр Дата")): Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Фильтр Дата' is: '1, 2, 3 кв., Октябрь, Ноябрь 2024 года'

10-01-2025T03:07:16 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Фильтр Дата' is: '1, 2, 3 кв., Октябрь, Ноябрь 2024 года'

10-01-2025T03:07:16 - [TEST_STEP][PASSED] - m = m.substring(0, m.indexOf("2024")): null

10-01-2025T03:07:16 - [TEST_STEP][PASSED] - m = m.trim(): null

10-01-2025T03:07:16 - [TEST_STEP][PASSED] - dashboardName = "Выполнение бизнес-плана": null

10-01-2025T03:07:16 - [TEST_STEP][PASSED] - workbook01 = getWorkbook(excelFilePath): null

10-01-2025T03:07:16 - [TEST_STEP][PASSED] - sheet01 = getExcelSheet(workbook01, sheetName): null

10-01-2025T03:07:16 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 0, dashboardName): null

10-01-2025T03:07:16 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 1, dZO): null

10-01-2025T03:07:16 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 2, typeOfData): null

10-01-2025T03:07:16 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 3, typeOfData): null

10-01-2025T03:07:16 - [TEST_STEP][PASSED] - if (typeOfData == "План"): null

10-01-2025T03:07:16 - [TEST_STEP][PASSED] - else if (typeOfData == "Факт"): null

10-01-2025T03:07:16 - [TEST_STEP][PASSED] - else if (vidget.contains("электроэнергии") == true): null

10-01-2025T03:07:16 - [TEST_STEP][PASSED] - if (tabR == null): null

10-01-2025T03:07:16 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:07:16 - [TEST_STEP][PASSED] - if (tabR == "нет данных"): null

10-01-2025T03:07:16 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 4, "нет данных"): null

10-01-2025T03:07:16 - [TEST_STEP][PASSED] - if (tabB == null): null

10-01-2025T03:07:16 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:07:16 - [TEST_STEP][PASSED] - if (tabB == "нет данных"): null

10-01-2025T03:07:16 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:07:16 - [TEST_STEP][PASSED] - TB = tabB.toInteger(): null

10-01-2025T03:07:16 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 5, TB): null

10-01-2025T03:07:16 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 6, m): null

10-01-2025T03:07:16 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 7, y): null

10-01-2025T03:07:16 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 8, todaysDate): null

10-01-2025T03:07:16 - [TEST_STEP][PASSED] - n = n + 1: null

10-01-2025T03:07:16 - [TEST_STEP][PASSED] - saveWorkbook(excelFilePath, workbook01): null

10-01-2025T03:07:17 - [TEST_STEP][PASSED] - typeOfData = "План Потери": null

10-01-2025T03:07:17 - [TEST_STEP][PASSED] - tabR = GetPPlanR(x = a): null

10-01-2025T03:07:17 - [TEST_STEP][PASSED] - i1 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:07:17 - [TEST_STEP][PASSED] - ii = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:07:17 - [TEST_STEP][PASSED] - for ([ii = 1, ii < 9, (ii++)]): null

10-01-2025T03:07:17 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:07:17 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:07:17 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:07:17 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:07:17 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:07:17 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:07:17 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:07:17 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:07:17 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:07:17 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:07:17 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:07:17 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:07:17 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:07:17 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:07:17 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:07:17 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:07:17 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:07:17 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:07:17 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:07:17 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:07:17 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:07:17 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:07:17 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:07:17 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:07:17 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:07:17 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:07:17 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:07:17 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:07:17 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:07:17 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:07:17 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:07:17 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:07:17 - [TEST_STEP][PASSED] - i1 = x.indexOf("/"): null

10-01-2025T03:07:17 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:07:17 - [TEST_STEP][PASSED] - x = x.substring(0, i1): null

10-01-2025T03:07:17 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:07:17 - [TEST_STEP][PASSED] - return x: null

10-01-2025T03:07:17 - [TEST_STEP][PASSED] - tabB = GetPPlanB(x = b): null

10-01-2025T03:07:17 - [TEST_STEP][PASSED] - i1 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:07:17 - [TEST_STEP][PASSED] - ii = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:07:17 - [TEST_STEP][PASSED] - for ([ii = 1, ii < 9, (ii++)]): null

10-01-2025T03:07:17 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:07:17 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:07:17 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:07:17 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:07:17 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:07:17 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:07:17 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:07:17 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:07:17 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:07:17 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:07:17 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:07:17 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:07:17 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:07:17 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:07:17 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:07:17 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:07:17 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:07:17 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:07:17 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:07:17 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:07:17 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:07:17 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:07:17 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:07:17 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:07:17 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:07:17 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:07:17 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:07:17 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:07:17 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:07:17 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:07:17 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:07:17 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:07:17 - [TEST_STEP][PASSED] - i1 = x.indexOf("/"): null

10-01-2025T03:07:17 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:07:17 - [TEST_STEP][PASSED] - x = x.substring(0, i1): null

10-01-2025T03:07:17 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:07:17 - [TEST_STEP][FAILED] - return x: null

10-01-2025T03:07:17 - [TEST_STEP][PASSED] - println(tabR + "/" + tabB): null

10-01-2025T03:07:17 - [TEST_STEP][FAILED] - if (verifyEqual(PercFactR, PercFactB) == false): null

10-01-2025T03:07:17 - [MESSAGE][FAILED] - Unable to verify equal between actual object 'нет данных' and expected object '8.58' (Root cause: com.kms.katalon.core.exception.StepFailedException: Actual object 'нет данных' and expected object '8.58' are not equal
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.doCall(VerifyEqualKeyword.groovy:58)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.call(VerifyEqualKeyword.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:75)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.verifyEqual(VerifyEqualKeyword.groovy:63)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.execute(VerifyEqualKeyword.groovy:44)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:74)
	at com.kms.katalon.core.keyword.BuiltinKeywords.verifyEqual(BuiltinKeywords.groovy:146)
	at jdk.internal.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at Выполнение бизнес-плана сверка дашбордов.CompareDZOData(Выполнение бизнес-плана сверка дашбордов:771)
	at Выполнение бизнес-плана сверка дашбордов.run(Выполнение бизнес-плана сверка дашбордов:633)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:448)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:439)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:418)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:410)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:285)
	at com.kms.katalon.core.common.CommonExecutor.accessTestCaseMainPhase(CommonExecutor.java:65)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:150)
	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:106)
	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:180)
	at TempTestSuite1736466949911.run(TempTestSuite1736466949911.groovy:35)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
)

10-01-2025T03:07:17 - [TEST_STEP][PASSED] - result = WriteToExcel(typeOfData, todaysDate, PercPlanR, PercPlanB, PercFactR, PercFactB, x, tabR, tabB, o1R, o1B, vidget): null

10-01-2025T03:07:17 - [TEST_STEP][PASSED] - iii = dZO.indexOf("/"): null

10-01-2025T03:07:17 - [TEST_STEP][PASSED] - println(iii): null

10-01-2025T03:07:17 - [TEST_STEP][PASSED] - dZO = dZO.substring(0, iii): null

10-01-2025T03:07:17 - [TEST_STEP][PASSED] - println(dZO): null

10-01-2025T03:07:17 - [TEST_STEP][PASSED] - println(PercPlanR): null

10-01-2025T03:07:17 - [TEST_STEP][PASSED] - println(PercPlanB): null

10-01-2025T03:07:17 - [TEST_STEP][PASSED] - println(PercFactR): null

10-01-2025T03:07:17 - [TEST_STEP][PASSED] - println(PercFactB): null

10-01-2025T03:07:17 - [TEST_STEP][PASSED] - println(tabR): null

10-01-2025T03:07:17 - [TEST_STEP][PASSED] - println(tabB): null

10-01-2025T03:07:17 - [TEST_STEP][PASSED] - println(o1R): null

10-01-2025T03:07:17 - [TEST_STEP][PASSED] - println(o1B): null

10-01-2025T03:07:17 - [TEST_STEP][PASSED] - PR = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:07:17 - [TEST_STEP][PASSED] - FR = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:07:17 - [TEST_STEP][PASSED] - PB = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:07:17 - [TEST_STEP][PASSED] - FB = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:07:17 - [TEST_STEP][PASSED] - TR = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:07:17 - [TEST_STEP][PASSED] - TB = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:07:17 - [TEST_STEP][PASSED] - sheetName = "Sheet1": null

10-01-2025T03:07:17 - [TEST_STEP][PASSED] - data = findTestData("PlanFact"): null

10-01-2025T03:07:17 - [TEST_STEP][PASSED] - n = data.getRowNumbers() + 1: null

10-01-2025T03:07:17 - [TEST_STEP][PASSED] - year = todaysDate.substring(todaysDate.length() - 4, todaysDate.length()): null

10-01-2025T03:07:17 - [TEST_STEP][PASSED] - y = year.toInteger(): null

10-01-2025T03:07:17 - [TEST_STEP][PASSED] - m = getText(findTestObject("Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Фильтр Дата")): Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Фильтр Дата' is: '1, 2, 3 кв., Октябрь, Ноябрь 2024 года'

10-01-2025T03:07:17 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Фильтр Дата' is: '1, 2, 3 кв., Октябрь, Ноябрь 2024 года'

10-01-2025T03:07:17 - [TEST_STEP][PASSED] - m = m.substring(0, m.indexOf("2024")): null

10-01-2025T03:07:17 - [TEST_STEP][PASSED] - m = m.trim(): null

10-01-2025T03:07:17 - [TEST_STEP][PASSED] - dashboardName = "Выполнение бизнес-плана": null

10-01-2025T03:07:17 - [TEST_STEP][PASSED] - workbook01 = getWorkbook(excelFilePath): null

10-01-2025T03:07:17 - [TEST_STEP][PASSED] - sheet01 = getExcelSheet(workbook01, sheetName): null

10-01-2025T03:07:17 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 0, dashboardName): null

10-01-2025T03:07:17 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 1, dZO): null

10-01-2025T03:07:17 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 2, typeOfData): null

10-01-2025T03:07:17 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 3, typeOfData): null

10-01-2025T03:07:17 - [TEST_STEP][PASSED] - if (typeOfData == "План"): null

10-01-2025T03:07:17 - [TEST_STEP][PASSED] - else if (typeOfData == "Факт"): null

10-01-2025T03:07:17 - [TEST_STEP][PASSED] - else if (vidget.contains("электроэнергии") == true): null

10-01-2025T03:07:17 - [TEST_STEP][PASSED] - if (tabR == null): null

10-01-2025T03:07:17 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:07:17 - [TEST_STEP][PASSED] - if (tabR == "нет данных"): null

10-01-2025T03:07:17 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 4, "нет данных"): null

10-01-2025T03:07:17 - [TEST_STEP][PASSED] - if (tabB == null): null

10-01-2025T03:07:17 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:07:17 - [TEST_STEP][PASSED] - if (tabB == "нет данных"): null

10-01-2025T03:07:17 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:07:17 - [TEST_STEP][PASSED] - TB = tabB.toInteger(): null

10-01-2025T03:07:17 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 5, TB): null

10-01-2025T03:07:17 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 6, m): null

10-01-2025T03:07:17 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 7, y): null

10-01-2025T03:07:17 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 8, todaysDate): null

10-01-2025T03:07:17 - [TEST_STEP][PASSED] - n = n + 1: null

10-01-2025T03:07:17 - [TEST_STEP][PASSED] - saveWorkbook(excelFilePath, workbook01): null

10-01-2025T03:07:17 - [TEST_STEP][PASSED] - ii2 = a.indexOf("ПАО"): null

10-01-2025T03:07:17 - [TEST_STEP][PASSED] - if (ii2 == -1): null

10-01-2025T03:07:17 - [TEST_STEP][PASSED] - vidget = "Отклонения фактического уровня потерь от бизнес-плана": null

10-01-2025T03:07:17 - [TEST_STEP][PASSED] - typeOfData = "Коэффициент": null

10-01-2025T03:07:17 - [TEST_STEP][PASSED] - o1R = Geto1R(x = a): null

10-01-2025T03:07:17 - [TEST_STEP][PASSED] - i1 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:07:17 - [TEST_STEP][PASSED] - ii = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:07:17 - [TEST_STEP][PASSED] - for ([ii = 1, ii < 10, (ii++)]): null

10-01-2025T03:07:17 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:07:17 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:07:17 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:07:17 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:07:17 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:07:17 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:07:17 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:07:17 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:07:17 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:07:17 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:07:17 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:07:17 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:07:17 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:07:17 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:07:17 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:07:17 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:07:17 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:07:17 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:07:17 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:07:17 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:07:17 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:07:17 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:07:17 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:07:17 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:07:17 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:07:17 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:07:17 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:07:17 - [TEST_STEP][PASSED] - i1 = x.indexOf("/"): null

10-01-2025T03:07:17 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:07:17 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:07:17 - [TEST_STEP][PASSED] - return x: null

10-01-2025T03:07:17 - [TEST_STEP][PASSED] - o1B = Geto1B(x = b): null

10-01-2025T03:07:17 - [TEST_STEP][PASSED] - i1 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:07:17 - [TEST_STEP][PASSED] - ii = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:07:17 - [TEST_STEP][PASSED] - for ([ii = 1, ii < 10, (ii++)]): null

10-01-2025T03:07:17 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:07:17 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:07:17 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:07:17 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:07:17 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:07:17 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:07:17 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:07:17 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:07:17 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:07:17 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:07:17 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:07:17 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:07:17 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:07:17 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:07:17 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:07:17 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:07:17 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:07:17 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:07:17 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:07:17 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:07:17 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:07:17 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:07:17 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:07:17 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:07:17 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:07:17 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:07:17 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:07:17 - [TEST_STEP][PASSED] - i1 = x.indexOf("/"): null

10-01-2025T03:07:17 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:07:17 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:07:17 - [TEST_STEP][FAILED] - return x: null

10-01-2025T03:07:17 - [TEST_STEP][PASSED] - println(o1R + "/" + o1B): null

10-01-2025T03:07:17 - [TEST_STEP][FAILED] - if (verifyEqual(PercFactR, PercFactB) == false): null

10-01-2025T03:07:17 - [MESSAGE][FAILED] - Unable to verify equal between actual object 'нет данных' and expected object '8.58' (Root cause: com.kms.katalon.core.exception.StepFailedException: Actual object 'нет данных' and expected object '8.58' are not equal
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.doCall(VerifyEqualKeyword.groovy:58)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.call(VerifyEqualKeyword.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:75)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.verifyEqual(VerifyEqualKeyword.groovy:63)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.execute(VerifyEqualKeyword.groovy:44)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:74)
	at com.kms.katalon.core.keyword.BuiltinKeywords.verifyEqual(BuiltinKeywords.groovy:146)
	at jdk.internal.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at Выполнение бизнес-плана сверка дашбордов.CompareDZOData(Выполнение бизнес-плана сверка дашбордов:789)
	at Выполнение бизнес-плана сверка дашбордов.run(Выполнение бизнес-плана сверка дашбордов:633)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:448)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:439)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:418)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:410)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:285)
	at com.kms.katalon.core.common.CommonExecutor.accessTestCaseMainPhase(CommonExecutor.java:65)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:150)
	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:106)
	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:180)
	at TempTestSuite1736466949911.run(TempTestSuite1736466949911.groovy:35)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
)

10-01-2025T03:07:17 - [TEST_STEP][PASSED] - result = WriteToExcel(typeOfData, todaysDate, PercPlanR, PercPlanB, PercFactR, PercFactB, x, tabR, tabB, o1R, o1B, vidget): null

10-01-2025T03:07:17 - [TEST_STEP][PASSED] - iii = dZO.indexOf("/"): null

10-01-2025T03:07:17 - [TEST_STEP][PASSED] - println(iii): null

10-01-2025T03:07:17 - [TEST_STEP][PASSED] - dZO = dZO.substring(0, iii): null

10-01-2025T03:07:17 - [TEST_STEP][PASSED] - println(dZO): null

10-01-2025T03:07:17 - [TEST_STEP][PASSED] - println(PercPlanR): null

10-01-2025T03:07:17 - [TEST_STEP][PASSED] - println(PercPlanB): null

10-01-2025T03:07:17 - [TEST_STEP][PASSED] - println(PercFactR): null

10-01-2025T03:07:17 - [TEST_STEP][PASSED] - println(PercFactB): null

10-01-2025T03:07:17 - [TEST_STEP][PASSED] - println(tabR): null

10-01-2025T03:07:17 - [TEST_STEP][PASSED] - println(tabB): null

10-01-2025T03:07:17 - [TEST_STEP][PASSED] - println(o1R): null

10-01-2025T03:07:17 - [TEST_STEP][PASSED] - println(o1B): null

10-01-2025T03:07:17 - [TEST_STEP][PASSED] - PR = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:07:17 - [TEST_STEP][PASSED] - FR = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:07:17 - [TEST_STEP][PASSED] - PB = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:07:17 - [TEST_STEP][PASSED] - FB = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:07:17 - [TEST_STEP][PASSED] - TR = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:07:17 - [TEST_STEP][PASSED] - TB = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:07:17 - [TEST_STEP][PASSED] - sheetName = "Sheet1": null

10-01-2025T03:07:17 - [TEST_STEP][PASSED] - data = findTestData("PlanFact"): null

10-01-2025T03:07:17 - [TEST_STEP][PASSED] - n = data.getRowNumbers() + 1: null

10-01-2025T03:07:17 - [TEST_STEP][PASSED] - year = todaysDate.substring(todaysDate.length() - 4, todaysDate.length()): null

10-01-2025T03:07:17 - [TEST_STEP][PASSED] - y = year.toInteger(): null

10-01-2025T03:07:17 - [TEST_STEP][PASSED] - m = getText(findTestObject("Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Фильтр Дата")): Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Фильтр Дата' is: '1, 2, 3 кв., Октябрь, Ноябрь 2024 года'

10-01-2025T03:07:18 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Фильтр Дата' is: '1, 2, 3 кв., Октябрь, Ноябрь 2024 года'

10-01-2025T03:07:18 - [TEST_STEP][PASSED] - m = m.substring(0, m.indexOf("2024")): null

10-01-2025T03:07:18 - [TEST_STEP][PASSED] - m = m.trim(): null

10-01-2025T03:07:18 - [TEST_STEP][PASSED] - dashboardName = "Выполнение бизнес-плана": null

10-01-2025T03:07:18 - [TEST_STEP][PASSED] - workbook01 = getWorkbook(excelFilePath): null

10-01-2025T03:07:18 - [TEST_STEP][PASSED] - sheet01 = getExcelSheet(workbook01, sheetName): null

10-01-2025T03:07:18 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 0, dashboardName): null

10-01-2025T03:07:18 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 1, dZO): null

10-01-2025T03:07:18 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 2, typeOfData): null

10-01-2025T03:07:18 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 3, typeOfData): null

10-01-2025T03:07:18 - [TEST_STEP][PASSED] - if (typeOfData == "План"): null

10-01-2025T03:07:18 - [TEST_STEP][PASSED] - else if (typeOfData == "Факт"): null

10-01-2025T03:07:18 - [TEST_STEP][PASSED] - else if (vidget.contains("электроэнергии") == true): null

10-01-2025T03:07:18 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:07:18 - [TEST_STEP][PASSED] - if (o1R == null): null

10-01-2025T03:07:18 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:07:18 - [TEST_STEP][PASSED] - if (o1R == "нет данных"): null

10-01-2025T03:07:18 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 4, "нет данных"): null

10-01-2025T03:07:18 - [TEST_STEP][PASSED] - if (o1B == null): null

10-01-2025T03:07:18 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:07:18 - [TEST_STEP][PASSED] - if (o1B == "нет данных"): null

10-01-2025T03:07:18 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:07:18 - [TEST_STEP][PASSED] - FB = o1B.toDouble(): null

10-01-2025T03:07:18 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 5, FB): null

10-01-2025T03:07:18 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 6, m): null

10-01-2025T03:07:18 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 7, y): null

10-01-2025T03:07:18 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 8, todaysDate): null

10-01-2025T03:07:18 - [TEST_STEP][PASSED] - n = n + 1: null

10-01-2025T03:07:18 - [TEST_STEP][FAILED] - saveWorkbook(excelFilePath, workbook01): null

10-01-2025T03:07:18 - [TEST_STEP][PASSED] - if (verifyEqual(tyumR, tyumB) == false): Actual object 'Россети Тюмень/2.54/2.70/47865721/46573769/1291953/49871651/48605475/1266176/0.16' and expected object 'Россети Тюмень/2.54/2.70/47865721/46573769/1291953/49871651/48605475/1266176/0.16' are equal

10-01-2025T03:07:18 - [MESSAGE][PASSED] - Actual object 'Россети Тюмень/2.54/2.70/47865721/46573769/1291953/49871651/48605475/1266176/0.16' and expected object 'Россети Тюмень/2.54/2.70/47865721/46573769/1291953/49871651/48605475/1266176/0.16' are equal

10-01-2025T03:07:18 - [TEST_STEP][FAILED] - if (verifyEqual(urR, urB) == false): null

10-01-2025T03:07:18 - [MESSAGE][FAILED] - Unable to verify equal between actual object 'Россети Урал (ГК)/нет данных/нет данных/нет данных/нет данных/нет данных/нет данных/нет данных/нет данных/нет данных' and expected object 'Россети Урал (ГК)/6.07/5.90/66742094/62801450/3940644/75258936/70677698/4581238/-0.17' (Root cause: com.kms.katalon.core.exception.StepFailedException: Actual object 'Россети Урал (ГК)/нет данных/нет данных/нет данных/нет данных/нет данных/нет данных/нет данных/нет данных/нет данных' and expected object 'Россети Урал (ГК)/6.07/5.90/66742094/62801450/3940644/75258936/70677698/4581238/-0.17' are not equal
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.doCall(VerifyEqualKeyword.groovy:58)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.call(VerifyEqualKeyword.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:75)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.verifyEqual(VerifyEqualKeyword.groovy:63)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.execute(VerifyEqualKeyword.groovy:44)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:74)
	at com.kms.katalon.core.keyword.BuiltinKeywords.verifyEqual(BuiltinKeywords.groovy:146)
	at jdk.internal.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at Выполнение бизнес-плана сверка дашбордов.run(Выполнение бизнес-плана сверка дашбордов:642)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:448)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:439)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:418)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:410)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:285)
	at com.kms.katalon.core.common.CommonExecutor.accessTestCaseMainPhase(CommonExecutor.java:65)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:150)
	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:106)
	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:180)
	at TempTestSuite1736466949911.run(TempTestSuite1736466949911.groovy:35)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
)

10-01-2025T03:07:18 - [TEST_STEP][PASSED] - result = CompareDZOData(a = urR, b = urB, dZO, typeOfData, PercPlanR, PercPlanB, PercFactR, PercFactB, todaysDate, x, vidget, tabR, tabB, o1R, o1B): null

10-01-2025T03:07:18 - [TEST_STEP][PASSED] - ii2 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:07:18 - [TEST_STEP][FAILED] - if (verifyEqual(a, b) == false): null

10-01-2025T03:07:18 - [MESSAGE][FAILED] - Unable to verify equal between actual object 'Россети Урал (ГК)/нет данных/нет данных/нет данных/нет данных/нет данных/нет данных/нет данных/нет данных/нет данных' and expected object 'Россети Урал (ГК)/6.07/5.90/66742094/62801450/3940644/75258936/70677698/4581238/-0.17' (Root cause: com.kms.katalon.core.exception.StepFailedException: Actual object 'Россети Урал (ГК)/нет данных/нет данных/нет данных/нет данных/нет данных/нет данных/нет данных/нет данных/нет данных' and expected object 'Россети Урал (ГК)/6.07/5.90/66742094/62801450/3940644/75258936/70677698/4581238/-0.17' are not equal
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.doCall(VerifyEqualKeyword.groovy:58)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.call(VerifyEqualKeyword.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:75)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.verifyEqual(VerifyEqualKeyword.groovy:63)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.execute(VerifyEqualKeyword.groovy:44)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:74)
	at com.kms.katalon.core.keyword.BuiltinKeywords.verifyEqual(BuiltinKeywords.groovy:146)
	at jdk.internal.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at Выполнение бизнес-плана сверка дашбордов.CompareDZOData(Выполнение бизнес-плана сверка дашбордов:673)
	at Выполнение бизнес-плана сверка дашбордов.run(Выполнение бизнес-плана сверка дашбордов:643)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:448)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:439)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:418)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:410)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:285)
	at com.kms.katalon.core.common.CommonExecutor.accessTestCaseMainPhase(CommonExecutor.java:65)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:150)
	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:106)
	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:180)
	at TempTestSuite1736466949911.run(TempTestSuite1736466949911.groovy:35)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
)

10-01-2025T03:07:18 - [TEST_STEP][PASSED] - vidget = "Уровень потерь электроэнергии": null

10-01-2025T03:07:18 - [TEST_STEP][PASSED] - typeOfData = "План": null

10-01-2025T03:07:18 - [TEST_STEP][PASSED] - PercPlanR = GetPercPlanR(x = a): null

10-01-2025T03:07:18 - [TEST_STEP][PASSED] - i1 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:07:18 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:07:18 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:07:18 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:07:18 - [TEST_STEP][PASSED] - i1 = x.indexOf("/"): null

10-01-2025T03:07:18 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:07:18 - [TEST_STEP][PASSED] - x = x.substring(0, i1): null

10-01-2025T03:07:18 - [TEST_STEP][PASSED] - return x: null

10-01-2025T03:07:18 - [TEST_STEP][PASSED] - PercPlanB = GetPercPlanB(x = b): null

10-01-2025T03:07:18 - [TEST_STEP][PASSED] - i1 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:07:18 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:07:18 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:07:18 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:07:18 - [TEST_STEP][PASSED] - i1 = x.indexOf("/"): null

10-01-2025T03:07:18 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:07:18 - [TEST_STEP][PASSED] - x = x.substring(0, i1): null

10-01-2025T03:07:18 - [TEST_STEP][FAILED] - return x: null

10-01-2025T03:07:18 - [TEST_STEP][FAILED] - if (verifyEqual(PercPlanR, PercPlanB) == false): null

10-01-2025T03:07:18 - [MESSAGE][FAILED] - Unable to verify equal between actual object 'нет данных' and expected object '6.07' (Root cause: com.kms.katalon.core.exception.StepFailedException: Actual object 'нет данных' and expected object '6.07' are not equal
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.doCall(VerifyEqualKeyword.groovy:58)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.call(VerifyEqualKeyword.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:75)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.verifyEqual(VerifyEqualKeyword.groovy:63)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.execute(VerifyEqualKeyword.groovy:44)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:74)
	at com.kms.katalon.core.keyword.BuiltinKeywords.verifyEqual(BuiltinKeywords.groovy:146)
	at jdk.internal.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at Выполнение бизнес-плана сверка дашбордов.CompareDZOData(Выполнение бизнес-плана сверка дашбордов:682)
	at Выполнение бизнес-плана сверка дашбордов.run(Выполнение бизнес-плана сверка дашбордов:643)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:448)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:439)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:418)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:410)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:285)
	at com.kms.katalon.core.common.CommonExecutor.accessTestCaseMainPhase(CommonExecutor.java:65)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:150)
	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:106)
	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:180)
	at TempTestSuite1736466949911.run(TempTestSuite1736466949911.groovy:35)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
)

10-01-2025T03:07:18 - [TEST_STEP][PASSED] - result = WriteToExcel(typeOfData, todaysDate, PercPlanR, PercPlanB, PercFactR, PercFactB, x, tabR, tabB, o1R, o1B, vidget): null

10-01-2025T03:07:18 - [TEST_STEP][PASSED] - iii = dZO.indexOf("/"): null

10-01-2025T03:07:18 - [TEST_STEP][PASSED] - println(iii): null

10-01-2025T03:07:18 - [TEST_STEP][PASSED] - dZO = dZO.substring(0, iii): null

10-01-2025T03:07:18 - [TEST_STEP][PASSED] - println(dZO): null

10-01-2025T03:07:18 - [TEST_STEP][PASSED] - println(PercPlanR): null

10-01-2025T03:07:18 - [TEST_STEP][PASSED] - println(PercPlanB): null

10-01-2025T03:07:18 - [TEST_STEP][PASSED] - println(PercFactR): null

10-01-2025T03:07:18 - [TEST_STEP][PASSED] - println(PercFactB): null

10-01-2025T03:07:18 - [TEST_STEP][PASSED] - println(tabR): null

10-01-2025T03:07:18 - [TEST_STEP][PASSED] - println(tabB): null

10-01-2025T03:07:18 - [TEST_STEP][PASSED] - println(o1R): null

10-01-2025T03:07:18 - [TEST_STEP][PASSED] - println(o1B): null

10-01-2025T03:07:18 - [TEST_STEP][PASSED] - PR = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:07:18 - [TEST_STEP][PASSED] - FR = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:07:18 - [TEST_STEP][PASSED] - PB = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:07:18 - [TEST_STEP][PASSED] - FB = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:07:18 - [TEST_STEP][PASSED] - TR = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:07:18 - [TEST_STEP][PASSED] - TB = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:07:18 - [TEST_STEP][PASSED] - sheetName = "Sheet1": null

10-01-2025T03:07:18 - [TEST_STEP][PASSED] - data = findTestData("PlanFact"): null

10-01-2025T03:07:18 - [TEST_STEP][PASSED] - n = data.getRowNumbers() + 1: null

10-01-2025T03:07:18 - [TEST_STEP][PASSED] - year = todaysDate.substring(todaysDate.length() - 4, todaysDate.length()): null

10-01-2025T03:07:18 - [TEST_STEP][PASSED] - y = year.toInteger(): null

10-01-2025T03:07:18 - [TEST_STEP][PASSED] - m = getText(findTestObject("Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Фильтр Дата")): Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Фильтр Дата' is: '1, 2, 3 кв., Октябрь, Ноябрь 2024 года'

10-01-2025T03:07:19 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Фильтр Дата' is: '1, 2, 3 кв., Октябрь, Ноябрь 2024 года'

10-01-2025T03:07:19 - [TEST_STEP][PASSED] - m = m.substring(0, m.indexOf("2024")): null

10-01-2025T03:07:19 - [TEST_STEP][PASSED] - m = m.trim(): null

10-01-2025T03:07:19 - [TEST_STEP][PASSED] - dashboardName = "Выполнение бизнес-плана": null

10-01-2025T03:07:19 - [TEST_STEP][PASSED] - workbook01 = getWorkbook(excelFilePath): null

10-01-2025T03:07:19 - [TEST_STEP][PASSED] - sheet01 = getExcelSheet(workbook01, sheetName): null

10-01-2025T03:07:19 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 0, dashboardName): null

10-01-2025T03:07:19 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 1, dZO): null

10-01-2025T03:07:19 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 2, typeOfData): null

10-01-2025T03:07:19 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 3, typeOfData): null

10-01-2025T03:07:19 - [TEST_STEP][PASSED] - if (typeOfData == "План"): null

10-01-2025T03:07:19 - [TEST_STEP][PASSED] - if (PercPlanR == null): null

10-01-2025T03:07:19 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:07:19 - [TEST_STEP][PASSED] - if (PercPlanR == "нет данных"): null

10-01-2025T03:07:19 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 4, "нет данных"): null

10-01-2025T03:07:19 - [TEST_STEP][PASSED] - if (PercPlanB == null): null

10-01-2025T03:07:19 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:07:19 - [TEST_STEP][PASSED] - if (PercPlanB == "нет данных"): null

10-01-2025T03:07:19 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:07:19 - [TEST_STEP][PASSED] - PB = PercPlanB.toDouble(): null

10-01-2025T03:07:19 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 5, PB): null

10-01-2025T03:07:19 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 6, m): null

10-01-2025T03:07:19 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 7, y): null

10-01-2025T03:07:19 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 8, todaysDate): null

10-01-2025T03:07:19 - [TEST_STEP][PASSED] - n = n + 1: null

10-01-2025T03:07:19 - [TEST_STEP][PASSED] - saveWorkbook(excelFilePath, workbook01): null

10-01-2025T03:07:19 - [TEST_STEP][PASSED] - typeOfData = "Факт": null

10-01-2025T03:07:19 - [TEST_STEP][PASSED] - PercFactR = GetPercFactR(x = a): null

10-01-2025T03:07:19 - [TEST_STEP][PASSED] - i1 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:07:19 - [TEST_STEP][PASSED] - ii = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:07:19 - [TEST_STEP][PASSED] - for ([ii = 1, ii < 3, (ii++)]): null

10-01-2025T03:07:19 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:07:19 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:07:19 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:07:19 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:07:19 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:07:19 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:07:19 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:07:19 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:07:19 - [TEST_STEP][PASSED] - i1 = x.indexOf("/"): null

10-01-2025T03:07:19 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:07:19 - [TEST_STEP][PASSED] - x = x.substring(0, i1): null

10-01-2025T03:07:19 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:07:19 - [TEST_STEP][PASSED] - return x: null

10-01-2025T03:07:19 - [TEST_STEP][PASSED] - PercFactB = GetPercFactB(x = b): null

10-01-2025T03:07:19 - [TEST_STEP][PASSED] - i1 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:07:19 - [TEST_STEP][PASSED] - ii = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:07:19 - [TEST_STEP][PASSED] - for ([ii = 1, ii < 3, (ii++)]): null

10-01-2025T03:07:19 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:07:19 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:07:19 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:07:19 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:07:19 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:07:19 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:07:19 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:07:19 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:07:19 - [TEST_STEP][PASSED] - i1 = x.indexOf("/"): null

10-01-2025T03:07:19 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:07:19 - [TEST_STEP][PASSED] - x = x.substring(0, i1): null

10-01-2025T03:07:19 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:07:19 - [TEST_STEP][FAILED] - return x: null

10-01-2025T03:07:19 - [TEST_STEP][FAILED] - if (verifyEqual(PercFactR, PercFactB) == false): null

10-01-2025T03:07:19 - [MESSAGE][FAILED] - Unable to verify equal between actual object 'нет данных' and expected object '5.90' (Root cause: com.kms.katalon.core.exception.StepFailedException: Actual object 'нет данных' and expected object '5.90' are not equal
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.doCall(VerifyEqualKeyword.groovy:58)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.call(VerifyEqualKeyword.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:75)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.verifyEqual(VerifyEqualKeyword.groovy:63)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.execute(VerifyEqualKeyword.groovy:44)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:74)
	at com.kms.katalon.core.keyword.BuiltinKeywords.verifyEqual(BuiltinKeywords.groovy:146)
	at jdk.internal.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at Выполнение бизнес-плана сверка дашбордов.CompareDZOData(Выполнение бизнес-плана сверка дашбордов:693)
	at Выполнение бизнес-плана сверка дашбордов.run(Выполнение бизнес-плана сверка дашбордов:643)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:448)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:439)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:418)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:410)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:285)
	at com.kms.katalon.core.common.CommonExecutor.accessTestCaseMainPhase(CommonExecutor.java:65)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:150)
	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:106)
	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:180)
	at TempTestSuite1736466949911.run(TempTestSuite1736466949911.groovy:35)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
)

10-01-2025T03:07:19 - [TEST_STEP][PASSED] - result = WriteToExcel(typeOfData, todaysDate, PercPlanR, PercPlanB, PercFactR, PercFactB, x, tabR, tabB, o1R, o1B, vidget): null

10-01-2025T03:07:19 - [TEST_STEP][PASSED] - iii = dZO.indexOf("/"): null

10-01-2025T03:07:19 - [TEST_STEP][PASSED] - println(iii): null

10-01-2025T03:07:19 - [TEST_STEP][PASSED] - dZO = dZO.substring(0, iii): null

10-01-2025T03:07:19 - [TEST_STEP][PASSED] - println(dZO): null

10-01-2025T03:07:19 - [TEST_STEP][PASSED] - println(PercPlanR): null

10-01-2025T03:07:19 - [TEST_STEP][PASSED] - println(PercPlanB): null

10-01-2025T03:07:19 - [TEST_STEP][PASSED] - println(PercFactR): null

10-01-2025T03:07:19 - [TEST_STEP][PASSED] - println(PercFactB): null

10-01-2025T03:07:19 - [TEST_STEP][PASSED] - println(tabR): null

10-01-2025T03:07:19 - [TEST_STEP][PASSED] - println(tabB): null

10-01-2025T03:07:19 - [TEST_STEP][PASSED] - println(o1R): null

10-01-2025T03:07:19 - [TEST_STEP][PASSED] - println(o1B): null

10-01-2025T03:07:19 - [TEST_STEP][PASSED] - PR = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:07:19 - [TEST_STEP][PASSED] - FR = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:07:19 - [TEST_STEP][PASSED] - PB = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:07:19 - [TEST_STEP][PASSED] - FB = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:07:19 - [TEST_STEP][PASSED] - TR = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:07:19 - [TEST_STEP][PASSED] - TB = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:07:19 - [TEST_STEP][PASSED] - sheetName = "Sheet1": null

10-01-2025T03:07:19 - [TEST_STEP][PASSED] - data = findTestData("PlanFact"): null

10-01-2025T03:07:19 - [TEST_STEP][PASSED] - n = data.getRowNumbers() + 1: null

10-01-2025T03:07:19 - [TEST_STEP][PASSED] - year = todaysDate.substring(todaysDate.length() - 4, todaysDate.length()): null

10-01-2025T03:07:19 - [TEST_STEP][PASSED] - y = year.toInteger(): null

10-01-2025T03:07:19 - [TEST_STEP][PASSED] - m = getText(findTestObject("Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Фильтр Дата")): Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Фильтр Дата' is: '1, 2, 3 кв., Октябрь, Ноябрь 2024 года'

10-01-2025T03:07:19 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Фильтр Дата' is: '1, 2, 3 кв., Октябрь, Ноябрь 2024 года'

10-01-2025T03:07:19 - [TEST_STEP][PASSED] - m = m.substring(0, m.indexOf("2024")): null

10-01-2025T03:07:19 - [TEST_STEP][PASSED] - m = m.trim(): null

10-01-2025T03:07:19 - [TEST_STEP][PASSED] - dashboardName = "Выполнение бизнес-плана": null

10-01-2025T03:07:19 - [TEST_STEP][PASSED] - workbook01 = getWorkbook(excelFilePath): null

10-01-2025T03:07:20 - [TEST_STEP][PASSED] - sheet01 = getExcelSheet(workbook01, sheetName): null

10-01-2025T03:07:20 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 0, dashboardName): null

10-01-2025T03:07:20 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 1, dZO): null

10-01-2025T03:07:20 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 2, typeOfData): null

10-01-2025T03:07:20 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 3, typeOfData): null

10-01-2025T03:07:20 - [TEST_STEP][PASSED] - if (typeOfData == "План"): null

10-01-2025T03:07:20 - [TEST_STEP][PASSED] - else if (typeOfData == "Факт"): null

10-01-2025T03:07:20 - [TEST_STEP][PASSED] - if (PercFactR == null): null

10-01-2025T03:07:20 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:07:20 - [TEST_STEP][PASSED] - if (PercFactR == "нет данных"): null

10-01-2025T03:07:20 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 4, "нет данных"): null

10-01-2025T03:07:20 - [TEST_STEP][PASSED] - if (PercFactB == null): null

10-01-2025T03:07:20 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:07:20 - [TEST_STEP][PASSED] - if (PercFactB == "нет данных"): null

10-01-2025T03:07:20 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:07:20 - [TEST_STEP][PASSED] - FB = PercFactB.toDouble(): null

10-01-2025T03:07:20 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 5, FB): null

10-01-2025T03:07:20 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 6, m): null

10-01-2025T03:07:20 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 7, y): null

10-01-2025T03:07:20 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 8, todaysDate): null

10-01-2025T03:07:20 - [TEST_STEP][PASSED] - n = n + 1: null

10-01-2025T03:07:20 - [TEST_STEP][PASSED] - saveWorkbook(excelFilePath, workbook01): null

10-01-2025T03:07:20 - [TEST_STEP][PASSED] - vidget = "Показатели баланса электроэнергии по ДЗО – Факт": null

10-01-2025T03:07:20 - [TEST_STEP][PASSED] - typeOfData = "Факт Отпуск в сеть": null

10-01-2025T03:07:20 - [TEST_STEP][PASSED] - tabR = GetOvSFactR(x = a): null

10-01-2025T03:07:20 - [TEST_STEP][PASSED] - i1 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:07:20 - [TEST_STEP][PASSED] - ii = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:07:20 - [TEST_STEP][PASSED] - for ([ii = 1, ii < 4, (ii++)]): null

10-01-2025T03:07:20 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:07:20 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:07:20 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:07:20 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:07:20 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:07:20 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:07:20 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:07:20 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:07:20 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:07:20 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:07:20 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:07:20 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:07:20 - [TEST_STEP][PASSED] - i1 = x.indexOf("/"): null

10-01-2025T03:07:20 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:07:20 - [TEST_STEP][PASSED] - x = x.substring(0, i1): null

10-01-2025T03:07:20 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:07:20 - [TEST_STEP][PASSED] - return x: null

10-01-2025T03:07:20 - [TEST_STEP][PASSED] - tabB = GetOvSFactB(x = b): null

10-01-2025T03:07:20 - [TEST_STEP][PASSED] - i1 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:07:20 - [TEST_STEP][PASSED] - ii = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:07:20 - [TEST_STEP][PASSED] - for ([ii = 1, ii < 4, (ii++)]): null

10-01-2025T03:07:20 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:07:20 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:07:20 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:07:20 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:07:20 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:07:20 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:07:20 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:07:20 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:07:20 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:07:20 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:07:20 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:07:20 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:07:20 - [TEST_STEP][PASSED] - i1 = x.indexOf("/"): null

10-01-2025T03:07:20 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:07:20 - [TEST_STEP][PASSED] - x = x.substring(0, i1): null

10-01-2025T03:07:20 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:07:20 - [TEST_STEP][FAILED] - return x: null

10-01-2025T03:07:20 - [TEST_STEP][FAILED] - if (verifyEqual(tabR, tabB) == false): null

10-01-2025T03:07:20 - [MESSAGE][FAILED] - Unable to verify equal between actual object 'нет данных' and expected object '66742094' (Root cause: com.kms.katalon.core.exception.StepFailedException: Actual object 'нет данных' and expected object '66742094' are not equal
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.doCall(VerifyEqualKeyword.groovy:58)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.call(VerifyEqualKeyword.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:75)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.verifyEqual(VerifyEqualKeyword.groovy:63)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.execute(VerifyEqualKeyword.groovy:44)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:74)
	at com.kms.katalon.core.keyword.BuiltinKeywords.verifyEqual(BuiltinKeywords.groovy:146)
	at jdk.internal.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at Выполнение бизнес-плана сверка дашбордов.CompareDZOData(Выполнение бизнес-плана сверка дашбордов:706)
	at Выполнение бизнес-плана сверка дашбордов.run(Выполнение бизнес-плана сверка дашбордов:643)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:448)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:439)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:418)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:410)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:285)
	at com.kms.katalon.core.common.CommonExecutor.accessTestCaseMainPhase(CommonExecutor.java:65)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:150)
	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:106)
	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:180)
	at TempTestSuite1736466949911.run(TempTestSuite1736466949911.groovy:35)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
)

10-01-2025T03:07:20 - [TEST_STEP][PASSED] - result = WriteToExcel(typeOfData, todaysDate, PercPlanR, PercPlanB, PercFactR, PercFactB, x, tabR, tabB, o1R, o1B, vidget): null

10-01-2025T03:07:20 - [TEST_STEP][PASSED] - iii = dZO.indexOf("/"): null

10-01-2025T03:07:20 - [TEST_STEP][PASSED] - println(iii): null

10-01-2025T03:07:20 - [TEST_STEP][PASSED] - dZO = dZO.substring(0, iii): null

10-01-2025T03:07:20 - [TEST_STEP][PASSED] - println(dZO): null

10-01-2025T03:07:20 - [TEST_STEP][PASSED] - println(PercPlanR): null

10-01-2025T03:07:20 - [TEST_STEP][PASSED] - println(PercPlanB): null

10-01-2025T03:07:20 - [TEST_STEP][PASSED] - println(PercFactR): null

10-01-2025T03:07:20 - [TEST_STEP][PASSED] - println(PercFactB): null

10-01-2025T03:07:20 - [TEST_STEP][PASSED] - println(tabR): null

10-01-2025T03:07:20 - [TEST_STEP][PASSED] - println(tabB): null

10-01-2025T03:07:20 - [TEST_STEP][PASSED] - println(o1R): null

10-01-2025T03:07:20 - [TEST_STEP][PASSED] - println(o1B): null

10-01-2025T03:07:20 - [TEST_STEP][PASSED] - PR = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:07:20 - [TEST_STEP][PASSED] - FR = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:07:20 - [TEST_STEP][PASSED] - PB = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:07:20 - [TEST_STEP][PASSED] - FB = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:07:20 - [TEST_STEP][PASSED] - TR = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:07:20 - [TEST_STEP][PASSED] - TB = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:07:20 - [TEST_STEP][PASSED] - sheetName = "Sheet1": null

10-01-2025T03:07:20 - [TEST_STEP][PASSED] - data = findTestData("PlanFact"): null

10-01-2025T03:07:20 - [TEST_STEP][PASSED] - n = data.getRowNumbers() + 1: null

10-01-2025T03:07:20 - [TEST_STEP][PASSED] - year = todaysDate.substring(todaysDate.length() - 4, todaysDate.length()): null

10-01-2025T03:07:20 - [TEST_STEP][PASSED] - y = year.toInteger(): null

10-01-2025T03:07:20 - [TEST_STEP][PASSED] - m = getText(findTestObject("Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Фильтр Дата")): Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Фильтр Дата' is: '1, 2, 3 кв., Октябрь, Ноябрь 2024 года'

10-01-2025T03:07:20 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Фильтр Дата' is: '1, 2, 3 кв., Октябрь, Ноябрь 2024 года'

10-01-2025T03:07:20 - [TEST_STEP][PASSED] - m = m.substring(0, m.indexOf("2024")): null

10-01-2025T03:07:20 - [TEST_STEP][PASSED] - m = m.trim(): null

10-01-2025T03:07:20 - [TEST_STEP][PASSED] - dashboardName = "Выполнение бизнес-плана": null

10-01-2025T03:07:20 - [TEST_STEP][PASSED] - workbook01 = getWorkbook(excelFilePath): null

10-01-2025T03:07:20 - [TEST_STEP][PASSED] - sheet01 = getExcelSheet(workbook01, sheetName): null

10-01-2025T03:07:20 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 0, dashboardName): null

10-01-2025T03:07:20 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 1, dZO): null

10-01-2025T03:07:20 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 2, typeOfData): null

10-01-2025T03:07:20 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 3, typeOfData): null

10-01-2025T03:07:20 - [TEST_STEP][PASSED] - if (typeOfData == "План"): null

10-01-2025T03:07:20 - [TEST_STEP][PASSED] - else if (typeOfData == "Факт"): null

10-01-2025T03:07:20 - [TEST_STEP][PASSED] - else if (vidget.contains("электроэнергии") == true): null

10-01-2025T03:07:20 - [TEST_STEP][PASSED] - if (tabR == null): null

10-01-2025T03:07:20 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:07:20 - [TEST_STEP][PASSED] - if (tabR == "нет данных"): null

10-01-2025T03:07:20 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 4, "нет данных"): null

10-01-2025T03:07:20 - [TEST_STEP][PASSED] - if (tabB == null): null

10-01-2025T03:07:20 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:07:20 - [TEST_STEP][PASSED] - if (tabB == "нет данных"): null

10-01-2025T03:07:20 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:07:20 - [TEST_STEP][PASSED] - TB = tabB.toInteger(): null

10-01-2025T03:07:20 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 5, TB): null

10-01-2025T03:07:20 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 6, m): null

10-01-2025T03:07:20 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 7, y): null

10-01-2025T03:07:20 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 8, todaysDate): null

10-01-2025T03:07:20 - [TEST_STEP][PASSED] - n = n + 1: null

10-01-2025T03:07:20 - [TEST_STEP][PASSED] - saveWorkbook(excelFilePath, workbook01): null

10-01-2025T03:07:21 - [TEST_STEP][PASSED] - typeOfData = "Факт Отпуск из сети": null

10-01-2025T03:07:21 - [TEST_STEP][PASSED] - tabR = GetOiSFactR(x = a): null

10-01-2025T03:07:21 - [TEST_STEP][PASSED] - i1 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:07:21 - [TEST_STEP][PASSED] - ii = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:07:21 - [TEST_STEP][PASSED] - for ([ii = 1, ii < 5, (ii++)]): null

10-01-2025T03:07:21 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:07:21 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:07:21 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:07:21 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:07:21 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:07:21 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:07:21 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:07:21 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:07:21 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:07:21 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:07:21 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:07:21 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:07:21 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:07:21 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:07:21 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:07:21 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:07:21 - [TEST_STEP][PASSED] - i1 = x.indexOf("/"): null

10-01-2025T03:07:21 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:07:21 - [TEST_STEP][PASSED] - x = x.substring(0, i1): null

10-01-2025T03:07:21 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:07:21 - [TEST_STEP][PASSED] - return x: null

10-01-2025T03:07:21 - [TEST_STEP][PASSED] - tabB = GetOiSFactB(x = b): null

10-01-2025T03:07:21 - [TEST_STEP][PASSED] - i1 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:07:21 - [TEST_STEP][PASSED] - ii = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:07:21 - [TEST_STEP][PASSED] - for ([ii = 1, ii < 5, (ii++)]): null

10-01-2025T03:07:21 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:07:21 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:07:21 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:07:21 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:07:21 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:07:21 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:07:21 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:07:21 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:07:21 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:07:21 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:07:21 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:07:21 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:07:21 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:07:21 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:07:21 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:07:21 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:07:21 - [TEST_STEP][PASSED] - i1 = x.indexOf("/"): null

10-01-2025T03:07:21 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:07:21 - [TEST_STEP][PASSED] - x = x.substring(0, i1): null

10-01-2025T03:07:21 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:07:21 - [TEST_STEP][FAILED] - return x: null

10-01-2025T03:07:21 - [TEST_STEP][FAILED] - if (verifyEqual(tabR, tabB) == false): null

10-01-2025T03:07:21 - [MESSAGE][FAILED] - Unable to verify equal between actual object 'нет данных' and expected object '62801450' (Root cause: com.kms.katalon.core.exception.StepFailedException: Actual object 'нет данных' and expected object '62801450' are not equal
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.doCall(VerifyEqualKeyword.groovy:58)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.call(VerifyEqualKeyword.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:75)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.verifyEqual(VerifyEqualKeyword.groovy:63)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.execute(VerifyEqualKeyword.groovy:44)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:74)
	at com.kms.katalon.core.keyword.BuiltinKeywords.verifyEqual(BuiltinKeywords.groovy:146)
	at jdk.internal.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at Выполнение бизнес-плана сверка дашбордов.CompareDZOData(Выполнение бизнес-плана сверка дашбордов:717)
	at Выполнение бизнес-плана сверка дашбордов.run(Выполнение бизнес-плана сверка дашбордов:643)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:448)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:439)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:418)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:410)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:285)
	at com.kms.katalon.core.common.CommonExecutor.accessTestCaseMainPhase(CommonExecutor.java:65)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:150)
	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:106)
	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:180)
	at TempTestSuite1736466949911.run(TempTestSuite1736466949911.groovy:35)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
)

10-01-2025T03:07:21 - [TEST_STEP][PASSED] - result = WriteToExcel(typeOfData, todaysDate, PercPlanR, PercPlanB, PercFactR, PercFactB, x, tabR, tabB, o1R, o1B, vidget): null

10-01-2025T03:07:21 - [TEST_STEP][PASSED] - iii = dZO.indexOf("/"): null

10-01-2025T03:07:21 - [TEST_STEP][PASSED] - println(iii): null

10-01-2025T03:07:21 - [TEST_STEP][PASSED] - dZO = dZO.substring(0, iii): null

10-01-2025T03:07:21 - [TEST_STEP][PASSED] - println(dZO): null

10-01-2025T03:07:21 - [TEST_STEP][PASSED] - println(PercPlanR): null

10-01-2025T03:07:21 - [TEST_STEP][PASSED] - println(PercPlanB): null

10-01-2025T03:07:21 - [TEST_STEP][PASSED] - println(PercFactR): null

10-01-2025T03:07:21 - [TEST_STEP][PASSED] - println(PercFactB): null

10-01-2025T03:07:21 - [TEST_STEP][PASSED] - println(tabR): null

10-01-2025T03:07:21 - [TEST_STEP][PASSED] - println(tabB): null

10-01-2025T03:07:21 - [TEST_STEP][PASSED] - println(o1R): null

10-01-2025T03:07:21 - [TEST_STEP][PASSED] - println(o1B): null

10-01-2025T03:07:21 - [TEST_STEP][PASSED] - PR = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:07:21 - [TEST_STEP][PASSED] - FR = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:07:21 - [TEST_STEP][PASSED] - PB = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:07:21 - [TEST_STEP][PASSED] - FB = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:08:39 - [TEST_STEP][PASSED] - TR = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:08:39 - [TEST_STEP][PASSED] - TB = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:08:39 - [TEST_STEP][PASSED] - sheetName = "Sheet1": null

10-01-2025T03:08:39 - [TEST_STEP][PASSED] - data = findTestData("PlanFact"): null

10-01-2025T03:08:39 - [TEST_STEP][PASSED] - n = data.getRowNumbers() + 1: null

10-01-2025T03:08:39 - [TEST_STEP][PASSED] - year = todaysDate.substring(todaysDate.length() - 4, todaysDate.length()): null

10-01-2025T03:08:39 - [TEST_STEP][PASSED] - y = year.toInteger(): null

10-01-2025T03:08:39 - [TEST_STEP][PASSED] - m = getText(findTestObject("Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Фильтр Дата")): Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Фильтр Дата' is: '1, 2, 3 кв., Октябрь, Ноябрь 2024 года'

10-01-2025T03:08:39 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Фильтр Дата' is: '1, 2, 3 кв., Октябрь, Ноябрь 2024 года'

10-01-2025T03:08:39 - [TEST_STEP][PASSED] - m = m.substring(0, m.indexOf("2024")): null

10-01-2025T03:08:39 - [TEST_STEP][PASSED] - m = m.trim(): null

10-01-2025T03:08:39 - [TEST_STEP][PASSED] - dashboardName = "Выполнение бизнес-плана": null

10-01-2025T03:08:39 - [TEST_STEP][PASSED] - workbook01 = getWorkbook(excelFilePath): null

10-01-2025T03:08:39 - [TEST_STEP][PASSED] - sheet01 = getExcelSheet(workbook01, sheetName): null

10-01-2025T03:08:39 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 0, dashboardName): null

10-01-2025T03:08:39 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 1, dZO): null

10-01-2025T03:08:39 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 2, typeOfData): null

10-01-2025T03:08:39 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 3, typeOfData): null

10-01-2025T03:08:39 - [TEST_STEP][PASSED] - if (typeOfData == "План"): null

10-01-2025T03:08:39 - [TEST_STEP][PASSED] - else if (typeOfData == "Факт"): null

10-01-2025T03:08:39 - [TEST_STEP][PASSED] - else if (vidget.contains("электроэнергии") == true): null

10-01-2025T03:08:39 - [TEST_STEP][PASSED] - if (tabR == null): null

10-01-2025T03:08:39 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:08:39 - [TEST_STEP][PASSED] - if (tabR == "нет данных"): null

10-01-2025T03:08:39 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 4, "нет данных"): null

10-01-2025T03:08:39 - [TEST_STEP][PASSED] - if (tabB == null): null

10-01-2025T03:08:39 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:08:39 - [TEST_STEP][PASSED] - if (tabB == "нет данных"): null

10-01-2025T03:08:39 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:08:39 - [TEST_STEP][PASSED] - TB = tabB.toInteger(): null

10-01-2025T03:08:39 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 5, TB): null

10-01-2025T03:08:39 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 6, m): null

10-01-2025T03:08:39 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 7, y): null

10-01-2025T03:08:39 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 8, todaysDate): null

10-01-2025T03:08:39 - [TEST_STEP][PASSED] - n = n + 1: null

10-01-2025T03:08:39 - [TEST_STEP][PASSED] - saveWorkbook(excelFilePath, workbook01): null

10-01-2025T03:08:40 - [TEST_STEP][PASSED] - typeOfData = "Факт Потери": null

10-01-2025T03:08:40 - [TEST_STEP][PASSED] - tabR = GetPFactR(x = a): null

10-01-2025T03:08:40 - [TEST_STEP][PASSED] - i1 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:08:40 - [TEST_STEP][PASSED] - ii = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:08:40 - [TEST_STEP][PASSED] - for ([ii = 1, ii < 6, (ii++)]): null

10-01-2025T03:08:40 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:08:40 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:08:40 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:08:40 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:08:40 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:08:40 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:08:40 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:08:40 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:08:40 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:08:40 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:08:40 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:08:40 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:08:40 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:08:40 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:08:40 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:08:40 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:08:40 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:08:40 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:08:40 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:08:40 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:08:40 - [TEST_STEP][PASSED] - i1 = x.indexOf("/"): null

10-01-2025T03:08:40 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:08:40 - [TEST_STEP][PASSED] - x = x.substring(0, i1): null

10-01-2025T03:08:40 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:08:40 - [TEST_STEP][PASSED] - return x: null

10-01-2025T03:08:40 - [TEST_STEP][PASSED] - tabB = GetPFactB(x = b): null

10-01-2025T03:08:40 - [TEST_STEP][PASSED] - i1 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:08:40 - [TEST_STEP][PASSED] - ii = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:08:40 - [TEST_STEP][PASSED] - for ([ii = 1, ii < 6, (ii++)]): null

10-01-2025T03:08:40 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:08:40 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:08:40 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:08:40 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:08:40 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:08:40 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:08:40 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:08:40 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:08:40 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:08:40 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:08:40 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:08:40 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:08:40 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:08:40 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:08:40 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:08:40 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:08:40 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:08:40 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:08:40 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:08:40 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:08:40 - [TEST_STEP][PASSED] - i1 = x.indexOf("/"): null

10-01-2025T03:08:40 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:08:40 - [TEST_STEP][PASSED] - x = x.substring(0, i1): null

10-01-2025T03:08:40 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:08:40 - [TEST_STEP][FAILED] - return x: null

10-01-2025T03:08:40 - [TEST_STEP][PASSED] - println(tabR + "/" + tabB): null

10-01-2025T03:08:40 - [TEST_STEP][FAILED] - if (verifyEqual(tabR, tabB) == false): null

10-01-2025T03:08:40 - [MESSAGE][FAILED] - Unable to verify equal between actual object 'нет данных' and expected object '3940644' (Root cause: com.kms.katalon.core.exception.StepFailedException: Actual object 'нет данных' and expected object '3940644' are not equal
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.doCall(VerifyEqualKeyword.groovy:58)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.call(VerifyEqualKeyword.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:75)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.verifyEqual(VerifyEqualKeyword.groovy:63)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.execute(VerifyEqualKeyword.groovy:44)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:74)
	at com.kms.katalon.core.keyword.BuiltinKeywords.verifyEqual(BuiltinKeywords.groovy:146)
	at jdk.internal.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at Выполнение бизнес-плана сверка дашбордов.CompareDZOData(Выполнение бизнес-плана сверка дашбордов:730)
	at Выполнение бизнес-плана сверка дашбордов.run(Выполнение бизнес-плана сверка дашбордов:643)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:448)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:439)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:418)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:410)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:285)
	at com.kms.katalon.core.common.CommonExecutor.accessTestCaseMainPhase(CommonExecutor.java:65)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:150)
	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:106)
	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:180)
	at TempTestSuite1736466949911.run(TempTestSuite1736466949911.groovy:35)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
)

10-01-2025T03:08:40 - [TEST_STEP][PASSED] - result = WriteToExcel(typeOfData, todaysDate, PercPlanR, PercPlanB, PercFactR, PercFactB, x, tabR, tabB, o1R, o1B, vidget): null

10-01-2025T03:08:40 - [TEST_STEP][PASSED] - iii = dZO.indexOf("/"): null

10-01-2025T03:08:40 - [TEST_STEP][PASSED] - println(iii): null

10-01-2025T03:08:40 - [TEST_STEP][PASSED] - dZO = dZO.substring(0, iii): null

10-01-2025T03:08:40 - [TEST_STEP][PASSED] - println(dZO): null

10-01-2025T03:08:40 - [TEST_STEP][PASSED] - println(PercPlanR): null

10-01-2025T03:08:40 - [TEST_STEP][PASSED] - println(PercPlanB): null

10-01-2025T03:08:40 - [TEST_STEP][PASSED] - println(PercFactR): null

10-01-2025T03:08:40 - [TEST_STEP][PASSED] - println(PercFactB): null

10-01-2025T03:08:40 - [TEST_STEP][PASSED] - println(tabR): null

10-01-2025T03:08:40 - [TEST_STEP][PASSED] - println(tabB): null

10-01-2025T03:08:40 - [TEST_STEP][PASSED] - println(o1R): null

10-01-2025T03:08:40 - [TEST_STEP][PASSED] - println(o1B): null

10-01-2025T03:08:40 - [TEST_STEP][PASSED] - PR = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:08:40 - [TEST_STEP][PASSED] - FR = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:08:40 - [TEST_STEP][PASSED] - PB = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:08:40 - [TEST_STEP][PASSED] - FB = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:08:40 - [TEST_STEP][PASSED] - TR = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:08:40 - [TEST_STEP][PASSED] - TB = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:08:40 - [TEST_STEP][PASSED] - sheetName = "Sheet1": null

10-01-2025T03:08:40 - [TEST_STEP][PASSED] - data = findTestData("PlanFact"): null

10-01-2025T03:08:40 - [TEST_STEP][PASSED] - n = data.getRowNumbers() + 1: null

10-01-2025T03:08:40 - [TEST_STEP][PASSED] - year = todaysDate.substring(todaysDate.length() - 4, todaysDate.length()): null

10-01-2025T03:08:40 - [TEST_STEP][PASSED] - y = year.toInteger(): null

10-01-2025T03:08:40 - [TEST_STEP][PASSED] - m = getText(findTestObject("Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Фильтр Дата")): Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Фильтр Дата' is: '1, 2, 3 кв., Октябрь, Ноябрь 2024 года'

10-01-2025T03:08:40 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Фильтр Дата' is: '1, 2, 3 кв., Октябрь, Ноябрь 2024 года'

10-01-2025T03:08:40 - [TEST_STEP][PASSED] - m = m.substring(0, m.indexOf("2024")): null

10-01-2025T03:08:40 - [TEST_STEP][PASSED] - m = m.trim(): null

10-01-2025T03:08:40 - [TEST_STEP][PASSED] - dashboardName = "Выполнение бизнес-плана": null

10-01-2025T03:08:40 - [TEST_STEP][PASSED] - workbook01 = getWorkbook(excelFilePath): null

10-01-2025T03:08:40 - [TEST_STEP][PASSED] - sheet01 = getExcelSheet(workbook01, sheetName): null

10-01-2025T03:08:40 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 0, dashboardName): null

10-01-2025T03:08:40 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 1, dZO): null

10-01-2025T03:08:40 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 2, typeOfData): null

10-01-2025T03:08:40 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 3, typeOfData): null

10-01-2025T03:08:40 - [TEST_STEP][PASSED] - if (typeOfData == "План"): null

10-01-2025T03:08:40 - [TEST_STEP][PASSED] - else if (typeOfData == "Факт"): null

10-01-2025T03:08:40 - [TEST_STEP][PASSED] - else if (vidget.contains("электроэнергии") == true): null

10-01-2025T03:08:40 - [TEST_STEP][PASSED] - if (tabR == null): null

10-01-2025T03:08:40 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:08:40 - [TEST_STEP][PASSED] - if (tabR == "нет данных"): null

10-01-2025T03:08:40 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 4, "нет данных"): null

10-01-2025T03:08:40 - [TEST_STEP][PASSED] - if (tabB == null): null

10-01-2025T03:08:40 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:08:40 - [TEST_STEP][PASSED] - if (tabB == "нет данных"): null

10-01-2025T03:08:40 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:08:40 - [TEST_STEP][PASSED] - TB = tabB.toInteger(): null

10-01-2025T03:08:40 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 5, TB): null

10-01-2025T03:08:40 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 6, m): null

10-01-2025T03:08:40 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 7, y): null

10-01-2025T03:08:40 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 8, todaysDate): null

10-01-2025T03:08:40 - [TEST_STEP][PASSED] - n = n + 1: null

10-01-2025T03:08:40 - [TEST_STEP][PASSED] - saveWorkbook(excelFilePath, workbook01): null

10-01-2025T03:08:40 - [TEST_STEP][PASSED] - vidget = "Показатели баланса электроэнергии по ДЗО – План": null

10-01-2025T03:08:40 - [TEST_STEP][PASSED] - typeOfData = "План Отпуск в сеть": null

10-01-2025T03:08:40 - [TEST_STEP][PASSED] - tabR = GetOvSPlanR(x = a): null

10-01-2025T03:08:40 - [TEST_STEP][PASSED] - i1 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:08:41 - [TEST_STEP][PASSED] - ii = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:08:41 - [TEST_STEP][PASSED] - for ([ii = 1, ii < 7, (ii++)]): null

10-01-2025T03:08:41 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:08:41 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:08:41 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:08:41 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:08:41 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:08:41 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:08:41 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:08:41 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:08:41 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:08:41 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:08:41 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:08:41 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:08:41 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:08:41 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:08:41 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:08:41 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:08:41 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:08:41 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:08:41 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:08:41 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:08:41 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:08:41 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:08:41 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:08:41 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:08:41 - [TEST_STEP][PASSED] - i1 = x.indexOf("/"): null

10-01-2025T03:08:41 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:08:41 - [TEST_STEP][PASSED] - x = x.substring(0, i1): null

10-01-2025T03:08:41 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:08:41 - [TEST_STEP][PASSED] - return x: null

10-01-2025T03:08:41 - [TEST_STEP][PASSED] - tabB = GetOvSPlanB(x = b): null

10-01-2025T03:08:41 - [TEST_STEP][PASSED] - i1 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:08:41 - [TEST_STEP][PASSED] - ii = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:08:41 - [TEST_STEP][PASSED] - for ([ii = 1, ii < 7, (ii++)]): null

10-01-2025T03:08:41 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:08:41 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:08:41 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:08:41 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:08:41 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:08:41 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:08:41 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:08:41 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:08:41 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:08:41 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:08:41 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:08:41 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:08:41 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:08:41 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:08:41 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:08:41 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:08:41 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:08:41 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:08:41 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:08:41 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:08:41 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:08:41 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:08:41 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:08:41 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:08:41 - [TEST_STEP][PASSED] - i1 = x.indexOf("/"): null

10-01-2025T03:08:41 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:08:41 - [TEST_STEP][PASSED] - x = x.substring(0, i1): null

10-01-2025T03:08:41 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:08:41 - [TEST_STEP][FAILED] - return x: null

10-01-2025T03:08:41 - [TEST_STEP][PASSED] - println(tabR + "/" + tabB): null

10-01-2025T03:08:41 - [TEST_STEP][FAILED] - if (verifyEqual(PercFactR, PercFactB) == false): null

10-01-2025T03:08:41 - [MESSAGE][FAILED] - Unable to verify equal between actual object 'нет данных' and expected object '5.90' (Root cause: com.kms.katalon.core.exception.StepFailedException: Actual object 'нет данных' and expected object '5.90' are not equal
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.doCall(VerifyEqualKeyword.groovy:58)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.call(VerifyEqualKeyword.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:75)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.verifyEqual(VerifyEqualKeyword.groovy:63)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.execute(VerifyEqualKeyword.groovy:44)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:74)
	at com.kms.katalon.core.keyword.BuiltinKeywords.verifyEqual(BuiltinKeywords.groovy:146)
	at jdk.internal.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at Выполнение бизнес-плана сверка дашбордов.CompareDZOData(Выполнение бизнес-плана сверка дашбордов:745)
	at Выполнение бизнес-плана сверка дашбордов.run(Выполнение бизнес-плана сверка дашбордов:643)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:448)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:439)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:418)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:410)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:285)
	at com.kms.katalon.core.common.CommonExecutor.accessTestCaseMainPhase(CommonExecutor.java:65)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:150)
	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:106)
	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:180)
	at TempTestSuite1736466949911.run(TempTestSuite1736466949911.groovy:35)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
)

10-01-2025T03:08:41 - [TEST_STEP][PASSED] - result = WriteToExcel(typeOfData, todaysDate, PercPlanR, PercPlanB, PercFactR, PercFactB, x, tabR, tabB, o1R, o1B, vidget): null

10-01-2025T03:08:41 - [TEST_STEP][PASSED] - iii = dZO.indexOf("/"): null

10-01-2025T03:08:41 - [TEST_STEP][PASSED] - println(iii): null

10-01-2025T03:08:41 - [TEST_STEP][PASSED] - dZO = dZO.substring(0, iii): null

10-01-2025T03:08:41 - [TEST_STEP][PASSED] - println(dZO): null

10-01-2025T03:08:41 - [TEST_STEP][PASSED] - println(PercPlanR): null

10-01-2025T03:08:41 - [TEST_STEP][PASSED] - println(PercPlanB): null

10-01-2025T03:08:41 - [TEST_STEP][PASSED] - println(PercFactR): null

10-01-2025T03:08:41 - [TEST_STEP][PASSED] - println(PercFactB): null

10-01-2025T03:08:41 - [TEST_STEP][PASSED] - println(tabR): null

10-01-2025T03:08:41 - [TEST_STEP][PASSED] - println(tabB): null

10-01-2025T03:08:41 - [TEST_STEP][PASSED] - println(o1R): null

10-01-2025T03:08:41 - [TEST_STEP][PASSED] - println(o1B): null

10-01-2025T03:08:41 - [TEST_STEP][PASSED] - PR = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:08:41 - [TEST_STEP][PASSED] - FR = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:08:41 - [TEST_STEP][PASSED] - PB = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:08:41 - [TEST_STEP][PASSED] - FB = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:08:41 - [TEST_STEP][PASSED] - TR = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:08:41 - [TEST_STEP][PASSED] - TB = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:08:41 - [TEST_STEP][PASSED] - sheetName = "Sheet1": null

10-01-2025T03:08:41 - [TEST_STEP][PASSED] - data = findTestData("PlanFact"): null

10-01-2025T03:08:41 - [TEST_STEP][PASSED] - n = data.getRowNumbers() + 1: null

10-01-2025T03:08:41 - [TEST_STEP][PASSED] - year = todaysDate.substring(todaysDate.length() - 4, todaysDate.length()): null

10-01-2025T03:08:41 - [TEST_STEP][PASSED] - y = year.toInteger(): null

10-01-2025T03:08:41 - [TEST_STEP][PASSED] - m = getText(findTestObject("Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Фильтр Дата")): Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Фильтр Дата' is: '1, 2, 3 кв., Октябрь, Ноябрь 2024 года'

10-01-2025T03:08:41 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Фильтр Дата' is: '1, 2, 3 кв., Октябрь, Ноябрь 2024 года'

10-01-2025T03:08:41 - [TEST_STEP][PASSED] - m = m.substring(0, m.indexOf("2024")): null

10-01-2025T03:08:41 - [TEST_STEP][PASSED] - m = m.trim(): null

10-01-2025T03:08:41 - [TEST_STEP][PASSED] - dashboardName = "Выполнение бизнес-плана": null

10-01-2025T03:08:41 - [TEST_STEP][PASSED] - workbook01 = getWorkbook(excelFilePath): null

10-01-2025T03:08:41 - [TEST_STEP][PASSED] - sheet01 = getExcelSheet(workbook01, sheetName): null

10-01-2025T03:08:41 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 0, dashboardName): null

10-01-2025T03:08:41 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 1, dZO): null

10-01-2025T03:08:41 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 2, typeOfData): null

10-01-2025T03:08:41 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 3, typeOfData): null

10-01-2025T03:08:41 - [TEST_STEP][PASSED] - if (typeOfData == "План"): null

10-01-2025T03:08:41 - [TEST_STEP][PASSED] - else if (typeOfData == "Факт"): null

10-01-2025T03:08:41 - [TEST_STEP][PASSED] - else if (vidget.contains("электроэнергии") == true): null

10-01-2025T03:08:41 - [TEST_STEP][PASSED] - if (tabR == null): null

10-01-2025T03:08:41 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:08:41 - [TEST_STEP][PASSED] - if (tabR == "нет данных"): null

10-01-2025T03:08:41 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 4, "нет данных"): null

10-01-2025T03:08:41 - [TEST_STEP][PASSED] - if (tabB == null): null

10-01-2025T03:08:41 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:08:41 - [TEST_STEP][PASSED] - if (tabB == "нет данных"): null

10-01-2025T03:08:41 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:08:41 - [TEST_STEP][PASSED] - TB = tabB.toInteger(): null

10-01-2025T03:08:41 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 5, TB): null

10-01-2025T03:08:41 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 6, m): null

10-01-2025T03:08:41 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 7, y): null

10-01-2025T03:08:41 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 8, todaysDate): null

10-01-2025T03:08:41 - [TEST_STEP][PASSED] - n = n + 1: null

10-01-2025T03:08:41 - [TEST_STEP][PASSED] - saveWorkbook(excelFilePath, workbook01): null

10-01-2025T03:08:41 - [TEST_STEP][PASSED] - typeOfData = "План Отпуск из сети": null

10-01-2025T03:08:41 - [TEST_STEP][PASSED] - tabR = GetOiSPlanR(x = a): null

10-01-2025T03:08:41 - [TEST_STEP][PASSED] - i1 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:08:41 - [TEST_STEP][PASSED] - ii = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:08:41 - [TEST_STEP][PASSED] - for ([ii = 1, ii < 8, (ii++)]): null

10-01-2025T03:08:41 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:08:41 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:08:41 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:08:41 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:08:41 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:08:41 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:08:41 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:08:41 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:08:41 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:08:41 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:08:41 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:08:41 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:08:41 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:08:41 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:08:41 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:08:41 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:08:41 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:08:41 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:08:41 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:08:41 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:08:41 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:08:41 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:08:41 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:08:41 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:08:41 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:08:41 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:08:41 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:08:41 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:08:41 - [TEST_STEP][PASSED] - i1 = x.indexOf("/"): null

10-01-2025T03:08:41 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:08:41 - [TEST_STEP][PASSED] - x = x.substring(0, i1): null

10-01-2025T03:08:41 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:08:41 - [TEST_STEP][PASSED] - return x: null

10-01-2025T03:08:41 - [TEST_STEP][PASSED] - tabB = GetOiSPlanB(x = b): null

10-01-2025T03:08:41 - [TEST_STEP][PASSED] - i1 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:08:41 - [TEST_STEP][PASSED] - ii = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:08:41 - [TEST_STEP][PASSED] - for ([ii = 1, ii < 8, (ii++)]): null

10-01-2025T03:08:41 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:08:41 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:08:41 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:08:41 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:08:41 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:08:41 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:08:41 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:08:41 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:08:41 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:08:41 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:08:41 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:08:41 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:08:41 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:08:41 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:08:41 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:08:41 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:08:41 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:08:41 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:08:41 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:08:41 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:08:41 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:08:41 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:08:41 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:08:41 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:08:41 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:08:41 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:08:41 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:08:41 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:08:41 - [TEST_STEP][PASSED] - i1 = x.indexOf("/"): null

10-01-2025T03:08:41 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:08:41 - [TEST_STEP][PASSED] - x = x.substring(0, i1): null

10-01-2025T03:08:41 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:08:41 - [TEST_STEP][FAILED] - return x: null

10-01-2025T03:08:41 - [TEST_STEP][PASSED] - println(tabR + "/" + tabB): null

10-01-2025T03:08:41 - [TEST_STEP][FAILED] - if (verifyEqual(PercFactR, PercFactB) == false): null

10-01-2025T03:08:41 - [MESSAGE][FAILED] - Unable to verify equal between actual object 'нет данных' and expected object '5.90' (Root cause: com.kms.katalon.core.exception.StepFailedException: Actual object 'нет данных' and expected object '5.90' are not equal
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.doCall(VerifyEqualKeyword.groovy:58)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.call(VerifyEqualKeyword.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:75)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.verifyEqual(VerifyEqualKeyword.groovy:63)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.execute(VerifyEqualKeyword.groovy:44)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:74)
	at com.kms.katalon.core.keyword.BuiltinKeywords.verifyEqual(BuiltinKeywords.groovy:146)
	at jdk.internal.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at Выполнение бизнес-плана сверка дашбордов.CompareDZOData(Выполнение бизнес-плана сверка дашбордов:758)
	at Выполнение бизнес-плана сверка дашбордов.run(Выполнение бизнес-плана сверка дашбордов:643)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:448)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:439)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:418)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:410)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:285)
	at com.kms.katalon.core.common.CommonExecutor.accessTestCaseMainPhase(CommonExecutor.java:65)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:150)
	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:106)
	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:180)
	at TempTestSuite1736466949911.run(TempTestSuite1736466949911.groovy:35)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
)

10-01-2025T03:08:41 - [TEST_STEP][PASSED] - result = WriteToExcel(typeOfData, todaysDate, PercPlanR, PercPlanB, PercFactR, PercFactB, x, tabR, tabB, o1R, o1B, vidget): null

10-01-2025T03:08:41 - [TEST_STEP][PASSED] - iii = dZO.indexOf("/"): null

10-01-2025T03:08:41 - [TEST_STEP][PASSED] - println(iii): null

10-01-2025T03:08:41 - [TEST_STEP][PASSED] - dZO = dZO.substring(0, iii): null

10-01-2025T03:08:41 - [TEST_STEP][PASSED] - println(dZO): null

10-01-2025T03:08:41 - [TEST_STEP][PASSED] - println(PercPlanR): null

10-01-2025T03:08:41 - [TEST_STEP][PASSED] - println(PercPlanB): null

10-01-2025T03:08:41 - [TEST_STEP][PASSED] - println(PercFactR): null

10-01-2025T03:08:41 - [TEST_STEP][PASSED] - println(PercFactB): null

10-01-2025T03:08:41 - [TEST_STEP][PASSED] - println(tabR): null

10-01-2025T03:08:41 - [TEST_STEP][PASSED] - println(tabB): null

10-01-2025T03:08:41 - [TEST_STEP][PASSED] - println(o1R): null

10-01-2025T03:08:41 - [TEST_STEP][PASSED] - println(o1B): null

10-01-2025T03:08:41 - [TEST_STEP][PASSED] - PR = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:08:41 - [TEST_STEP][PASSED] - FR = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:08:41 - [TEST_STEP][PASSED] - PB = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:08:41 - [TEST_STEP][PASSED] - FB = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:08:41 - [TEST_STEP][PASSED] - TR = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:08:41 - [TEST_STEP][PASSED] - TB = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:08:41 - [TEST_STEP][PASSED] - sheetName = "Sheet1": null

10-01-2025T03:08:41 - [TEST_STEP][PASSED] - data = findTestData("PlanFact"): null

10-01-2025T03:08:41 - [TEST_STEP][PASSED] - n = data.getRowNumbers() + 1: null

10-01-2025T03:08:41 - [TEST_STEP][PASSED] - year = todaysDate.substring(todaysDate.length() - 4, todaysDate.length()): null

10-01-2025T03:08:41 - [TEST_STEP][PASSED] - y = year.toInteger(): null

10-01-2025T03:08:41 - [TEST_STEP][PASSED] - m = getText(findTestObject("Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Фильтр Дата")): Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Фильтр Дата' is: '1, 2, 3 кв., Октябрь, Ноябрь 2024 года'

10-01-2025T03:08:42 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Фильтр Дата' is: '1, 2, 3 кв., Октябрь, Ноябрь 2024 года'

10-01-2025T03:08:42 - [TEST_STEP][PASSED] - m = m.substring(0, m.indexOf("2024")): null

10-01-2025T03:08:42 - [TEST_STEP][PASSED] - m = m.trim(): null

10-01-2025T03:08:42 - [TEST_STEP][PASSED] - dashboardName = "Выполнение бизнес-плана": null

10-01-2025T03:08:42 - [TEST_STEP][PASSED] - workbook01 = getWorkbook(excelFilePath): null

10-01-2025T03:08:42 - [TEST_STEP][PASSED] - sheet01 = getExcelSheet(workbook01, sheetName): null

10-01-2025T03:08:42 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 0, dashboardName): null

10-01-2025T03:08:42 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 1, dZO): null

10-01-2025T03:08:42 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 2, typeOfData): null

10-01-2025T03:08:42 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 3, typeOfData): null

10-01-2025T03:08:42 - [TEST_STEP][PASSED] - if (typeOfData == "План"): null

10-01-2025T03:08:42 - [TEST_STEP][PASSED] - else if (typeOfData == "Факт"): null

10-01-2025T03:08:55 - [TEST_STEP][PASSED] - else if (vidget.contains("электроэнергии") == true): null

10-01-2025T03:08:55 - [TEST_STEP][PASSED] - if (tabR == null): null

10-01-2025T03:08:55 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:08:55 - [TEST_STEP][PASSED] - if (tabR == "нет данных"): null

10-01-2025T03:08:55 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 4, "нет данных"): null

10-01-2025T03:08:55 - [TEST_STEP][PASSED] - if (tabB == null): null

10-01-2025T03:08:55 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:08:55 - [TEST_STEP][PASSED] - if (tabB == "нет данных"): null

10-01-2025T03:08:55 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:08:55 - [TEST_STEP][PASSED] - TB = tabB.toInteger(): null

10-01-2025T03:08:55 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 5, TB): null

10-01-2025T03:08:55 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 6, m): null

10-01-2025T03:08:55 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 7, y): null

10-01-2025T03:08:55 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 8, todaysDate): null

10-01-2025T03:08:55 - [TEST_STEP][PASSED] - n = n + 1: null

10-01-2025T03:08:55 - [TEST_STEP][PASSED] - saveWorkbook(excelFilePath, workbook01): null

10-01-2025T03:08:55 - [TEST_STEP][PASSED] - typeOfData = "План Потери": null

10-01-2025T03:08:55 - [TEST_STEP][PASSED] - tabR = GetPPlanR(x = a): null

10-01-2025T03:08:55 - [TEST_STEP][PASSED] - i1 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:08:55 - [TEST_STEP][PASSED] - ii = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:08:55 - [TEST_STEP][PASSED] - for ([ii = 1, ii < 9, (ii++)]): null

10-01-2025T03:08:55 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:08:55 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:08:55 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:08:55 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:08:55 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:08:55 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:08:55 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:08:55 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:08:55 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:08:55 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:08:55 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:08:55 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:08:55 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:08:55 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:08:55 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:08:55 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:08:55 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:08:55 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:08:55 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:08:55 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:08:55 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:08:55 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:08:55 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:08:55 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:08:55 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:08:55 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:08:55 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:08:55 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:08:55 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:08:55 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:08:55 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:08:55 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:08:55 - [TEST_STEP][PASSED] - i1 = x.indexOf("/"): null

10-01-2025T03:08:55 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:08:55 - [TEST_STEP][PASSED] - x = x.substring(0, i1): null

10-01-2025T03:08:55 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:08:55 - [TEST_STEP][PASSED] - return x: null

10-01-2025T03:08:55 - [TEST_STEP][PASSED] - tabB = GetPPlanB(x = b): null

10-01-2025T03:08:55 - [TEST_STEP][PASSED] - i1 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:08:55 - [TEST_STEP][PASSED] - ii = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:08:55 - [TEST_STEP][PASSED] - for ([ii = 1, ii < 9, (ii++)]): null

10-01-2025T03:08:55 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:08:55 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:08:55 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:08:55 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:08:55 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:08:55 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:08:55 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:08:55 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:08:55 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:08:55 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:08:55 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:08:55 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:08:55 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:08:55 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:08:55 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:08:55 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:08:55 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:08:55 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:08:55 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:08:55 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:08:55 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:08:55 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:08:55 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:08:55 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:08:55 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:08:55 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:08:55 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:08:55 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:08:55 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:08:55 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:08:55 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:08:55 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:08:55 - [TEST_STEP][PASSED] - i1 = x.indexOf("/"): null

10-01-2025T03:08:55 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:08:55 - [TEST_STEP][PASSED] - x = x.substring(0, i1): null

10-01-2025T03:08:55 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:08:55 - [TEST_STEP][FAILED] - return x: null

10-01-2025T03:08:55 - [TEST_STEP][PASSED] - println(tabR + "/" + tabB): null

10-01-2025T03:08:55 - [TEST_STEP][FAILED] - if (verifyEqual(PercFactR, PercFactB) == false): null

10-01-2025T03:08:55 - [MESSAGE][FAILED] - Unable to verify equal between actual object 'нет данных' and expected object '5.90' (Root cause: com.kms.katalon.core.exception.StepFailedException: Actual object 'нет данных' and expected object '5.90' are not equal
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.doCall(VerifyEqualKeyword.groovy:58)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.call(VerifyEqualKeyword.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:75)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.verifyEqual(VerifyEqualKeyword.groovy:63)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.execute(VerifyEqualKeyword.groovy:44)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:74)
	at com.kms.katalon.core.keyword.BuiltinKeywords.verifyEqual(BuiltinKeywords.groovy:146)
	at jdk.internal.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at Выполнение бизнес-плана сверка дашбордов.CompareDZOData(Выполнение бизнес-плана сверка дашбордов:771)
	at Выполнение бизнес-плана сверка дашбордов.run(Выполнение бизнес-плана сверка дашбордов:643)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:448)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:439)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:418)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:410)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:285)
	at com.kms.katalon.core.common.CommonExecutor.accessTestCaseMainPhase(CommonExecutor.java:65)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:150)
	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:106)
	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:180)
	at TempTestSuite1736466949911.run(TempTestSuite1736466949911.groovy:35)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
)

10-01-2025T03:08:55 - [TEST_STEP][PASSED] - result = WriteToExcel(typeOfData, todaysDate, PercPlanR, PercPlanB, PercFactR, PercFactB, x, tabR, tabB, o1R, o1B, vidget): null

10-01-2025T03:08:55 - [TEST_STEP][PASSED] - iii = dZO.indexOf("/"): null

10-01-2025T03:08:55 - [TEST_STEP][PASSED] - println(iii): null

10-01-2025T03:08:55 - [TEST_STEP][PASSED] - dZO = dZO.substring(0, iii): null

10-01-2025T03:08:55 - [TEST_STEP][PASSED] - println(dZO): null

10-01-2025T03:08:55 - [TEST_STEP][PASSED] - println(PercPlanR): null

10-01-2025T03:08:55 - [TEST_STEP][PASSED] - println(PercPlanB): null

10-01-2025T03:08:55 - [TEST_STEP][PASSED] - println(PercFactR): null

10-01-2025T03:08:55 - [TEST_STEP][PASSED] - println(PercFactB): null

10-01-2025T03:08:55 - [TEST_STEP][PASSED] - println(tabR): null

10-01-2025T03:08:55 - [TEST_STEP][PASSED] - println(tabB): null

10-01-2025T03:08:55 - [TEST_STEP][PASSED] - println(o1R): null

10-01-2025T03:08:55 - [TEST_STEP][PASSED] - println(o1B): null

10-01-2025T03:08:55 - [TEST_STEP][PASSED] - PR = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:08:55 - [TEST_STEP][PASSED] - FR = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:08:55 - [TEST_STEP][PASSED] - PB = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:08:55 - [TEST_STEP][PASSED] - FB = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:08:55 - [TEST_STEP][PASSED] - TR = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:08:55 - [TEST_STEP][PASSED] - TB = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:08:55 - [TEST_STEP][PASSED] - sheetName = "Sheet1": null

10-01-2025T03:08:55 - [TEST_STEP][PASSED] - data = findTestData("PlanFact"): null

10-01-2025T03:08:55 - [TEST_STEP][PASSED] - n = data.getRowNumbers() + 1: null

10-01-2025T03:08:55 - [TEST_STEP][PASSED] - year = todaysDate.substring(todaysDate.length() - 4, todaysDate.length()): null

10-01-2025T03:08:55 - [TEST_STEP][PASSED] - y = year.toInteger(): null

10-01-2025T03:08:55 - [TEST_STEP][PASSED] - m = getText(findTestObject("Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Фильтр Дата")): Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Фильтр Дата' is: '1, 2, 3 кв., Октябрь, Ноябрь 2024 года'

10-01-2025T03:08:55 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Фильтр Дата' is: '1, 2, 3 кв., Октябрь, Ноябрь 2024 года'

10-01-2025T03:08:55 - [TEST_STEP][PASSED] - m = m.substring(0, m.indexOf("2024")): null

10-01-2025T03:08:55 - [TEST_STEP][PASSED] - m = m.trim(): null

10-01-2025T03:08:55 - [TEST_STEP][PASSED] - dashboardName = "Выполнение бизнес-плана": null

10-01-2025T03:08:55 - [TEST_STEP][PASSED] - workbook01 = getWorkbook(excelFilePath): null

10-01-2025T03:08:55 - [TEST_STEP][PASSED] - sheet01 = getExcelSheet(workbook01, sheetName): null

10-01-2025T03:08:55 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 0, dashboardName): null

10-01-2025T03:08:55 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 1, dZO): null

10-01-2025T03:08:55 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 2, typeOfData): null

10-01-2025T03:08:55 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 3, typeOfData): null

10-01-2025T03:08:55 - [TEST_STEP][PASSED] - if (typeOfData == "План"): null

10-01-2025T03:08:55 - [TEST_STEP][PASSED] - else if (typeOfData == "Факт"): null

10-01-2025T03:08:55 - [TEST_STEP][PASSED] - else if (vidget.contains("электроэнергии") == true): null

10-01-2025T03:08:55 - [TEST_STEP][PASSED] - if (tabR == null): null

10-01-2025T03:08:55 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:08:55 - [TEST_STEP][PASSED] - if (tabR == "нет данных"): null

10-01-2025T03:08:55 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 4, "нет данных"): null

10-01-2025T03:08:55 - [TEST_STEP][PASSED] - if (tabB == null): null

10-01-2025T03:08:55 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:08:55 - [TEST_STEP][PASSED] - if (tabB == "нет данных"): null

10-01-2025T03:08:55 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:08:55 - [TEST_STEP][PASSED] - TB = tabB.toInteger(): null

10-01-2025T03:08:55 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 5, TB): null

10-01-2025T03:08:55 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 6, m): null

10-01-2025T03:08:55 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 7, y): null

10-01-2025T03:08:55 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 8, todaysDate): null

10-01-2025T03:08:55 - [TEST_STEP][PASSED] - n = n + 1: null

10-01-2025T03:08:55 - [TEST_STEP][PASSED] - saveWorkbook(excelFilePath, workbook01): null

10-01-2025T03:08:56 - [TEST_STEP][PASSED] - ii2 = a.indexOf("ПАО"): null

10-01-2025T03:08:56 - [TEST_STEP][PASSED] - if (ii2 == -1): null

10-01-2025T03:08:56 - [TEST_STEP][PASSED] - vidget = "Отклонения фактического уровня потерь от бизнес-плана": null

10-01-2025T03:08:56 - [TEST_STEP][PASSED] - typeOfData = "Коэффициент": null

10-01-2025T03:08:56 - [TEST_STEP][PASSED] - o1R = Geto1R(x = a): null

10-01-2025T03:08:56 - [TEST_STEP][PASSED] - i1 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:08:56 - [TEST_STEP][PASSED] - ii = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:08:56 - [TEST_STEP][PASSED] - for ([ii = 1, ii < 10, (ii++)]): null

10-01-2025T03:08:56 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:08:56 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:08:56 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:08:56 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:08:56 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:08:56 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:08:56 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:08:56 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:08:56 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:08:56 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:08:56 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:08:56 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:08:56 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:08:56 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:08:56 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:08:56 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:08:56 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:08:56 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:08:56 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:08:56 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:08:56 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:08:56 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:08:56 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:08:56 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:08:56 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:08:56 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:08:56 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:08:56 - [TEST_STEP][PASSED] - i1 = x.indexOf("/"): null

10-01-2025T03:08:56 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:08:56 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:08:56 - [TEST_STEP][PASSED] - return x: null

10-01-2025T03:08:56 - [TEST_STEP][PASSED] - o1B = Geto1B(x = b): null

10-01-2025T03:08:56 - [TEST_STEP][PASSED] - i1 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:08:56 - [TEST_STEP][PASSED] - ii = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:08:56 - [TEST_STEP][PASSED] - for ([ii = 1, ii < 10, (ii++)]): null

10-01-2025T03:08:56 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:08:56 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:08:56 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:08:56 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:08:56 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:08:56 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:08:56 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:08:56 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:08:56 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:08:56 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:08:56 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:08:56 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:08:56 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:08:56 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:08:56 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:08:56 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:08:56 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:08:56 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:08:56 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:08:56 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:08:56 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:08:56 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:08:56 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:08:56 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:08:56 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:08:56 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:08:56 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:08:56 - [TEST_STEP][PASSED] - i1 = x.indexOf("/"): null

10-01-2025T03:08:56 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:08:56 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:08:56 - [TEST_STEP][FAILED] - return x: null

10-01-2025T03:08:56 - [TEST_STEP][PASSED] - println(o1R + "/" + o1B): null

10-01-2025T03:08:56 - [TEST_STEP][FAILED] - if (verifyEqual(PercFactR, PercFactB) == false): null

10-01-2025T03:08:56 - [MESSAGE][FAILED] - Unable to verify equal between actual object 'нет данных' and expected object '5.90' (Root cause: com.kms.katalon.core.exception.StepFailedException: Actual object 'нет данных' and expected object '5.90' are not equal
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.doCall(VerifyEqualKeyword.groovy:58)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.call(VerifyEqualKeyword.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:75)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.verifyEqual(VerifyEqualKeyword.groovy:63)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.execute(VerifyEqualKeyword.groovy:44)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:74)
	at com.kms.katalon.core.keyword.BuiltinKeywords.verifyEqual(BuiltinKeywords.groovy:146)
	at jdk.internal.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at Выполнение бизнес-плана сверка дашбордов.CompareDZOData(Выполнение бизнес-плана сверка дашбордов:789)
	at Выполнение бизнес-плана сверка дашбордов.run(Выполнение бизнес-плана сверка дашбордов:643)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:448)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:439)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:418)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:410)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:285)
	at com.kms.katalon.core.common.CommonExecutor.accessTestCaseMainPhase(CommonExecutor.java:65)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:150)
	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:106)
	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:180)
	at TempTestSuite1736466949911.run(TempTestSuite1736466949911.groovy:35)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
)

10-01-2025T03:08:56 - [TEST_STEP][PASSED] - result = WriteToExcel(typeOfData, todaysDate, PercPlanR, PercPlanB, PercFactR, PercFactB, x, tabR, tabB, o1R, o1B, vidget): null

10-01-2025T03:08:56 - [TEST_STEP][PASSED] - iii = dZO.indexOf("/"): null

10-01-2025T03:08:56 - [TEST_STEP][PASSED] - println(iii): null

10-01-2025T03:08:56 - [TEST_STEP][PASSED] - dZO = dZO.substring(0, iii): null

10-01-2025T03:08:56 - [TEST_STEP][PASSED] - println(dZO): null

10-01-2025T03:08:56 - [TEST_STEP][PASSED] - println(PercPlanR): null

10-01-2025T03:08:56 - [TEST_STEP][PASSED] - println(PercPlanB): null

10-01-2025T03:08:56 - [TEST_STEP][PASSED] - println(PercFactR): null

10-01-2025T03:08:56 - [TEST_STEP][PASSED] - println(PercFactB): null

10-01-2025T03:08:56 - [TEST_STEP][PASSED] - println(tabR): null

10-01-2025T03:08:56 - [TEST_STEP][PASSED] - println(tabB): null

10-01-2025T03:08:56 - [TEST_STEP][PASSED] - println(o1R): null

10-01-2025T03:08:56 - [TEST_STEP][PASSED] - println(o1B): null

10-01-2025T03:08:56 - [TEST_STEP][PASSED] - PR = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:08:56 - [TEST_STEP][PASSED] - FR = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:08:56 - [TEST_STEP][PASSED] - PB = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:08:56 - [TEST_STEP][PASSED] - FB = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:08:56 - [TEST_STEP][PASSED] - TR = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:08:56 - [TEST_STEP][PASSED] - TB = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:08:56 - [TEST_STEP][PASSED] - sheetName = "Sheet1": null

10-01-2025T03:08:56 - [TEST_STEP][PASSED] - data = findTestData("PlanFact"): null

10-01-2025T03:08:56 - [TEST_STEP][PASSED] - n = data.getRowNumbers() + 1: null

10-01-2025T03:08:56 - [TEST_STEP][PASSED] - year = todaysDate.substring(todaysDate.length() - 4, todaysDate.length()): null

10-01-2025T03:08:56 - [TEST_STEP][PASSED] - y = year.toInteger(): null

10-01-2025T03:08:56 - [TEST_STEP][PASSED] - m = getText(findTestObject("Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Фильтр Дата")): Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Фильтр Дата' is: '1, 2, 3 кв., Октябрь, Ноябрь 2024 года'

10-01-2025T03:08:56 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Фильтр Дата' is: '1, 2, 3 кв., Октябрь, Ноябрь 2024 года'

10-01-2025T03:08:56 - [TEST_STEP][PASSED] - m = m.substring(0, m.indexOf("2024")): null

10-01-2025T03:08:56 - [TEST_STEP][PASSED] - m = m.trim(): null

10-01-2025T03:08:56 - [TEST_STEP][PASSED] - dashboardName = "Выполнение бизнес-плана": null

10-01-2025T03:08:56 - [TEST_STEP][PASSED] - workbook01 = getWorkbook(excelFilePath): null

10-01-2025T03:08:56 - [TEST_STEP][PASSED] - sheet01 = getExcelSheet(workbook01, sheetName): null

10-01-2025T03:08:56 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 0, dashboardName): null

10-01-2025T03:08:56 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 1, dZO): null

10-01-2025T03:08:56 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 2, typeOfData): null

10-01-2025T03:08:56 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 3, typeOfData): null

10-01-2025T03:08:56 - [TEST_STEP][PASSED] - if (typeOfData == "План"): null

10-01-2025T03:08:56 - [TEST_STEP][PASSED] - else if (typeOfData == "Факт"): null

10-01-2025T03:08:56 - [TEST_STEP][PASSED] - else if (vidget.contains("электроэнергии") == true): null

10-01-2025T03:08:56 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:08:56 - [TEST_STEP][PASSED] - if (o1R == null): null

10-01-2025T03:08:56 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:08:56 - [TEST_STEP][PASSED] - if (o1R == "нет данных"): null

10-01-2025T03:08:56 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 4, "нет данных"): null

10-01-2025T03:08:56 - [TEST_STEP][PASSED] - if (o1B == null): null

10-01-2025T03:08:56 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:08:56 - [TEST_STEP][PASSED] - if (o1B == "нет данных"): null

10-01-2025T03:08:56 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:08:56 - [TEST_STEP][PASSED] - FB = o1B.toDouble(): null

10-01-2025T03:08:56 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 5, FB): null

10-01-2025T03:08:56 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 6, m): null

10-01-2025T03:08:56 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 7, y): null

10-01-2025T03:08:56 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 8, todaysDate): null

10-01-2025T03:08:56 - [TEST_STEP][PASSED] - n = n + 1: null

10-01-2025T03:08:56 - [TEST_STEP][FAILED] - saveWorkbook(excelFilePath, workbook01): null

10-01-2025T03:08:57 - [TEST_STEP][FAILED] - if (verifyEqual(cenR, cenB) == false): null

10-01-2025T03:08:57 - [MESSAGE][FAILED] - Unable to verify equal between actual object 'Россети Центр (ГК)/10.32/9.80/55088893/49682043/5406850/53713338/48149456/5563882/-0.52' and expected object 'Россети Центр (ГК)/10.32/9.80/54746795/49382050/5364745/53713338/48149456/5563882/-0.52' (Root cause: com.kms.katalon.core.exception.StepFailedException: Actual object 'Россети Центр (ГК)/10.32/9.80/55088893/49682043/5406850/53713338/48149456/5563882/-0.52' and expected object 'Россети Центр (ГК)/10.32/9.80/54746795/49382050/5364745/53713338/48149456/5563882/-0.52' are not equal
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.doCall(VerifyEqualKeyword.groovy:58)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.call(VerifyEqualKeyword.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:75)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.verifyEqual(VerifyEqualKeyword.groovy:63)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.execute(VerifyEqualKeyword.groovy:44)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:74)
	at com.kms.katalon.core.keyword.BuiltinKeywords.verifyEqual(BuiltinKeywords.groovy:146)
	at jdk.internal.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at Выполнение бизнес-плана сверка дашбордов.run(Выполнение бизнес-плана сверка дашбордов:647)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:448)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:439)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:418)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:410)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:285)
	at com.kms.katalon.core.common.CommonExecutor.accessTestCaseMainPhase(CommonExecutor.java:65)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:150)
	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:106)
	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:180)
	at TempTestSuite1736466949911.run(TempTestSuite1736466949911.groovy:35)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
)

10-01-2025T03:08:57 - [TEST_STEP][PASSED] - result = CompareDZOData(a = cenR, b = cenB, dZO, typeOfData, PercPlanR, PercPlanB, PercFactR, PercFactB, todaysDate, x, vidget, tabR, tabB, o1R, o1B): null

10-01-2025T03:08:57 - [TEST_STEP][PASSED] - ii2 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:08:57 - [TEST_STEP][FAILED] - if (verifyEqual(a, b) == false): null

10-01-2025T03:08:57 - [MESSAGE][FAILED] - Unable to verify equal between actual object 'Россети Центр (ГК)/10.32/9.80/55088893/49682043/5406850/53713338/48149456/5563882/-0.52' and expected object 'Россети Центр (ГК)/10.32/9.80/54746795/49382050/5364745/53713338/48149456/5563882/-0.52' (Root cause: com.kms.katalon.core.exception.StepFailedException: Actual object 'Россети Центр (ГК)/10.32/9.80/55088893/49682043/5406850/53713338/48149456/5563882/-0.52' and expected object 'Россети Центр (ГК)/10.32/9.80/54746795/49382050/5364745/53713338/48149456/5563882/-0.52' are not equal
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.doCall(VerifyEqualKeyword.groovy:58)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.call(VerifyEqualKeyword.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:75)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.verifyEqual(VerifyEqualKeyword.groovy:63)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.execute(VerifyEqualKeyword.groovy:44)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:74)
	at com.kms.katalon.core.keyword.BuiltinKeywords.verifyEqual(BuiltinKeywords.groovy:146)
	at jdk.internal.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at Выполнение бизнес-плана сверка дашбордов.CompareDZOData(Выполнение бизнес-плана сверка дашбордов:673)
	at Выполнение бизнес-плана сверка дашбордов.run(Выполнение бизнес-плана сверка дашбордов:648)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:448)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:439)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:418)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:410)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:285)
	at com.kms.katalon.core.common.CommonExecutor.accessTestCaseMainPhase(CommonExecutor.java:65)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:150)
	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:106)
	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:180)
	at TempTestSuite1736466949911.run(TempTestSuite1736466949911.groovy:35)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
)

10-01-2025T03:08:57 - [TEST_STEP][PASSED] - vidget = "Уровень потерь электроэнергии": null

10-01-2025T03:08:57 - [TEST_STEP][PASSED] - typeOfData = "План": null

10-01-2025T03:08:57 - [TEST_STEP][PASSED] - PercPlanR = GetPercPlanR(x = a): null

10-01-2025T03:08:57 - [TEST_STEP][PASSED] - i1 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:08:57 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:08:57 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:08:57 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:08:57 - [TEST_STEP][PASSED] - i1 = x.indexOf("/"): null

10-01-2025T03:08:57 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:08:57 - [TEST_STEP][PASSED] - x = x.substring(0, i1): null

10-01-2025T03:08:57 - [TEST_STEP][PASSED] - return x: null

10-01-2025T03:08:57 - [TEST_STEP][PASSED] - PercPlanB = GetPercPlanB(x = b): null

10-01-2025T03:08:57 - [TEST_STEP][PASSED] - i1 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:08:57 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:08:57 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:08:57 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:08:57 - [TEST_STEP][PASSED] - i1 = x.indexOf("/"): null

10-01-2025T03:08:57 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:08:57 - [TEST_STEP][PASSED] - x = x.substring(0, i1): null

10-01-2025T03:08:57 - [TEST_STEP][PASSED] - return x: null

10-01-2025T03:08:57 - [TEST_STEP][PASSED] - if (verifyEqual(PercPlanR, PercPlanB) == false): Actual object '10.32' and expected object '10.32' are equal

10-01-2025T03:08:57 - [MESSAGE][PASSED] - Actual object '10.32' and expected object '10.32' are equal

10-01-2025T03:08:57 - [TEST_STEP][PASSED] - typeOfData = "Факт": null

10-01-2025T03:08:57 - [TEST_STEP][PASSED] - PercFactR = GetPercFactR(x = a): null

10-01-2025T03:08:57 - [TEST_STEP][PASSED] - i1 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:08:57 - [TEST_STEP][PASSED] - ii = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:08:57 - [TEST_STEP][PASSED] - for ([ii = 1, ii < 3, (ii++)]): null

10-01-2025T03:08:57 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:08:57 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:08:57 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:08:57 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:08:57 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:08:57 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:08:57 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:08:57 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:08:57 - [TEST_STEP][PASSED] - i1 = x.indexOf("/"): null

10-01-2025T03:08:57 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:08:57 - [TEST_STEP][PASSED] - x = x.substring(0, i1): null

10-01-2025T03:08:57 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:08:57 - [TEST_STEP][PASSED] - return x: null

10-01-2025T03:08:57 - [TEST_STEP][PASSED] - PercFactB = GetPercFactB(x = b): null

10-01-2025T03:08:57 - [TEST_STEP][PASSED] - i1 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:08:57 - [TEST_STEP][PASSED] - ii = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:08:57 - [TEST_STEP][PASSED] - for ([ii = 1, ii < 3, (ii++)]): null

10-01-2025T03:08:57 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:08:57 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:08:57 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:08:57 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:08:57 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:08:57 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:08:57 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:08:57 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:08:57 - [TEST_STEP][PASSED] - i1 = x.indexOf("/"): null

10-01-2025T03:08:57 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:08:57 - [TEST_STEP][PASSED] - x = x.substring(0, i1): null

10-01-2025T03:08:57 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:08:57 - [TEST_STEP][PASSED] - return x: null

10-01-2025T03:08:57 - [TEST_STEP][PASSED] - if (verifyEqual(PercFactR, PercFactB) == false): Actual object '9.80' and expected object '9.80' are equal

10-01-2025T03:08:57 - [MESSAGE][PASSED] - Actual object '9.80' and expected object '9.80' are equal

10-01-2025T03:08:57 - [TEST_STEP][PASSED] - vidget = "Показатели баланса электроэнергии по ДЗО – Факт": null

10-01-2025T03:08:57 - [TEST_STEP][PASSED] - typeOfData = "Факт Отпуск в сеть": null

10-01-2025T03:08:57 - [TEST_STEP][PASSED] - tabR = GetOvSFactR(x = a): null

10-01-2025T03:08:57 - [TEST_STEP][PASSED] - i1 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:08:57 - [TEST_STEP][PASSED] - ii = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:08:57 - [TEST_STEP][PASSED] - for ([ii = 1, ii < 4, (ii++)]): null

10-01-2025T03:08:57 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:08:57 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:08:57 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:08:57 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:08:57 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:08:57 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:08:57 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:08:57 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:08:57 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:08:57 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:08:57 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:08:57 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:08:57 - [TEST_STEP][PASSED] - i1 = x.indexOf("/"): null

10-01-2025T03:08:57 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:08:57 - [TEST_STEP][PASSED] - x = x.substring(0, i1): null

10-01-2025T03:08:57 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:08:57 - [TEST_STEP][PASSED] - return x: null

10-01-2025T03:08:57 - [TEST_STEP][PASSED] - tabB = GetOvSFactB(x = b): null

10-01-2025T03:08:57 - [TEST_STEP][PASSED] - i1 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:08:57 - [TEST_STEP][PASSED] - ii = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:08:57 - [TEST_STEP][PASSED] - for ([ii = 1, ii < 4, (ii++)]): null

10-01-2025T03:08:57 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:08:57 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:08:57 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:08:57 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:08:57 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:08:57 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:08:57 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:08:57 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:08:57 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:08:57 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:08:57 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:08:57 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:08:57 - [TEST_STEP][PASSED] - i1 = x.indexOf("/"): null

10-01-2025T03:08:57 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:08:57 - [TEST_STEP][PASSED] - x = x.substring(0, i1): null

10-01-2025T03:08:57 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:08:57 - [TEST_STEP][FAILED] - return x: null

10-01-2025T03:08:57 - [TEST_STEP][FAILED] - if (verifyEqual(tabR, tabB) == false): null

10-01-2025T03:08:57 - [MESSAGE][FAILED] - Unable to verify equal between actual object '55088893' and expected object '54746795' (Root cause: com.kms.katalon.core.exception.StepFailedException: Actual object '55088893' and expected object '54746795' are not equal
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.doCall(VerifyEqualKeyword.groovy:58)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.call(VerifyEqualKeyword.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:75)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.verifyEqual(VerifyEqualKeyword.groovy:63)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.execute(VerifyEqualKeyword.groovy:44)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:74)
	at com.kms.katalon.core.keyword.BuiltinKeywords.verifyEqual(BuiltinKeywords.groovy:146)
	at jdk.internal.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at Выполнение бизнес-плана сверка дашбордов.CompareDZOData(Выполнение бизнес-плана сверка дашбордов:706)
	at Выполнение бизнес-плана сверка дашбордов.run(Выполнение бизнес-плана сверка дашбордов:648)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:448)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:439)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:418)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:410)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:285)
	at com.kms.katalon.core.common.CommonExecutor.accessTestCaseMainPhase(CommonExecutor.java:65)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:150)
	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:106)
	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:180)
	at TempTestSuite1736466949911.run(TempTestSuite1736466949911.groovy:35)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
)

10-01-2025T03:08:57 - [TEST_STEP][PASSED] - result = WriteToExcel(typeOfData, todaysDate, PercPlanR, PercPlanB, PercFactR, PercFactB, x, tabR, tabB, o1R, o1B, vidget): null

10-01-2025T03:08:57 - [TEST_STEP][PASSED] - iii = dZO.indexOf("/"): null

10-01-2025T03:08:57 - [TEST_STEP][PASSED] - println(iii): null

10-01-2025T03:08:57 - [TEST_STEP][PASSED] - dZO = dZO.substring(0, iii): null

10-01-2025T03:08:57 - [TEST_STEP][PASSED] - println(dZO): null

10-01-2025T03:08:57 - [TEST_STEP][PASSED] - println(PercPlanR): null

10-01-2025T03:08:57 - [TEST_STEP][PASSED] - println(PercPlanB): null

10-01-2025T03:08:57 - [TEST_STEP][PASSED] - println(PercFactR): null

10-01-2025T03:08:57 - [TEST_STEP][PASSED] - println(PercFactB): null

10-01-2025T03:08:57 - [TEST_STEP][PASSED] - println(tabR): null

10-01-2025T03:08:57 - [TEST_STEP][PASSED] - println(tabB): null

10-01-2025T03:08:57 - [TEST_STEP][PASSED] - println(o1R): null

10-01-2025T03:08:57 - [TEST_STEP][PASSED] - println(o1B): null

10-01-2025T03:08:57 - [TEST_STEP][PASSED] - PR = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:08:57 - [TEST_STEP][PASSED] - FR = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:08:57 - [TEST_STEP][PASSED] - PB = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:08:57 - [TEST_STEP][PASSED] - FB = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:08:57 - [TEST_STEP][PASSED] - TR = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:08:57 - [TEST_STEP][PASSED] - TB = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:08:57 - [TEST_STEP][PASSED] - sheetName = "Sheet1": null

10-01-2025T03:08:57 - [TEST_STEP][PASSED] - data = findTestData("PlanFact"): null

10-01-2025T03:08:57 - [TEST_STEP][PASSED] - n = data.getRowNumbers() + 1: null

10-01-2025T03:08:57 - [TEST_STEP][PASSED] - year = todaysDate.substring(todaysDate.length() - 4, todaysDate.length()): null

10-01-2025T03:08:57 - [TEST_STEP][PASSED] - y = year.toInteger(): null

10-01-2025T03:08:57 - [TEST_STEP][PASSED] - m = getText(findTestObject("Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Фильтр Дата")): Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Фильтр Дата' is: '1, 2, 3 кв., Октябрь, Ноябрь 2024 года'

10-01-2025T03:08:57 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Фильтр Дата' is: '1, 2, 3 кв., Октябрь, Ноябрь 2024 года'

10-01-2025T03:08:57 - [TEST_STEP][PASSED] - m = m.substring(0, m.indexOf("2024")): null

10-01-2025T03:08:57 - [TEST_STEP][PASSED] - m = m.trim(): null

10-01-2025T03:08:57 - [TEST_STEP][PASSED] - dashboardName = "Выполнение бизнес-плана": null

10-01-2025T03:08:57 - [TEST_STEP][PASSED] - workbook01 = getWorkbook(excelFilePath): null

10-01-2025T03:08:57 - [TEST_STEP][PASSED] - sheet01 = getExcelSheet(workbook01, sheetName): null

10-01-2025T03:08:57 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 0, dashboardName): null

10-01-2025T03:08:57 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 1, dZO): null

10-01-2025T03:08:57 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 2, typeOfData): null

10-01-2025T03:08:57 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 3, typeOfData): null

10-01-2025T03:08:57 - [TEST_STEP][PASSED] - if (typeOfData == "План"): null

10-01-2025T03:08:57 - [TEST_STEP][PASSED] - else if (typeOfData == "Факт"): null

10-01-2025T03:08:57 - [TEST_STEP][PASSED] - else if (vidget.contains("электроэнергии") == true): null

10-01-2025T03:08:57 - [TEST_STEP][PASSED] - if (tabR == null): null

10-01-2025T03:08:57 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:08:57 - [TEST_STEP][PASSED] - if (tabR == "нет данных"): null

10-01-2025T03:08:57 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:08:57 - [TEST_STEP][PASSED] - TR = tabR.toInteger(): null

10-01-2025T03:08:57 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 4, TR): null

10-01-2025T03:08:57 - [TEST_STEP][PASSED] - if (tabB == null): null

10-01-2025T03:08:57 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:08:57 - [TEST_STEP][PASSED] - if (tabB == "нет данных"): null

10-01-2025T03:08:57 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:08:57 - [TEST_STEP][PASSED] - TB = tabB.toInteger(): null

10-01-2025T03:08:57 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 5, TB): null

10-01-2025T03:08:57 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 6, m): null

10-01-2025T03:08:57 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 7, y): null

10-01-2025T03:08:57 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 8, todaysDate): null

10-01-2025T03:08:57 - [TEST_STEP][PASSED] - n = n + 1: null

10-01-2025T03:08:57 - [TEST_STEP][PASSED] - saveWorkbook(excelFilePath, workbook01): null

10-01-2025T03:08:58 - [TEST_STEP][PASSED] - typeOfData = "Факт Отпуск из сети": null

10-01-2025T03:08:58 - [TEST_STEP][PASSED] - tabR = GetOiSFactR(x = a): null

10-01-2025T03:08:58 - [TEST_STEP][PASSED] - i1 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:08:58 - [TEST_STEP][PASSED] - ii = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:08:58 - [TEST_STEP][PASSED] - for ([ii = 1, ii < 5, (ii++)]): null

10-01-2025T03:08:58 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:08:58 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:08:58 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:08:58 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:08:58 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:08:58 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:08:58 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:08:58 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:08:58 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:08:58 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:08:58 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:08:58 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:08:58 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:08:58 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:08:58 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:08:58 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:08:58 - [TEST_STEP][PASSED] - i1 = x.indexOf("/"): null

10-01-2025T03:08:58 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:08:58 - [TEST_STEP][PASSED] - x = x.substring(0, i1): null

10-01-2025T03:08:58 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:08:58 - [TEST_STEP][PASSED] - return x: null

10-01-2025T03:08:58 - [TEST_STEP][PASSED] - tabB = GetOiSFactB(x = b): null

10-01-2025T03:08:58 - [TEST_STEP][PASSED] - i1 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:08:58 - [TEST_STEP][PASSED] - ii = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:08:58 - [TEST_STEP][PASSED] - for ([ii = 1, ii < 5, (ii++)]): null

10-01-2025T03:08:58 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:08:58 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:08:58 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:08:58 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:08:58 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:08:58 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:08:58 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:08:58 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:08:58 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:08:58 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:08:58 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:08:58 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:08:58 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:08:58 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:08:58 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:08:58 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:08:58 - [TEST_STEP][PASSED] - i1 = x.indexOf("/"): null

10-01-2025T03:08:58 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:08:58 - [TEST_STEP][PASSED] - x = x.substring(0, i1): null

10-01-2025T03:08:58 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:08:58 - [TEST_STEP][FAILED] - return x: null

10-01-2025T03:08:58 - [TEST_STEP][FAILED] - if (verifyEqual(tabR, tabB) == false): null

10-01-2025T03:08:58 - [MESSAGE][FAILED] - Unable to verify equal between actual object '49682043' and expected object '49382050' (Root cause: com.kms.katalon.core.exception.StepFailedException: Actual object '49682043' and expected object '49382050' are not equal
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.doCall(VerifyEqualKeyword.groovy:58)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.call(VerifyEqualKeyword.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:75)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.verifyEqual(VerifyEqualKeyword.groovy:63)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.execute(VerifyEqualKeyword.groovy:44)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:74)
	at com.kms.katalon.core.keyword.BuiltinKeywords.verifyEqual(BuiltinKeywords.groovy:146)
	at jdk.internal.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at Выполнение бизнес-плана сверка дашбордов.CompareDZOData(Выполнение бизнес-плана сверка дашбордов:717)
	at Выполнение бизнес-плана сверка дашбордов.run(Выполнение бизнес-плана сверка дашбордов:648)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:448)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:439)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:418)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:410)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:285)
	at com.kms.katalon.core.common.CommonExecutor.accessTestCaseMainPhase(CommonExecutor.java:65)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:150)
	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:106)
	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:180)
	at TempTestSuite1736466949911.run(TempTestSuite1736466949911.groovy:35)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
)

10-01-2025T03:08:58 - [TEST_STEP][PASSED] - result = WriteToExcel(typeOfData, todaysDate, PercPlanR, PercPlanB, PercFactR, PercFactB, x, tabR, tabB, o1R, o1B, vidget): null

10-01-2025T03:08:58 - [TEST_STEP][PASSED] - iii = dZO.indexOf("/"): null

10-01-2025T03:08:58 - [TEST_STEP][PASSED] - println(iii): null

10-01-2025T03:08:58 - [TEST_STEP][PASSED] - dZO = dZO.substring(0, iii): null

10-01-2025T03:08:58 - [TEST_STEP][PASSED] - println(dZO): null

10-01-2025T03:08:58 - [TEST_STEP][PASSED] - println(PercPlanR): null

10-01-2025T03:08:58 - [TEST_STEP][PASSED] - println(PercPlanB): null

10-01-2025T03:08:58 - [TEST_STEP][PASSED] - println(PercFactR): null

10-01-2025T03:08:58 - [TEST_STEP][PASSED] - println(PercFactB): null

10-01-2025T03:08:58 - [TEST_STEP][PASSED] - println(tabR): null

10-01-2025T03:08:58 - [TEST_STEP][PASSED] - println(tabB): null

10-01-2025T03:08:58 - [TEST_STEP][PASSED] - println(o1R): null

10-01-2025T03:08:58 - [TEST_STEP][PASSED] - println(o1B): null

10-01-2025T03:08:58 - [TEST_STEP][PASSED] - PR = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:08:58 - [TEST_STEP][PASSED] - FR = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:08:58 - [TEST_STEP][PASSED] - PB = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:08:58 - [TEST_STEP][PASSED] - FB = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:08:58 - [TEST_STEP][PASSED] - TR = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:08:58 - [TEST_STEP][PASSED] - TB = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:08:58 - [TEST_STEP][PASSED] - sheetName = "Sheet1": null

10-01-2025T03:08:58 - [TEST_STEP][PASSED] - data = findTestData("PlanFact"): null

10-01-2025T03:08:58 - [TEST_STEP][PASSED] - n = data.getRowNumbers() + 1: null

10-01-2025T03:08:58 - [TEST_STEP][PASSED] - year = todaysDate.substring(todaysDate.length() - 4, todaysDate.length()): null

10-01-2025T03:08:58 - [TEST_STEP][PASSED] - y = year.toInteger(): null

10-01-2025T03:08:58 - [TEST_STEP][PASSED] - m = getText(findTestObject("Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Фильтр Дата")): Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Фильтр Дата' is: '1, 2, 3 кв., Октябрь, Ноябрь 2024 года'

10-01-2025T03:08:58 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Фильтр Дата' is: '1, 2, 3 кв., Октябрь, Ноябрь 2024 года'

10-01-2025T03:08:58 - [TEST_STEP][PASSED] - m = m.substring(0, m.indexOf("2024")): null

10-01-2025T03:08:58 - [TEST_STEP][PASSED] - m = m.trim(): null

10-01-2025T03:08:58 - [TEST_STEP][PASSED] - dashboardName = "Выполнение бизнес-плана": null

10-01-2025T03:08:58 - [TEST_STEP][PASSED] - workbook01 = getWorkbook(excelFilePath): null

10-01-2025T03:08:58 - [TEST_STEP][PASSED] - sheet01 = getExcelSheet(workbook01, sheetName): null

10-01-2025T03:08:58 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 0, dashboardName): null

10-01-2025T03:08:58 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 1, dZO): null

10-01-2025T03:08:58 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 2, typeOfData): null

10-01-2025T03:08:58 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 3, typeOfData): null

10-01-2025T03:08:58 - [TEST_STEP][PASSED] - if (typeOfData == "План"): null

10-01-2025T03:08:58 - [TEST_STEP][PASSED] - else if (typeOfData == "Факт"): null

10-01-2025T03:08:58 - [TEST_STEP][PASSED] - else if (vidget.contains("электроэнергии") == true): null

10-01-2025T03:08:58 - [TEST_STEP][PASSED] - if (tabR == null): null

10-01-2025T03:08:58 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:08:58 - [TEST_STEP][PASSED] - if (tabR == "нет данных"): null

10-01-2025T03:08:58 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:08:58 - [TEST_STEP][PASSED] - TR = tabR.toInteger(): null

10-01-2025T03:08:58 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 4, TR): null

10-01-2025T03:08:58 - [TEST_STEP][PASSED] - if (tabB == null): null

10-01-2025T03:08:58 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:08:58 - [TEST_STEP][PASSED] - if (tabB == "нет данных"): null

10-01-2025T03:08:58 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:08:58 - [TEST_STEP][PASSED] - TB = tabB.toInteger(): null

10-01-2025T03:08:58 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 5, TB): null

10-01-2025T03:08:58 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 6, m): null

10-01-2025T03:08:58 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 7, y): null

10-01-2025T03:08:58 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 8, todaysDate): null

10-01-2025T03:08:58 - [TEST_STEP][PASSED] - n = n + 1: null

10-01-2025T03:08:58 - [TEST_STEP][PASSED] - saveWorkbook(excelFilePath, workbook01): null

10-01-2025T03:08:58 - [TEST_STEP][PASSED] - typeOfData = "Факт Потери": null

10-01-2025T03:08:58 - [TEST_STEP][PASSED] - tabR = GetPFactR(x = a): null

10-01-2025T03:08:58 - [TEST_STEP][PASSED] - i1 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:08:58 - [TEST_STEP][PASSED] - ii = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:08:58 - [TEST_STEP][PASSED] - for ([ii = 1, ii < 6, (ii++)]): null

10-01-2025T03:08:58 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:08:58 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:08:58 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:08:58 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:08:58 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:08:58 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:08:58 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:08:58 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:08:58 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:08:58 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:08:58 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:08:58 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:08:58 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:08:58 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:08:58 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:08:58 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:08:58 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:08:58 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:08:58 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:08:58 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:08:58 - [TEST_STEP][PASSED] - i1 = x.indexOf("/"): null

10-01-2025T03:08:58 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:08:58 - [TEST_STEP][PASSED] - x = x.substring(0, i1): null

10-01-2025T03:08:58 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:08:58 - [TEST_STEP][PASSED] - return x: null

10-01-2025T03:08:58 - [TEST_STEP][PASSED] - tabB = GetPFactB(x = b): null

10-01-2025T03:08:58 - [TEST_STEP][PASSED] - i1 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:08:58 - [TEST_STEP][PASSED] - ii = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:08:58 - [TEST_STEP][PASSED] - for ([ii = 1, ii < 6, (ii++)]): null

10-01-2025T03:08:58 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:08:58 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:08:58 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:08:58 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:08:58 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:08:58 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:08:58 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:08:58 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:08:58 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:08:58 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:08:58 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:08:58 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:08:58 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:08:58 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:08:58 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:08:58 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:08:58 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:08:58 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:08:58 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:08:58 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:08:58 - [TEST_STEP][PASSED] - i1 = x.indexOf("/"): null

10-01-2025T03:08:58 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:08:58 - [TEST_STEP][PASSED] - x = x.substring(0, i1): null

10-01-2025T03:08:58 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:08:58 - [TEST_STEP][FAILED] - return x: null

10-01-2025T03:08:58 - [TEST_STEP][PASSED] - println(tabR + "/" + tabB): null

10-01-2025T03:08:58 - [TEST_STEP][FAILED] - if (verifyEqual(tabR, tabB) == false): null

10-01-2025T03:08:58 - [MESSAGE][FAILED] - Unable to verify equal between actual object '5406850' and expected object '5364745' (Root cause: com.kms.katalon.core.exception.StepFailedException: Actual object '5406850' and expected object '5364745' are not equal
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.doCall(VerifyEqualKeyword.groovy:58)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.call(VerifyEqualKeyword.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:75)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.verifyEqual(VerifyEqualKeyword.groovy:63)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.execute(VerifyEqualKeyword.groovy:44)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:74)
	at com.kms.katalon.core.keyword.BuiltinKeywords.verifyEqual(BuiltinKeywords.groovy:146)
	at jdk.internal.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at Выполнение бизнес-плана сверка дашбордов.CompareDZOData(Выполнение бизнес-плана сверка дашбордов:730)
	at Выполнение бизнес-плана сверка дашбордов.run(Выполнение бизнес-плана сверка дашбордов:648)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:448)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:439)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:418)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:410)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:285)
	at com.kms.katalon.core.common.CommonExecutor.accessTestCaseMainPhase(CommonExecutor.java:65)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:150)
	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:106)
	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:180)
	at TempTestSuite1736466949911.run(TempTestSuite1736466949911.groovy:35)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
)

10-01-2025T03:08:58 - [TEST_STEP][PASSED] - result = WriteToExcel(typeOfData, todaysDate, PercPlanR, PercPlanB, PercFactR, PercFactB, x, tabR, tabB, o1R, o1B, vidget): null

10-01-2025T03:08:58 - [TEST_STEP][PASSED] - iii = dZO.indexOf("/"): null

10-01-2025T03:08:58 - [TEST_STEP][PASSED] - println(iii): null

10-01-2025T03:08:58 - [TEST_STEP][PASSED] - dZO = dZO.substring(0, iii): null

10-01-2025T03:08:58 - [TEST_STEP][PASSED] - println(dZO): null

10-01-2025T03:08:58 - [TEST_STEP][PASSED] - println(PercPlanR): null

10-01-2025T03:08:58 - [TEST_STEP][PASSED] - println(PercPlanB): null

10-01-2025T03:08:58 - [TEST_STEP][PASSED] - println(PercFactR): null

10-01-2025T03:08:58 - [TEST_STEP][PASSED] - println(PercFactB): null

10-01-2025T03:08:58 - [TEST_STEP][PASSED] - println(tabR): null

10-01-2025T03:08:58 - [TEST_STEP][PASSED] - println(tabB): null

10-01-2025T03:08:58 - [TEST_STEP][PASSED] - println(o1R): null

10-01-2025T03:08:58 - [TEST_STEP][PASSED] - println(o1B): null

10-01-2025T03:08:58 - [TEST_STEP][PASSED] - PR = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:08:58 - [TEST_STEP][PASSED] - FR = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:08:58 - [TEST_STEP][PASSED] - PB = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:08:58 - [TEST_STEP][PASSED] - FB = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:08:58 - [TEST_STEP][PASSED] - TR = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:08:58 - [TEST_STEP][PASSED] - TB = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:08:58 - [TEST_STEP][PASSED] - sheetName = "Sheet1": null

10-01-2025T03:08:58 - [TEST_STEP][PASSED] - data = findTestData("PlanFact"): null

10-01-2025T03:08:58 - [TEST_STEP][PASSED] - n = data.getRowNumbers() + 1: null

10-01-2025T03:08:58 - [TEST_STEP][PASSED] - year = todaysDate.substring(todaysDate.length() - 4, todaysDate.length()): null

10-01-2025T03:08:58 - [TEST_STEP][PASSED] - y = year.toInteger(): null

10-01-2025T03:08:58 - [TEST_STEP][PASSED] - m = getText(findTestObject("Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Фильтр Дата")): Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Фильтр Дата' is: '1, 2, 3 кв., Октябрь, Ноябрь 2024 года'

10-01-2025T03:08:59 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Фильтр Дата' is: '1, 2, 3 кв., Октябрь, Ноябрь 2024 года'

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - m = m.substring(0, m.indexOf("2024")): null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - m = m.trim(): null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - dashboardName = "Выполнение бизнес-плана": null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - workbook01 = getWorkbook(excelFilePath): null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - sheet01 = getExcelSheet(workbook01, sheetName): null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 0, dashboardName): null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 1, dZO): null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 2, typeOfData): null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 3, typeOfData): null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - if (typeOfData == "План"): null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - else if (typeOfData == "Факт"): null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - else if (vidget.contains("электроэнергии") == true): null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - if (tabR == null): null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - if (tabR == "нет данных"): null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - TR = tabR.toInteger(): null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 4, TR): null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - if (tabB == null): null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - if (tabB == "нет данных"): null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - TB = tabB.toInteger(): null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 5, TB): null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 6, m): null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 7, y): null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 8, todaysDate): null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - n = n + 1: null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - saveWorkbook(excelFilePath, workbook01): null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - vidget = "Показатели баланса электроэнергии по ДЗО – План": null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - typeOfData = "План Отпуск в сеть": null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - tabR = GetOvSPlanR(x = a): null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - i1 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - ii = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - for ([ii = 1, ii < 7, (ii++)]): null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - i1 = x.indexOf("/"): null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - x = x.substring(0, i1): null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - return x: null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - tabB = GetOvSPlanB(x = b): null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - i1 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - ii = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - for ([ii = 1, ii < 7, (ii++)]): null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - i1 = x.indexOf("/"): null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - x = x.substring(0, i1): null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - return x: null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - println(tabR + "/" + tabB): null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - if (verifyEqual(PercFactR, PercFactB) == false): Actual object '9.80' and expected object '9.80' are equal

10-01-2025T03:08:59 - [MESSAGE][PASSED] - Actual object '9.80' and expected object '9.80' are equal

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - typeOfData = "План Отпуск из сети": null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - tabR = GetOiSPlanR(x = a): null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - i1 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - ii = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - for ([ii = 1, ii < 8, (ii++)]): null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - i1 = x.indexOf("/"): null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - x = x.substring(0, i1): null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - return x: null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - tabB = GetOiSPlanB(x = b): null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - i1 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - ii = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - for ([ii = 1, ii < 8, (ii++)]): null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - i1 = x.indexOf("/"): null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - x = x.substring(0, i1): null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - return x: null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - println(tabR + "/" + tabB): null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - if (verifyEqual(PercFactR, PercFactB) == false): Actual object '9.80' and expected object '9.80' are equal

10-01-2025T03:08:59 - [MESSAGE][PASSED] - Actual object '9.80' and expected object '9.80' are equal

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - typeOfData = "План Потери": null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - tabR = GetPPlanR(x = a): null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - i1 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - ii = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - for ([ii = 1, ii < 9, (ii++)]): null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - i1 = x.indexOf("/"): null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - x = x.substring(0, i1): null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - return x: null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - tabB = GetPPlanB(x = b): null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - i1 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - ii = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - for ([ii = 1, ii < 9, (ii++)]): null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - i1 = x.indexOf("/"): null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - x = x.substring(0, i1): null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - return x: null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - println(tabR + "/" + tabB): null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - if (verifyEqual(PercFactR, PercFactB) == false): Actual object '9.80' and expected object '9.80' are equal

10-01-2025T03:08:59 - [MESSAGE][PASSED] - Actual object '9.80' and expected object '9.80' are equal

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - ii2 = a.indexOf("ПАО"): null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - if (ii2 == -1): null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - vidget = "Отклонения фактического уровня потерь от бизнес-плана": null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - typeOfData = "Коэффициент": null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - o1R = Geto1R(x = a): null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - i1 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - ii = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - for ([ii = 1, ii < 10, (ii++)]): null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - i1 = x.indexOf("/"): null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - return x: null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - o1B = Geto1B(x = b): null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - i1 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - ii = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - for ([ii = 1, ii < 10, (ii++)]): null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - i1 = x.indexOf("/"): null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:08:59 - [TEST_STEP][FAILED] - return x: null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - println(o1R + "/" + o1B): null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - if (verifyEqual(PercFactR, PercFactB) == false): Actual object '9.80' and expected object '9.80' are equal

10-01-2025T03:08:59 - [MESSAGE][PASSED] - Actual object '9.80' and expected object '9.80' are equal

10-01-2025T03:08:59 - [TEST_STEP][FAILED] - if (verifyEqual(cIPR, cIPB) == false): null

10-01-2025T03:08:59 - [MESSAGE][FAILED] - Unable to verify equal between actual object 'Россети Центр и Приволжье (ГК)/7.17/6.90/50521486/47031337/3490149/48819116/45313619/3505497/-0.27' and expected object 'Россети Центр и Приволжье (ГК)/7.17/6.90/50348815/46874698/3474117/48819116/45313619/3505497/-0.27' (Root cause: com.kms.katalon.core.exception.StepFailedException: Actual object 'Россети Центр и Приволжье (ГК)/7.17/6.90/50521486/47031337/3490149/48819116/45313619/3505497/-0.27' and expected object 'Россети Центр и Приволжье (ГК)/7.17/6.90/50348815/46874698/3474117/48819116/45313619/3505497/-0.27' are not equal
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.doCall(VerifyEqualKeyword.groovy:58)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.call(VerifyEqualKeyword.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:75)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.verifyEqual(VerifyEqualKeyword.groovy:63)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.execute(VerifyEqualKeyword.groovy:44)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:74)
	at com.kms.katalon.core.keyword.BuiltinKeywords.verifyEqual(BuiltinKeywords.groovy:146)
	at jdk.internal.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at Выполнение бизнес-плана сверка дашбордов.run(Выполнение бизнес-плана сверка дашбордов:652)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:448)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:439)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:418)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:410)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:285)
	at com.kms.katalon.core.common.CommonExecutor.accessTestCaseMainPhase(CommonExecutor.java:65)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:150)
	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:106)
	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:180)
	at TempTestSuite1736466949911.run(TempTestSuite1736466949911.groovy:35)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
)

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - result = CompareDZOData(a = cIPR, b = cIPB, dZO, typeOfData, PercPlanR, PercPlanB, PercFactR, PercFactB, todaysDate, x, vidget, tabR, tabB, o1R, o1B): null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - ii2 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:08:59 - [TEST_STEP][FAILED] - if (verifyEqual(a, b) == false): null

10-01-2025T03:08:59 - [MESSAGE][FAILED] - Unable to verify equal between actual object 'Россети Центр и Приволжье (ГК)/7.17/6.90/50521486/47031337/3490149/48819116/45313619/3505497/-0.27' and expected object 'Россети Центр и Приволжье (ГК)/7.17/6.90/50348815/46874698/3474117/48819116/45313619/3505497/-0.27' (Root cause: com.kms.katalon.core.exception.StepFailedException: Actual object 'Россети Центр и Приволжье (ГК)/7.17/6.90/50521486/47031337/3490149/48819116/45313619/3505497/-0.27' and expected object 'Россети Центр и Приволжье (ГК)/7.17/6.90/50348815/46874698/3474117/48819116/45313619/3505497/-0.27' are not equal
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.doCall(VerifyEqualKeyword.groovy:58)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.call(VerifyEqualKeyword.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:75)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.verifyEqual(VerifyEqualKeyword.groovy:63)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.execute(VerifyEqualKeyword.groovy:44)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:74)
	at com.kms.katalon.core.keyword.BuiltinKeywords.verifyEqual(BuiltinKeywords.groovy:146)
	at jdk.internal.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at Выполнение бизнес-плана сверка дашбордов.CompareDZOData(Выполнение бизнес-плана сверка дашбордов:673)
	at Выполнение бизнес-плана сверка дашбордов.run(Выполнение бизнес-плана сверка дашбордов:653)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:448)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:439)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:418)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:410)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:285)
	at com.kms.katalon.core.common.CommonExecutor.accessTestCaseMainPhase(CommonExecutor.java:65)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:150)
	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:106)
	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:180)
	at TempTestSuite1736466949911.run(TempTestSuite1736466949911.groovy:35)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
)

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - vidget = "Уровень потерь электроэнергии": null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - typeOfData = "План": null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - PercPlanR = GetPercPlanR(x = a): null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - i1 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - i1 = x.indexOf("/"): null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - x = x.substring(0, i1): null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - return x: null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - PercPlanB = GetPercPlanB(x = b): null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - i1 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - i1 = x.indexOf("/"): null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - x = x.substring(0, i1): null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - return x: null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - if (verifyEqual(PercPlanR, PercPlanB) == false): Actual object '7.17' and expected object '7.17' are equal

10-01-2025T03:08:59 - [MESSAGE][PASSED] - Actual object '7.17' and expected object '7.17' are equal

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - typeOfData = "Факт": null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - PercFactR = GetPercFactR(x = a): null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - i1 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - ii = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - for ([ii = 1, ii < 3, (ii++)]): null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - i1 = x.indexOf("/"): null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - x = x.substring(0, i1): null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - return x: null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - PercFactB = GetPercFactB(x = b): null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - i1 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - ii = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - for ([ii = 1, ii < 3, (ii++)]): null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - i1 = x.indexOf("/"): null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - x = x.substring(0, i1): null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - return x: null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - if (verifyEqual(PercFactR, PercFactB) == false): Actual object '6.90' and expected object '6.90' are equal

10-01-2025T03:08:59 - [MESSAGE][PASSED] - Actual object '6.90' and expected object '6.90' are equal

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - vidget = "Показатели баланса электроэнергии по ДЗО – Факт": null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - typeOfData = "Факт Отпуск в сеть": null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - tabR = GetOvSFactR(x = a): null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - i1 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - ii = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - for ([ii = 1, ii < 4, (ii++)]): null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - i1 = x.indexOf("/"): null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - x = x.substring(0, i1): null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - return x: null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - tabB = GetOvSFactB(x = b): null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - i1 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - ii = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - for ([ii = 1, ii < 4, (ii++)]): null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - i1 = x.indexOf("/"): null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - x = x.substring(0, i1): null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:08:59 - [TEST_STEP][FAILED] - return x: null

10-01-2025T03:08:59 - [TEST_STEP][FAILED] - if (verifyEqual(tabR, tabB) == false): null

10-01-2025T03:08:59 - [MESSAGE][FAILED] - Unable to verify equal between actual object '50521486' and expected object '50348815' (Root cause: com.kms.katalon.core.exception.StepFailedException: Actual object '50521486' and expected object '50348815' are not equal
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.doCall(VerifyEqualKeyword.groovy:58)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.call(VerifyEqualKeyword.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:75)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.verifyEqual(VerifyEqualKeyword.groovy:63)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.execute(VerifyEqualKeyword.groovy:44)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:74)
	at com.kms.katalon.core.keyword.BuiltinKeywords.verifyEqual(BuiltinKeywords.groovy:146)
	at jdk.internal.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at Выполнение бизнес-плана сверка дашбордов.CompareDZOData(Выполнение бизнес-плана сверка дашбордов:706)
	at Выполнение бизнес-плана сверка дашбордов.run(Выполнение бизнес-плана сверка дашбордов:653)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:448)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:439)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:418)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:410)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:285)
	at com.kms.katalon.core.common.CommonExecutor.accessTestCaseMainPhase(CommonExecutor.java:65)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:150)
	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:106)
	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:180)
	at TempTestSuite1736466949911.run(TempTestSuite1736466949911.groovy:35)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
)

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - result = WriteToExcel(typeOfData, todaysDate, PercPlanR, PercPlanB, PercFactR, PercFactB, x, tabR, tabB, o1R, o1B, vidget): null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - iii = dZO.indexOf("/"): null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - println(iii): null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - dZO = dZO.substring(0, iii): null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - println(dZO): null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - println(PercPlanR): null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - println(PercPlanB): null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - println(PercFactR): null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - println(PercFactB): null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - println(tabR): null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - println(tabB): null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - println(o1R): null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - println(o1B): null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - PR = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - FR = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - PB = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - FB = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - TR = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - TB = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - sheetName = "Sheet1": null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - data = findTestData("PlanFact"): null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - n = data.getRowNumbers() + 1: null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - year = todaysDate.substring(todaysDate.length() - 4, todaysDate.length()): null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - y = year.toInteger(): null

10-01-2025T03:08:59 - [TEST_STEP][PASSED] - m = getText(findTestObject("Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Фильтр Дата")): Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Фильтр Дата' is: '1, 2, 3 кв., Октябрь, Ноябрь 2024 года'

10-01-2025T03:09:00 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Фильтр Дата' is: '1, 2, 3 кв., Октябрь, Ноябрь 2024 года'

10-01-2025T03:09:00 - [TEST_STEP][PASSED] - m = m.substring(0, m.indexOf("2024")): null

10-01-2025T03:09:00 - [TEST_STEP][PASSED] - m = m.trim(): null

10-01-2025T03:09:00 - [TEST_STEP][PASSED] - dashboardName = "Выполнение бизнес-плана": null

10-01-2025T03:09:00 - [TEST_STEP][PASSED] - workbook01 = getWorkbook(excelFilePath): null

10-01-2025T03:09:00 - [TEST_STEP][PASSED] - sheet01 = getExcelSheet(workbook01, sheetName): null

10-01-2025T03:09:00 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 0, dashboardName): null

10-01-2025T03:09:00 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 1, dZO): null

10-01-2025T03:09:00 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 2, typeOfData): null

10-01-2025T03:09:00 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 3, typeOfData): null

10-01-2025T03:09:00 - [TEST_STEP][PASSED] - if (typeOfData == "План"): null

10-01-2025T03:09:00 - [TEST_STEP][PASSED] - else if (typeOfData == "Факт"): null

10-01-2025T03:09:00 - [TEST_STEP][PASSED] - else if (vidget.contains("электроэнергии") == true): null

10-01-2025T03:09:00 - [TEST_STEP][PASSED] - if (tabR == null): null

10-01-2025T03:09:00 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:09:00 - [TEST_STEP][PASSED] - if (tabR == "нет данных"): null

10-01-2025T03:09:00 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:09:00 - [TEST_STEP][PASSED] - TR = tabR.toInteger(): null

10-01-2025T03:09:00 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 4, TR): null

10-01-2025T03:09:00 - [TEST_STEP][PASSED] - if (tabB == null): null

10-01-2025T03:09:00 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:09:00 - [TEST_STEP][PASSED] - if (tabB == "нет данных"): null

10-01-2025T03:09:00 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:09:00 - [TEST_STEP][PASSED] - TB = tabB.toInteger(): null

10-01-2025T03:09:00 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 5, TB): null

10-01-2025T03:09:00 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 6, m): null

10-01-2025T03:09:00 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 7, y): null

10-01-2025T03:09:00 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 8, todaysDate): null

10-01-2025T03:09:00 - [TEST_STEP][PASSED] - n = n + 1: null

10-01-2025T03:09:00 - [TEST_STEP][PASSED] - saveWorkbook(excelFilePath, workbook01): null

10-01-2025T03:09:00 - [TEST_STEP][PASSED] - typeOfData = "Факт Отпуск из сети": null

10-01-2025T03:09:00 - [TEST_STEP][PASSED] - tabR = GetOiSFactR(x = a): null

10-01-2025T03:09:00 - [TEST_STEP][PASSED] - i1 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:09:00 - [TEST_STEP][PASSED] - ii = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:09:00 - [TEST_STEP][PASSED] - for ([ii = 1, ii < 5, (ii++)]): null

10-01-2025T03:09:00 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:09:00 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:09:00 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:09:00 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:09:00 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:09:00 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:09:00 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:09:00 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:09:00 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:09:00 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:09:00 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:09:00 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:09:00 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:09:00 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:09:00 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:09:00 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:09:00 - [TEST_STEP][PASSED] - i1 = x.indexOf("/"): null

10-01-2025T03:09:00 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:09:00 - [TEST_STEP][PASSED] - x = x.substring(0, i1): null

10-01-2025T03:09:00 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:09:00 - [TEST_STEP][PASSED] - return x: null

10-01-2025T03:09:00 - [TEST_STEP][PASSED] - tabB = GetOiSFactB(x = b): null

10-01-2025T03:09:00 - [TEST_STEP][PASSED] - i1 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:09:00 - [TEST_STEP][PASSED] - ii = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:09:00 - [TEST_STEP][PASSED] - for ([ii = 1, ii < 5, (ii++)]): null

10-01-2025T03:09:00 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:09:00 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:09:00 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:09:00 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:09:00 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:09:00 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:09:00 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:09:00 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:09:00 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:09:00 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:09:00 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:09:00 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:09:00 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:09:00 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:09:00 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:09:00 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:09:00 - [TEST_STEP][PASSED] - i1 = x.indexOf("/"): null

10-01-2025T03:09:00 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:09:00 - [TEST_STEP][PASSED] - x = x.substring(0, i1): null

10-01-2025T03:09:00 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:09:00 - [TEST_STEP][FAILED] - return x: null

10-01-2025T03:09:00 - [TEST_STEP][FAILED] - if (verifyEqual(tabR, tabB) == false): null

10-01-2025T03:09:00 - [MESSAGE][FAILED] - Unable to verify equal between actual object '47031337' and expected object '46874698' (Root cause: com.kms.katalon.core.exception.StepFailedException: Actual object '47031337' and expected object '46874698' are not equal
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.doCall(VerifyEqualKeyword.groovy:58)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.call(VerifyEqualKeyword.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:75)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.verifyEqual(VerifyEqualKeyword.groovy:63)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.execute(VerifyEqualKeyword.groovy:44)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:74)
	at com.kms.katalon.core.keyword.BuiltinKeywords.verifyEqual(BuiltinKeywords.groovy:146)
	at jdk.internal.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at Выполнение бизнес-плана сверка дашбордов.CompareDZOData(Выполнение бизнес-плана сверка дашбордов:717)
	at Выполнение бизнес-плана сверка дашбордов.run(Выполнение бизнес-плана сверка дашбордов:653)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:448)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:439)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:418)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:410)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:285)
	at com.kms.katalon.core.common.CommonExecutor.accessTestCaseMainPhase(CommonExecutor.java:65)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:150)
	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:106)
	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:180)
	at TempTestSuite1736466949911.run(TempTestSuite1736466949911.groovy:35)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
)

10-01-2025T03:09:00 - [TEST_STEP][PASSED] - result = WriteToExcel(typeOfData, todaysDate, PercPlanR, PercPlanB, PercFactR, PercFactB, x, tabR, tabB, o1R, o1B, vidget): null

10-01-2025T03:09:00 - [TEST_STEP][PASSED] - iii = dZO.indexOf("/"): null

10-01-2025T03:09:00 - [TEST_STEP][PASSED] - println(iii): null

10-01-2025T03:09:00 - [TEST_STEP][PASSED] - dZO = dZO.substring(0, iii): null

10-01-2025T03:09:00 - [TEST_STEP][PASSED] - println(dZO): null

10-01-2025T03:09:00 - [TEST_STEP][PASSED] - println(PercPlanR): null

10-01-2025T03:09:00 - [TEST_STEP][PASSED] - println(PercPlanB): null

10-01-2025T03:09:00 - [TEST_STEP][PASSED] - println(PercFactR): null

10-01-2025T03:09:00 - [TEST_STEP][PASSED] - println(PercFactB): null

10-01-2025T03:09:00 - [TEST_STEP][PASSED] - println(tabR): null

10-01-2025T03:09:00 - [TEST_STEP][PASSED] - println(tabB): null

10-01-2025T03:09:00 - [TEST_STEP][PASSED] - println(o1R): null

10-01-2025T03:09:00 - [TEST_STEP][PASSED] - println(o1B): null

10-01-2025T03:09:00 - [TEST_STEP][PASSED] - PR = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:09:00 - [TEST_STEP][PASSED] - FR = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:09:00 - [TEST_STEP][PASSED] - PB = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:09:00 - [TEST_STEP][PASSED] - FB = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:09:00 - [TEST_STEP][PASSED] - TR = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:09:00 - [TEST_STEP][PASSED] - TB = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:09:00 - [TEST_STEP][PASSED] - sheetName = "Sheet1": null

10-01-2025T03:09:00 - [TEST_STEP][PASSED] - data = findTestData("PlanFact"): null

10-01-2025T03:09:00 - [TEST_STEP][PASSED] - n = data.getRowNumbers() + 1: null

10-01-2025T03:09:00 - [TEST_STEP][PASSED] - year = todaysDate.substring(todaysDate.length() - 4, todaysDate.length()): null

10-01-2025T03:09:00 - [TEST_STEP][PASSED] - y = year.toInteger(): null

10-01-2025T03:09:00 - [TEST_STEP][PASSED] - m = getText(findTestObject("Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Фильтр Дата")): Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Фильтр Дата' is: '1, 2, 3 кв., Октябрь, Ноябрь 2024 года'

10-01-2025T03:09:01 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Фильтр Дата' is: '1, 2, 3 кв., Октябрь, Ноябрь 2024 года'

10-01-2025T03:09:01 - [TEST_STEP][PASSED] - m = m.substring(0, m.indexOf("2024")): null

10-01-2025T03:09:01 - [TEST_STEP][PASSED] - m = m.trim(): null

10-01-2025T03:09:01 - [TEST_STEP][PASSED] - dashboardName = "Выполнение бизнес-плана": null

10-01-2025T03:09:01 - [TEST_STEP][PASSED] - workbook01 = getWorkbook(excelFilePath): null

10-01-2025T03:09:01 - [TEST_STEP][PASSED] - sheet01 = getExcelSheet(workbook01, sheetName): null

10-01-2025T03:09:01 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 0, dashboardName): null

10-01-2025T03:09:01 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 1, dZO): null

10-01-2025T03:09:01 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 2, typeOfData): null

10-01-2025T03:09:01 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 3, typeOfData): null

10-01-2025T03:09:01 - [TEST_STEP][PASSED] - if (typeOfData == "План"): null

10-01-2025T03:09:01 - [TEST_STEP][PASSED] - else if (typeOfData == "Факт"): null

10-01-2025T03:09:01 - [TEST_STEP][PASSED] - else if (vidget.contains("электроэнергии") == true): null

10-01-2025T03:09:01 - [TEST_STEP][PASSED] - if (tabR == null): null

10-01-2025T03:09:01 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:09:01 - [TEST_STEP][PASSED] - if (tabR == "нет данных"): null

10-01-2025T03:09:01 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:09:01 - [TEST_STEP][PASSED] - TR = tabR.toInteger(): null

10-01-2025T03:09:01 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 4, TR): null

10-01-2025T03:09:01 - [TEST_STEP][PASSED] - if (tabB == null): null

10-01-2025T03:09:01 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:09:01 - [TEST_STEP][PASSED] - if (tabB == "нет данных"): null

10-01-2025T03:09:01 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:09:01 - [TEST_STEP][PASSED] - TB = tabB.toInteger(): null

10-01-2025T03:09:01 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 5, TB): null

10-01-2025T03:09:01 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 6, m): null

10-01-2025T03:09:01 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 7, y): null

10-01-2025T03:09:01 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 8, todaysDate): null

10-01-2025T03:09:01 - [TEST_STEP][PASSED] - n = n + 1: null

10-01-2025T03:09:01 - [TEST_STEP][PASSED] - saveWorkbook(excelFilePath, workbook01): null

10-01-2025T03:09:01 - [TEST_STEP][PASSED] - typeOfData = "Факт Потери": null

10-01-2025T03:09:01 - [TEST_STEP][PASSED] - tabR = GetPFactR(x = a): null

10-01-2025T03:09:01 - [TEST_STEP][PASSED] - i1 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:09:01 - [TEST_STEP][PASSED] - ii = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:09:01 - [TEST_STEP][PASSED] - for ([ii = 1, ii < 6, (ii++)]): null

10-01-2025T03:09:01 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:09:01 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:09:01 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:09:01 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:09:01 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:09:01 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:09:01 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:09:01 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:09:01 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:09:01 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:09:01 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:09:01 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:09:01 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:09:01 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:09:01 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:09:01 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:09:01 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:09:01 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:09:01 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:09:01 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:09:01 - [TEST_STEP][PASSED] - i1 = x.indexOf("/"): null

10-01-2025T03:09:01 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:09:01 - [TEST_STEP][PASSED] - x = x.substring(0, i1): null

10-01-2025T03:09:01 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:09:01 - [TEST_STEP][PASSED] - return x: null

10-01-2025T03:09:01 - [TEST_STEP][PASSED] - tabB = GetPFactB(x = b): null

10-01-2025T03:09:01 - [TEST_STEP][PASSED] - i1 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:09:01 - [TEST_STEP][PASSED] - ii = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:09:01 - [TEST_STEP][PASSED] - for ([ii = 1, ii < 6, (ii++)]): null

10-01-2025T03:09:01 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:09:01 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:09:01 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:09:01 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:09:01 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:09:01 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:09:01 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:09:01 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:09:01 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:09:01 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:09:01 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:09:01 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:09:01 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:09:01 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:09:01 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:09:01 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:09:01 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:09:01 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:09:01 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:09:01 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:09:01 - [TEST_STEP][PASSED] - i1 = x.indexOf("/"): null

10-01-2025T03:09:01 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:09:01 - [TEST_STEP][PASSED] - x = x.substring(0, i1): null

10-01-2025T03:09:01 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:09:01 - [TEST_STEP][FAILED] - return x: null

10-01-2025T03:09:01 - [TEST_STEP][PASSED] - println(tabR + "/" + tabB): null

10-01-2025T03:09:01 - [TEST_STEP][FAILED] - if (verifyEqual(tabR, tabB) == false): null

10-01-2025T03:09:01 - [MESSAGE][FAILED] - Unable to verify equal between actual object '3490149' and expected object '3474117' (Root cause: com.kms.katalon.core.exception.StepFailedException: Actual object '3490149' and expected object '3474117' are not equal
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.doCall(VerifyEqualKeyword.groovy:58)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.call(VerifyEqualKeyword.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:75)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.verifyEqual(VerifyEqualKeyword.groovy:63)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.execute(VerifyEqualKeyword.groovy:44)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:74)
	at com.kms.katalon.core.keyword.BuiltinKeywords.verifyEqual(BuiltinKeywords.groovy:146)
	at jdk.internal.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at Выполнение бизнес-плана сверка дашбордов.CompareDZOData(Выполнение бизнес-плана сверка дашбордов:730)
	at Выполнение бизнес-плана сверка дашбордов.run(Выполнение бизнес-плана сверка дашбордов:653)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:448)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:439)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:418)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:410)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:285)
	at com.kms.katalon.core.common.CommonExecutor.accessTestCaseMainPhase(CommonExecutor.java:65)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:150)
	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:106)
	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:180)
	at TempTestSuite1736466949911.run(TempTestSuite1736466949911.groovy:35)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
)

10-01-2025T03:09:01 - [TEST_STEP][PASSED] - result = WriteToExcel(typeOfData, todaysDate, PercPlanR, PercPlanB, PercFactR, PercFactB, x, tabR, tabB, o1R, o1B, vidget): null

10-01-2025T03:09:01 - [TEST_STEP][PASSED] - iii = dZO.indexOf("/"): null

10-01-2025T03:09:01 - [TEST_STEP][PASSED] - println(iii): null

10-01-2025T03:09:01 - [TEST_STEP][PASSED] - dZO = dZO.substring(0, iii): null

10-01-2025T03:09:01 - [TEST_STEP][PASSED] - println(dZO): null

10-01-2025T03:09:01 - [TEST_STEP][PASSED] - println(PercPlanR): null

10-01-2025T03:09:01 - [TEST_STEP][PASSED] - println(PercPlanB): null

10-01-2025T03:09:01 - [TEST_STEP][PASSED] - println(PercFactR): null

10-01-2025T03:09:01 - [TEST_STEP][PASSED] - println(PercFactB): null

10-01-2025T03:09:01 - [TEST_STEP][PASSED] - println(tabR): null

10-01-2025T03:09:01 - [TEST_STEP][PASSED] - println(tabB): null

10-01-2025T03:09:01 - [TEST_STEP][PASSED] - println(o1R): null

10-01-2025T03:09:01 - [TEST_STEP][PASSED] - println(o1B): null

10-01-2025T03:09:01 - [TEST_STEP][PASSED] - PR = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:09:01 - [TEST_STEP][PASSED] - FR = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:09:01 - [TEST_STEP][PASSED] - PB = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:09:01 - [TEST_STEP][PASSED] - FB = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:09:01 - [TEST_STEP][PASSED] - TR = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:09:01 - [TEST_STEP][PASSED] - TB = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:09:01 - [TEST_STEP][PASSED] - sheetName = "Sheet1": null

10-01-2025T03:09:01 - [TEST_STEP][PASSED] - data = findTestData("PlanFact"): null

10-01-2025T03:09:01 - [TEST_STEP][PASSED] - n = data.getRowNumbers() + 1: null

10-01-2025T03:09:01 - [TEST_STEP][PASSED] - year = todaysDate.substring(todaysDate.length() - 4, todaysDate.length()): null

10-01-2025T03:09:01 - [TEST_STEP][PASSED] - y = year.toInteger(): null

10-01-2025T03:09:01 - [TEST_STEP][PASSED] - m = getText(findTestObject("Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Фильтр Дата")): Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Фильтр Дата' is: '1, 2, 3 кв., Октябрь, Ноябрь 2024 года'

10-01-2025T03:09:01 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Фильтр Дата' is: '1, 2, 3 кв., Октябрь, Ноябрь 2024 года'

10-01-2025T03:09:01 - [TEST_STEP][PASSED] - m = m.substring(0, m.indexOf("2024")): null

10-01-2025T03:09:01 - [TEST_STEP][PASSED] - m = m.trim(): null

10-01-2025T03:09:01 - [TEST_STEP][PASSED] - dashboardName = "Выполнение бизнес-плана": null

10-01-2025T03:09:01 - [TEST_STEP][PASSED] - workbook01 = getWorkbook(excelFilePath): null

10-01-2025T03:09:01 - [TEST_STEP][PASSED] - sheet01 = getExcelSheet(workbook01, sheetName): null

10-01-2025T03:09:01 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 0, dashboardName): null

10-01-2025T03:09:01 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 1, dZO): null

10-01-2025T03:09:01 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 2, typeOfData): null

10-01-2025T03:09:01 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 3, typeOfData): null

10-01-2025T03:09:01 - [TEST_STEP][PASSED] - if (typeOfData == "План"): null

10-01-2025T03:09:01 - [TEST_STEP][PASSED] - else if (typeOfData == "Факт"): null

10-01-2025T03:09:01 - [TEST_STEP][PASSED] - else if (vidget.contains("электроэнергии") == true): null

10-01-2025T03:09:01 - [TEST_STEP][PASSED] - if (tabR == null): null

10-01-2025T03:09:01 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:09:01 - [TEST_STEP][PASSED] - if (tabR == "нет данных"): null

10-01-2025T03:09:01 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:09:01 - [TEST_STEP][PASSED] - TR = tabR.toInteger(): null

10-01-2025T03:09:01 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 4, TR): null

10-01-2025T03:09:01 - [TEST_STEP][PASSED] - if (tabB == null): null

10-01-2025T03:09:01 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:09:01 - [TEST_STEP][PASSED] - if (tabB == "нет данных"): null

10-01-2025T03:09:01 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:09:01 - [TEST_STEP][PASSED] - TB = tabB.toInteger(): null

10-01-2025T03:09:01 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 5, TB): null

10-01-2025T03:09:01 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 6, m): null

10-01-2025T03:09:01 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 7, y): null

10-01-2025T03:09:01 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 8, todaysDate): null

10-01-2025T03:09:01 - [TEST_STEP][PASSED] - n = n + 1: null

10-01-2025T03:09:01 - [TEST_STEP][PASSED] - saveWorkbook(excelFilePath, workbook01): null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - vidget = "Показатели баланса электроэнергии по ДЗО – План": null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - typeOfData = "План Отпуск в сеть": null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - tabR = GetOvSPlanR(x = a): null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - i1 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - ii = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - for ([ii = 1, ii < 7, (ii++)]): null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - i1 = x.indexOf("/"): null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - x = x.substring(0, i1): null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - return x: null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - tabB = GetOvSPlanB(x = b): null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - i1 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - ii = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - for ([ii = 1, ii < 7, (ii++)]): null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - i1 = x.indexOf("/"): null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - x = x.substring(0, i1): null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - return x: null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - println(tabR + "/" + tabB): null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - if (verifyEqual(PercFactR, PercFactB) == false): Actual object '6.90' and expected object '6.90' are equal

10-01-2025T03:09:02 - [MESSAGE][PASSED] - Actual object '6.90' and expected object '6.90' are equal

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - typeOfData = "План Отпуск из сети": null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - tabR = GetOiSPlanR(x = a): null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - i1 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - ii = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - for ([ii = 1, ii < 8, (ii++)]): null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - i1 = x.indexOf("/"): null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - x = x.substring(0, i1): null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - return x: null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - tabB = GetOiSPlanB(x = b): null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - i1 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - ii = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - for ([ii = 1, ii < 8, (ii++)]): null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - i1 = x.indexOf("/"): null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - x = x.substring(0, i1): null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - return x: null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - println(tabR + "/" + tabB): null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - if (verifyEqual(PercFactR, PercFactB) == false): Actual object '6.90' and expected object '6.90' are equal

10-01-2025T03:09:02 - [MESSAGE][PASSED] - Actual object '6.90' and expected object '6.90' are equal

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - typeOfData = "План Потери": null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - tabR = GetPPlanR(x = a): null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - i1 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - ii = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - for ([ii = 1, ii < 9, (ii++)]): null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - i1 = x.indexOf("/"): null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - x = x.substring(0, i1): null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - return x: null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - tabB = GetPPlanB(x = b): null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - i1 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - ii = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - for ([ii = 1, ii < 9, (ii++)]): null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - i1 = x.indexOf("/"): null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - x = x.substring(0, i1): null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - return x: null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - println(tabR + "/" + tabB): null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - if (verifyEqual(PercFactR, PercFactB) == false): Actual object '6.90' and expected object '6.90' are equal

10-01-2025T03:09:02 - [MESSAGE][PASSED] - Actual object '6.90' and expected object '6.90' are equal

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - ii2 = a.indexOf("ПАО"): null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - if (ii2 == -1): null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - vidget = "Отклонения фактического уровня потерь от бизнес-плана": null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - typeOfData = "Коэффициент": null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - o1R = Geto1R(x = a): null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - i1 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - ii = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - for ([ii = 1, ii < 10, (ii++)]): null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - i1 = x.indexOf("/"): null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - return x: null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - o1B = Geto1B(x = b): null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - i1 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - ii = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - for ([ii = 1, ii < 10, (ii++)]): null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - i1 = x.indexOf("/"): null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:09:02 - [TEST_STEP][FAILED] - return x: null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - println(o1R + "/" + o1B): null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - if (verifyEqual(PercFactR, PercFactB) == false): Actual object '6.90' and expected object '6.90' are equal

10-01-2025T03:09:02 - [MESSAGE][PASSED] - Actual object '6.90' and expected object '6.90' are equal

10-01-2025T03:09:02 - [TEST_STEP][FAILED] - if (verifyEqual(ugR, ugB) == false): null

10-01-2025T03:09:02 - [MESSAGE][FAILED] - Unable to verify equal between actual object 'Россети Юг (ГК)/нет данных/нет данных/нет данных/нет данных/нет данных/нет данных/нет данных/нет данных/нет данных' and expected object 'Россети Юг (ГК)/9.21/8.73/27351234/24964441/2386793/27838881/25273744/2565137/-0.49' (Root cause: com.kms.katalon.core.exception.StepFailedException: Actual object 'Россети Юг (ГК)/нет данных/нет данных/нет данных/нет данных/нет данных/нет данных/нет данных/нет данных/нет данных' and expected object 'Россети Юг (ГК)/9.21/8.73/27351234/24964441/2386793/27838881/25273744/2565137/-0.49' are not equal
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.doCall(VerifyEqualKeyword.groovy:58)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.call(VerifyEqualKeyword.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:75)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.verifyEqual(VerifyEqualKeyword.groovy:63)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.execute(VerifyEqualKeyword.groovy:44)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:74)
	at com.kms.katalon.core.keyword.BuiltinKeywords.verifyEqual(BuiltinKeywords.groovy:146)
	at jdk.internal.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at Выполнение бизнес-плана сверка дашбордов.run(Выполнение бизнес-плана сверка дашбордов:657)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:448)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:439)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:418)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:410)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:285)
	at com.kms.katalon.core.common.CommonExecutor.accessTestCaseMainPhase(CommonExecutor.java:65)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:150)
	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:106)
	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:180)
	at TempTestSuite1736466949911.run(TempTestSuite1736466949911.groovy:35)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
)

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - result = CompareDZOData(a = ugR, b = ugB, dZO, typeOfData, PercPlanR, PercPlanB, PercFactR, PercFactB, todaysDate, x, vidget, tabR, tabB, o1R, o1B): null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - ii2 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:09:02 - [TEST_STEP][FAILED] - if (verifyEqual(a, b) == false): null

10-01-2025T03:09:02 - [MESSAGE][FAILED] - Unable to verify equal between actual object 'Россети Юг (ГК)/нет данных/нет данных/нет данных/нет данных/нет данных/нет данных/нет данных/нет данных/нет данных' and expected object 'Россети Юг (ГК)/9.21/8.73/27351234/24964441/2386793/27838881/25273744/2565137/-0.49' (Root cause: com.kms.katalon.core.exception.StepFailedException: Actual object 'Россети Юг (ГК)/нет данных/нет данных/нет данных/нет данных/нет данных/нет данных/нет данных/нет данных/нет данных' and expected object 'Россети Юг (ГК)/9.21/8.73/27351234/24964441/2386793/27838881/25273744/2565137/-0.49' are not equal
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.doCall(VerifyEqualKeyword.groovy:58)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.call(VerifyEqualKeyword.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:75)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.verifyEqual(VerifyEqualKeyword.groovy:63)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.execute(VerifyEqualKeyword.groovy:44)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:74)
	at com.kms.katalon.core.keyword.BuiltinKeywords.verifyEqual(BuiltinKeywords.groovy:146)
	at jdk.internal.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at Выполнение бизнес-плана сверка дашбордов.CompareDZOData(Выполнение бизнес-плана сверка дашбордов:673)
	at Выполнение бизнес-плана сверка дашбордов.run(Выполнение бизнес-плана сверка дашбордов:658)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:448)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:439)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:418)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:410)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:285)
	at com.kms.katalon.core.common.CommonExecutor.accessTestCaseMainPhase(CommonExecutor.java:65)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:150)
	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:106)
	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:180)
	at TempTestSuite1736466949911.run(TempTestSuite1736466949911.groovy:35)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
)

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - vidget = "Уровень потерь электроэнергии": null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - typeOfData = "План": null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - PercPlanR = GetPercPlanR(x = a): null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - i1 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - i1 = x.indexOf("/"): null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - x = x.substring(0, i1): null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - return x: null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - PercPlanB = GetPercPlanB(x = b): null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - i1 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - i1 = x.indexOf("/"): null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - x = x.substring(0, i1): null

10-01-2025T03:09:02 - [TEST_STEP][FAILED] - return x: null

10-01-2025T03:09:02 - [TEST_STEP][FAILED] - if (verifyEqual(PercPlanR, PercPlanB) == false): null

10-01-2025T03:09:02 - [MESSAGE][FAILED] - Unable to verify equal between actual object 'нет данных' and expected object '9.21' (Root cause: com.kms.katalon.core.exception.StepFailedException: Actual object 'нет данных' and expected object '9.21' are not equal
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.doCall(VerifyEqualKeyword.groovy:58)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.call(VerifyEqualKeyword.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:75)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.verifyEqual(VerifyEqualKeyword.groovy:63)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.execute(VerifyEqualKeyword.groovy:44)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:74)
	at com.kms.katalon.core.keyword.BuiltinKeywords.verifyEqual(BuiltinKeywords.groovy:146)
	at jdk.internal.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at Выполнение бизнес-плана сверка дашбордов.CompareDZOData(Выполнение бизнес-плана сверка дашбордов:682)
	at Выполнение бизнес-плана сверка дашбордов.run(Выполнение бизнес-плана сверка дашбордов:658)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:448)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:439)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:418)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:410)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:285)
	at com.kms.katalon.core.common.CommonExecutor.accessTestCaseMainPhase(CommonExecutor.java:65)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:150)
	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:106)
	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:180)
	at TempTestSuite1736466949911.run(TempTestSuite1736466949911.groovy:35)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
)

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - result = WriteToExcel(typeOfData, todaysDate, PercPlanR, PercPlanB, PercFactR, PercFactB, x, tabR, tabB, o1R, o1B, vidget): null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - iii = dZO.indexOf("/"): null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - println(iii): null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - dZO = dZO.substring(0, iii): null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - println(dZO): null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - println(PercPlanR): null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - println(PercPlanB): null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - println(PercFactR): null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - println(PercFactB): null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - println(tabR): null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - println(tabB): null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - println(o1R): null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - println(o1B): null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - PR = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - FR = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - PB = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - FB = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - TR = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - TB = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - sheetName = "Sheet1": null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - data = findTestData("PlanFact"): null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - n = data.getRowNumbers() + 1: null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - year = todaysDate.substring(todaysDate.length() - 4, todaysDate.length()): null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - y = year.toInteger(): null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - m = getText(findTestObject("Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Фильтр Дата")): Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Фильтр Дата' is: '1, 2, 3 кв., Октябрь, Ноябрь 2024 года'

10-01-2025T03:09:02 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Фильтр Дата' is: '1, 2, 3 кв., Октябрь, Ноябрь 2024 года'

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - m = m.substring(0, m.indexOf("2024")): null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - m = m.trim(): null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - dashboardName = "Выполнение бизнес-плана": null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - workbook01 = getWorkbook(excelFilePath): null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - sheet01 = getExcelSheet(workbook01, sheetName): null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 0, dashboardName): null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 1, dZO): null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 2, typeOfData): null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 3, typeOfData): null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - if (typeOfData == "План"): null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - if (PercPlanR == null): null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - if (PercPlanR == "нет данных"): null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 4, "нет данных"): null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - if (PercPlanB == null): null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - if (PercPlanB == "нет данных"): null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - PB = PercPlanB.toDouble(): null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 5, PB): null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 6, m): null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 7, y): null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 8, todaysDate): null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - n = n + 1: null

10-01-2025T03:09:02 - [TEST_STEP][PASSED] - saveWorkbook(excelFilePath, workbook01): null

10-01-2025T03:09:03 - [TEST_STEP][PASSED] - typeOfData = "Факт": null

10-01-2025T03:09:03 - [TEST_STEP][PASSED] - PercFactR = GetPercFactR(x = a): null

10-01-2025T03:09:03 - [TEST_STEP][PASSED] - i1 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:09:03 - [TEST_STEP][PASSED] - ii = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:09:03 - [TEST_STEP][PASSED] - for ([ii = 1, ii < 3, (ii++)]): null

10-01-2025T03:09:03 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:09:03 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:09:03 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:09:03 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:09:03 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:09:03 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:09:03 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:09:03 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:09:03 - [TEST_STEP][PASSED] - i1 = x.indexOf("/"): null

10-01-2025T03:09:03 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:09:03 - [TEST_STEP][PASSED] - x = x.substring(0, i1): null

10-01-2025T03:09:03 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:09:03 - [TEST_STEP][PASSED] - return x: null

10-01-2025T03:09:03 - [TEST_STEP][PASSED] - PercFactB = GetPercFactB(x = b): null

10-01-2025T03:09:03 - [TEST_STEP][PASSED] - i1 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:09:03 - [TEST_STEP][PASSED] - ii = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:09:03 - [TEST_STEP][PASSED] - for ([ii = 1, ii < 3, (ii++)]): null

10-01-2025T03:09:03 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:09:03 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:09:03 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:09:03 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:09:03 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:09:03 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:09:03 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:09:03 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:09:03 - [TEST_STEP][PASSED] - i1 = x.indexOf("/"): null

10-01-2025T03:09:03 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:09:03 - [TEST_STEP][PASSED] - x = x.substring(0, i1): null

10-01-2025T03:09:03 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:09:03 - [TEST_STEP][FAILED] - return x: null

10-01-2025T03:09:03 - [TEST_STEP][FAILED] - if (verifyEqual(PercFactR, PercFactB) == false): null

10-01-2025T03:09:03 - [MESSAGE][FAILED] - Unable to verify equal between actual object 'нет данных' and expected object '8.73' (Root cause: com.kms.katalon.core.exception.StepFailedException: Actual object 'нет данных' and expected object '8.73' are not equal
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.doCall(VerifyEqualKeyword.groovy:58)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.call(VerifyEqualKeyword.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:75)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.verifyEqual(VerifyEqualKeyword.groovy:63)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.execute(VerifyEqualKeyword.groovy:44)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:74)
	at com.kms.katalon.core.keyword.BuiltinKeywords.verifyEqual(BuiltinKeywords.groovy:146)
	at jdk.internal.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at Выполнение бизнес-плана сверка дашбордов.CompareDZOData(Выполнение бизнес-плана сверка дашбордов:693)
	at Выполнение бизнес-плана сверка дашбордов.run(Выполнение бизнес-плана сверка дашбордов:658)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:448)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:439)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:418)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:410)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:285)
	at com.kms.katalon.core.common.CommonExecutor.accessTestCaseMainPhase(CommonExecutor.java:65)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:150)
	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:106)
	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:180)
	at TempTestSuite1736466949911.run(TempTestSuite1736466949911.groovy:35)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
)

10-01-2025T03:09:03 - [TEST_STEP][PASSED] - result = WriteToExcel(typeOfData, todaysDate, PercPlanR, PercPlanB, PercFactR, PercFactB, x, tabR, tabB, o1R, o1B, vidget): null

10-01-2025T03:09:03 - [TEST_STEP][PASSED] - iii = dZO.indexOf("/"): null

10-01-2025T03:09:03 - [TEST_STEP][PASSED] - println(iii): null

10-01-2025T03:09:03 - [TEST_STEP][PASSED] - dZO = dZO.substring(0, iii): null

10-01-2025T03:09:03 - [TEST_STEP][PASSED] - println(dZO): null

10-01-2025T03:09:03 - [TEST_STEP][PASSED] - println(PercPlanR): null

10-01-2025T03:09:03 - [TEST_STEP][PASSED] - println(PercPlanB): null

10-01-2025T03:09:03 - [TEST_STEP][PASSED] - println(PercFactR): null

10-01-2025T03:09:03 - [TEST_STEP][PASSED] - println(PercFactB): null

10-01-2025T03:09:03 - [TEST_STEP][PASSED] - println(tabR): null

10-01-2025T03:09:03 - [TEST_STEP][PASSED] - println(tabB): null

10-01-2025T03:09:03 - [TEST_STEP][PASSED] - println(o1R): null

10-01-2025T03:09:03 - [TEST_STEP][PASSED] - println(o1B): null

10-01-2025T03:09:03 - [TEST_STEP][PASSED] - PR = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:09:03 - [TEST_STEP][PASSED] - FR = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:09:03 - [TEST_STEP][PASSED] - PB = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:09:03 - [TEST_STEP][PASSED] - FB = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:09:03 - [TEST_STEP][PASSED] - TR = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:09:03 - [TEST_STEP][PASSED] - TB = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:09:03 - [TEST_STEP][PASSED] - sheetName = "Sheet1": null

10-01-2025T03:09:03 - [TEST_STEP][PASSED] - data = findTestData("PlanFact"): null

10-01-2025T03:09:03 - [TEST_STEP][PASSED] - n = data.getRowNumbers() + 1: null

10-01-2025T03:09:03 - [TEST_STEP][PASSED] - year = todaysDate.substring(todaysDate.length() - 4, todaysDate.length()): null

10-01-2025T03:09:03 - [TEST_STEP][PASSED] - y = year.toInteger(): null

10-01-2025T03:09:03 - [TEST_STEP][PASSED] - m = getText(findTestObject("Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Фильтр Дата")): Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Фильтр Дата' is: '1, 2, 3 кв., Октябрь, Ноябрь 2024 года'

10-01-2025T03:09:03 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Фильтр Дата' is: '1, 2, 3 кв., Октябрь, Ноябрь 2024 года'

10-01-2025T03:09:03 - [TEST_STEP][PASSED] - m = m.substring(0, m.indexOf("2024")): null

10-01-2025T03:09:03 - [TEST_STEP][PASSED] - m = m.trim(): null

10-01-2025T03:09:03 - [TEST_STEP][PASSED] - dashboardName = "Выполнение бизнес-плана": null

10-01-2025T03:09:03 - [TEST_STEP][PASSED] - workbook01 = getWorkbook(excelFilePath): null

10-01-2025T03:09:03 - [TEST_STEP][PASSED] - sheet01 = getExcelSheet(workbook01, sheetName): null

10-01-2025T03:09:03 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 0, dashboardName): null

10-01-2025T03:09:03 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 1, dZO): null

10-01-2025T03:09:03 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 2, typeOfData): null

10-01-2025T03:09:03 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 3, typeOfData): null

10-01-2025T03:09:03 - [TEST_STEP][PASSED] - if (typeOfData == "План"): null

10-01-2025T03:09:03 - [TEST_STEP][PASSED] - else if (typeOfData == "Факт"): null

10-01-2025T03:09:03 - [TEST_STEP][PASSED] - if (PercFactR == null): null

10-01-2025T03:09:03 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:09:03 - [TEST_STEP][PASSED] - if (PercFactR == "нет данных"): null

10-01-2025T03:09:03 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 4, "нет данных"): null

10-01-2025T03:09:03 - [TEST_STEP][PASSED] - if (PercFactB == null): null

10-01-2025T03:09:03 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:09:03 - [TEST_STEP][PASSED] - if (PercFactB == "нет данных"): null

10-01-2025T03:09:03 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:09:03 - [TEST_STEP][PASSED] - FB = PercFactB.toDouble(): null

10-01-2025T03:09:03 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 5, FB): null

10-01-2025T03:09:03 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 6, m): null

10-01-2025T03:09:03 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 7, y): null

10-01-2025T03:09:03 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 8, todaysDate): null

10-01-2025T03:09:03 - [TEST_STEP][PASSED] - n = n + 1: null

10-01-2025T03:09:03 - [TEST_STEP][PASSED] - saveWorkbook(excelFilePath, workbook01): null

10-01-2025T03:09:03 - [TEST_STEP][PASSED] - vidget = "Показатели баланса электроэнергии по ДЗО – Факт": null

10-01-2025T03:09:03 - [TEST_STEP][PASSED] - typeOfData = "Факт Отпуск в сеть": null

10-01-2025T03:09:03 - [TEST_STEP][PASSED] - tabR = GetOvSFactR(x = a): null

10-01-2025T03:09:03 - [TEST_STEP][PASSED] - i1 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:09:03 - [TEST_STEP][PASSED] - ii = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:09:03 - [TEST_STEP][PASSED] - for ([ii = 1, ii < 4, (ii++)]): null

10-01-2025T03:09:03 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:09:03 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:09:03 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:09:03 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:09:03 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:09:03 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:09:03 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:09:03 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:09:03 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:09:03 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:09:03 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:09:03 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:09:03 - [TEST_STEP][PASSED] - i1 = x.indexOf("/"): null

10-01-2025T03:09:03 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:09:03 - [TEST_STEP][PASSED] - x = x.substring(0, i1): null

10-01-2025T03:09:03 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:09:03 - [TEST_STEP][PASSED] - return x: null

10-01-2025T03:09:03 - [TEST_STEP][PASSED] - tabB = GetOvSFactB(x = b): null

10-01-2025T03:09:03 - [TEST_STEP][PASSED] - i1 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:09:03 - [TEST_STEP][PASSED] - ii = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:09:03 - [TEST_STEP][PASSED] - for ([ii = 1, ii < 4, (ii++)]): null

10-01-2025T03:09:03 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:09:03 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:09:03 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:09:03 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:09:03 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:09:03 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:09:03 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:09:03 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:09:03 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:09:03 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:09:03 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:09:03 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:09:03 - [TEST_STEP][PASSED] - i1 = x.indexOf("/"): null

10-01-2025T03:09:03 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:09:03 - [TEST_STEP][PASSED] - x = x.substring(0, i1): null

10-01-2025T03:09:03 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:09:03 - [TEST_STEP][FAILED] - return x: null

10-01-2025T03:09:03 - [TEST_STEP][FAILED] - if (verifyEqual(tabR, tabB) == false): null

10-01-2025T03:09:03 - [MESSAGE][FAILED] - Unable to verify equal between actual object 'нет данных' and expected object '27351234' (Root cause: com.kms.katalon.core.exception.StepFailedException: Actual object 'нет данных' and expected object '27351234' are not equal
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.doCall(VerifyEqualKeyword.groovy:58)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.call(VerifyEqualKeyword.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:75)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.verifyEqual(VerifyEqualKeyword.groovy:63)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.execute(VerifyEqualKeyword.groovy:44)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:74)
	at com.kms.katalon.core.keyword.BuiltinKeywords.verifyEqual(BuiltinKeywords.groovy:146)
	at jdk.internal.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at Выполнение бизнес-плана сверка дашбордов.CompareDZOData(Выполнение бизнес-плана сверка дашбордов:706)
	at Выполнение бизнес-плана сверка дашбордов.run(Выполнение бизнес-плана сверка дашбордов:658)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:448)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:439)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:418)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:410)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:285)
	at com.kms.katalon.core.common.CommonExecutor.accessTestCaseMainPhase(CommonExecutor.java:65)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:150)
	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:106)
	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:180)
	at TempTestSuite1736466949911.run(TempTestSuite1736466949911.groovy:35)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
)

10-01-2025T03:09:03 - [TEST_STEP][PASSED] - result = WriteToExcel(typeOfData, todaysDate, PercPlanR, PercPlanB, PercFactR, PercFactB, x, tabR, tabB, o1R, o1B, vidget): null

10-01-2025T03:09:03 - [TEST_STEP][PASSED] - iii = dZO.indexOf("/"): null

10-01-2025T03:09:03 - [TEST_STEP][PASSED] - println(iii): null

10-01-2025T03:09:03 - [TEST_STEP][PASSED] - dZO = dZO.substring(0, iii): null

10-01-2025T03:09:03 - [TEST_STEP][PASSED] - println(dZO): null

10-01-2025T03:09:03 - [TEST_STEP][PASSED] - println(PercPlanR): null

10-01-2025T03:09:03 - [TEST_STEP][PASSED] - println(PercPlanB): null

10-01-2025T03:09:03 - [TEST_STEP][PASSED] - println(PercFactR): null

10-01-2025T03:09:03 - [TEST_STEP][PASSED] - println(PercFactB): null

10-01-2025T03:09:03 - [TEST_STEP][PASSED] - println(tabR): null

10-01-2025T03:09:03 - [TEST_STEP][PASSED] - println(tabB): null

10-01-2025T03:09:03 - [TEST_STEP][PASSED] - println(o1R): null

10-01-2025T03:09:03 - [TEST_STEP][PASSED] - println(o1B): null

10-01-2025T03:09:03 - [TEST_STEP][PASSED] - PR = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:09:03 - [TEST_STEP][PASSED] - FR = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:09:03 - [TEST_STEP][PASSED] - PB = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:09:03 - [TEST_STEP][PASSED] - FB = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:09:03 - [TEST_STEP][PASSED] - TR = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:09:03 - [TEST_STEP][PASSED] - TB = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:09:03 - [TEST_STEP][PASSED] - sheetName = "Sheet1": null

10-01-2025T03:09:03 - [TEST_STEP][PASSED] - data = findTestData("PlanFact"): null

10-01-2025T03:09:03 - [TEST_STEP][PASSED] - n = data.getRowNumbers() + 1: null

10-01-2025T03:09:03 - [TEST_STEP][PASSED] - year = todaysDate.substring(todaysDate.length() - 4, todaysDate.length()): null

10-01-2025T03:09:03 - [TEST_STEP][PASSED] - y = year.toInteger(): null

10-01-2025T03:09:03 - [TEST_STEP][PASSED] - m = getText(findTestObject("Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Фильтр Дата")): Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Фильтр Дата' is: '1, 2, 3 кв., Октябрь, Ноябрь 2024 года'

10-01-2025T03:09:04 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Фильтр Дата' is: '1, 2, 3 кв., Октябрь, Ноябрь 2024 года'

10-01-2025T03:09:04 - [TEST_STEP][PASSED] - m = m.substring(0, m.indexOf("2024")): null

10-01-2025T03:09:04 - [TEST_STEP][PASSED] - m = m.trim(): null

10-01-2025T03:09:04 - [TEST_STEP][PASSED] - dashboardName = "Выполнение бизнес-плана": null

10-01-2025T03:09:04 - [TEST_STEP][PASSED] - workbook01 = getWorkbook(excelFilePath): null

10-01-2025T03:09:04 - [TEST_STEP][PASSED] - sheet01 = getExcelSheet(workbook01, sheetName): null

10-01-2025T03:09:04 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 0, dashboardName): null

10-01-2025T03:09:04 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 1, dZO): null

10-01-2025T03:09:04 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 2, typeOfData): null

10-01-2025T03:09:04 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 3, typeOfData): null

10-01-2025T03:09:04 - [TEST_STEP][PASSED] - if (typeOfData == "План"): null

10-01-2025T03:09:04 - [TEST_STEP][PASSED] - else if (typeOfData == "Факт"): null

10-01-2025T03:09:04 - [TEST_STEP][PASSED] - else if (vidget.contains("электроэнергии") == true): null

10-01-2025T03:09:04 - [TEST_STEP][PASSED] - if (tabR == null): null

10-01-2025T03:09:04 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:09:04 - [TEST_STEP][PASSED] - if (tabR == "нет данных"): null

10-01-2025T03:09:04 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 4, "нет данных"): null

10-01-2025T03:09:04 - [TEST_STEP][PASSED] - if (tabB == null): null

10-01-2025T03:09:04 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:09:04 - [TEST_STEP][PASSED] - if (tabB == "нет данных"): null

10-01-2025T03:09:04 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:09:04 - [TEST_STEP][PASSED] - TB = tabB.toInteger(): null

10-01-2025T03:09:04 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 5, TB): null

10-01-2025T03:09:04 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 6, m): null

10-01-2025T03:09:04 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 7, y): null

10-01-2025T03:09:04 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 8, todaysDate): null

10-01-2025T03:09:04 - [TEST_STEP][PASSED] - n = n + 1: null

10-01-2025T03:09:04 - [TEST_STEP][PASSED] - saveWorkbook(excelFilePath, workbook01): null

10-01-2025T03:09:04 - [TEST_STEP][PASSED] - typeOfData = "Факт Отпуск из сети": null

10-01-2025T03:09:04 - [TEST_STEP][PASSED] - tabR = GetOiSFactR(x = a): null

10-01-2025T03:09:04 - [TEST_STEP][PASSED] - i1 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:09:04 - [TEST_STEP][PASSED] - ii = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:09:04 - [TEST_STEP][PASSED] - for ([ii = 1, ii < 5, (ii++)]): null

10-01-2025T03:09:04 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:09:04 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:09:04 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:09:04 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:09:04 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:09:04 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:09:04 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:09:04 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:09:04 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:09:04 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:09:04 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:09:04 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:09:04 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:09:04 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:09:04 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:09:04 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:09:04 - [TEST_STEP][PASSED] - i1 = x.indexOf("/"): null

10-01-2025T03:09:04 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:09:04 - [TEST_STEP][PASSED] - x = x.substring(0, i1): null

10-01-2025T03:09:04 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:09:04 - [TEST_STEP][PASSED] - return x: null

10-01-2025T03:09:04 - [TEST_STEP][PASSED] - tabB = GetOiSFactB(x = b): null

10-01-2025T03:09:04 - [TEST_STEP][PASSED] - i1 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:09:04 - [TEST_STEP][PASSED] - ii = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:09:04 - [TEST_STEP][PASSED] - for ([ii = 1, ii < 5, (ii++)]): null

10-01-2025T03:09:04 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:09:04 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:09:04 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:09:04 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:09:04 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:09:04 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:09:04 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:09:04 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:09:04 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:09:04 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:09:04 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:09:04 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:09:04 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:09:04 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:09:04 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:09:04 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:09:04 - [TEST_STEP][PASSED] - i1 = x.indexOf("/"): null

10-01-2025T03:09:04 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:09:04 - [TEST_STEP][PASSED] - x = x.substring(0, i1): null

10-01-2025T03:09:04 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:09:04 - [TEST_STEP][FAILED] - return x: null

10-01-2025T03:09:04 - [TEST_STEP][FAILED] - if (verifyEqual(tabR, tabB) == false): null

10-01-2025T03:09:04 - [MESSAGE][FAILED] - Unable to verify equal between actual object 'нет данных' and expected object '24964441' (Root cause: com.kms.katalon.core.exception.StepFailedException: Actual object 'нет данных' and expected object '24964441' are not equal
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.doCall(VerifyEqualKeyword.groovy:58)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.call(VerifyEqualKeyword.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:75)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.verifyEqual(VerifyEqualKeyword.groovy:63)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.execute(VerifyEqualKeyword.groovy:44)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:74)
	at com.kms.katalon.core.keyword.BuiltinKeywords.verifyEqual(BuiltinKeywords.groovy:146)
	at jdk.internal.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at Выполнение бизнес-плана сверка дашбордов.CompareDZOData(Выполнение бизнес-плана сверка дашбордов:717)
	at Выполнение бизнес-плана сверка дашбордов.run(Выполнение бизнес-плана сверка дашбордов:658)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:448)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:439)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:418)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:410)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:285)
	at com.kms.katalon.core.common.CommonExecutor.accessTestCaseMainPhase(CommonExecutor.java:65)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:150)
	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:106)
	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:180)
	at TempTestSuite1736466949911.run(TempTestSuite1736466949911.groovy:35)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
)

10-01-2025T03:09:04 - [TEST_STEP][PASSED] - result = WriteToExcel(typeOfData, todaysDate, PercPlanR, PercPlanB, PercFactR, PercFactB, x, tabR, tabB, o1R, o1B, vidget): null

10-01-2025T03:09:04 - [TEST_STEP][PASSED] - iii = dZO.indexOf("/"): null

10-01-2025T03:09:04 - [TEST_STEP][PASSED] - println(iii): null

10-01-2025T03:09:04 - [TEST_STEP][PASSED] - dZO = dZO.substring(0, iii): null

10-01-2025T03:09:04 - [TEST_STEP][PASSED] - println(dZO): null

10-01-2025T03:09:04 - [TEST_STEP][PASSED] - println(PercPlanR): null

10-01-2025T03:09:04 - [TEST_STEP][PASSED] - println(PercPlanB): null

10-01-2025T03:09:04 - [TEST_STEP][PASSED] - println(PercFactR): null

10-01-2025T03:09:04 - [TEST_STEP][PASSED] - println(PercFactB): null

10-01-2025T03:09:04 - [TEST_STEP][PASSED] - println(tabR): null

10-01-2025T03:09:04 - [TEST_STEP][PASSED] - println(tabB): null

10-01-2025T03:09:04 - [TEST_STEP][PASSED] - println(o1R): null

10-01-2025T03:09:04 - [TEST_STEP][PASSED] - println(o1B): null

10-01-2025T03:09:04 - [TEST_STEP][PASSED] - PR = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:09:04 - [TEST_STEP][PASSED] - FR = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:09:04 - [TEST_STEP][PASSED] - PB = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:09:04 - [TEST_STEP][PASSED] - FB = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:09:04 - [TEST_STEP][PASSED] - TR = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:09:04 - [TEST_STEP][PASSED] - TB = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:09:04 - [TEST_STEP][PASSED] - sheetName = "Sheet1": null

10-01-2025T03:09:04 - [TEST_STEP][PASSED] - data = findTestData("PlanFact"): null

10-01-2025T03:09:04 - [TEST_STEP][PASSED] - n = data.getRowNumbers() + 1: null

10-01-2025T03:09:04 - [TEST_STEP][PASSED] - year = todaysDate.substring(todaysDate.length() - 4, todaysDate.length()): null

10-01-2025T03:09:04 - [TEST_STEP][PASSED] - y = year.toInteger(): null

10-01-2025T03:09:04 - [TEST_STEP][PASSED] - m = getText(findTestObject("Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Фильтр Дата")): Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Фильтр Дата' is: '1, 2, 3 кв., Октябрь, Ноябрь 2024 года'

10-01-2025T03:09:05 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Фильтр Дата' is: '1, 2, 3 кв., Октябрь, Ноябрь 2024 года'

10-01-2025T03:09:05 - [TEST_STEP][PASSED] - m = m.substring(0, m.indexOf("2024")): null

10-01-2025T03:09:05 - [TEST_STEP][PASSED] - m = m.trim(): null

10-01-2025T03:09:05 - [TEST_STEP][PASSED] - dashboardName = "Выполнение бизнес-плана": null

10-01-2025T03:09:05 - [TEST_STEP][PASSED] - workbook01 = getWorkbook(excelFilePath): null

10-01-2025T03:09:05 - [TEST_STEP][PASSED] - sheet01 = getExcelSheet(workbook01, sheetName): null

10-01-2025T03:09:05 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 0, dashboardName): null

10-01-2025T03:09:05 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 1, dZO): null

10-01-2025T03:09:05 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 2, typeOfData): null

10-01-2025T03:09:05 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 3, typeOfData): null

10-01-2025T03:09:05 - [TEST_STEP][PASSED] - if (typeOfData == "План"): null

10-01-2025T03:09:05 - [TEST_STEP][PASSED] - else if (typeOfData == "Факт"): null

10-01-2025T03:09:05 - [TEST_STEP][PASSED] - else if (vidget.contains("электроэнергии") == true): null

10-01-2025T03:09:05 - [TEST_STEP][PASSED] - if (tabR == null): null

10-01-2025T03:09:05 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:09:05 - [TEST_STEP][PASSED] - if (tabR == "нет данных"): null

10-01-2025T03:09:05 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 4, "нет данных"): null

10-01-2025T03:09:05 - [TEST_STEP][PASSED] - if (tabB == null): null

10-01-2025T03:09:05 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:09:05 - [TEST_STEP][PASSED] - if (tabB == "нет данных"): null

10-01-2025T03:09:05 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:09:05 - [TEST_STEP][PASSED] - TB = tabB.toInteger(): null

10-01-2025T03:09:05 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 5, TB): null

10-01-2025T03:09:05 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 6, m): null

10-01-2025T03:09:05 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 7, y): null

10-01-2025T03:09:05 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 8, todaysDate): null

10-01-2025T03:09:05 - [TEST_STEP][PASSED] - n = n + 1: null

10-01-2025T03:09:05 - [TEST_STEP][PASSED] - saveWorkbook(excelFilePath, workbook01): null

10-01-2025T03:09:05 - [TEST_STEP][PASSED] - typeOfData = "Факт Потери": null

10-01-2025T03:09:05 - [TEST_STEP][PASSED] - tabR = GetPFactR(x = a): null

10-01-2025T03:09:05 - [TEST_STEP][PASSED] - i1 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:09:05 - [TEST_STEP][PASSED] - ii = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:09:05 - [TEST_STEP][PASSED] - for ([ii = 1, ii < 6, (ii++)]): null

10-01-2025T03:09:05 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:09:05 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:09:05 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:09:05 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:09:05 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:09:05 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:09:05 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:09:05 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:09:05 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:09:05 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:09:05 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:09:05 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:09:05 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:09:05 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:09:05 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:09:05 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:09:05 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:09:05 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:09:05 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:09:05 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:09:05 - [TEST_STEP][PASSED] - i1 = x.indexOf("/"): null

10-01-2025T03:09:05 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:09:05 - [TEST_STEP][PASSED] - x = x.substring(0, i1): null

10-01-2025T03:09:05 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:09:05 - [TEST_STEP][PASSED] - return x: null

10-01-2025T03:09:05 - [TEST_STEP][PASSED] - tabB = GetPFactB(x = b): null

10-01-2025T03:09:05 - [TEST_STEP][PASSED] - i1 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:09:05 - [TEST_STEP][PASSED] - ii = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:09:05 - [TEST_STEP][PASSED] - for ([ii = 1, ii < 6, (ii++)]): null

10-01-2025T03:09:05 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:09:05 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:09:05 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:09:05 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:09:05 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:09:05 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:09:05 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:09:05 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:09:05 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:09:05 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:09:05 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:09:05 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:09:05 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:09:05 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:09:05 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:09:05 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:09:05 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:09:05 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:09:05 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:09:05 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:09:05 - [TEST_STEP][PASSED] - i1 = x.indexOf("/"): null

10-01-2025T03:09:05 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:09:05 - [TEST_STEP][PASSED] - x = x.substring(0, i1): null

10-01-2025T03:09:05 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:09:05 - [TEST_STEP][FAILED] - return x: null

10-01-2025T03:09:05 - [TEST_STEP][PASSED] - println(tabR + "/" + tabB): null

10-01-2025T03:09:05 - [TEST_STEP][FAILED] - if (verifyEqual(tabR, tabB) == false): null

10-01-2025T03:09:05 - [MESSAGE][FAILED] - Unable to verify equal between actual object 'нет данных' and expected object '2386793' (Root cause: com.kms.katalon.core.exception.StepFailedException: Actual object 'нет данных' and expected object '2386793' are not equal
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.doCall(VerifyEqualKeyword.groovy:58)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.call(VerifyEqualKeyword.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:75)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.verifyEqual(VerifyEqualKeyword.groovy:63)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.execute(VerifyEqualKeyword.groovy:44)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:74)
	at com.kms.katalon.core.keyword.BuiltinKeywords.verifyEqual(BuiltinKeywords.groovy:146)
	at jdk.internal.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at Выполнение бизнес-плана сверка дашбордов.CompareDZOData(Выполнение бизнес-плана сверка дашбордов:730)
	at Выполнение бизнес-плана сверка дашбордов.run(Выполнение бизнес-плана сверка дашбордов:658)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:448)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:439)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:418)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:410)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:285)
	at com.kms.katalon.core.common.CommonExecutor.accessTestCaseMainPhase(CommonExecutor.java:65)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:150)
	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:106)
	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:180)
	at TempTestSuite1736466949911.run(TempTestSuite1736466949911.groovy:35)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
)

10-01-2025T03:09:05 - [TEST_STEP][PASSED] - result = WriteToExcel(typeOfData, todaysDate, PercPlanR, PercPlanB, PercFactR, PercFactB, x, tabR, tabB, o1R, o1B, vidget): null

10-01-2025T03:09:05 - [TEST_STEP][PASSED] - iii = dZO.indexOf("/"): null

10-01-2025T03:09:05 - [TEST_STEP][PASSED] - println(iii): null

10-01-2025T03:09:05 - [TEST_STEP][PASSED] - dZO = dZO.substring(0, iii): null

10-01-2025T03:09:05 - [TEST_STEP][PASSED] - println(dZO): null

10-01-2025T03:09:05 - [TEST_STEP][PASSED] - println(PercPlanR): null

10-01-2025T03:09:05 - [TEST_STEP][PASSED] - println(PercPlanB): null

10-01-2025T03:09:05 - [TEST_STEP][PASSED] - println(PercFactR): null

10-01-2025T03:09:05 - [TEST_STEP][PASSED] - println(PercFactB): null

10-01-2025T03:09:05 - [TEST_STEP][PASSED] - println(tabR): null

10-01-2025T03:09:05 - [TEST_STEP][PASSED] - println(tabB): null

10-01-2025T03:09:05 - [TEST_STEP][PASSED] - println(o1R): null

10-01-2025T03:09:05 - [TEST_STEP][PASSED] - println(o1B): null

10-01-2025T03:09:05 - [TEST_STEP][PASSED] - PR = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:09:05 - [TEST_STEP][PASSED] - FR = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:09:05 - [TEST_STEP][PASSED] - PB = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:09:05 - [TEST_STEP][PASSED] - FB = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:09:05 - [TEST_STEP][PASSED] - TR = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:09:05 - [TEST_STEP][PASSED] - TB = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:09:05 - [TEST_STEP][PASSED] - sheetName = "Sheet1": null

10-01-2025T03:09:05 - [TEST_STEP][PASSED] - data = findTestData("PlanFact"): null

10-01-2025T03:09:05 - [TEST_STEP][PASSED] - n = data.getRowNumbers() + 1: null

10-01-2025T03:09:05 - [TEST_STEP][PASSED] - year = todaysDate.substring(todaysDate.length() - 4, todaysDate.length()): null

10-01-2025T03:09:05 - [TEST_STEP][PASSED] - y = year.toInteger(): null

10-01-2025T03:09:05 - [TEST_STEP][PASSED] - m = getText(findTestObject("Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Фильтр Дата")): Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Фильтр Дата' is: '1, 2, 3 кв., Октябрь, Ноябрь 2024 года'

10-01-2025T03:09:05 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Фильтр Дата' is: '1, 2, 3 кв., Октябрь, Ноябрь 2024 года'

10-01-2025T03:09:05 - [TEST_STEP][PASSED] - m = m.substring(0, m.indexOf("2024")): null

10-01-2025T03:09:05 - [TEST_STEP][PASSED] - m = m.trim(): null

10-01-2025T03:09:05 - [TEST_STEP][PASSED] - dashboardName = "Выполнение бизнес-плана": null

10-01-2025T03:09:05 - [TEST_STEP][PASSED] - workbook01 = getWorkbook(excelFilePath): null

10-01-2025T03:09:05 - [TEST_STEP][PASSED] - sheet01 = getExcelSheet(workbook01, sheetName): null

10-01-2025T03:09:05 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 0, dashboardName): null

10-01-2025T03:09:05 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 1, dZO): null

10-01-2025T03:09:05 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 2, typeOfData): null

10-01-2025T03:09:05 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 3, typeOfData): null

10-01-2025T03:09:05 - [TEST_STEP][PASSED] - if (typeOfData == "План"): null

10-01-2025T03:09:05 - [TEST_STEP][PASSED] - else if (typeOfData == "Факт"): null

10-01-2025T03:09:05 - [TEST_STEP][PASSED] - else if (vidget.contains("электроэнергии") == true): null

10-01-2025T03:09:05 - [TEST_STEP][PASSED] - if (tabR == null): null

10-01-2025T03:09:05 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:09:05 - [TEST_STEP][PASSED] - if (tabR == "нет данных"): null

10-01-2025T03:09:05 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 4, "нет данных"): null

10-01-2025T03:09:05 - [TEST_STEP][PASSED] - if (tabB == null): null

10-01-2025T03:09:05 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:09:05 - [TEST_STEP][PASSED] - if (tabB == "нет данных"): null

10-01-2025T03:09:05 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:09:05 - [TEST_STEP][PASSED] - TB = tabB.toInteger(): null

10-01-2025T03:09:05 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 5, TB): null

10-01-2025T03:09:05 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 6, m): null

10-01-2025T03:09:05 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 7, y): null

10-01-2025T03:09:06 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 8, todaysDate): null

10-01-2025T03:09:06 - [TEST_STEP][PASSED] - n = n + 1: null

10-01-2025T03:09:06 - [TEST_STEP][PASSED] - saveWorkbook(excelFilePath, workbook01): null

10-01-2025T03:09:06 - [TEST_STEP][PASSED] - vidget = "Показатели баланса электроэнергии по ДЗО – План": null

10-01-2025T03:09:06 - [TEST_STEP][PASSED] - typeOfData = "План Отпуск в сеть": null

10-01-2025T03:09:06 - [TEST_STEP][PASSED] - tabR = GetOvSPlanR(x = a): null

10-01-2025T03:09:06 - [TEST_STEP][PASSED] - i1 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:09:06 - [TEST_STEP][PASSED] - ii = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:09:06 - [TEST_STEP][PASSED] - for ([ii = 1, ii < 7, (ii++)]): null

10-01-2025T03:09:06 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:09:06 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:09:06 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:09:06 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:09:06 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:09:06 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:09:06 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:09:06 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:09:06 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:09:06 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:09:06 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:09:06 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:09:06 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:09:06 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:09:06 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:09:06 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:09:06 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:09:06 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:09:06 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:09:06 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:09:06 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:09:06 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:09:06 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:09:06 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:09:06 - [TEST_STEP][PASSED] - i1 = x.indexOf("/"): null

10-01-2025T03:09:06 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:09:06 - [TEST_STEP][PASSED] - x = x.substring(0, i1): null

10-01-2025T03:09:06 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:09:06 - [TEST_STEP][PASSED] - return x: null

10-01-2025T03:09:06 - [TEST_STEP][PASSED] - tabB = GetOvSPlanB(x = b): null

10-01-2025T03:09:06 - [TEST_STEP][PASSED] - i1 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:09:06 - [TEST_STEP][PASSED] - ii = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:09:06 - [TEST_STEP][PASSED] - for ([ii = 1, ii < 7, (ii++)]): null

10-01-2025T03:09:06 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:09:06 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:09:06 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:09:06 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:09:06 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:09:06 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:09:06 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:09:06 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:09:06 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:09:06 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:09:06 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:09:06 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:09:06 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:09:06 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:09:06 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:09:06 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:09:06 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:09:06 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:09:06 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:09:06 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:10:33 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:10:33 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:10:33 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:10:33 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:10:33 - [TEST_STEP][PASSED] - i1 = x.indexOf("/"): null

10-01-2025T03:10:33 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:10:33 - [TEST_STEP][PASSED] - x = x.substring(0, i1): null

10-01-2025T03:10:33 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:10:33 - [TEST_STEP][FAILED] - return x: null

10-01-2025T03:10:33 - [TEST_STEP][PASSED] - println(tabR + "/" + tabB): null

10-01-2025T03:10:33 - [TEST_STEP][FAILED] - if (verifyEqual(PercFactR, PercFactB) == false): null

10-01-2025T03:10:33 - [MESSAGE][FAILED] - Unable to verify equal between actual object 'нет данных' and expected object '8.73' (Root cause: com.kms.katalon.core.exception.StepFailedException: Actual object 'нет данных' and expected object '8.73' are not equal
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.doCall(VerifyEqualKeyword.groovy:58)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.call(VerifyEqualKeyword.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:75)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.verifyEqual(VerifyEqualKeyword.groovy:63)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.execute(VerifyEqualKeyword.groovy:44)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:74)
	at com.kms.katalon.core.keyword.BuiltinKeywords.verifyEqual(BuiltinKeywords.groovy:146)
	at jdk.internal.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at Выполнение бизнес-плана сверка дашбордов.CompareDZOData(Выполнение бизнес-плана сверка дашбордов:745)
	at Выполнение бизнес-плана сверка дашбордов.run(Выполнение бизнес-плана сверка дашбордов:658)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:448)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:439)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:418)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:410)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:285)
	at com.kms.katalon.core.common.CommonExecutor.accessTestCaseMainPhase(CommonExecutor.java:65)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:150)
	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:106)
	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:180)
	at TempTestSuite1736466949911.run(TempTestSuite1736466949911.groovy:35)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
)

10-01-2025T03:10:33 - [TEST_STEP][PASSED] - result = WriteToExcel(typeOfData, todaysDate, PercPlanR, PercPlanB, PercFactR, PercFactB, x, tabR, tabB, o1R, o1B, vidget): null

10-01-2025T03:10:33 - [TEST_STEP][PASSED] - iii = dZO.indexOf("/"): null

10-01-2025T03:10:33 - [TEST_STEP][PASSED] - println(iii): null

10-01-2025T03:10:33 - [TEST_STEP][PASSED] - dZO = dZO.substring(0, iii): null

10-01-2025T03:10:33 - [TEST_STEP][PASSED] - println(dZO): null

10-01-2025T03:10:33 - [TEST_STEP][PASSED] - println(PercPlanR): null

10-01-2025T03:10:33 - [TEST_STEP][PASSED] - println(PercPlanB): null

10-01-2025T03:10:33 - [TEST_STEP][PASSED] - println(PercFactR): null

10-01-2025T03:10:33 - [TEST_STEP][PASSED] - println(PercFactB): null

10-01-2025T03:10:33 - [TEST_STEP][PASSED] - println(tabR): null

10-01-2025T03:10:33 - [TEST_STEP][PASSED] - println(tabB): null

10-01-2025T03:10:33 - [TEST_STEP][PASSED] - println(o1R): null

10-01-2025T03:10:33 - [TEST_STEP][PASSED] - println(o1B): null

10-01-2025T03:10:33 - [TEST_STEP][PASSED] - PR = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:10:33 - [TEST_STEP][PASSED] - FR = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:10:33 - [TEST_STEP][PASSED] - PB = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:10:33 - [TEST_STEP][PASSED] - FB = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:10:33 - [TEST_STEP][PASSED] - TR = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:10:33 - [TEST_STEP][PASSED] - TB = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:10:33 - [TEST_STEP][PASSED] - sheetName = "Sheet1": null

10-01-2025T03:10:33 - [TEST_STEP][PASSED] - data = findTestData("PlanFact"): null

10-01-2025T03:10:33 - [TEST_STEP][PASSED] - n = data.getRowNumbers() + 1: null

10-01-2025T03:10:33 - [TEST_STEP][PASSED] - year = todaysDate.substring(todaysDate.length() - 4, todaysDate.length()): null

10-01-2025T03:10:33 - [TEST_STEP][PASSED] - y = year.toInteger(): null

10-01-2025T03:10:33 - [TEST_STEP][PASSED] - m = getText(findTestObject("Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Фильтр Дата")): Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Фильтр Дата' is: '1, 2, 3 кв., Октябрь, Ноябрь 2024 года'

10-01-2025T03:10:33 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Фильтр Дата' is: '1, 2, 3 кв., Октябрь, Ноябрь 2024 года'

10-01-2025T03:10:33 - [TEST_STEP][PASSED] - m = m.substring(0, m.indexOf("2024")): null

10-01-2025T03:10:33 - [TEST_STEP][PASSED] - m = m.trim(): null

10-01-2025T03:10:33 - [TEST_STEP][PASSED] - dashboardName = "Выполнение бизнес-плана": null

10-01-2025T03:10:33 - [TEST_STEP][PASSED] - workbook01 = getWorkbook(excelFilePath): null

10-01-2025T03:10:33 - [TEST_STEP][PASSED] - sheet01 = getExcelSheet(workbook01, sheetName): null

10-01-2025T03:10:33 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 0, dashboardName): null

10-01-2025T03:10:33 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 1, dZO): null

10-01-2025T03:10:33 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 2, typeOfData): null

10-01-2025T03:10:33 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 3, typeOfData): null

10-01-2025T03:10:33 - [TEST_STEP][PASSED] - if (typeOfData == "План"): null

10-01-2025T03:10:33 - [TEST_STEP][PASSED] - else if (typeOfData == "Факт"): null

10-01-2025T03:10:33 - [TEST_STEP][PASSED] - else if (vidget.contains("электроэнергии") == true): null

10-01-2025T03:10:33 - [TEST_STEP][PASSED] - if (tabR == null): null

10-01-2025T03:10:33 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:10:33 - [TEST_STEP][PASSED] - if (tabR == "нет данных"): null

10-01-2025T03:10:33 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 4, "нет данных"): null

10-01-2025T03:10:33 - [TEST_STEP][PASSED] - if (tabB == null): null

10-01-2025T03:10:33 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:10:33 - [TEST_STEP][PASSED] - if (tabB == "нет данных"): null

10-01-2025T03:10:33 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:10:33 - [TEST_STEP][PASSED] - TB = tabB.toInteger(): null

10-01-2025T03:10:33 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 5, TB): null

10-01-2025T03:10:33 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 6, m): null

10-01-2025T03:10:33 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 7, y): null

10-01-2025T03:10:33 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 8, todaysDate): null

10-01-2025T03:10:33 - [TEST_STEP][PASSED] - n = n + 1: null

10-01-2025T03:10:33 - [TEST_STEP][PASSED] - saveWorkbook(excelFilePath, workbook01): null

10-01-2025T03:10:34 - [TEST_STEP][PASSED] - typeOfData = "План Отпуск из сети": null

10-01-2025T03:10:34 - [TEST_STEP][PASSED] - tabR = GetOiSPlanR(x = a): null

10-01-2025T03:10:34 - [TEST_STEP][PASSED] - i1 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:10:34 - [TEST_STEP][PASSED] - ii = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:10:34 - [TEST_STEP][PASSED] - for ([ii = 1, ii < 8, (ii++)]): null

10-01-2025T03:10:34 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:10:34 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:10:34 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:10:34 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:10:34 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:10:34 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:10:34 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:10:34 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:10:34 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:10:34 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:10:34 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:10:34 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:10:34 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:10:34 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:10:34 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:10:34 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:10:34 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:10:34 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:10:34 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:10:34 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:10:34 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:10:34 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:10:34 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:10:34 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:10:34 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:10:34 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:10:34 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:10:34 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:10:34 - [TEST_STEP][PASSED] - i1 = x.indexOf("/"): null

10-01-2025T03:10:34 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:10:34 - [TEST_STEP][PASSED] - x = x.substring(0, i1): null

10-01-2025T03:10:34 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:10:34 - [TEST_STEP][PASSED] - return x: null

10-01-2025T03:10:34 - [TEST_STEP][PASSED] - tabB = GetOiSPlanB(x = b): null

10-01-2025T03:10:34 - [TEST_STEP][PASSED] - i1 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:10:34 - [TEST_STEP][PASSED] - ii = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:10:34 - [TEST_STEP][PASSED] - for ([ii = 1, ii < 8, (ii++)]): null

10-01-2025T03:10:34 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:10:34 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:10:34 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:10:34 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:10:34 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:10:34 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:10:34 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:10:34 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:10:34 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:10:34 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:10:34 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:10:34 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:10:34 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:10:34 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:10:34 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:10:34 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:10:34 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:10:34 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:10:34 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:10:34 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:10:34 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:10:34 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:10:34 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:10:34 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:10:34 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:10:34 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:10:34 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:10:34 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:10:34 - [TEST_STEP][PASSED] - i1 = x.indexOf("/"): null

10-01-2025T03:10:34 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:10:34 - [TEST_STEP][PASSED] - x = x.substring(0, i1): null

10-01-2025T03:10:34 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:10:34 - [TEST_STEP][FAILED] - return x: null

10-01-2025T03:10:34 - [TEST_STEP][PASSED] - println(tabR + "/" + tabB): null

10-01-2025T03:10:34 - [TEST_STEP][FAILED] - if (verifyEqual(PercFactR, PercFactB) == false): null

10-01-2025T03:10:34 - [MESSAGE][FAILED] - Unable to verify equal between actual object 'нет данных' and expected object '8.73' (Root cause: com.kms.katalon.core.exception.StepFailedException: Actual object 'нет данных' and expected object '8.73' are not equal
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.doCall(VerifyEqualKeyword.groovy:58)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.call(VerifyEqualKeyword.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:75)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.verifyEqual(VerifyEqualKeyword.groovy:63)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.execute(VerifyEqualKeyword.groovy:44)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:74)
	at com.kms.katalon.core.keyword.BuiltinKeywords.verifyEqual(BuiltinKeywords.groovy:146)
	at jdk.internal.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at Выполнение бизнес-плана сверка дашбордов.CompareDZOData(Выполнение бизнес-плана сверка дашбордов:758)
	at Выполнение бизнес-плана сверка дашбордов.run(Выполнение бизнес-плана сверка дашбордов:658)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:448)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:439)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:418)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:410)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:285)
	at com.kms.katalon.core.common.CommonExecutor.accessTestCaseMainPhase(CommonExecutor.java:65)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:150)
	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:106)
	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:180)
	at TempTestSuite1736466949911.run(TempTestSuite1736466949911.groovy:35)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
)

10-01-2025T03:10:34 - [TEST_STEP][PASSED] - result = WriteToExcel(typeOfData, todaysDate, PercPlanR, PercPlanB, PercFactR, PercFactB, x, tabR, tabB, o1R, o1B, vidget): null

10-01-2025T03:10:34 - [TEST_STEP][PASSED] - iii = dZO.indexOf("/"): null

10-01-2025T03:10:34 - [TEST_STEP][PASSED] - println(iii): null

10-01-2025T03:10:34 - [TEST_STEP][PASSED] - dZO = dZO.substring(0, iii): null

10-01-2025T03:10:34 - [TEST_STEP][PASSED] - println(dZO): null

10-01-2025T03:10:34 - [TEST_STEP][PASSED] - println(PercPlanR): null

10-01-2025T03:10:34 - [TEST_STEP][PASSED] - println(PercPlanB): null

10-01-2025T03:10:34 - [TEST_STEP][PASSED] - println(PercFactR): null

10-01-2025T03:10:34 - [TEST_STEP][PASSED] - println(PercFactB): null

10-01-2025T03:10:34 - [TEST_STEP][PASSED] - println(tabR): null

10-01-2025T03:10:34 - [TEST_STEP][PASSED] - println(tabB): null

10-01-2025T03:10:34 - [TEST_STEP][PASSED] - println(o1R): null

10-01-2025T03:10:34 - [TEST_STEP][PASSED] - println(o1B): null

10-01-2025T03:10:34 - [TEST_STEP][PASSED] - PR = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:10:34 - [TEST_STEP][PASSED] - FR = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:10:34 - [TEST_STEP][PASSED] - PB = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:10:34 - [TEST_STEP][PASSED] - FB = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:10:34 - [TEST_STEP][PASSED] - TR = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:10:34 - [TEST_STEP][PASSED] - TB = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:10:34 - [TEST_STEP][PASSED] - sheetName = "Sheet1": null

10-01-2025T03:10:34 - [TEST_STEP][PASSED] - data = findTestData("PlanFact"): null

10-01-2025T03:10:34 - [TEST_STEP][PASSED] - n = data.getRowNumbers() + 1: null

10-01-2025T03:10:34 - [TEST_STEP][PASSED] - year = todaysDate.substring(todaysDate.length() - 4, todaysDate.length()): null

10-01-2025T03:10:34 - [TEST_STEP][PASSED] - y = year.toInteger(): null

10-01-2025T03:10:34 - [TEST_STEP][PASSED] - m = getText(findTestObject("Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Фильтр Дата")): Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Фильтр Дата' is: '1, 2, 3 кв., Октябрь, Ноябрь 2024 года'

10-01-2025T03:10:34 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Фильтр Дата' is: '1, 2, 3 кв., Октябрь, Ноябрь 2024 года'

10-01-2025T03:10:34 - [TEST_STEP][PASSED] - m = m.substring(0, m.indexOf("2024")): null

10-01-2025T03:10:34 - [TEST_STEP][PASSED] - m = m.trim(): null

10-01-2025T03:10:34 - [TEST_STEP][PASSED] - dashboardName = "Выполнение бизнес-плана": null

10-01-2025T03:10:34 - [TEST_STEP][PASSED] - workbook01 = getWorkbook(excelFilePath): null

10-01-2025T03:10:34 - [TEST_STEP][PASSED] - sheet01 = getExcelSheet(workbook01, sheetName): null

10-01-2025T03:10:34 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 0, dashboardName): null

10-01-2025T03:10:34 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 1, dZO): null

10-01-2025T03:10:34 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 2, typeOfData): null

10-01-2025T03:10:34 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 3, typeOfData): null

10-01-2025T03:10:34 - [TEST_STEP][PASSED] - if (typeOfData == "План"): null

10-01-2025T03:10:34 - [TEST_STEP][PASSED] - else if (typeOfData == "Факт"): null

10-01-2025T03:10:34 - [TEST_STEP][PASSED] - else if (vidget.contains("электроэнергии") == true): null

10-01-2025T03:10:34 - [TEST_STEP][PASSED] - if (tabR == null): null

10-01-2025T03:10:34 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:10:34 - [TEST_STEP][PASSED] - if (tabR == "нет данных"): null

10-01-2025T03:10:34 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 4, "нет данных"): null

10-01-2025T03:10:34 - [TEST_STEP][PASSED] - if (tabB == null): null

10-01-2025T03:10:34 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:10:34 - [TEST_STEP][PASSED] - if (tabB == "нет данных"): null

10-01-2025T03:10:34 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:10:34 - [TEST_STEP][PASSED] - TB = tabB.toInteger(): null

10-01-2025T03:10:34 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 5, TB): null

10-01-2025T03:10:34 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 6, m): null

10-01-2025T03:10:34 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 7, y): null

10-01-2025T03:10:34 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 8, todaysDate): null

10-01-2025T03:10:34 - [TEST_STEP][PASSED] - n = n + 1: null

10-01-2025T03:10:34 - [TEST_STEP][PASSED] - saveWorkbook(excelFilePath, workbook01): null

10-01-2025T03:10:34 - [TEST_STEP][PASSED] - typeOfData = "План Потери": null

10-01-2025T03:10:34 - [TEST_STEP][PASSED] - tabR = GetPPlanR(x = a): null

10-01-2025T03:10:34 - [TEST_STEP][PASSED] - i1 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:10:34 - [TEST_STEP][PASSED] - ii = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:10:34 - [TEST_STEP][PASSED] - for ([ii = 1, ii < 9, (ii++)]): null

10-01-2025T03:10:34 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:10:34 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:10:34 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:10:34 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:10:34 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:10:34 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:10:34 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:10:34 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:10:34 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:10:34 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:10:34 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:10:34 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:10:34 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:10:34 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:10:34 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:10:34 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:10:34 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:10:34 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:10:34 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:10:34 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:10:34 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:10:34 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:10:34 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:10:34 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:10:34 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:10:34 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:10:34 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:10:34 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:10:34 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:10:34 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:10:34 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:10:35 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:10:35 - [TEST_STEP][PASSED] - i1 = x.indexOf("/"): null

10-01-2025T03:10:35 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:10:35 - [TEST_STEP][PASSED] - x = x.substring(0, i1): null

10-01-2025T03:10:35 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:10:35 - [TEST_STEP][PASSED] - return x: null

10-01-2025T03:10:35 - [TEST_STEP][PASSED] - tabB = GetPPlanB(x = b): null

10-01-2025T03:10:35 - [TEST_STEP][PASSED] - i1 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:10:35 - [TEST_STEP][PASSED] - ii = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:10:35 - [TEST_STEP][PASSED] - for ([ii = 1, ii < 9, (ii++)]): null

10-01-2025T03:10:35 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:10:35 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:10:35 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:10:35 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:10:35 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:10:35 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:10:35 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:10:35 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:10:35 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:10:35 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:10:35 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:10:35 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:10:35 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:10:35 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:10:35 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:10:35 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:10:35 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:10:35 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:10:35 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:10:35 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:10:35 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:10:35 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:10:35 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:10:35 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:10:35 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:10:35 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:10:35 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:10:35 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:10:35 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:10:35 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:10:35 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:10:35 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:10:35 - [TEST_STEP][PASSED] - i1 = x.indexOf("/"): null

10-01-2025T03:10:35 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:10:35 - [TEST_STEP][PASSED] - x = x.substring(0, i1): null

10-01-2025T03:10:35 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:10:35 - [TEST_STEP][FAILED] - return x: null

10-01-2025T03:10:35 - [TEST_STEP][PASSED] - println(tabR + "/" + tabB): null

10-01-2025T03:10:35 - [TEST_STEP][FAILED] - if (verifyEqual(PercFactR, PercFactB) == false): null

10-01-2025T03:10:35 - [MESSAGE][FAILED] - Unable to verify equal between actual object 'нет данных' and expected object '8.73' (Root cause: com.kms.katalon.core.exception.StepFailedException: Actual object 'нет данных' and expected object '8.73' are not equal
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.doCall(VerifyEqualKeyword.groovy:58)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.call(VerifyEqualKeyword.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:75)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.verifyEqual(VerifyEqualKeyword.groovy:63)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.execute(VerifyEqualKeyword.groovy:44)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:74)
	at com.kms.katalon.core.keyword.BuiltinKeywords.verifyEqual(BuiltinKeywords.groovy:146)
	at jdk.internal.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at Выполнение бизнес-плана сверка дашбордов.CompareDZOData(Выполнение бизнес-плана сверка дашбордов:771)
	at Выполнение бизнес-плана сверка дашбордов.run(Выполнение бизнес-плана сверка дашбордов:658)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:448)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:439)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:418)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:410)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:285)
	at com.kms.katalon.core.common.CommonExecutor.accessTestCaseMainPhase(CommonExecutor.java:65)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:150)
	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:106)
	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:180)
	at TempTestSuite1736466949911.run(TempTestSuite1736466949911.groovy:35)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
)

10-01-2025T03:10:35 - [TEST_STEP][PASSED] - result = WriteToExcel(typeOfData, todaysDate, PercPlanR, PercPlanB, PercFactR, PercFactB, x, tabR, tabB, o1R, o1B, vidget): null

10-01-2025T03:10:35 - [TEST_STEP][PASSED] - iii = dZO.indexOf("/"): null

10-01-2025T03:10:35 - [TEST_STEP][PASSED] - println(iii): null

10-01-2025T03:10:35 - [TEST_STEP][PASSED] - dZO = dZO.substring(0, iii): null

10-01-2025T03:10:35 - [TEST_STEP][PASSED] - println(dZO): null

10-01-2025T03:10:35 - [TEST_STEP][PASSED] - println(PercPlanR): null

10-01-2025T03:10:35 - [TEST_STEP][PASSED] - println(PercPlanB): null

10-01-2025T03:10:35 - [TEST_STEP][PASSED] - println(PercFactR): null

10-01-2025T03:10:35 - [TEST_STEP][PASSED] - println(PercFactB): null

10-01-2025T03:10:35 - [TEST_STEP][PASSED] - println(tabR): null

10-01-2025T03:10:35 - [TEST_STEP][PASSED] - println(tabB): null

10-01-2025T03:10:35 - [TEST_STEP][PASSED] - println(o1R): null

10-01-2025T03:10:35 - [TEST_STEP][PASSED] - println(o1B): null

10-01-2025T03:10:35 - [TEST_STEP][PASSED] - PR = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:10:35 - [TEST_STEP][PASSED] - FR = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:10:35 - [TEST_STEP][PASSED] - PB = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:10:35 - [TEST_STEP][PASSED] - FB = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:10:35 - [TEST_STEP][PASSED] - TR = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:10:35 - [TEST_STEP][PASSED] - TB = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:10:35 - [TEST_STEP][PASSED] - sheetName = "Sheet1": null

10-01-2025T03:10:35 - [TEST_STEP][PASSED] - data = findTestData("PlanFact"): null

10-01-2025T03:10:35 - [TEST_STEP][PASSED] - n = data.getRowNumbers() + 1: null

10-01-2025T03:10:35 - [TEST_STEP][PASSED] - year = todaysDate.substring(todaysDate.length() - 4, todaysDate.length()): null

10-01-2025T03:10:35 - [TEST_STEP][PASSED] - y = year.toInteger(): null

10-01-2025T03:10:35 - [TEST_STEP][PASSED] - m = getText(findTestObject("Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Фильтр Дата")): Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Фильтр Дата' is: '1, 2, 3 кв., Октябрь, Ноябрь 2024 года'

10-01-2025T03:10:35 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Фильтр Дата' is: '1, 2, 3 кв., Октябрь, Ноябрь 2024 года'

10-01-2025T03:10:35 - [TEST_STEP][PASSED] - m = m.substring(0, m.indexOf("2024")): null

10-01-2025T03:10:35 - [TEST_STEP][PASSED] - m = m.trim(): null

10-01-2025T03:10:35 - [TEST_STEP][PASSED] - dashboardName = "Выполнение бизнес-плана": null

10-01-2025T03:10:35 - [TEST_STEP][PASSED] - workbook01 = getWorkbook(excelFilePath): null

10-01-2025T03:10:35 - [TEST_STEP][PASSED] - sheet01 = getExcelSheet(workbook01, sheetName): null

10-01-2025T03:10:35 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 0, dashboardName): null

10-01-2025T03:10:35 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 1, dZO): null

10-01-2025T03:10:35 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 2, typeOfData): null

10-01-2025T03:10:35 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 3, typeOfData): null

10-01-2025T03:10:35 - [TEST_STEP][PASSED] - if (typeOfData == "План"): null

10-01-2025T03:10:35 - [TEST_STEP][PASSED] - else if (typeOfData == "Факт"): null

10-01-2025T03:10:35 - [TEST_STEP][PASSED] - else if (vidget.contains("электроэнергии") == true): null

10-01-2025T03:10:35 - [TEST_STEP][PASSED] - if (tabR == null): null

10-01-2025T03:10:35 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:10:35 - [TEST_STEP][PASSED] - if (tabR == "нет данных"): null

10-01-2025T03:10:35 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 4, "нет данных"): null

10-01-2025T03:10:35 - [TEST_STEP][PASSED] - if (tabB == null): null

10-01-2025T03:10:35 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:10:35 - [TEST_STEP][PASSED] - if (tabB == "нет данных"): null

10-01-2025T03:10:35 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:10:35 - [TEST_STEP][PASSED] - TB = tabB.toInteger(): null

10-01-2025T03:10:35 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 5, TB): null

10-01-2025T03:10:35 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 6, m): null

10-01-2025T03:10:35 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 7, y): null

10-01-2025T03:10:35 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 8, todaysDate): null

10-01-2025T03:10:35 - [TEST_STEP][PASSED] - n = n + 1: null

10-01-2025T03:10:35 - [TEST_STEP][PASSED] - saveWorkbook(excelFilePath, workbook01): null

10-01-2025T03:10:35 - [TEST_STEP][PASSED] - ii2 = a.indexOf("ПАО"): null

10-01-2025T03:10:35 - [TEST_STEP][PASSED] - if (ii2 == -1): null

10-01-2025T03:10:35 - [TEST_STEP][PASSED] - vidget = "Отклонения фактического уровня потерь от бизнес-плана": null

10-01-2025T03:10:35 - [TEST_STEP][PASSED] - typeOfData = "Коэффициент": null

10-01-2025T03:10:35 - [TEST_STEP][PASSED] - o1R = Geto1R(x = a): null

10-01-2025T03:10:35 - [TEST_STEP][PASSED] - i1 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:10:35 - [TEST_STEP][PASSED] - ii = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:10:35 - [TEST_STEP][PASSED] - for ([ii = 1, ii < 10, (ii++)]): null

10-01-2025T03:10:35 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:10:35 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:10:35 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:10:35 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:10:35 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:10:35 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:10:35 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:10:35 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:10:35 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:10:35 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:10:35 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:10:35 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:10:35 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:10:35 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:10:35 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:10:35 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:10:35 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:10:35 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:10:35 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:10:35 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:10:35 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:10:35 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:10:35 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:10:35 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:10:35 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:10:35 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:10:35 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:10:35 - [TEST_STEP][PASSED] - i1 = x.indexOf("/"): null

10-01-2025T03:10:35 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:10:35 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:10:35 - [TEST_STEP][PASSED] - return x: null

10-01-2025T03:10:35 - [TEST_STEP][PASSED] - o1B = Geto1B(x = b): null

10-01-2025T03:10:35 - [TEST_STEP][PASSED] - i1 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:10:35 - [TEST_STEP][PASSED] - ii = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:10:35 - [TEST_STEP][PASSED] - for ([ii = 1, ii < 10, (ii++)]): null

10-01-2025T03:10:35 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:10:35 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:10:35 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:10:35 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:10:35 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:10:35 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:10:35 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:10:35 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:10:35 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:10:35 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:10:35 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:10:35 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:10:35 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:10:51 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:10:51 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:10:51 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:10:51 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:10:51 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:10:51 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:10:51 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:10:51 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:10:51 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:10:51 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:10:51 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:10:51 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:10:51 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:10:51 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:10:51 - [TEST_STEP][PASSED] - i1 = x.indexOf("/"): null

10-01-2025T03:10:51 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:10:51 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:10:51 - [TEST_STEP][FAILED] - return x: null

10-01-2025T03:10:51 - [TEST_STEP][PASSED] - println(o1R + "/" + o1B): null

10-01-2025T03:10:51 - [TEST_STEP][FAILED] - if (verifyEqual(PercFactR, PercFactB) == false): null

10-01-2025T03:10:51 - [MESSAGE][FAILED] - Unable to verify equal between actual object 'нет данных' and expected object '8.73' (Root cause: com.kms.katalon.core.exception.StepFailedException: Actual object 'нет данных' and expected object '8.73' are not equal
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.doCall(VerifyEqualKeyword.groovy:58)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.call(VerifyEqualKeyword.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:75)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.verifyEqual(VerifyEqualKeyword.groovy:63)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.execute(VerifyEqualKeyword.groovy:44)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:74)
	at com.kms.katalon.core.keyword.BuiltinKeywords.verifyEqual(BuiltinKeywords.groovy:146)
	at jdk.internal.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at Выполнение бизнес-плана сверка дашбордов.CompareDZOData(Выполнение бизнес-плана сверка дашбордов:789)
	at Выполнение бизнес-плана сверка дашбордов.run(Выполнение бизнес-плана сверка дашбордов:658)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:448)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:439)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:418)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:410)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:285)
	at com.kms.katalon.core.common.CommonExecutor.accessTestCaseMainPhase(CommonExecutor.java:65)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:150)
	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:106)
	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:180)
	at TempTestSuite1736466949911.run(TempTestSuite1736466949911.groovy:35)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
)

10-01-2025T03:10:51 - [TEST_STEP][PASSED] - result = WriteToExcel(typeOfData, todaysDate, PercPlanR, PercPlanB, PercFactR, PercFactB, x, tabR, tabB, o1R, o1B, vidget): null

10-01-2025T03:10:51 - [TEST_STEP][PASSED] - iii = dZO.indexOf("/"): null

10-01-2025T03:10:51 - [TEST_STEP][PASSED] - println(iii): null

10-01-2025T03:10:51 - [TEST_STEP][PASSED] - dZO = dZO.substring(0, iii): null

10-01-2025T03:10:51 - [TEST_STEP][PASSED] - println(dZO): null

10-01-2025T03:10:51 - [TEST_STEP][PASSED] - println(PercPlanR): null

10-01-2025T03:10:51 - [TEST_STEP][PASSED] - println(PercPlanB): null

10-01-2025T03:10:51 - [TEST_STEP][PASSED] - println(PercFactR): null

10-01-2025T03:10:51 - [TEST_STEP][PASSED] - println(PercFactB): null

10-01-2025T03:10:51 - [TEST_STEP][PASSED] - println(tabR): null

10-01-2025T03:10:51 - [TEST_STEP][PASSED] - println(tabB): null

10-01-2025T03:10:51 - [TEST_STEP][PASSED] - println(o1R): null

10-01-2025T03:10:51 - [TEST_STEP][PASSED] - println(o1B): null

10-01-2025T03:10:51 - [TEST_STEP][PASSED] - PR = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:10:51 - [TEST_STEP][PASSED] - FR = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:10:51 - [TEST_STEP][PASSED] - PB = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:10:51 - [TEST_STEP][PASSED] - FB = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:10:51 - [TEST_STEP][PASSED] - TR = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:10:51 - [TEST_STEP][PASSED] - TB = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:10:51 - [TEST_STEP][PASSED] - sheetName = "Sheet1": null

10-01-2025T03:10:51 - [TEST_STEP][PASSED] - data = findTestData("PlanFact"): null

10-01-2025T03:10:51 - [TEST_STEP][PASSED] - n = data.getRowNumbers() + 1: null

10-01-2025T03:10:51 - [TEST_STEP][PASSED] - year = todaysDate.substring(todaysDate.length() - 4, todaysDate.length()): null

10-01-2025T03:10:51 - [TEST_STEP][PASSED] - y = year.toInteger(): null

10-01-2025T03:10:51 - [TEST_STEP][PASSED] - m = getText(findTestObject("Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Фильтр Дата")): Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Фильтр Дата' is: '1, 2, 3 кв., Октябрь, Ноябрь 2024 года'

10-01-2025T03:10:51 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Фильтр Дата' is: '1, 2, 3 кв., Октябрь, Ноябрь 2024 года'

10-01-2025T03:10:51 - [TEST_STEP][PASSED] - m = m.substring(0, m.indexOf("2024")): null

10-01-2025T03:10:51 - [TEST_STEP][PASSED] - m = m.trim(): null

10-01-2025T03:10:51 - [TEST_STEP][PASSED] - dashboardName = "Выполнение бизнес-плана": null

10-01-2025T03:10:51 - [TEST_STEP][PASSED] - workbook01 = getWorkbook(excelFilePath): null

10-01-2025T03:10:51 - [TEST_STEP][PASSED] - sheet01 = getExcelSheet(workbook01, sheetName): null

10-01-2025T03:10:51 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 0, dashboardName): null

10-01-2025T03:10:51 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 1, dZO): null

10-01-2025T03:10:51 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 2, typeOfData): null

10-01-2025T03:10:51 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 3, typeOfData): null

10-01-2025T03:10:51 - [TEST_STEP][PASSED] - if (typeOfData == "План"): null

10-01-2025T03:10:51 - [TEST_STEP][PASSED] - else if (typeOfData == "Факт"): null

10-01-2025T03:10:51 - [TEST_STEP][PASSED] - else if (vidget.contains("электроэнергии") == true): null

10-01-2025T03:10:51 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:10:51 - [TEST_STEP][PASSED] - if (o1R == null): null

10-01-2025T03:10:51 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:10:51 - [TEST_STEP][PASSED] - if (o1R == "нет данных"): null

10-01-2025T03:10:51 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 4, "нет данных"): null

10-01-2025T03:10:51 - [TEST_STEP][PASSED] - if (o1B == null): null

10-01-2025T03:10:51 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:10:51 - [TEST_STEP][PASSED] - if (o1B == "нет данных"): null

10-01-2025T03:10:51 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:10:51 - [TEST_STEP][PASSED] - FB = o1B.toDouble(): null

10-01-2025T03:10:51 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 5, FB): null

10-01-2025T03:10:51 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 6, m): null

10-01-2025T03:10:51 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 7, y): null

10-01-2025T03:10:51 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 8, todaysDate): null

10-01-2025T03:10:51 - [TEST_STEP][PASSED] - n = n + 1: null

10-01-2025T03:10:51 - [TEST_STEP][FAILED] - saveWorkbook(excelFilePath, workbook01): null

10-01-2025T03:10:52 - [TEST_STEP][FAILED] - if (verifyEqual(yR, yB) == false): null

10-01-2025T03:10:52 - [MESSAGE][FAILED] - Unable to verify equal between actual object 'Россети Янтарь/нет данных/нет данных/нет данных/нет данных/нет данных/нет данных/нет данных/нет данных/нет данных' and expected object 'Россети Янтарь/9.02/9.00/4181934/3807771/376375/4004237/3643254/360983/-0.02' (Root cause: com.kms.katalon.core.exception.StepFailedException: Actual object 'Россети Янтарь/нет данных/нет данных/нет данных/нет данных/нет данных/нет данных/нет данных/нет данных/нет данных' and expected object 'Россети Янтарь/9.02/9.00/4181934/3807771/376375/4004237/3643254/360983/-0.02' are not equal
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.doCall(VerifyEqualKeyword.groovy:58)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.call(VerifyEqualKeyword.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:75)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.verifyEqual(VerifyEqualKeyword.groovy:63)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.execute(VerifyEqualKeyword.groovy:44)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:74)
	at com.kms.katalon.core.keyword.BuiltinKeywords.verifyEqual(BuiltinKeywords.groovy:146)
	at jdk.internal.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at Выполнение бизнес-плана сверка дашбордов.run(Выполнение бизнес-плана сверка дашбордов:662)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:448)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:439)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:418)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:410)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:285)
	at com.kms.katalon.core.common.CommonExecutor.accessTestCaseMainPhase(CommonExecutor.java:65)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:150)
	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:106)
	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:180)
	at TempTestSuite1736466949911.run(TempTestSuite1736466949911.groovy:35)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
)

10-01-2025T03:10:52 - [TEST_STEP][PASSED] - result = CompareDZOData(a = yR, b = yB, dZO, typeOfData, PercPlanR, PercPlanB, PercFactR, PercFactB, todaysDate, x, vidget, tabR, tabB, o1R, o1B): null

10-01-2025T03:10:52 - [TEST_STEP][PASSED] - ii2 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:10:52 - [TEST_STEP][FAILED] - if (verifyEqual(a, b) == false): null

10-01-2025T03:10:52 - [MESSAGE][FAILED] - Unable to verify equal between actual object 'Россети Янтарь/нет данных/нет данных/нет данных/нет данных/нет данных/нет данных/нет данных/нет данных/нет данных' and expected object 'Россети Янтарь/9.02/9.00/4181934/3807771/376375/4004237/3643254/360983/-0.02' (Root cause: com.kms.katalon.core.exception.StepFailedException: Actual object 'Россети Янтарь/нет данных/нет данных/нет данных/нет данных/нет данных/нет данных/нет данных/нет данных/нет данных' and expected object 'Россети Янтарь/9.02/9.00/4181934/3807771/376375/4004237/3643254/360983/-0.02' are not equal
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.doCall(VerifyEqualKeyword.groovy:58)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.call(VerifyEqualKeyword.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:75)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.verifyEqual(VerifyEqualKeyword.groovy:63)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.execute(VerifyEqualKeyword.groovy:44)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:74)
	at com.kms.katalon.core.keyword.BuiltinKeywords.verifyEqual(BuiltinKeywords.groovy:146)
	at jdk.internal.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at Выполнение бизнес-плана сверка дашбордов.CompareDZOData(Выполнение бизнес-плана сверка дашбордов:673)
	at Выполнение бизнес-плана сверка дашбордов.run(Выполнение бизнес-плана сверка дашбордов:663)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:448)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:439)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:418)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:410)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:285)
	at com.kms.katalon.core.common.CommonExecutor.accessTestCaseMainPhase(CommonExecutor.java:65)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:150)
	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:106)
	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:180)
	at TempTestSuite1736466949911.run(TempTestSuite1736466949911.groovy:35)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
)

10-01-2025T03:10:52 - [TEST_STEP][PASSED] - vidget = "Уровень потерь электроэнергии": null

10-01-2025T03:10:52 - [TEST_STEP][PASSED] - typeOfData = "План": null

10-01-2025T03:10:52 - [TEST_STEP][PASSED] - PercPlanR = GetPercPlanR(x = a): null

10-01-2025T03:10:52 - [TEST_STEP][PASSED] - i1 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:10:52 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:10:52 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:10:52 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:10:52 - [TEST_STEP][PASSED] - i1 = x.indexOf("/"): null

10-01-2025T03:10:52 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:10:52 - [TEST_STEP][PASSED] - x = x.substring(0, i1): null

10-01-2025T03:10:52 - [TEST_STEP][PASSED] - return x: null

10-01-2025T03:10:52 - [TEST_STEP][PASSED] - PercPlanB = GetPercPlanB(x = b): null

10-01-2025T03:10:52 - [TEST_STEP][PASSED] - i1 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:10:52 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:10:52 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:10:52 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:10:52 - [TEST_STEP][PASSED] - i1 = x.indexOf("/"): null

10-01-2025T03:10:52 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:10:52 - [TEST_STEP][PASSED] - x = x.substring(0, i1): null

10-01-2025T03:10:52 - [TEST_STEP][FAILED] - return x: null

10-01-2025T03:10:52 - [TEST_STEP][FAILED] - if (verifyEqual(PercPlanR, PercPlanB) == false): null

10-01-2025T03:10:52 - [MESSAGE][FAILED] - Unable to verify equal between actual object 'нет данных' and expected object '9.02' (Root cause: com.kms.katalon.core.exception.StepFailedException: Actual object 'нет данных' and expected object '9.02' are not equal
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.doCall(VerifyEqualKeyword.groovy:58)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.call(VerifyEqualKeyword.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:75)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.verifyEqual(VerifyEqualKeyword.groovy:63)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.execute(VerifyEqualKeyword.groovy:44)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:74)
	at com.kms.katalon.core.keyword.BuiltinKeywords.verifyEqual(BuiltinKeywords.groovy:146)
	at jdk.internal.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at Выполнение бизнес-плана сверка дашбордов.CompareDZOData(Выполнение бизнес-плана сверка дашбордов:682)
	at Выполнение бизнес-плана сверка дашбордов.run(Выполнение бизнес-плана сверка дашбордов:663)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:448)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:439)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:418)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:410)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:285)
	at com.kms.katalon.core.common.CommonExecutor.accessTestCaseMainPhase(CommonExecutor.java:65)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:150)
	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:106)
	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:180)
	at TempTestSuite1736466949911.run(TempTestSuite1736466949911.groovy:35)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
)

10-01-2025T03:10:52 - [TEST_STEP][PASSED] - result = WriteToExcel(typeOfData, todaysDate, PercPlanR, PercPlanB, PercFactR, PercFactB, x, tabR, tabB, o1R, o1B, vidget): null

10-01-2025T03:10:52 - [TEST_STEP][PASSED] - iii = dZO.indexOf("/"): null

10-01-2025T03:10:52 - [TEST_STEP][PASSED] - println(iii): null

10-01-2025T03:10:52 - [TEST_STEP][PASSED] - dZO = dZO.substring(0, iii): null

10-01-2025T03:10:52 - [TEST_STEP][PASSED] - println(dZO): null

10-01-2025T03:10:52 - [TEST_STEP][PASSED] - println(PercPlanR): null

10-01-2025T03:10:52 - [TEST_STEP][PASSED] - println(PercPlanB): null

10-01-2025T03:10:52 - [TEST_STEP][PASSED] - println(PercFactR): null

10-01-2025T03:10:52 - [TEST_STEP][PASSED] - println(PercFactB): null

10-01-2025T03:10:52 - [TEST_STEP][PASSED] - println(tabR): null

10-01-2025T03:10:52 - [TEST_STEP][PASSED] - println(tabB): null

10-01-2025T03:10:52 - [TEST_STEP][PASSED] - println(o1R): null

10-01-2025T03:10:52 - [TEST_STEP][PASSED] - println(o1B): null

10-01-2025T03:10:52 - [TEST_STEP][PASSED] - PR = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:10:52 - [TEST_STEP][PASSED] - FR = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:10:52 - [TEST_STEP][PASSED] - PB = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:10:52 - [TEST_STEP][PASSED] - FB = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:10:52 - [TEST_STEP][PASSED] - TR = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:10:52 - [TEST_STEP][PASSED] - TB = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:10:52 - [TEST_STEP][PASSED] - sheetName = "Sheet1": null

10-01-2025T03:10:52 - [TEST_STEP][PASSED] - data = findTestData("PlanFact"): null

10-01-2025T03:10:52 - [TEST_STEP][PASSED] - n = data.getRowNumbers() + 1: null

10-01-2025T03:10:52 - [TEST_STEP][PASSED] - year = todaysDate.substring(todaysDate.length() - 4, todaysDate.length()): null

10-01-2025T03:10:52 - [TEST_STEP][PASSED] - y = year.toInteger(): null

10-01-2025T03:10:52 - [TEST_STEP][PASSED] - m = getText(findTestObject("Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Фильтр Дата")): Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Фильтр Дата' is: '1, 2, 3 кв., Октябрь, Ноябрь 2024 года'

10-01-2025T03:10:52 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Фильтр Дата' is: '1, 2, 3 кв., Октябрь, Ноябрь 2024 года'

10-01-2025T03:10:52 - [TEST_STEP][PASSED] - m = m.substring(0, m.indexOf("2024")): null

10-01-2025T03:10:52 - [TEST_STEP][PASSED] - m = m.trim(): null

10-01-2025T03:10:52 - [TEST_STEP][PASSED] - dashboardName = "Выполнение бизнес-плана": null

10-01-2025T03:10:52 - [TEST_STEP][PASSED] - workbook01 = getWorkbook(excelFilePath): null

10-01-2025T03:10:52 - [TEST_STEP][PASSED] - sheet01 = getExcelSheet(workbook01, sheetName): null

10-01-2025T03:10:52 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 0, dashboardName): null

10-01-2025T03:10:52 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 1, dZO): null

10-01-2025T03:10:52 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 2, typeOfData): null

10-01-2025T03:10:52 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 3, typeOfData): null

10-01-2025T03:10:52 - [TEST_STEP][PASSED] - if (typeOfData == "План"): null

10-01-2025T03:10:52 - [TEST_STEP][PASSED] - if (PercPlanR == null): null

10-01-2025T03:10:52 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:10:52 - [TEST_STEP][PASSED] - if (PercPlanR == "нет данных"): null

10-01-2025T03:10:52 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 4, "нет данных"): null

10-01-2025T03:10:52 - [TEST_STEP][PASSED] - if (PercPlanB == null): null

10-01-2025T03:10:52 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:10:52 - [TEST_STEP][PASSED] - if (PercPlanB == "нет данных"): null

10-01-2025T03:10:52 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:10:52 - [TEST_STEP][PASSED] - PB = PercPlanB.toDouble(): null

10-01-2025T03:10:52 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 5, PB): null

10-01-2025T03:10:52 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 6, m): null

10-01-2025T03:10:52 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 7, y): null

10-01-2025T03:10:52 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 8, todaysDate): null

10-01-2025T03:10:52 - [TEST_STEP][PASSED] - n = n + 1: null

10-01-2025T03:10:52 - [TEST_STEP][PASSED] - saveWorkbook(excelFilePath, workbook01): null

10-01-2025T03:10:53 - [TEST_STEP][PASSED] - typeOfData = "Факт": null

10-01-2025T03:10:53 - [TEST_STEP][PASSED] - PercFactR = GetPercFactR(x = a): null

10-01-2025T03:10:53 - [TEST_STEP][PASSED] - i1 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:10:53 - [TEST_STEP][PASSED] - ii = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:10:53 - [TEST_STEP][PASSED] - for ([ii = 1, ii < 3, (ii++)]): null

10-01-2025T03:10:53 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:10:53 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:10:53 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:10:53 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:10:53 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:10:53 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:10:53 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:10:53 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:10:53 - [TEST_STEP][PASSED] - i1 = x.indexOf("/"): null

10-01-2025T03:10:53 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:10:53 - [TEST_STEP][PASSED] - x = x.substring(0, i1): null

10-01-2025T03:10:53 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:10:53 - [TEST_STEP][PASSED] - return x: null

10-01-2025T03:10:53 - [TEST_STEP][PASSED] - PercFactB = GetPercFactB(x = b): null

10-01-2025T03:10:53 - [TEST_STEP][PASSED] - i1 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:10:53 - [TEST_STEP][PASSED] - ii = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:10:53 - [TEST_STEP][PASSED] - for ([ii = 1, ii < 3, (ii++)]): null

10-01-2025T03:10:53 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:10:53 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:10:53 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:10:53 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:10:53 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:10:53 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:10:53 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:10:53 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:10:53 - [TEST_STEP][PASSED] - i1 = x.indexOf("/"): null

10-01-2025T03:10:53 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:10:53 - [TEST_STEP][PASSED] - x = x.substring(0, i1): null

10-01-2025T03:10:53 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:10:53 - [TEST_STEP][FAILED] - return x: null

10-01-2025T03:10:53 - [TEST_STEP][FAILED] - if (verifyEqual(PercFactR, PercFactB) == false): null

10-01-2025T03:10:53 - [MESSAGE][FAILED] - Unable to verify equal between actual object 'нет данных' and expected object '9.00' (Root cause: com.kms.katalon.core.exception.StepFailedException: Actual object 'нет данных' and expected object '9.00' are not equal
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.doCall(VerifyEqualKeyword.groovy:58)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.call(VerifyEqualKeyword.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:75)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.verifyEqual(VerifyEqualKeyword.groovy:63)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.execute(VerifyEqualKeyword.groovy:44)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:74)
	at com.kms.katalon.core.keyword.BuiltinKeywords.verifyEqual(BuiltinKeywords.groovy:146)
	at jdk.internal.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at Выполнение бизнес-плана сверка дашбордов.CompareDZOData(Выполнение бизнес-плана сверка дашбордов:693)
	at Выполнение бизнес-плана сверка дашбордов.run(Выполнение бизнес-плана сверка дашбордов:663)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:448)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:439)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:418)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:410)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:285)
	at com.kms.katalon.core.common.CommonExecutor.accessTestCaseMainPhase(CommonExecutor.java:65)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:150)
	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:106)
	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:180)
	at TempTestSuite1736466949911.run(TempTestSuite1736466949911.groovy:35)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
)

10-01-2025T03:10:53 - [TEST_STEP][PASSED] - result = WriteToExcel(typeOfData, todaysDate, PercPlanR, PercPlanB, PercFactR, PercFactB, x, tabR, tabB, o1R, o1B, vidget): null

10-01-2025T03:10:53 - [TEST_STEP][PASSED] - iii = dZO.indexOf("/"): null

10-01-2025T03:10:53 - [TEST_STEP][PASSED] - println(iii): null

10-01-2025T03:10:53 - [TEST_STEP][PASSED] - dZO = dZO.substring(0, iii): null

10-01-2025T03:10:53 - [TEST_STEP][PASSED] - println(dZO): null

10-01-2025T03:10:53 - [TEST_STEP][PASSED] - println(PercPlanR): null

10-01-2025T03:10:53 - [TEST_STEP][PASSED] - println(PercPlanB): null

10-01-2025T03:10:53 - [TEST_STEP][PASSED] - println(PercFactR): null

10-01-2025T03:10:53 - [TEST_STEP][PASSED] - println(PercFactB): null

10-01-2025T03:10:53 - [TEST_STEP][PASSED] - println(tabR): null

10-01-2025T03:10:53 - [TEST_STEP][PASSED] - println(tabB): null

10-01-2025T03:10:53 - [TEST_STEP][PASSED] - println(o1R): null

10-01-2025T03:10:53 - [TEST_STEP][PASSED] - println(o1B): null

10-01-2025T03:10:53 - [TEST_STEP][PASSED] - PR = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:10:53 - [TEST_STEP][PASSED] - FR = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:10:53 - [TEST_STEP][PASSED] - PB = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:10:53 - [TEST_STEP][PASSED] - FB = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:10:53 - [TEST_STEP][PASSED] - TR = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:10:53 - [TEST_STEP][PASSED] - TB = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:10:53 - [TEST_STEP][PASSED] - sheetName = "Sheet1": null

10-01-2025T03:10:53 - [TEST_STEP][PASSED] - data = findTestData("PlanFact"): null

10-01-2025T03:10:53 - [TEST_STEP][PASSED] - n = data.getRowNumbers() + 1: null

10-01-2025T03:10:53 - [TEST_STEP][PASSED] - year = todaysDate.substring(todaysDate.length() - 4, todaysDate.length()): null

10-01-2025T03:10:53 - [TEST_STEP][PASSED] - y = year.toInteger(): null

10-01-2025T03:10:53 - [TEST_STEP][PASSED] - m = getText(findTestObject("Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Фильтр Дата")): Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Фильтр Дата' is: '1, 2, 3 кв., Октябрь, Ноябрь 2024 года'

10-01-2025T03:10:53 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Фильтр Дата' is: '1, 2, 3 кв., Октябрь, Ноябрь 2024 года'

10-01-2025T03:10:53 - [TEST_STEP][PASSED] - m = m.substring(0, m.indexOf("2024")): null

10-01-2025T03:10:53 - [TEST_STEP][PASSED] - m = m.trim(): null

10-01-2025T03:10:53 - [TEST_STEP][PASSED] - dashboardName = "Выполнение бизнес-плана": null

10-01-2025T03:10:53 - [TEST_STEP][PASSED] - workbook01 = getWorkbook(excelFilePath): null

10-01-2025T03:10:53 - [TEST_STEP][PASSED] - sheet01 = getExcelSheet(workbook01, sheetName): null

10-01-2025T03:10:53 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 0, dashboardName): null

10-01-2025T03:10:53 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 1, dZO): null

10-01-2025T03:10:53 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 2, typeOfData): null

10-01-2025T03:10:53 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 3, typeOfData): null

10-01-2025T03:10:53 - [TEST_STEP][PASSED] - if (typeOfData == "План"): null

10-01-2025T03:10:53 - [TEST_STEP][PASSED] - else if (typeOfData == "Факт"): null

10-01-2025T03:10:53 - [TEST_STEP][PASSED] - if (PercFactR == null): null

10-01-2025T03:10:53 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:10:53 - [TEST_STEP][PASSED] - if (PercFactR == "нет данных"): null

10-01-2025T03:10:53 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 4, "нет данных"): null

10-01-2025T03:10:53 - [TEST_STEP][PASSED] - if (PercFactB == null): null

10-01-2025T03:10:53 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:10:53 - [TEST_STEP][PASSED] - if (PercFactB == "нет данных"): null

10-01-2025T03:10:53 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:10:53 - [TEST_STEP][PASSED] - FB = PercFactB.toDouble(): null

10-01-2025T03:10:53 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 5, FB): null

10-01-2025T03:10:53 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 6, m): null

10-01-2025T03:10:53 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 7, y): null

10-01-2025T03:10:53 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 8, todaysDate): null

10-01-2025T03:10:53 - [TEST_STEP][PASSED] - n = n + 1: null

10-01-2025T03:10:53 - [TEST_STEP][PASSED] - saveWorkbook(excelFilePath, workbook01): null

10-01-2025T03:10:53 - [TEST_STEP][PASSED] - vidget = "Показатели баланса электроэнергии по ДЗО – Факт": null

10-01-2025T03:10:53 - [TEST_STEP][PASSED] - typeOfData = "Факт Отпуск в сеть": null

10-01-2025T03:10:53 - [TEST_STEP][PASSED] - tabR = GetOvSFactR(x = a): null

10-01-2025T03:10:53 - [TEST_STEP][PASSED] - i1 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:10:53 - [TEST_STEP][PASSED] - ii = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:10:53 - [TEST_STEP][PASSED] - for ([ii = 1, ii < 4, (ii++)]): null

10-01-2025T03:10:53 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:10:53 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:10:53 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:10:53 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:10:53 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:10:53 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:10:53 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:10:53 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:10:53 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:10:53 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:10:53 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:10:53 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:10:53 - [TEST_STEP][PASSED] - i1 = x.indexOf("/"): null

10-01-2025T03:10:53 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:10:53 - [TEST_STEP][PASSED] - x = x.substring(0, i1): null

10-01-2025T03:10:53 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:10:53 - [TEST_STEP][PASSED] - return x: null

10-01-2025T03:10:53 - [TEST_STEP][PASSED] - tabB = GetOvSFactB(x = b): null

10-01-2025T03:10:53 - [TEST_STEP][PASSED] - i1 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:10:53 - [TEST_STEP][PASSED] - ii = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:10:53 - [TEST_STEP][PASSED] - for ([ii = 1, ii < 4, (ii++)]): null

10-01-2025T03:10:53 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:10:53 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:10:53 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:10:53 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:10:53 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:10:53 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:10:53 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:10:53 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:10:53 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:10:53 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:10:53 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:10:53 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:10:53 - [TEST_STEP][PASSED] - i1 = x.indexOf("/"): null

10-01-2025T03:10:53 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:10:53 - [TEST_STEP][PASSED] - x = x.substring(0, i1): null

10-01-2025T03:10:53 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:10:53 - [TEST_STEP][FAILED] - return x: null

10-01-2025T03:10:53 - [TEST_STEP][FAILED] - if (verifyEqual(tabR, tabB) == false): null

10-01-2025T03:10:53 - [MESSAGE][FAILED] - Unable to verify equal between actual object 'нет данных' and expected object '4181934' (Root cause: com.kms.katalon.core.exception.StepFailedException: Actual object 'нет данных' and expected object '4181934' are not equal
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.doCall(VerifyEqualKeyword.groovy:58)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.call(VerifyEqualKeyword.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:75)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.verifyEqual(VerifyEqualKeyword.groovy:63)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.execute(VerifyEqualKeyword.groovy:44)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:74)
	at com.kms.katalon.core.keyword.BuiltinKeywords.verifyEqual(BuiltinKeywords.groovy:146)
	at jdk.internal.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at Выполнение бизнес-плана сверка дашбордов.CompareDZOData(Выполнение бизнес-плана сверка дашбордов:706)
	at Выполнение бизнес-плана сверка дашбордов.run(Выполнение бизнес-плана сверка дашбордов:663)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:448)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:439)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:418)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:410)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:285)
	at com.kms.katalon.core.common.CommonExecutor.accessTestCaseMainPhase(CommonExecutor.java:65)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:150)
	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:106)
	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:180)
	at TempTestSuite1736466949911.run(TempTestSuite1736466949911.groovy:35)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
)

10-01-2025T03:10:53 - [TEST_STEP][PASSED] - result = WriteToExcel(typeOfData, todaysDate, PercPlanR, PercPlanB, PercFactR, PercFactB, x, tabR, tabB, o1R, o1B, vidget): null

10-01-2025T03:10:53 - [TEST_STEP][PASSED] - iii = dZO.indexOf("/"): null

10-01-2025T03:10:53 - [TEST_STEP][PASSED] - println(iii): null

10-01-2025T03:10:53 - [TEST_STEP][PASSED] - dZO = dZO.substring(0, iii): null

10-01-2025T03:10:53 - [TEST_STEP][PASSED] - println(dZO): null

10-01-2025T03:10:53 - [TEST_STEP][PASSED] - println(PercPlanR): null

10-01-2025T03:10:53 - [TEST_STEP][PASSED] - println(PercPlanB): null

10-01-2025T03:10:53 - [TEST_STEP][PASSED] - println(PercFactR): null

10-01-2025T03:10:53 - [TEST_STEP][PASSED] - println(PercFactB): null

10-01-2025T03:10:53 - [TEST_STEP][PASSED] - println(tabR): null

10-01-2025T03:10:53 - [TEST_STEP][PASSED] - println(tabB): null

10-01-2025T03:10:53 - [TEST_STEP][PASSED] - println(o1R): null

10-01-2025T03:10:53 - [TEST_STEP][PASSED] - println(o1B): null

10-01-2025T03:10:53 - [TEST_STEP][PASSED] - PR = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:10:53 - [TEST_STEP][PASSED] - FR = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:10:53 - [TEST_STEP][PASSED] - PB = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:10:53 - [TEST_STEP][PASSED] - FB = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:10:53 - [TEST_STEP][PASSED] - TR = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:10:53 - [TEST_STEP][PASSED] - TB = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:10:53 - [TEST_STEP][PASSED] - sheetName = "Sheet1": null

10-01-2025T03:10:53 - [TEST_STEP][PASSED] - data = findTestData("PlanFact"): null

10-01-2025T03:10:53 - [TEST_STEP][PASSED] - n = data.getRowNumbers() + 1: null

10-01-2025T03:10:53 - [TEST_STEP][PASSED] - year = todaysDate.substring(todaysDate.length() - 4, todaysDate.length()): null

10-01-2025T03:10:53 - [TEST_STEP][PASSED] - y = year.toInteger(): null

10-01-2025T03:10:53 - [TEST_STEP][PASSED] - m = getText(findTestObject("Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Фильтр Дата")): Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Фильтр Дата' is: '1, 2, 3 кв., Октябрь, Ноябрь 2024 года'

10-01-2025T03:10:54 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Фильтр Дата' is: '1, 2, 3 кв., Октябрь, Ноябрь 2024 года'

10-01-2025T03:10:54 - [TEST_STEP][PASSED] - m = m.substring(0, m.indexOf("2024")): null

10-01-2025T03:10:54 - [TEST_STEP][PASSED] - m = m.trim(): null

10-01-2025T03:10:54 - [TEST_STEP][PASSED] - dashboardName = "Выполнение бизнес-плана": null

10-01-2025T03:10:54 - [TEST_STEP][PASSED] - workbook01 = getWorkbook(excelFilePath): null

10-01-2025T03:10:54 - [TEST_STEP][PASSED] - sheet01 = getExcelSheet(workbook01, sheetName): null

10-01-2025T03:10:54 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 0, dashboardName): null

10-01-2025T03:10:54 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 1, dZO): null

10-01-2025T03:10:54 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 2, typeOfData): null

10-01-2025T03:10:54 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 3, typeOfData): null

10-01-2025T03:10:54 - [TEST_STEP][PASSED] - if (typeOfData == "План"): null

10-01-2025T03:10:54 - [TEST_STEP][PASSED] - else if (typeOfData == "Факт"): null

10-01-2025T03:10:54 - [TEST_STEP][PASSED] - else if (vidget.contains("электроэнергии") == true): null

10-01-2025T03:10:54 - [TEST_STEP][PASSED] - if (tabR == null): null

10-01-2025T03:10:54 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:10:54 - [TEST_STEP][PASSED] - if (tabR == "нет данных"): null

10-01-2025T03:10:54 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 4, "нет данных"): null

10-01-2025T03:10:54 - [TEST_STEP][PASSED] - if (tabB == null): null

10-01-2025T03:10:54 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:10:54 - [TEST_STEP][PASSED] - if (tabB == "нет данных"): null

10-01-2025T03:10:54 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:10:54 - [TEST_STEP][PASSED] - TB = tabB.toInteger(): null

10-01-2025T03:10:54 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 5, TB): null

10-01-2025T03:10:54 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 6, m): null

10-01-2025T03:10:54 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 7, y): null

10-01-2025T03:10:54 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 8, todaysDate): null

10-01-2025T03:10:54 - [TEST_STEP][PASSED] - n = n + 1: null

10-01-2025T03:10:54 - [TEST_STEP][PASSED] - saveWorkbook(excelFilePath, workbook01): null

10-01-2025T03:10:54 - [TEST_STEP][PASSED] - typeOfData = "Факт Отпуск из сети": null

10-01-2025T03:10:54 - [TEST_STEP][PASSED] - tabR = GetOiSFactR(x = a): null

10-01-2025T03:10:54 - [TEST_STEP][PASSED] - i1 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:10:54 - [TEST_STEP][PASSED] - ii = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:10:54 - [TEST_STEP][PASSED] - for ([ii = 1, ii < 5, (ii++)]): null

10-01-2025T03:10:54 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:10:54 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:10:54 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:10:54 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:10:54 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:10:54 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:10:54 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:10:54 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:10:54 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:10:54 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:10:54 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:10:54 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:10:54 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:10:54 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:10:54 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:10:54 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:10:54 - [TEST_STEP][PASSED] - i1 = x.indexOf("/"): null

10-01-2025T03:10:54 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:10:54 - [TEST_STEP][PASSED] - x = x.substring(0, i1): null

10-01-2025T03:10:54 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:10:54 - [TEST_STEP][PASSED] - return x: null

10-01-2025T03:10:54 - [TEST_STEP][PASSED] - tabB = GetOiSFactB(x = b): null

10-01-2025T03:10:54 - [TEST_STEP][PASSED] - i1 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:10:54 - [TEST_STEP][PASSED] - ii = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:10:54 - [TEST_STEP][PASSED] - for ([ii = 1, ii < 5, (ii++)]): null

10-01-2025T03:10:54 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:10:54 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:10:54 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:10:54 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:10:54 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:10:54 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:10:54 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:10:54 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:10:54 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:10:54 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:10:54 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:10:54 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:10:54 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:10:54 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:10:54 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:10:54 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:10:54 - [TEST_STEP][PASSED] - i1 = x.indexOf("/"): null

10-01-2025T03:10:54 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:10:54 - [TEST_STEP][PASSED] - x = x.substring(0, i1): null

10-01-2025T03:10:54 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:10:54 - [TEST_STEP][FAILED] - return x: null

10-01-2025T03:10:54 - [TEST_STEP][FAILED] - if (verifyEqual(tabR, tabB) == false): null

10-01-2025T03:10:54 - [MESSAGE][FAILED] - Unable to verify equal between actual object 'нет данных' and expected object '3807771' (Root cause: com.kms.katalon.core.exception.StepFailedException: Actual object 'нет данных' and expected object '3807771' are not equal
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.doCall(VerifyEqualKeyword.groovy:58)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.call(VerifyEqualKeyword.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:75)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.verifyEqual(VerifyEqualKeyword.groovy:63)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.execute(VerifyEqualKeyword.groovy:44)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:74)
	at com.kms.katalon.core.keyword.BuiltinKeywords.verifyEqual(BuiltinKeywords.groovy:146)
	at jdk.internal.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at Выполнение бизнес-плана сверка дашбордов.CompareDZOData(Выполнение бизнес-плана сверка дашбордов:717)
	at Выполнение бизнес-плана сверка дашбордов.run(Выполнение бизнес-плана сверка дашбордов:663)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:448)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:439)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:418)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:410)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:285)
	at com.kms.katalon.core.common.CommonExecutor.accessTestCaseMainPhase(CommonExecutor.java:65)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:150)
	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:106)
	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:180)
	at TempTestSuite1736466949911.run(TempTestSuite1736466949911.groovy:35)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
)

10-01-2025T03:10:54 - [TEST_STEP][PASSED] - result = WriteToExcel(typeOfData, todaysDate, PercPlanR, PercPlanB, PercFactR, PercFactB, x, tabR, tabB, o1R, o1B, vidget): null

10-01-2025T03:10:54 - [TEST_STEP][PASSED] - iii = dZO.indexOf("/"): null

10-01-2025T03:10:54 - [TEST_STEP][PASSED] - println(iii): null

10-01-2025T03:10:54 - [TEST_STEP][PASSED] - dZO = dZO.substring(0, iii): null

10-01-2025T03:10:54 - [TEST_STEP][PASSED] - println(dZO): null

10-01-2025T03:10:54 - [TEST_STEP][PASSED] - println(PercPlanR): null

10-01-2025T03:10:54 - [TEST_STEP][PASSED] - println(PercPlanB): null

10-01-2025T03:10:54 - [TEST_STEP][PASSED] - println(PercFactR): null

10-01-2025T03:10:54 - [TEST_STEP][PASSED] - println(PercFactB): null

10-01-2025T03:10:54 - [TEST_STEP][PASSED] - println(tabR): null

10-01-2025T03:10:54 - [TEST_STEP][PASSED] - println(tabB): null

10-01-2025T03:10:54 - [TEST_STEP][PASSED] - println(o1R): null

10-01-2025T03:10:54 - [TEST_STEP][PASSED] - println(o1B): null

10-01-2025T03:10:54 - [TEST_STEP][PASSED] - PR = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:10:54 - [TEST_STEP][PASSED] - FR = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:10:54 - [TEST_STEP][PASSED] - PB = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:10:54 - [TEST_STEP][PASSED] - FB = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:10:54 - [TEST_STEP][PASSED] - TR = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:10:54 - [TEST_STEP][PASSED] - TB = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:10:54 - [TEST_STEP][PASSED] - sheetName = "Sheet1": null

10-01-2025T03:10:54 - [TEST_STEP][PASSED] - data = findTestData("PlanFact"): null

10-01-2025T03:10:54 - [TEST_STEP][PASSED] - n = data.getRowNumbers() + 1: null

10-01-2025T03:10:54 - [TEST_STEP][PASSED] - year = todaysDate.substring(todaysDate.length() - 4, todaysDate.length()): null

10-01-2025T03:10:54 - [TEST_STEP][PASSED] - y = year.toInteger(): null

10-01-2025T03:10:54 - [TEST_STEP][PASSED] - m = getText(findTestObject("Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Фильтр Дата")): Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Фильтр Дата' is: '1, 2, 3 кв., Октябрь, Ноябрь 2024 года'

10-01-2025T03:10:55 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Фильтр Дата' is: '1, 2, 3 кв., Октябрь, Ноябрь 2024 года'

10-01-2025T03:10:55 - [TEST_STEP][PASSED] - m = m.substring(0, m.indexOf("2024")): null

10-01-2025T03:10:55 - [TEST_STEP][PASSED] - m = m.trim(): null

10-01-2025T03:10:55 - [TEST_STEP][PASSED] - dashboardName = "Выполнение бизнес-плана": null

10-01-2025T03:10:55 - [TEST_STEP][PASSED] - workbook01 = getWorkbook(excelFilePath): null

10-01-2025T03:10:55 - [TEST_STEP][PASSED] - sheet01 = getExcelSheet(workbook01, sheetName): null

10-01-2025T03:10:55 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 0, dashboardName): null

10-01-2025T03:10:55 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 1, dZO): null

10-01-2025T03:10:55 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 2, typeOfData): null

10-01-2025T03:10:55 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 3, typeOfData): null

10-01-2025T03:10:55 - [TEST_STEP][PASSED] - if (typeOfData == "План"): null

10-01-2025T03:10:55 - [TEST_STEP][PASSED] - else if (typeOfData == "Факт"): null

10-01-2025T03:10:55 - [TEST_STEP][PASSED] - else if (vidget.contains("электроэнергии") == true): null

10-01-2025T03:10:55 - [TEST_STEP][PASSED] - if (tabR == null): null

10-01-2025T03:10:55 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:10:55 - [TEST_STEP][PASSED] - if (tabR == "нет данных"): null

10-01-2025T03:10:55 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 4, "нет данных"): null

10-01-2025T03:10:55 - [TEST_STEP][PASSED] - if (tabB == null): null

10-01-2025T03:10:55 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:10:55 - [TEST_STEP][PASSED] - if (tabB == "нет данных"): null

10-01-2025T03:10:55 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:10:55 - [TEST_STEP][PASSED] - TB = tabB.toInteger(): null

10-01-2025T03:10:55 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 5, TB): null

10-01-2025T03:10:55 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 6, m): null

10-01-2025T03:10:55 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 7, y): null

10-01-2025T03:10:55 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 8, todaysDate): null

10-01-2025T03:10:55 - [TEST_STEP][PASSED] - n = n + 1: null

10-01-2025T03:10:55 - [TEST_STEP][PASSED] - saveWorkbook(excelFilePath, workbook01): null

10-01-2025T03:10:55 - [TEST_STEP][PASSED] - typeOfData = "Факт Потери": null

10-01-2025T03:10:55 - [TEST_STEP][PASSED] - tabR = GetPFactR(x = a): null

10-01-2025T03:10:55 - [TEST_STEP][PASSED] - i1 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:10:55 - [TEST_STEP][PASSED] - ii = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:10:55 - [TEST_STEP][PASSED] - for ([ii = 1, ii < 6, (ii++)]): null

10-01-2025T03:10:55 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:10:55 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:10:55 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:10:55 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:10:55 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:10:55 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:10:55 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:10:55 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:10:55 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:10:55 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:10:55 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:10:55 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:10:55 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:10:55 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:10:55 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:10:55 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:10:55 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:10:55 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:10:55 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:10:55 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:10:55 - [TEST_STEP][PASSED] - i1 = x.indexOf("/"): null

10-01-2025T03:10:55 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:10:55 - [TEST_STEP][PASSED] - x = x.substring(0, i1): null

10-01-2025T03:10:55 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:10:55 - [TEST_STEP][PASSED] - return x: null

10-01-2025T03:10:55 - [TEST_STEP][PASSED] - tabB = GetPFactB(x = b): null

10-01-2025T03:10:55 - [TEST_STEP][PASSED] - i1 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:10:55 - [TEST_STEP][PASSED] - ii = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:10:55 - [TEST_STEP][PASSED] - for ([ii = 1, ii < 6, (ii++)]): null

10-01-2025T03:10:55 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:10:55 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:10:55 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:10:55 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:10:55 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:10:55 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:10:55 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:10:55 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:10:55 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:10:55 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:10:55 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:10:55 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:10:55 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:10:55 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:10:55 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:10:55 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:10:55 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:10:55 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:10:55 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:10:55 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:10:55 - [TEST_STEP][PASSED] - i1 = x.indexOf("/"): null

10-01-2025T03:10:55 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:10:55 - [TEST_STEP][PASSED] - x = x.substring(0, i1): null

10-01-2025T03:10:55 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:10:55 - [TEST_STEP][FAILED] - return x: null

10-01-2025T03:10:55 - [TEST_STEP][PASSED] - println(tabR + "/" + tabB): null

10-01-2025T03:10:55 - [TEST_STEP][FAILED] - if (verifyEqual(tabR, tabB) == false): null

10-01-2025T03:10:55 - [MESSAGE][FAILED] - Unable to verify equal between actual object 'нет данных' and expected object '376375' (Root cause: com.kms.katalon.core.exception.StepFailedException: Actual object 'нет данных' and expected object '376375' are not equal
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.doCall(VerifyEqualKeyword.groovy:58)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.call(VerifyEqualKeyword.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:75)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.verifyEqual(VerifyEqualKeyword.groovy:63)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.execute(VerifyEqualKeyword.groovy:44)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:74)
	at com.kms.katalon.core.keyword.BuiltinKeywords.verifyEqual(BuiltinKeywords.groovy:146)
	at jdk.internal.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at Выполнение бизнес-плана сверка дашбордов.CompareDZOData(Выполнение бизнес-плана сверка дашбордов:730)
	at Выполнение бизнес-плана сверка дашбордов.run(Выполнение бизнес-плана сверка дашбордов:663)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:448)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:439)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:418)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:410)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:285)
	at com.kms.katalon.core.common.CommonExecutor.accessTestCaseMainPhase(CommonExecutor.java:65)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:150)
	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:106)
	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:180)
	at TempTestSuite1736466949911.run(TempTestSuite1736466949911.groovy:35)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
)

10-01-2025T03:10:55 - [TEST_STEP][PASSED] - result = WriteToExcel(typeOfData, todaysDate, PercPlanR, PercPlanB, PercFactR, PercFactB, x, tabR, tabB, o1R, o1B, vidget): null

10-01-2025T03:10:55 - [TEST_STEP][PASSED] - iii = dZO.indexOf("/"): null

10-01-2025T03:10:55 - [TEST_STEP][PASSED] - println(iii): null

10-01-2025T03:10:55 - [TEST_STEP][PASSED] - dZO = dZO.substring(0, iii): null

10-01-2025T03:10:55 - [TEST_STEP][PASSED] - println(dZO): null

10-01-2025T03:10:55 - [TEST_STEP][PASSED] - println(PercPlanR): null

10-01-2025T03:10:55 - [TEST_STEP][PASSED] - println(PercPlanB): null

10-01-2025T03:10:55 - [TEST_STEP][PASSED] - println(PercFactR): null

10-01-2025T03:10:55 - [TEST_STEP][PASSED] - println(PercFactB): null

10-01-2025T03:10:55 - [TEST_STEP][PASSED] - println(tabR): null

10-01-2025T03:10:55 - [TEST_STEP][PASSED] - println(tabB): null

10-01-2025T03:10:55 - [TEST_STEP][PASSED] - println(o1R): null

10-01-2025T03:10:55 - [TEST_STEP][PASSED] - println(o1B): null

10-01-2025T03:10:55 - [TEST_STEP][PASSED] - PR = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:10:55 - [TEST_STEP][PASSED] - FR = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:10:55 - [TEST_STEP][PASSED] - PB = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:10:55 - [TEST_STEP][PASSED] - FB = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:10:55 - [TEST_STEP][PASSED] - TR = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:10:55 - [TEST_STEP][PASSED] - TB = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:10:55 - [TEST_STEP][PASSED] - sheetName = "Sheet1": null

10-01-2025T03:10:55 - [TEST_STEP][PASSED] - data = findTestData("PlanFact"): null

10-01-2025T03:10:55 - [TEST_STEP][PASSED] - n = data.getRowNumbers() + 1: null

10-01-2025T03:10:55 - [TEST_STEP][PASSED] - year = todaysDate.substring(todaysDate.length() - 4, todaysDate.length()): null

10-01-2025T03:10:55 - [TEST_STEP][PASSED] - y = year.toInteger(): null

10-01-2025T03:10:55 - [TEST_STEP][PASSED] - m = getText(findTestObject("Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Фильтр Дата")): Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Фильтр Дата' is: '1, 2, 3 кв., Октябрь, Ноябрь 2024 года'

10-01-2025T03:10:55 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Фильтр Дата' is: '1, 2, 3 кв., Октябрь, Ноябрь 2024 года'

10-01-2025T03:10:55 - [TEST_STEP][PASSED] - m = m.substring(0, m.indexOf("2024")): null

10-01-2025T03:10:55 - [TEST_STEP][PASSED] - m = m.trim(): null

10-01-2025T03:10:55 - [TEST_STEP][PASSED] - dashboardName = "Выполнение бизнес-плана": null

10-01-2025T03:10:55 - [TEST_STEP][PASSED] - workbook01 = getWorkbook(excelFilePath): null

10-01-2025T03:10:55 - [TEST_STEP][PASSED] - sheet01 = getExcelSheet(workbook01, sheetName): null

10-01-2025T03:10:55 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 0, dashboardName): null

10-01-2025T03:10:55 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 1, dZO): null

10-01-2025T03:10:55 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 2, typeOfData): null

10-01-2025T03:10:55 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 3, typeOfData): null

10-01-2025T03:10:55 - [TEST_STEP][PASSED] - if (typeOfData == "План"): null

10-01-2025T03:10:55 - [TEST_STEP][PASSED] - else if (typeOfData == "Факт"): null

10-01-2025T03:10:55 - [TEST_STEP][PASSED] - else if (vidget.contains("электроэнергии") == true): null

10-01-2025T03:10:55 - [TEST_STEP][PASSED] - if (tabR == null): null

10-01-2025T03:10:55 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:10:55 - [TEST_STEP][PASSED] - if (tabR == "нет данных"): null

10-01-2025T03:10:55 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 4, "нет данных"): null

10-01-2025T03:10:55 - [TEST_STEP][PASSED] - if (tabB == null): null

10-01-2025T03:10:55 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:10:55 - [TEST_STEP][PASSED] - if (tabB == "нет данных"): null

10-01-2025T03:10:55 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:10:55 - [TEST_STEP][PASSED] - TB = tabB.toInteger(): null

10-01-2025T03:10:55 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 5, TB): null

10-01-2025T03:10:55 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 6, m): null

10-01-2025T03:10:55 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 7, y): null

10-01-2025T03:10:55 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 8, todaysDate): null

10-01-2025T03:10:55 - [TEST_STEP][PASSED] - n = n + 1: null

10-01-2025T03:10:55 - [TEST_STEP][PASSED] - saveWorkbook(excelFilePath, workbook01): null

10-01-2025T03:10:56 - [TEST_STEP][PASSED] - vidget = "Показатели баланса электроэнергии по ДЗО – План": null

10-01-2025T03:10:56 - [TEST_STEP][PASSED] - typeOfData = "План Отпуск в сеть": null

10-01-2025T03:10:56 - [TEST_STEP][PASSED] - tabR = GetOvSPlanR(x = a): null

10-01-2025T03:10:56 - [TEST_STEP][PASSED] - i1 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:10:56 - [TEST_STEP][PASSED] - ii = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:10:56 - [TEST_STEP][PASSED] - for ([ii = 1, ii < 7, (ii++)]): null

10-01-2025T03:10:56 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:10:56 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:10:56 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:10:56 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:10:56 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:10:56 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:10:56 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:10:56 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:10:56 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:10:56 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:10:56 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:10:56 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:10:56 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:10:56 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:10:56 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:10:56 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:10:56 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:10:56 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:10:56 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:10:56 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:10:56 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:10:56 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:10:56 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:10:56 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:10:56 - [TEST_STEP][PASSED] - i1 = x.indexOf("/"): null

10-01-2025T03:10:56 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:10:56 - [TEST_STEP][PASSED] - x = x.substring(0, i1): null

10-01-2025T03:10:56 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:10:56 - [TEST_STEP][PASSED] - return x: null

10-01-2025T03:10:56 - [TEST_STEP][PASSED] - tabB = GetOvSPlanB(x = b): null

10-01-2025T03:10:56 - [TEST_STEP][PASSED] - i1 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:10:56 - [TEST_STEP][PASSED] - ii = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:10:56 - [TEST_STEP][PASSED] - for ([ii = 1, ii < 7, (ii++)]): null

10-01-2025T03:10:56 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:10:56 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:10:56 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:10:56 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:10:56 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:10:56 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:10:56 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:10:56 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:10:56 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:10:56 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:10:56 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:10:56 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:10:56 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:10:56 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:10:56 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:10:56 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:10:56 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:10:56 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:10:56 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:10:56 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:10:56 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:10:56 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:10:56 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:10:56 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:10:56 - [TEST_STEP][PASSED] - i1 = x.indexOf("/"): null

10-01-2025T03:10:56 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:10:56 - [TEST_STEP][PASSED] - x = x.substring(0, i1): null

10-01-2025T03:10:56 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:10:56 - [TEST_STEP][FAILED] - return x: null

10-01-2025T03:10:56 - [TEST_STEP][PASSED] - println(tabR + "/" + tabB): null

10-01-2025T03:10:56 - [TEST_STEP][FAILED] - if (verifyEqual(PercFactR, PercFactB) == false): null

10-01-2025T03:10:56 - [MESSAGE][FAILED] - Unable to verify equal between actual object 'нет данных' and expected object '9.00' (Root cause: com.kms.katalon.core.exception.StepFailedException: Actual object 'нет данных' and expected object '9.00' are not equal
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.doCall(VerifyEqualKeyword.groovy:58)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.call(VerifyEqualKeyword.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:75)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.verifyEqual(VerifyEqualKeyword.groovy:63)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.execute(VerifyEqualKeyword.groovy:44)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:74)
	at com.kms.katalon.core.keyword.BuiltinKeywords.verifyEqual(BuiltinKeywords.groovy:146)
	at jdk.internal.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at Выполнение бизнес-плана сверка дашбордов.CompareDZOData(Выполнение бизнес-плана сверка дашбордов:745)
	at Выполнение бизнес-плана сверка дашбордов.run(Выполнение бизнес-плана сверка дашбордов:663)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:448)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:439)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:418)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:410)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:285)
	at com.kms.katalon.core.common.CommonExecutor.accessTestCaseMainPhase(CommonExecutor.java:65)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:150)
	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:106)
	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:180)
	at TempTestSuite1736466949911.run(TempTestSuite1736466949911.groovy:35)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
)

10-01-2025T03:10:56 - [TEST_STEP][PASSED] - result = WriteToExcel(typeOfData, todaysDate, PercPlanR, PercPlanB, PercFactR, PercFactB, x, tabR, tabB, o1R, o1B, vidget): null

10-01-2025T03:10:56 - [TEST_STEP][PASSED] - iii = dZO.indexOf("/"): null

10-01-2025T03:10:56 - [TEST_STEP][PASSED] - println(iii): null

10-01-2025T03:10:56 - [TEST_STEP][PASSED] - dZO = dZO.substring(0, iii): null

10-01-2025T03:10:56 - [TEST_STEP][PASSED] - println(dZO): null

10-01-2025T03:10:56 - [TEST_STEP][PASSED] - println(PercPlanR): null

10-01-2025T03:10:56 - [TEST_STEP][PASSED] - println(PercPlanB): null

10-01-2025T03:10:56 - [TEST_STEP][PASSED] - println(PercFactR): null

10-01-2025T03:10:56 - [TEST_STEP][PASSED] - println(PercFactB): null

10-01-2025T03:10:56 - [TEST_STEP][PASSED] - println(tabR): null

10-01-2025T03:10:56 - [TEST_STEP][PASSED] - println(tabB): null

10-01-2025T03:10:56 - [TEST_STEP][PASSED] - println(o1R): null

10-01-2025T03:10:56 - [TEST_STEP][PASSED] - println(o1B): null

10-01-2025T03:10:56 - [TEST_STEP][PASSED] - PR = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:10:56 - [TEST_STEP][PASSED] - FR = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:10:56 - [TEST_STEP][PASSED] - PB = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:10:56 - [TEST_STEP][PASSED] - FB = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:10:56 - [TEST_STEP][PASSED] - TR = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:10:56 - [TEST_STEP][PASSED] - TB = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:10:56 - [TEST_STEP][PASSED] - sheetName = "Sheet1": null

10-01-2025T03:10:56 - [TEST_STEP][PASSED] - data = findTestData("PlanFact"): null

10-01-2025T03:10:56 - [TEST_STEP][PASSED] - n = data.getRowNumbers() + 1: null

10-01-2025T03:10:56 - [TEST_STEP][PASSED] - year = todaysDate.substring(todaysDate.length() - 4, todaysDate.length()): null

10-01-2025T03:10:56 - [TEST_STEP][PASSED] - y = year.toInteger(): null

10-01-2025T03:10:56 - [TEST_STEP][PASSED] - m = getText(findTestObject("Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Фильтр Дата")): Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Фильтр Дата' is: '1, 2, 3 кв., Октябрь, Ноябрь 2024 года'

10-01-2025T03:10:56 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Фильтр Дата' is: '1, 2, 3 кв., Октябрь, Ноябрь 2024 года'

10-01-2025T03:10:56 - [TEST_STEP][PASSED] - m = m.substring(0, m.indexOf("2024")): null

10-01-2025T03:10:56 - [TEST_STEP][PASSED] - m = m.trim(): null

10-01-2025T03:10:56 - [TEST_STEP][PASSED] - dashboardName = "Выполнение бизнес-плана": null

10-01-2025T03:10:56 - [TEST_STEP][PASSED] - workbook01 = getWorkbook(excelFilePath): null

10-01-2025T03:10:56 - [TEST_STEP][PASSED] - sheet01 = getExcelSheet(workbook01, sheetName): null

10-01-2025T03:10:56 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 0, dashboardName): null

10-01-2025T03:10:56 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 1, dZO): null

10-01-2025T03:10:56 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 2, typeOfData): null

10-01-2025T03:10:56 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 3, typeOfData): null

10-01-2025T03:10:56 - [TEST_STEP][PASSED] - if (typeOfData == "План"): null

10-01-2025T03:10:56 - [TEST_STEP][PASSED] - else if (typeOfData == "Факт"): null

10-01-2025T03:10:56 - [TEST_STEP][PASSED] - else if (vidget.contains("электроэнергии") == true): null

10-01-2025T03:10:56 - [TEST_STEP][PASSED] - if (tabR == null): null

10-01-2025T03:10:56 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:10:56 - [TEST_STEP][PASSED] - if (tabR == "нет данных"): null

10-01-2025T03:10:56 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 4, "нет данных"): null

10-01-2025T03:10:56 - [TEST_STEP][PASSED] - if (tabB == null): null

10-01-2025T03:10:56 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:10:56 - [TEST_STEP][PASSED] - if (tabB == "нет данных"): null

10-01-2025T03:10:56 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:10:56 - [TEST_STEP][PASSED] - TB = tabB.toInteger(): null

10-01-2025T03:10:56 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 5, TB): null

10-01-2025T03:10:56 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 6, m): null

10-01-2025T03:10:56 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 7, y): null

10-01-2025T03:10:56 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 8, todaysDate): null

10-01-2025T03:10:56 - [TEST_STEP][PASSED] - n = n + 1: null

10-01-2025T03:10:56 - [TEST_STEP][PASSED] - saveWorkbook(excelFilePath, workbook01): null

10-01-2025T03:10:57 - [TEST_STEP][PASSED] - typeOfData = "План Отпуск из сети": null

10-01-2025T03:10:57 - [TEST_STEP][PASSED] - tabR = GetOiSPlanR(x = a): null

10-01-2025T03:10:57 - [TEST_STEP][PASSED] - i1 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:10:57 - [TEST_STEP][PASSED] - ii = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:10:57 - [TEST_STEP][PASSED] - for ([ii = 1, ii < 8, (ii++)]): null

10-01-2025T03:10:57 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:10:57 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:10:57 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:10:57 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:10:57 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:10:57 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:10:57 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:10:57 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:10:57 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:10:57 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:10:57 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:10:57 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:10:57 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:10:57 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:10:57 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:10:57 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:10:57 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:10:57 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:10:57 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:10:57 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:10:57 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:10:57 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:10:57 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:10:57 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:10:57 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:10:57 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:10:57 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:10:57 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:10:57 - [TEST_STEP][PASSED] - i1 = x.indexOf("/"): null

10-01-2025T03:10:57 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:10:57 - [TEST_STEP][PASSED] - x = x.substring(0, i1): null

10-01-2025T03:10:57 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:10:57 - [TEST_STEP][PASSED] - return x: null

10-01-2025T03:10:57 - [TEST_STEP][PASSED] - tabB = GetOiSPlanB(x = b): null

10-01-2025T03:10:57 - [TEST_STEP][PASSED] - i1 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:10:57 - [TEST_STEP][PASSED] - ii = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:10:57 - [TEST_STEP][PASSED] - for ([ii = 1, ii < 8, (ii++)]): null

10-01-2025T03:10:57 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:10:57 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:10:57 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:10:57 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:10:57 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:10:57 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:10:57 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:10:57 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:10:57 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:10:57 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:10:57 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:10:57 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:10:57 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:10:57 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:10:57 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:10:57 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:10:57 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:10:57 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:10:57 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:10:57 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:10:57 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:10:57 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:10:57 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:10:57 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:10:57 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:10:57 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:10:57 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:10:57 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:10:57 - [TEST_STEP][PASSED] - i1 = x.indexOf("/"): null

10-01-2025T03:10:57 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:10:57 - [TEST_STEP][PASSED] - x = x.substring(0, i1): null

10-01-2025T03:10:57 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:10:57 - [TEST_STEP][FAILED] - return x: null

10-01-2025T03:10:57 - [TEST_STEP][PASSED] - println(tabR + "/" + tabB): null

10-01-2025T03:10:57 - [TEST_STEP][FAILED] - if (verifyEqual(PercFactR, PercFactB) == false): null

10-01-2025T03:10:57 - [MESSAGE][FAILED] - Unable to verify equal between actual object 'нет данных' and expected object '9.00' (Root cause: com.kms.katalon.core.exception.StepFailedException: Actual object 'нет данных' and expected object '9.00' are not equal
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.doCall(VerifyEqualKeyword.groovy:58)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.call(VerifyEqualKeyword.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:75)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.verifyEqual(VerifyEqualKeyword.groovy:63)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.execute(VerifyEqualKeyword.groovy:44)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:74)
	at com.kms.katalon.core.keyword.BuiltinKeywords.verifyEqual(BuiltinKeywords.groovy:146)
	at jdk.internal.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at Выполнение бизнес-плана сверка дашбордов.CompareDZOData(Выполнение бизнес-плана сверка дашбордов:758)
	at Выполнение бизнес-плана сверка дашбордов.run(Выполнение бизнес-плана сверка дашбордов:663)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:448)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:439)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:418)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:410)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:285)
	at com.kms.katalon.core.common.CommonExecutor.accessTestCaseMainPhase(CommonExecutor.java:65)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:150)
	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:106)
	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:180)
	at TempTestSuite1736466949911.run(TempTestSuite1736466949911.groovy:35)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
)

10-01-2025T03:10:57 - [TEST_STEP][PASSED] - result = WriteToExcel(typeOfData, todaysDate, PercPlanR, PercPlanB, PercFactR, PercFactB, x, tabR, tabB, o1R, o1B, vidget): null

10-01-2025T03:10:57 - [TEST_STEP][PASSED] - iii = dZO.indexOf("/"): null

10-01-2025T03:10:57 - [TEST_STEP][PASSED] - println(iii): null

10-01-2025T03:10:57 - [TEST_STEP][PASSED] - dZO = dZO.substring(0, iii): null

10-01-2025T03:10:57 - [TEST_STEP][PASSED] - println(dZO): null

10-01-2025T03:10:57 - [TEST_STEP][PASSED] - println(PercPlanR): null

10-01-2025T03:10:57 - [TEST_STEP][PASSED] - println(PercPlanB): null

10-01-2025T03:10:57 - [TEST_STEP][PASSED] - println(PercFactR): null

10-01-2025T03:10:57 - [TEST_STEP][PASSED] - println(PercFactB): null

10-01-2025T03:10:57 - [TEST_STEP][PASSED] - println(tabR): null

10-01-2025T03:10:57 - [TEST_STEP][PASSED] - println(tabB): null

10-01-2025T03:10:57 - [TEST_STEP][PASSED] - println(o1R): null

10-01-2025T03:10:57 - [TEST_STEP][PASSED] - println(o1B): null

10-01-2025T03:10:57 - [TEST_STEP][PASSED] - PR = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:10:57 - [TEST_STEP][PASSED] - FR = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:10:57 - [TEST_STEP][PASSED] - PB = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:10:57 - [TEST_STEP][PASSED] - FB = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:10:57 - [TEST_STEP][PASSED] - TR = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:10:57 - [TEST_STEP][PASSED] - TB = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:10:57 - [TEST_STEP][PASSED] - sheetName = "Sheet1": null

10-01-2025T03:10:57 - [TEST_STEP][PASSED] - data = findTestData("PlanFact"): null

10-01-2025T03:10:57 - [TEST_STEP][PASSED] - n = data.getRowNumbers() + 1: null

10-01-2025T03:10:57 - [TEST_STEP][PASSED] - year = todaysDate.substring(todaysDate.length() - 4, todaysDate.length()): null

10-01-2025T03:10:57 - [TEST_STEP][PASSED] - y = year.toInteger(): null

10-01-2025T03:10:57 - [TEST_STEP][PASSED] - m = getText(findTestObject("Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Фильтр Дата")): Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Фильтр Дата' is: '1, 2, 3 кв., Октябрь, Ноябрь 2024 года'

10-01-2025T03:10:57 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Фильтр Дата' is: '1, 2, 3 кв., Октябрь, Ноябрь 2024 года'

10-01-2025T03:10:57 - [TEST_STEP][PASSED] - m = m.substring(0, m.indexOf("2024")): null

10-01-2025T03:10:57 - [TEST_STEP][PASSED] - m = m.trim(): null

10-01-2025T03:10:57 - [TEST_STEP][PASSED] - dashboardName = "Выполнение бизнес-плана": null

10-01-2025T03:10:57 - [TEST_STEP][PASSED] - workbook01 = getWorkbook(excelFilePath): null

10-01-2025T03:10:57 - [TEST_STEP][PASSED] - sheet01 = getExcelSheet(workbook01, sheetName): null

10-01-2025T03:10:57 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 0, dashboardName): null

10-01-2025T03:10:57 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 1, dZO): null

10-01-2025T03:10:57 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 2, typeOfData): null

10-01-2025T03:10:57 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 3, typeOfData): null

10-01-2025T03:10:57 - [TEST_STEP][PASSED] - if (typeOfData == "План"): null

10-01-2025T03:10:57 - [TEST_STEP][PASSED] - else if (typeOfData == "Факт"): null

10-01-2025T03:10:57 - [TEST_STEP][PASSED] - else if (vidget.contains("электроэнергии") == true): null

10-01-2025T03:10:57 - [TEST_STEP][PASSED] - if (tabR == null): null

10-01-2025T03:10:57 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:10:57 - [TEST_STEP][PASSED] - if (tabR == "нет данных"): null

10-01-2025T03:10:57 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 4, "нет данных"): null

10-01-2025T03:10:57 - [TEST_STEP][PASSED] - if (tabB == null): null

10-01-2025T03:10:57 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:10:57 - [TEST_STEP][PASSED] - if (tabB == "нет данных"): null

10-01-2025T03:10:57 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:10:57 - [TEST_STEP][PASSED] - TB = tabB.toInteger(): null

10-01-2025T03:10:57 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 5, TB): null

10-01-2025T03:10:57 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 6, m): null

10-01-2025T03:10:57 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 7, y): null

10-01-2025T03:10:57 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 8, todaysDate): null

10-01-2025T03:10:57 - [TEST_STEP][PASSED] - n = n + 1: null

10-01-2025T03:10:57 - [TEST_STEP][PASSED] - saveWorkbook(excelFilePath, workbook01): null

10-01-2025T03:10:57 - [TEST_STEP][PASSED] - typeOfData = "План Потери": null

10-01-2025T03:10:57 - [TEST_STEP][PASSED] - tabR = GetPPlanR(x = a): null

10-01-2025T03:10:57 - [TEST_STEP][PASSED] - i1 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:10:57 - [TEST_STEP][PASSED] - ii = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:10:57 - [TEST_STEP][PASSED] - for ([ii = 1, ii < 9, (ii++)]): null

10-01-2025T03:10:57 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:10:57 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:10:57 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:10:57 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:10:57 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:10:57 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:10:57 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:10:57 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:10:57 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:10:57 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:10:57 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:10:57 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:10:57 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:10:57 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:10:57 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:10:57 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:10:57 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:10:57 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:10:57 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:10:57 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:10:57 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:10:57 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:10:57 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:10:57 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:10:57 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:10:57 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:10:57 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:10:57 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:10:57 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:10:57 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:10:57 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:10:57 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:10:57 - [TEST_STEP][PASSED] - i1 = x.indexOf("/"): null

10-01-2025T03:10:57 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:10:57 - [TEST_STEP][PASSED] - x = x.substring(0, i1): null

10-01-2025T03:10:57 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:10:57 - [TEST_STEP][PASSED] - return x: null

10-01-2025T03:10:57 - [TEST_STEP][PASSED] - tabB = GetPPlanB(x = b): null

10-01-2025T03:10:57 - [TEST_STEP][PASSED] - i1 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:10:57 - [TEST_STEP][PASSED] - ii = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:10:57 - [TEST_STEP][PASSED] - for ([ii = 1, ii < 9, (ii++)]): null

10-01-2025T03:10:57 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:10:57 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:10:57 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:10:57 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:10:57 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:10:57 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:10:57 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:10:57 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:10:57 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:10:57 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:10:57 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:10:57 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:10:57 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:10:57 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:10:57 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:10:57 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:10:57 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:10:57 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:10:57 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:10:57 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:10:57 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:10:57 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:10:57 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:10:57 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:10:57 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:10:57 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:10:57 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:10:57 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:10:57 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:10:57 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:10:57 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:10:57 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:10:57 - [TEST_STEP][PASSED] - i1 = x.indexOf("/"): null

10-01-2025T03:10:57 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:10:57 - [TEST_STEP][PASSED] - x = x.substring(0, i1): null

10-01-2025T03:10:57 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:10:57 - [TEST_STEP][FAILED] - return x: null

10-01-2025T03:10:57 - [TEST_STEP][PASSED] - println(tabR + "/" + tabB): null

10-01-2025T03:10:57 - [TEST_STEP][FAILED] - if (verifyEqual(PercFactR, PercFactB) == false): null

10-01-2025T03:10:57 - [MESSAGE][FAILED] - Unable to verify equal between actual object 'нет данных' and expected object '9.00' (Root cause: com.kms.katalon.core.exception.StepFailedException: Actual object 'нет данных' and expected object '9.00' are not equal
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.doCall(VerifyEqualKeyword.groovy:58)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.call(VerifyEqualKeyword.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:75)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.verifyEqual(VerifyEqualKeyword.groovy:63)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.execute(VerifyEqualKeyword.groovy:44)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:74)
	at com.kms.katalon.core.keyword.BuiltinKeywords.verifyEqual(BuiltinKeywords.groovy:146)
	at jdk.internal.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at Выполнение бизнес-плана сверка дашбордов.CompareDZOData(Выполнение бизнес-плана сверка дашбордов:771)
	at Выполнение бизнес-плана сверка дашбордов.run(Выполнение бизнес-плана сверка дашбордов:663)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:448)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:439)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:418)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:410)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:285)
	at com.kms.katalon.core.common.CommonExecutor.accessTestCaseMainPhase(CommonExecutor.java:65)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:150)
	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:106)
	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:180)
	at TempTestSuite1736466949911.run(TempTestSuite1736466949911.groovy:35)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
)

10-01-2025T03:10:57 - [TEST_STEP][PASSED] - result = WriteToExcel(typeOfData, todaysDate, PercPlanR, PercPlanB, PercFactR, PercFactB, x, tabR, tabB, o1R, o1B, vidget): null

10-01-2025T03:10:57 - [TEST_STEP][PASSED] - iii = dZO.indexOf("/"): null

10-01-2025T03:10:57 - [TEST_STEP][PASSED] - println(iii): null

10-01-2025T03:10:57 - [TEST_STEP][PASSED] - dZO = dZO.substring(0, iii): null

10-01-2025T03:10:57 - [TEST_STEP][PASSED] - println(dZO): null

10-01-2025T03:10:57 - [TEST_STEP][PASSED] - println(PercPlanR): null

10-01-2025T03:10:57 - [TEST_STEP][PASSED] - println(PercPlanB): null

10-01-2025T03:10:57 - [TEST_STEP][PASSED] - println(PercFactR): null

10-01-2025T03:10:57 - [TEST_STEP][PASSED] - println(PercFactB): null

10-01-2025T03:10:57 - [TEST_STEP][PASSED] - println(tabR): null

10-01-2025T03:10:57 - [TEST_STEP][PASSED] - println(tabB): null

10-01-2025T03:10:57 - [TEST_STEP][PASSED] - println(o1R): null

10-01-2025T03:10:57 - [TEST_STEP][PASSED] - println(o1B): null

10-01-2025T03:10:57 - [TEST_STEP][PASSED] - PR = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:10:57 - [TEST_STEP][PASSED] - FR = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:10:57 - [TEST_STEP][PASSED] - PB = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:10:57 - [TEST_STEP][PASSED] - FB = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:10:57 - [TEST_STEP][PASSED] - TR = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:10:57 - [TEST_STEP][PASSED] - TB = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:10:57 - [TEST_STEP][PASSED] - sheetName = "Sheet1": null

10-01-2025T03:10:57 - [TEST_STEP][PASSED] - data = findTestData("PlanFact"): null

10-01-2025T03:10:58 - [TEST_STEP][PASSED] - n = data.getRowNumbers() + 1: null

10-01-2025T03:10:58 - [TEST_STEP][PASSED] - year = todaysDate.substring(todaysDate.length() - 4, todaysDate.length()): null

10-01-2025T03:10:58 - [TEST_STEP][PASSED] - y = year.toInteger(): null

10-01-2025T03:10:58 - [TEST_STEP][PASSED] - m = getText(findTestObject("Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Фильтр Дата")): Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Фильтр Дата' is: '1, 2, 3 кв., Октябрь, Ноябрь 2024 года'

10-01-2025T03:10:58 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Фильтр Дата' is: '1, 2, 3 кв., Октябрь, Ноябрь 2024 года'

10-01-2025T03:10:58 - [TEST_STEP][PASSED] - m = m.substring(0, m.indexOf("2024")): null

10-01-2025T03:10:58 - [TEST_STEP][PASSED] - m = m.trim(): null

10-01-2025T03:10:58 - [TEST_STEP][PASSED] - dashboardName = "Выполнение бизнес-плана": null

10-01-2025T03:10:58 - [TEST_STEP][PASSED] - workbook01 = getWorkbook(excelFilePath): null

10-01-2025T03:10:58 - [TEST_STEP][PASSED] - sheet01 = getExcelSheet(workbook01, sheetName): null

10-01-2025T03:10:58 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 0, dashboardName): null

10-01-2025T03:10:58 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 1, dZO): null

10-01-2025T03:10:58 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 2, typeOfData): null

10-01-2025T03:10:58 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 3, typeOfData): null

10-01-2025T03:10:58 - [TEST_STEP][PASSED] - if (typeOfData == "План"): null

10-01-2025T03:10:58 - [TEST_STEP][PASSED] - else if (typeOfData == "Факт"): null

10-01-2025T03:10:58 - [TEST_STEP][PASSED] - else if (vidget.contains("электроэнергии") == true): null

10-01-2025T03:10:58 - [TEST_STEP][PASSED] - if (tabR == null): null

10-01-2025T03:10:58 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:10:58 - [TEST_STEP][PASSED] - if (tabR == "нет данных"): null

10-01-2025T03:10:58 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 4, "нет данных"): null

10-01-2025T03:10:58 - [TEST_STEP][PASSED] - if (tabB == null): null

10-01-2025T03:10:58 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:10:58 - [TEST_STEP][PASSED] - if (tabB == "нет данных"): null

10-01-2025T03:10:58 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:10:58 - [TEST_STEP][PASSED] - TB = tabB.toInteger(): null

10-01-2025T03:10:58 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 5, TB): null

10-01-2025T03:10:58 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 6, m): null

10-01-2025T03:10:58 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 7, y): null

10-01-2025T03:10:58 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 8, todaysDate): null

10-01-2025T03:10:58 - [TEST_STEP][PASSED] - n = n + 1: null

10-01-2025T03:10:58 - [TEST_STEP][PASSED] - saveWorkbook(excelFilePath, workbook01): null

10-01-2025T03:10:58 - [TEST_STEP][PASSED] - ii2 = a.indexOf("ПАО"): null

10-01-2025T03:10:58 - [TEST_STEP][PASSED] - if (ii2 == -1): null

10-01-2025T03:10:58 - [TEST_STEP][PASSED] - vidget = "Отклонения фактического уровня потерь от бизнес-плана": null

10-01-2025T03:10:58 - [TEST_STEP][PASSED] - typeOfData = "Коэффициент": null

10-01-2025T03:10:58 - [TEST_STEP][PASSED] - o1R = Geto1R(x = a): null

10-01-2025T03:10:58 - [TEST_STEP][PASSED] - i1 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:10:58 - [TEST_STEP][PASSED] - ii = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:10:58 - [TEST_STEP][PASSED] - for ([ii = 1, ii < 10, (ii++)]): null

10-01-2025T03:10:58 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:10:58 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:10:58 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:10:58 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:10:58 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:10:58 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:10:58 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:10:58 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:10:58 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:10:58 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:10:58 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:10:58 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:10:58 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:10:58 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:10:58 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:10:58 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:10:58 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:10:58 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:10:58 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:10:58 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:10:58 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:10:58 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:10:58 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:10:58 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:10:58 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:10:58 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:10:58 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:10:58 - [TEST_STEP][PASSED] - i1 = x.indexOf("/"): null

10-01-2025T03:10:58 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:10:58 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:10:58 - [TEST_STEP][PASSED] - return x: null

10-01-2025T03:10:58 - [TEST_STEP][PASSED] - o1B = Geto1B(x = b): null

10-01-2025T03:10:58 - [TEST_STEP][PASSED] - i1 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:10:58 - [TEST_STEP][PASSED] - ii = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:10:58 - [TEST_STEP][PASSED] - for ([ii = 1, ii < 10, (ii++)]): null

10-01-2025T03:10:58 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:10:58 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:10:58 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:10:58 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:10:58 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:10:58 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:10:58 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:10:58 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:10:58 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:10:58 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:10:58 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:10:58 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:10:58 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:10:58 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:10:58 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:10:58 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:10:58 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:10:58 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:10:58 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:10:58 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:10:58 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:10:58 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:10:58 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:10:58 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:10:58 - [TEST_STEP][PASSED] - i1 = x.indexOf("/") + 1: null

10-01-2025T03:10:58 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:10:58 - [TEST_STEP][PASSED] - x = x.substring(i1, x.length()): null

10-01-2025T03:10:58 - [TEST_STEP][PASSED] - i1 = x.indexOf("/"): null

10-01-2025T03:10:58 - [TEST_STEP][PASSED] - if (i1 > -1): null

10-01-2025T03:10:58 - [TEST_STEP][PASSED] - println(x): null

10-01-2025T03:10:58 - [TEST_STEP][FAILED] - return x: null

10-01-2025T03:10:58 - [TEST_STEP][PASSED] - println(o1R + "/" + o1B): null

10-01-2025T03:10:58 - [TEST_STEP][FAILED] - if (verifyEqual(PercFactR, PercFactB) == false): null

10-01-2025T03:10:58 - [MESSAGE][FAILED] - Unable to verify equal between actual object 'нет данных' and expected object '9.00' (Root cause: com.kms.katalon.core.exception.StepFailedException: Actual object 'нет данных' and expected object '9.00' are not equal
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.doCall(VerifyEqualKeyword.groovy:58)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.call(VerifyEqualKeyword.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:75)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.verifyEqual(VerifyEqualKeyword.groovy:63)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.execute(VerifyEqualKeyword.groovy:44)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:74)
	at com.kms.katalon.core.keyword.BuiltinKeywords.verifyEqual(BuiltinKeywords.groovy:146)
	at jdk.internal.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at Выполнение бизнес-плана сверка дашбордов.CompareDZOData(Выполнение бизнес-плана сверка дашбордов:789)
	at Выполнение бизнес-плана сверка дашбордов.run(Выполнение бизнес-плана сверка дашбордов:663)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:448)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:439)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:418)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:410)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:285)
	at com.kms.katalon.core.common.CommonExecutor.accessTestCaseMainPhase(CommonExecutor.java:65)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:150)
	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:106)
	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:180)
	at TempTestSuite1736466949911.run(TempTestSuite1736466949911.groovy:35)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
)

10-01-2025T03:10:58 - [TEST_STEP][PASSED] - result = WriteToExcel(typeOfData, todaysDate, PercPlanR, PercPlanB, PercFactR, PercFactB, x, tabR, tabB, o1R, o1B, vidget): null

10-01-2025T03:10:58 - [TEST_STEP][PASSED] - iii = dZO.indexOf("/"): null

10-01-2025T03:10:58 - [TEST_STEP][PASSED] - println(iii): null

10-01-2025T03:10:58 - [TEST_STEP][PASSED] - dZO = dZO.substring(0, iii): null

10-01-2025T03:10:58 - [TEST_STEP][PASSED] - println(dZO): null

10-01-2025T03:10:58 - [TEST_STEP][PASSED] - println(PercPlanR): null

10-01-2025T03:10:58 - [TEST_STEP][PASSED] - println(PercPlanB): null

10-01-2025T03:10:58 - [TEST_STEP][PASSED] - println(PercFactR): null

10-01-2025T03:10:58 - [TEST_STEP][PASSED] - println(PercFactB): null

10-01-2025T03:10:58 - [TEST_STEP][PASSED] - println(tabR): null

10-01-2025T03:10:58 - [TEST_STEP][PASSED] - println(tabB): null

10-01-2025T03:10:58 - [TEST_STEP][PASSED] - println(o1R): null

10-01-2025T03:10:58 - [TEST_STEP][PASSED] - println(o1B): null

10-01-2025T03:10:58 - [TEST_STEP][PASSED] - PR = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:10:58 - [TEST_STEP][PASSED] - FR = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:10:58 - [TEST_STEP][PASSED] - PB = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:10:58 - [TEST_STEP][PASSED] - FB = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:10:58 - [TEST_STEP][PASSED] - TR = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:10:58 - [TEST_STEP][PASSED] - TB = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:10:58 - [TEST_STEP][PASSED] - sheetName = "Sheet1": null

10-01-2025T03:10:58 - [TEST_STEP][PASSED] - data = findTestData("PlanFact"): null

10-01-2025T03:10:58 - [TEST_STEP][PASSED] - n = data.getRowNumbers() + 1: null

10-01-2025T03:10:58 - [TEST_STEP][PASSED] - year = todaysDate.substring(todaysDate.length() - 4, todaysDate.length()): null

10-01-2025T03:10:58 - [TEST_STEP][PASSED] - y = year.toInteger(): null

10-01-2025T03:10:58 - [TEST_STEP][PASSED] - m = getText(findTestObject("Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Фильтр Дата")): Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Фильтр Дата' is: '1, 2, 3 кв., Октябрь, Ноябрь 2024 года'

10-01-2025T03:10:59 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выполнение бизнес-плана/Выполнение бизнес-плана Балансы/Фильтр Дата' is: '1, 2, 3 кв., Октябрь, Ноябрь 2024 года'

10-01-2025T03:10:59 - [TEST_STEP][PASSED] - m = m.substring(0, m.indexOf("2024")): null

10-01-2025T03:10:59 - [TEST_STEP][PASSED] - m = m.trim(): null

10-01-2025T03:10:59 - [TEST_STEP][PASSED] - dashboardName = "Выполнение бизнес-плана": null

10-01-2025T03:10:59 - [TEST_STEP][PASSED] - workbook01 = getWorkbook(excelFilePath): null

10-01-2025T03:10:59 - [TEST_STEP][PASSED] - sheet01 = getExcelSheet(workbook01, sheetName): null

10-01-2025T03:10:59 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 0, dashboardName): null

10-01-2025T03:10:59 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 1, dZO): null

10-01-2025T03:10:59 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 2, typeOfData): null

10-01-2025T03:10:59 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 3, typeOfData): null

10-01-2025T03:10:59 - [TEST_STEP][PASSED] - if (typeOfData == "План"): null

10-01-2025T03:10:59 - [TEST_STEP][PASSED] - else if (typeOfData == "Факт"): null

10-01-2025T03:10:59 - [TEST_STEP][PASSED] - else if (vidget.contains("электроэнергии") == true): null

10-01-2025T03:10:59 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:10:59 - [TEST_STEP][PASSED] - if (o1R == null): null

10-01-2025T03:10:59 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:10:59 - [TEST_STEP][PASSED] - if (o1R == "нет данных"): null

10-01-2025T03:10:59 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 4, "нет данных"): null

10-01-2025T03:10:59 - [TEST_STEP][PASSED] - if (o1B == null): null

10-01-2025T03:10:59 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:10:59 - [TEST_STEP][PASSED] - if (o1B == "нет данных"): null

10-01-2025T03:10:59 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:10:59 - [TEST_STEP][PASSED] - FB = o1B.toDouble(): null

10-01-2025T03:10:59 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 5, FB): null

10-01-2025T03:10:59 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 6, m): null

10-01-2025T03:10:59 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 7, y): null

10-01-2025T03:10:59 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 8, todaysDate): null

10-01-2025T03:10:59 - [TEST_STEP][PASSED] - n = n + 1: null

10-01-2025T03:10:59 - [TEST_STEP][PASSED] - saveWorkbook(excelFilePath, workbook01): null

10-01-2025T03:10:59 - [TEST_STEP][PASSED] - closeBrowser(): Browser is closed

10-01-2025T03:10:59 - [MESSAGE][PASSED] - Browser is closed]]></system-out>
         <system-err><![CDATA[10-01-2025T02:55:54 - [TEST_CASE][FAILED] - Test Cases/Сверки дашбордов/Выполнение бизнес-плана сверка дашбордов: Test Cases/Сверки дашбордов/Выполнение бизнес-плана сверка дашбордов FAILED.
Reason:
com.kms.katalon.core.exception.StepFailedException: Unable to verify object is present (Root cause: com.kms.katalon.core.exception.StepFailedException: Unable to verify object is present
	at com.kms.katalon.core.webui.keyword.internal.WebUIKeywordMain.stepFailed(WebUIKeywordMain.groovy:64)
	at com.kms.katalon.core.webui.keyword.internal.WebUIKeywordMain.runKeyword(WebUIKeywordMain.groovy:26)
	at com.kms.katalon.core.webui.keyword.builtin.VerifyElementPresentKeyword.verifyElementPresent(VerifyElementPresentKeyword.groovy:92)
	at com.kms.katalon.core.webui.keyword.builtin.VerifyElementPresentKeyword.execute(VerifyElementPresentKeyword.groovy:68)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:74)
	at com.kms.katalon.core.webui.keyword.WebUiBuiltInKeywords.verifyElementPresent(WebUiBuiltInKeywords.groovy:1503)
	at Выполнение бизнес-плана сверка дашбордов.GetAllPAOData(Выполнение бизнес-плана сверка дашбордов:862)
	at Выполнение бизнес-плана сверка дашбордов.run(Выполнение бизнес-плана сверка дашбордов:362)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:448)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:439)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:418)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:410)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:285)
	at com.kms.katalon.core.common.CommonExecutor.accessTestCaseMainPhase(CommonExecutor.java:65)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:150)
	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:106)
	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:180)
	at TempTestSuite1736466949911.run(TempTestSuite1736466949911.groovy:35)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
Caused by: java.lang.IllegalArgumentException: Object is null
	at com.kms.katalon.core.helper.KeywordHelper.checkTestObjectParameter(KeywordHelper.java:33)
	at com.kms.katalon.core.webui.keyword.builtin.VerifyElementPresentKeyword$_verifyElementPresent_closure1.doCall(VerifyElementPresentKeyword.groovy:76)
	at com.kms.katalon.core.webui.keyword.builtin.VerifyElementPresentKeyword$_verifyElementPresent_closure1.call(VerifyElementPresentKeyword.groovy)
	at com.kms.katalon.core.webui.keyword.internal.WebUIKeywordMain.runKeyword(WebUIKeywordMain.groovy:20)
	at com.kms.katalon.core.webui.keyword.builtin.VerifyElementPresentKeyword.verifyElementPresent(VerifyElementPresentKeyword.groovy:92)
	at com.kms.katalon.core.webui.keyword.builtin.VerifyElementPresentKeyword.execute(VerifyElementPresentKeyword.groovy:68)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:74)
	at com.kms.katalon.core.webui.keyword.WebUiBuiltInKeywords.verifyElementPresent(WebUiBuiltInKeywords.groovy:1503)
	at Script1719299571342.GetAllPAOData(Script1719299571342.groovy:862)
	at Script1719299571342.run(Script1719299571342.groovy:362)
	... 15 more
)
	at com.kms.katalon.core.keyword.internal.KeywordMain.stepFailed(KeywordMain.groovy:39)
	at com.kms.katalon.core.webui.keyword.internal.WebUIKeywordMain.stepFailed(WebUIKeywordMain.groovy:64)
	at com.kms.katalon.core.webui.keyword.internal.WebUIKeywordMain.runKeyword(WebUIKeywordMain.groovy:26)
	at com.kms.katalon.core.webui.keyword.builtin.VerifyElementPresentKeyword.verifyElementPresent(VerifyElementPresentKeyword.groovy:92)
	at com.kms.katalon.core.webui.keyword.builtin.VerifyElementPresentKeyword.execute(VerifyElementPresentKeyword.groovy:68)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:74)
	at com.kms.katalon.core.webui.keyword.WebUiBuiltInKeywords.verifyElementPresent(WebUiBuiltInKeywords.groovy:1503)
	at Выполнение бизнес-плана сверка дашбордов.GetAllPAOData(Выполнение бизнес-плана сверка дашбордов:862)
	at Выполнение бизнес-плана сверка дашбордов.run(Выполнение бизнес-плана сверка дашбордов:362)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:448)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:439)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:418)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:410)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:285)
	at com.kms.katalon.core.common.CommonExecutor.accessTestCaseMainPhase(CommonExecutor.java:65)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:150)
	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:106)
	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:180)
	at TempTestSuite1736466949911.run(TempTestSuite1736466949911.groovy:35)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
Caused by: com.kms.katalon.core.exception.StepFailedException: Unable to verify object is present
	... 23 more
Caused by: java.lang.IllegalArgumentException: Object is null
	at com.kms.katalon.core.helper.KeywordHelper.checkTestObjectParameter(KeywordHelper.java:33)
	at com.kms.katalon.core.webui.keyword.builtin.VerifyElementPresentKeyword$_verifyElementPresent_closure1.doCall(VerifyElementPresentKeyword.groovy:76)
	at com.kms.katalon.core.webui.keyword.builtin.VerifyElementPresentKeyword$_verifyElementPresent_closure1.call(VerifyElementPresentKeyword.groovy)
	at com.kms.katalon.core.webui.keyword.internal.WebUIKeywordMain.runKeyword(WebUIKeywordMain.groovy:20)
	... 21 more]]></system-err>
      </testcase>
      <testcase name="Test Cases/Сверки дашбордов/Выручка в рублях сверка дашбордов ПАО Россети" time="5076.924" classname="Test Cases/Сверки дашбордов/Выручка в рублях сверка дашбордов ПАО Россети" status="FAILED">
         <failure type="FAILED" message="Test Cases/Сверки дашбордов/Выручка в рублях сверка дашбордов ПАО Россети FAILED.&#xa;Reason:&#xa;com.kms.katalon.core.exception.StepFailedException: Unable to verify equal between actual object '-95.38' and expected object '-95.24' (Root cause: com.kms.katalon.core.exception.StepFailedException: Actual object '-95.38' and expected object '-95.24' are not equal&#xa;	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.doCall(VerifyEqualKeyword.groovy:58)&#xa;	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.call(VerifyEqualKeyword.groovy)&#xa;	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:75)&#xa;	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.verifyEqual(VerifyEqualKeyword.groovy:63)&#xa;	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.execute(VerifyEqualKeyword.groovy:44)&#xa;	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:74)&#xa;	at com.kms.katalon.core.keyword.BuiltinKeywords.verifyEqual(BuiltinKeywords.groovy:146)&#xa;	at jdk.internal.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)&#xa;	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#xa;	at Выручка в рублях сверка дашбордов ПАО Россети.Blocks(Выручка в рублях сверка дашбордов ПАО Россети:357)&#xa;	at Выручка в рублях сверка дашбордов ПАО Россети.ViruchkaChange(Выручка в рублях сверка дашбордов ПАО Россети:60)&#xa;	at Выручка в рублях сверка дашбордов ПАО Россети.run(Выручка в рублях сверка дашбордов ПАО Россети:55)&#xa;	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)&#xa;	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)&#xa;	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:448)&#xa;	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:439)&#xa;	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:418)&#xa;	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:410)&#xa;	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:285)&#xa;	at com.kms.katalon.core.common.CommonExecutor.accessTestCaseMainPhase(CommonExecutor.java:65)&#xa;	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:150)&#xa;	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:106)&#xa;	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:180)&#xa;	at TempTestSuite1736466949911.run(TempTestSuite1736466949911.groovy:35)&#xa;	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#xa;	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)&#xa;	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#xa;)&#xa;	at com.kms.katalon.core.keyword.internal.KeywordMain.stepFailed(KeywordMain.groovy:39)&#xa;	at com.kms.katalon.core.keyword.internal.KeywordMain.stepFailed(KeywordMain.groovy)&#xa;	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:77)&#xa;	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.verifyEqual(VerifyEqualKeyword.groovy:63)&#xa;	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.execute(VerifyEqualKeyword.groovy:44)&#xa;	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:74)&#xa;	at com.kms.katalon.core.keyword.BuiltinKeywords.verifyEqual(BuiltinKeywords.groovy:146)&#xa;	at jdk.internal.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)&#xa;	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#xa;	at Выручка в рублях сверка дашбордов ПАО Россети.Blocks(Выручка в рублях сверка дашбордов ПАО Россети:357)&#xa;	at Выручка в рублях сверка дашбордов ПАО Россети.ViruchkaChange(Выручка в рублях сверка дашбордов ПАО Россети:60)&#xa;	at Выручка в рублях сверка дашбордов ПАО Россети.run(Выручка в рублях сверка дашбордов ПАО Россети:55)&#xa;	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)&#xa;	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)&#xa;	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:448)&#xa;	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:439)&#xa;	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:418)&#xa;	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:410)&#xa;	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:285)&#xa;	at com.kms.katalon.core.common.CommonExecutor.accessTestCaseMainPhase(CommonExecutor.java:65)&#xa;	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:150)&#xa;	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:106)&#xa;	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:180)&#xa;	at TempTestSuite1736466949911.run(TempTestSuite1736466949911.groovy:35)&#xa;	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#xa;	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)&#xa;	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#xa;Caused by: com.kms.katalon.core.exception.StepFailedException: Actual object '-95.38' and expected object '-95.24' are not equal&#xa;	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.doCall(VerifyEqualKeyword.groovy:58)&#xa;	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.call(VerifyEqualKeyword.groovy)&#xa;	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:75)&#xa;	... 24 more&#xa;"/>
         <system-out><![CDATA[10-01-2025T03:10:59 - [TEST_CASE][FAILED] - Test Cases/Сверки дашбордов/Выручка в рублях сверка дашбордов ПАО Россети: Test Cases/Сверки дашбордов/Выручка в рублях сверка дашбордов ПАО Россети FAILED.
Reason:
com.kms.katalon.core.exception.StepFailedException: Unable to verify equal between actual object '-95.38' and expected object '-95.24' (Root cause: com.kms.katalon.core.exception.StepFailedException: Actual object '-95.38' and expected object '-95.24' are not equal
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.doCall(VerifyEqualKeyword.groovy:58)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.call(VerifyEqualKeyword.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:75)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.verifyEqual(VerifyEqualKeyword.groovy:63)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.execute(VerifyEqualKeyword.groovy:44)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:74)
	at com.kms.katalon.core.keyword.BuiltinKeywords.verifyEqual(BuiltinKeywords.groovy:146)
	at jdk.internal.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at Выручка в рублях сверка дашбордов ПАО Россети.Blocks(Выручка в рублях сверка дашбордов ПАО Россети:357)
	at Выручка в рублях сверка дашбордов ПАО Россети.ViruchkaChange(Выручка в рублях сверка дашбордов ПАО Россети:60)
	at Выручка в рублях сверка дашбордов ПАО Россети.run(Выручка в рублях сверка дашбордов ПАО Россети:55)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:448)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:439)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:418)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:410)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:285)
	at com.kms.katalon.core.common.CommonExecutor.accessTestCaseMainPhase(CommonExecutor.java:65)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:150)
	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:106)
	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:180)
	at TempTestSuite1736466949911.run(TempTestSuite1736466949911.groovy:35)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
)
	at com.kms.katalon.core.keyword.internal.KeywordMain.stepFailed(KeywordMain.groovy:39)
	at com.kms.katalon.core.keyword.internal.KeywordMain.stepFailed(KeywordMain.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:77)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.verifyEqual(VerifyEqualKeyword.groovy:63)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.execute(VerifyEqualKeyword.groovy:44)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:74)
	at com.kms.katalon.core.keyword.BuiltinKeywords.verifyEqual(BuiltinKeywords.groovy:146)
	at jdk.internal.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at Выручка в рублях сверка дашбордов ПАО Россети.Blocks(Выручка в рублях сверка дашбордов ПАО Россети:357)
	at Выручка в рублях сверка дашбордов ПАО Россети.ViruchkaChange(Выручка в рублях сверка дашбордов ПАО Россети:60)
	at Выручка в рублях сверка дашбордов ПАО Россети.run(Выручка в рублях сверка дашбордов ПАО Россети:55)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:448)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:439)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:418)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:410)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:285)
	at com.kms.katalon.core.common.CommonExecutor.accessTestCaseMainPhase(CommonExecutor.java:65)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:150)
	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:106)
	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:180)
	at TempTestSuite1736466949911.run(TempTestSuite1736466949911.groovy:35)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
Caused by: com.kms.katalon.core.exception.StepFailedException: Actual object '-95.38' and expected object '-95.24' are not equal
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.doCall(VerifyEqualKeyword.groovy:58)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.call(VerifyEqualKeyword.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:75)
	... 24 more


10-01-2025T03:11:00 - [TEST_STEP][PASSED] - date = new java.util.Date(): null

10-01-2025T03:11:00 - [TEST_STEP][PASSED] - todaysDate = date.format("dd.MM.yyyy"): null

10-01-2025T03:11:00 - [TEST_STEP][PASSED] - println(todaysDate): null

10-01-2025T03:11:00 - [TEST_STEP][PASSED] - run = 1: null

10-01-2025T03:11:00 - [TEST_STEP][PASSED] - vir = 1: null

10-01-2025T03:11:00 - [TEST_STEP][PASSED] - block = 1: null

10-01-2025T03:11:00 - [TEST_STEP][PASSED] - vidget = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:11:00 - [TEST_STEP][PASSED] - nameOfBlock = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:11:00 - [TEST_STEP][PASSED] - typeOfData = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:11:00 - [TEST_STEP][PASSED] - viruchka = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:11:00 - [TEST_STEP][PASSED] - a = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:11:00 - [TEST_STEP][PASSED] - b = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:11:00 - [TEST_STEP][PASSED] - x = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:11:00 - [TEST_STEP][PASSED] - y = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:11:00 - [TEST_STEP][PASSED] - dZO = "ПАО Россети": null

10-01-2025T03:11:00 - [TEST_STEP][PASSED] - for ([run = 1, run < 3, (run++)]): null

10-01-2025T03:11:00 - [TEST_STEP][PASSED] - Script1710234207206.ViruchkaChange(run, vir, block, nameOfBlock, typeOfData, viruchka, vidget, todaysDate, a, b, dZO, x, y): null

10-01-2025T03:11:00 - [TEST_STEP][PASSED] - for ([vir = 1, vir < 4, (vir++)]): null

10-01-2025T03:11:00 - [TEST_STEP][PASSED] - Script1710234207206.Blocks(run, vir, block, nameOfBlock, typeOfData, viruchka, vidget, todaysDate, a, b, dZO, x, y): null

10-01-2025T03:11:00 - [TEST_STEP][PASSED] - i = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:11:00 - [TEST_STEP][PASSED] - perc = "": null

10-01-2025T03:11:00 - [TEST_STEP][PASSED] - a1 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:11:00 - [TEST_STEP][PASSED] - a2 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:11:00 - [TEST_STEP][PASSED] - a30 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:11:00 - [TEST_STEP][PASSED] - a31 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:11:00 - [TEST_STEP][PASSED] - a32 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:11:00 - [TEST_STEP][PASSED] - a33 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:11:00 - [TEST_STEP][PASSED] - a34 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:11:00 - [TEST_STEP][PASSED] - a35 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:11:00 - [TEST_STEP][PASSED] - a36 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:11:00 - [TEST_STEP][PASSED] - a37 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:11:00 - [TEST_STEP][PASSED] - a38 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:11:00 - [TEST_STEP][PASSED] - a39 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:11:00 - [TEST_STEP][PASSED] - a310 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:11:00 - [TEST_STEP][PASSED] - a311 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:11:00 - [TEST_STEP][PASSED] - a312 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:11:00 - [TEST_STEP][PASSED] - a313 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:11:00 - [TEST_STEP][PASSED] - a314 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:11:00 - [TEST_STEP][PASSED] - a315 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:11:00 - [TEST_STEP][PASSED] - a316 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:11:00 - [TEST_STEP][PASSED] - a317 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:11:00 - [TEST_STEP][PASSED] - b1 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:11:00 - [TEST_STEP][PASSED] - b2 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:11:00 - [TEST_STEP][PASSED] - b30 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:11:00 - [TEST_STEP][PASSED] - b31 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:11:00 - [TEST_STEP][PASSED] - b32 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:11:00 - [TEST_STEP][PASSED] - b33 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:11:00 - [TEST_STEP][PASSED] - b34 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:11:00 - [TEST_STEP][PASSED] - b35 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:11:00 - [TEST_STEP][PASSED] - b36 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:11:00 - [TEST_STEP][PASSED] - b37 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:11:00 - [TEST_STEP][PASSED] - b38 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:11:00 - [TEST_STEP][PASSED] - b39 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:11:00 - [TEST_STEP][PASSED] - b310 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:11:00 - [TEST_STEP][PASSED] - b311 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:11:00 - [TEST_STEP][PASSED] - b312 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:11:00 - [TEST_STEP][PASSED] - b313 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:11:00 - [TEST_STEP][PASSED] - b314 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:11:00 - [TEST_STEP][PASSED] - b315 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:11:00 - [TEST_STEP][PASSED] - b316 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:11:00 - [TEST_STEP][PASSED] - b317 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:11:00 - [TEST_STEP][PASSED] - block = 1: null

10-01-2025T03:11:00 - [TEST_STEP][PASSED] - nameOfBlock = "": null

10-01-2025T03:11:00 - [TEST_STEP][PASSED] - Script1710234207206.PreSettings(run, vir, block, nameOfBlock, typeOfData, todaysDate): null

10-01-2025T03:11:00 - [TEST_STEP][PASSED] - openBrowser(""): Browser is opened with url: ''

10-01-2025T03:11:00 - [MESSAGE][INFO] - Starting 'Chrome' driver

10-01-2025T03:11:00 - [MESSAGE][INFO] - Action delay is set to 0 milliseconds

10-01-2025T03:11:02 - [MESSAGE][PASSED] - Browser is opened with url: ''

10-01-2025T03:11:02 - [TEST_STEP][PASSED] - refresh(): Refresh successfully

10-01-2025T03:11:02 - [MESSAGE][PASSED] - Refresh successfully

10-01-2025T03:11:02 - [TEST_STEP][PASSED] - delay(50): Delayed 50 second(s)

10-01-2025T03:11:52 - [MESSAGE][PASSED] - Delayed 50 second(s)

10-01-2025T03:11:52 - [TEST_STEP][PASSED] - println("run:" + run): null

10-01-2025T03:11:52 - [TEST_STEP][PASSED] - println("vir:" + vir): null

10-01-2025T03:11:52 - [TEST_STEP][PASSED] - println("block:" + block): null

10-01-2025T03:11:52 - [TEST_STEP][PASSED] - if (block == 1): null

10-01-2025T03:11:52 - [TEST_STEP][PASSED] - nameOfBlock = "": null

10-01-2025T03:11:52 - [TEST_STEP][PASSED] - println("nameOfBlock:" + nameOfBlock): null

10-01-2025T03:11:52 - [TEST_STEP][PASSED] - println("typeOfData:" + typeOfData): null

10-01-2025T03:11:52 - [TEST_STEP][PASSED] - println("todaysDate:" + todaysDate): null

10-01-2025T03:11:52 - [TEST_STEP][PASSED] - Script1710234207206.Autorization(block, nameOfBlock): null

10-01-2025T03:11:52 - [TEST_STEP][PASSED] - i = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:11:52 - [TEST_STEP][PASSED] - ii = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:11:52 - [TEST_STEP][PASSED] - urlData = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:11:52 - [TEST_STEP][PASSED] - searchWord = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:11:52 - [TEST_STEP][PASSED] - urlText = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:11:52 - [TEST_STEP][PASSED] - println("block:" + block): null

10-01-2025T03:11:52 - [TEST_STEP][PASSED] - if (block == 1): null

10-01-2025T03:11:52 - [TEST_STEP][PASSED] - nameOfBlock = "": null

10-01-2025T03:11:52 - [TEST_STEP][PASSED] - println("nameOfBlock:" + nameOfBlock): null

10-01-2025T03:11:52 - [TEST_STEP][PASSED] - if (block == 1): Delayed 45 second(s)

10-01-2025T03:11:52 - [TEST_STEP][PASSED] - urlData = 2: null

10-01-2025T03:11:52 - [TEST_STEP][PASSED] - delay(45): Delayed 45 second(s)

10-01-2025T03:12:37 - [MESSAGE][PASSED] - Delayed 45 second(s)

10-01-2025T03:12:37 - [TEST_STEP][PASSED] - navigateToUrl(findTestData("PlanFact").getValue(10, urlData)): Navigate to 'https://bi.rosseti.digital/viewer?dashboardGuid=2301950b23be4ed89c1df75f2020051e&sheetGuid=b723206f698544fb87299f3095c00435&fit=true' successfully

10-01-2025T03:12:41 - [MESSAGE][PASSED] - Navigate to 'https://bi.rosseti.digital/viewer?dashboardGuid=2301950b23be4ed89c1df75f2020051e&sheetGuid=b723206f698544fb87299f3095c00435&fit=true' successfully

10-01-2025T03:12:41 - [TEST_STEP][PASSED] - urlText = getText(findTestObject("Страница авторизации/Text")): Text of object 'Object Repository/Страница авторизации/Text' is: 'Вход'

10-01-2025T03:12:43 - [MESSAGE][PASSED] - Text of object 'Object Repository/Страница авторизации/Text' is: 'Вход'

10-01-2025T03:12:43 - [TEST_STEP][PASSED] - searchWord = "Вход": null

10-01-2025T03:12:43 - [TEST_STEP][PASSED] - if (urlText == null || urlText.contains("ошибка") || urlText.contains(searchWord) == false): null

10-01-2025T03:12:43 - [TEST_STEP][PASSED] - if (verifyElementPresent(findTestObject("Страница авторизации/button_"), 30) == true): null

10-01-2025T03:12:43 - [MESSAGE][PASSED] - Object 'Object Repository/Страница авторизации/button_' is present

10-01-2025T03:12:43 - [TEST_STEP][PASSED] - setText(findTestObject("Страница авторизации/input__username"), findTestData("PlanFact").getValue(8, 1)): Text 'liazgina-di' is set on object 'Object Repository/Страница авторизации/input__username'

10-01-2025T03:12:44 - [MESSAGE][PASSED] - Text 'liazgina-di' is set on object 'Object Repository/Страница авторизации/input__username'

10-01-2025T03:12:44 - [TEST_STEP][PASSED] - setText(findTestObject("Страница авторизации/input__password"), findTestData("PlanFact").getValue(9, 1)): Text ')$%5srZ8o688Dm#q' is set on object 'Object Repository/Страница авторизации/input__password'

10-01-2025T03:12:45 - [MESSAGE][PASSED] - Text ')$%5srZ8o688Dm#q' is set on object 'Object Repository/Страница авторизации/input__password'

10-01-2025T03:12:45 - [TEST_STEP][PASSED] - click(findTestObject("Страница авторизации/button_")): Object: 'Object Repository/Страница авторизации/button_' is clicked on

10-01-2025T03:12:46 - [MESSAGE][PASSED] - Object: 'Object Repository/Страница авторизации/button_' is clicked on

10-01-2025T03:12:46 - [TEST_STEP][PASSED] - delay(45): Delayed 45 second(s)

10-01-2025T03:13:31 - [MESSAGE][PASSED] - Delayed 45 second(s)

10-01-2025T03:13:31 - [TEST_STEP][PASSED] - urlText = getText(findTestObject("Страница авторизации/Text")): Text of object 'Object Repository/Страница авторизации/Text' is: 'Период
1, 2, 3 кв., Октябрь, Ноябрь 2024 года
Выручка
Все
Выполнение плановых показателей по ПАО Россети за 1, 2, 3 кв., Октябрь, Ноябрь 2024 года
План
Факт
Динамика
2024 год
0 млн.руб.
100 000 млн.руб.
200 000 млн.руб.
300 000 млн.руб.
400 000 млн.руб.
500 000 млн.руб.
600 000 млн.руб.
700 000 млн.руб.
800 000 млн.руб.
900 000 млн.руб.
1 000 000 млн.руб.
1 100 000 млн.руб.
1 200 000 млн.руб.
1 300 000 млн.руб.
1 400 000 млн.руб.
1 500 000 млн.руб.
1 600 000 млн.руб.
1 311 033
1 316 817
↑
ДЗО 
Все
Внутренний оборот - выручка за услуги по передаче электрической энергии, учтенная в выручке за электроэнергию для конечных потребителей, при выполнении ДЗО функций гарантирующего поставщика
Подписи данных
⬤Отклонение
АО «Тываэнерго»
АО «Чеченэнерго»
Россети Волга
Россети Кубань
Россети Ленэнерго (ГК)
Россети Московский регион
Россети Северный Кавказ (ГК)
Россети Северо-Запад
Россети Сибирь (ГК)
Россети Томск
Россети Тюмень
Россети Урал (ГК)
Россети ФСК ЕЭС
Россети Центр
Россети Центр и Приволжье (ГК)
Россети Юг (ГК)
Россети Янтарь
-25 000 млн.руб.
-20 000 млн.руб.
-15 000 млн.руб.
-10 000 млн.руб.
-5 000 млн.руб.
0 млн.руб.
5 000 млн.руб.
10 000 млн.руб.
-30 000 млн.руб.
15 000 млн.руб.
358
121
239
4 507
5 172
8 574
945
784
2 396
241
-6 052
2 027
-23 772
3 732
4 813
1 329
372
млн.
%
Выручка
Отклонение выручки по ПАО Россети за 1, 2, 3 кв., Октябрь, Ноябрь 2024 года (факт/план, млн. руб)
ПАО Россети
5 783.7 млн.руб.
 '

10-01-2025T03:13:32 - [MESSAGE][PASSED] - Text of object 'Object Repository/Страница авторизации/Text' is: 'Период
1, 2, 3 кв., Октябрь, Ноябрь 2024 года
Выручка
Все
Выполнение плановых показателей по ПАО Россети за 1, 2, 3 кв., Октябрь, Ноябрь 2024 года
План
Факт
Динамика
2024 год
0 млн.руб.
100 000 млн.руб.
200 000 млн.руб.
300 000 млн.руб.
400 000 млн.руб.
500 000 млн.руб.
600 000 млн.руб.
700 000 млн.руб.
800 000 млн.руб.
900 000 млн.руб.
1 000 000 млн.руб.
1 100 000 млн.руб.
1 200 000 млн.руб.
1 300 000 млн.руб.
1 400 000 млн.руб.
1 500 000 млн.руб.
1 600 000 млн.руб.
1 311 033
1 316 817
↑
ДЗО 
Все
Внутренний оборот - выручка за услуги по передаче электрической энергии, учтенная в выручке за электроэнергию для конечных потребителей, при выполнении ДЗО функций гарантирующего поставщика
Подписи данных
⬤Отклонение
АО «Тываэнерго»
АО «Чеченэнерго»
Россети Волга
Россети Кубань
Россети Ленэнерго (ГК)
Россети Московский регион
Россети Северный Кавказ (ГК)
Россети Северо-Запад
Россети Сибирь (ГК)
Россети Томск
Россети Тюмень
Россети Урал (ГК)
Россети ФСК ЕЭС
Россети Центр
Россети Центр и Приволжье (ГК)
Россети Юг (ГК)
Россети Янтарь
-25 000 млн.руб.
-20 000 млн.руб.
-15 000 млн.руб.
-10 000 млн.руб.
-5 000 млн.руб.
0 млн.руб.
5 000 млн.руб.
10 000 млн.руб.
-30 000 млн.руб.
15 000 млн.руб.
358
121
239
4 507
5 172
8 574
945
784
2 396
241
-6 052
2 027
-23 772
3 732
4 813
1 329
372
млн.
%
Выручка
Отклонение выручки по ПАО Россети за 1, 2, 3 кв., Октябрь, Ноябрь 2024 года (факт/план, млн. руб)
ПАО Россети
5 783.7 млн.руб.
 '

10-01-2025T03:13:32 - [TEST_STEP][PASSED] - searchWord = "а": null

10-01-2025T03:13:32 - [TEST_STEP][PASSED] - if (urlText.contains("ошибка") || urlText.contains(searchWord) == false): null

10-01-2025T03:13:32 - [TEST_STEP][PASSED] - delay(45): Delayed 45 second(s)

10-01-2025T03:14:17 - [MESSAGE][PASSED] - Delayed 45 second(s)

10-01-2025T03:14:17 - [TEST_STEP][PASSED] - if (block == 2): null

10-01-2025T03:14:17 - [TEST_STEP][PASSED] - click(findTestObject("Выручка в рублях/Фильтр Период" + nameOfBlock)): Object: 'Object Repository/Выручка в рублях/Фильтр Период' is clicked on

10-01-2025T03:14:18 - [MESSAGE][PASSED] - Object: 'Object Repository/Выручка в рублях/Фильтр Период' is clicked on

10-01-2025T03:14:18 - [TEST_STEP][PASSED] - click(findTestObject("Выручка в рублях/Снять выделение в фильтре Дата" + nameOfBlock)): Object: 'Object Repository/Выручка в рублях/Снять выделение в фильтре Дата' is clicked on

10-01-2025T03:14:18 - [MESSAGE][PASSED] - Object: 'Object Repository/Выручка в рублях/Снять выделение в фильтре Дата' is clicked on

10-01-2025T03:14:18 - [TEST_STEP][PASSED] - click(findTestObject("Выручка в рублях/Применить в фильтре Дата" + nameOfBlock)): Object: 'Object Repository/Выручка в рублях/Применить в фильтре Дата' is clicked on

10-01-2025T03:14:19 - [MESSAGE][PASSED] - Object: 'Object Repository/Выручка в рублях/Применить в фильтре Дата' is clicked on

10-01-2025T03:14:19 - [TEST_STEP][PASSED] - delay(50): Delayed 50 second(s)

10-01-2025T03:15:09 - [MESSAGE][PASSED] - Delayed 50 second(s)

10-01-2025T03:15:09 - [TEST_STEP][PASSED] - click(findTestObject("Выручка в рублях/Фильтр Период" + nameOfBlock)): Object: 'Object Repository/Выручка в рублях/Фильтр Период' is clicked on

10-01-2025T03:15:09 - [MESSAGE][PASSED] - Object: 'Object Repository/Выручка в рублях/Фильтр Период' is clicked on

10-01-2025T03:15:09 - [TEST_STEP][PASSED] - click(findTestObject("Выручка в рублях/Снять выделение в фильтре Дата" + nameOfBlock)): Object: 'Object Repository/Выручка в рублях/Снять выделение в фильтре Дата' is clicked on

10-01-2025T03:15:10 - [MESSAGE][PASSED] - Object: 'Object Repository/Выручка в рублях/Снять выделение в фильтре Дата' is clicked on

10-01-2025T03:15:10 - [TEST_STEP][PASSED] - scrollToElement(findTestObject("Выручка в рублях/2024 список" + nameOfBlock), 30): Scroll to object 'Object Repository/Выручка в рублях/2024 список' successfully

10-01-2025T03:15:10 - [MESSAGE][PASSED] - Scroll to object 'Object Repository/Выручка в рублях/2024 список' successfully

10-01-2025T03:15:10 - [TEST_STEP][PASSED] - click(findTestObject("Выручка в рублях/2024 список" + nameOfBlock)): Object: 'Object Repository/Выручка в рублях/2024 список' is clicked on

10-01-2025T03:15:11 - [MESSAGE][PASSED] - Object: 'Object Repository/Выручка в рублях/2024 список' is clicked on

10-01-2025T03:15:11 - [TEST_STEP][PASSED] - scrollToElement(findTestObject("Выручка в рублях/1 квартал 2024 выбрать" + nameOfBlock), 30): Scroll to object 'Object Repository/Выручка в рублях/1 квартал 2024 выбрать' successfully

10-01-2025T03:15:11 - [MESSAGE][PASSED] - Scroll to object 'Object Repository/Выручка в рублях/1 квартал 2024 выбрать' successfully

10-01-2025T03:15:11 - [TEST_STEP][PASSED] - click(findTestObject("Выручка в рублях/1 квартал 2024 выбрать" + nameOfBlock)): Object: 'Object Repository/Выручка в рублях/1 квартал 2024 выбрать' is clicked on

10-01-2025T03:15:12 - [MESSAGE][PASSED] - Object: 'Object Repository/Выручка в рублях/1 квартал 2024 выбрать' is clicked on

10-01-2025T03:15:12 - [TEST_STEP][PASSED] - scrollToElement(findTestObject("Выручка в рублях/2 квартал 2024 выбрать" + nameOfBlock), 30): Scroll to object 'Object Repository/Выручка в рублях/2 квартал 2024 выбрать' successfully

10-01-2025T03:15:12 - [MESSAGE][PASSED] - Scroll to object 'Object Repository/Выручка в рублях/2 квартал 2024 выбрать' successfully

10-01-2025T03:15:12 - [TEST_STEP][PASSED] - click(findTestObject("Выручка в рублях/2 квартал 2024 выбрать" + nameOfBlock)): Object: 'Object Repository/Выручка в рублях/2 квартал 2024 выбрать' is clicked on

10-01-2025T03:15:12 - [MESSAGE][PASSED] - Object: 'Object Repository/Выручка в рублях/2 квартал 2024 выбрать' is clicked on

10-01-2025T03:15:12 - [TEST_STEP][PASSED] - scrollToElement(findTestObject("Выручка в рублях/3 квартал 2024 список" + nameOfBlock), 30): Scroll to object 'Object Repository/Выручка в рублях/3 квартал 2024 список' successfully

10-01-2025T03:15:13 - [MESSAGE][PASSED] - Scroll to object 'Object Repository/Выручка в рублях/3 квартал 2024 список' successfully

10-01-2025T03:15:13 - [TEST_STEP][PASSED] - click(findTestObject("Выручка в рублях/3 квартал 2024" + nameOfBlock)): Object: 'Object Repository/Выручка в рублях/3 квартал 2024' is clicked on

10-01-2025T03:15:13 - [MESSAGE][PASSED] - Object: 'Object Repository/Выручка в рублях/3 квартал 2024' is clicked on

10-01-2025T03:15:13 - [TEST_STEP][PASSED] - scrollToElement(findTestObject("Выручка в рублях/4 квартал 2024 список" + nameOfBlock), 30): Scroll to object 'Object Repository/Выручка в рублях/4 квартал 2024 список' successfully

10-01-2025T03:15:14 - [MESSAGE][PASSED] - Scroll to object 'Object Repository/Выручка в рублях/4 квартал 2024 список' successfully

10-01-2025T03:15:14 - [TEST_STEP][PASSED] - click(findTestObject("Выручка в рублях/4 квартал 2024 список" + nameOfBlock)): Object: 'Object Repository/Выручка в рублях/4 квартал 2024 список' is clicked on

10-01-2025T03:15:14 - [MESSAGE][PASSED] - Object: 'Object Repository/Выручка в рублях/4 квартал 2024 список' is clicked on

10-01-2025T03:15:14 - [TEST_STEP][PASSED] - scrollToElement(findTestObject("Выручка в рублях/Октябрь 2024" + nameOfBlock), 30): Scroll to object 'Object Repository/Выручка в рублях/Октябрь 2024' successfully

10-01-2025T03:15:14 - [MESSAGE][PASSED] - Scroll to object 'Object Repository/Выручка в рублях/Октябрь 2024' successfully

10-01-2025T03:15:14 - [TEST_STEP][PASSED] - click(findTestObject("Выручка в рублях/Октябрь 2024" + nameOfBlock)): Object: 'Object Repository/Выручка в рублях/Октябрь 2024' is clicked on

10-01-2025T03:15:15 - [MESSAGE][PASSED] - Object: 'Object Repository/Выручка в рублях/Октябрь 2024' is clicked on

10-01-2025T03:15:15 - [TEST_STEP][PASSED] - scrollToElement(findTestObject("Выручка в рублях/Ноябрь 2024" + nameOfBlock), 30): Scroll to object 'Object Repository/Выручка в рублях/Ноябрь 2024' successfully

10-01-2025T03:15:15 - [MESSAGE][PASSED] - Scroll to object 'Object Repository/Выручка в рублях/Ноябрь 2024' successfully

10-01-2025T03:15:15 - [TEST_STEP][PASSED] - click(findTestObject("Выручка в рублях/Ноябрь 2024" + nameOfBlock)): Object: 'Object Repository/Выручка в рублях/Ноябрь 2024' is clicked on

10-01-2025T03:15:16 - [MESSAGE][PASSED] - Object: 'Object Repository/Выручка в рублях/Ноябрь 2024' is clicked on

10-01-2025T03:15:16 - [TEST_STEP][PASSED] - scrollToElement(findTestObject("Выручка в рублях/Заголовок дашборда" + nameOfBlock), 30): Scroll to object 'Object Repository/Выручка в рублях/Заголовок дашборда' successfully

10-01-2025T03:15:16 - [MESSAGE][PASSED] - Scroll to object 'Object Repository/Выручка в рублях/Заголовок дашборда' successfully

10-01-2025T03:15:16 - [TEST_STEP][PASSED] - click(findTestObject("Выручка в рублях/Применить в фильтре Дата" + nameOfBlock)): Object: 'Object Repository/Выручка в рублях/Применить в фильтре Дата' is clicked on

10-01-2025T03:15:17 - [MESSAGE][PASSED] - Object: 'Object Repository/Выручка в рублях/Применить в фильтре Дата' is clicked on

10-01-2025T03:15:17 - [TEST_STEP][PASSED] - delay(55): Delayed 55 second(s)

10-01-2025T03:16:12 - [MESSAGE][PASSED] - Delayed 55 second(s)

10-01-2025T03:16:12 - [TEST_STEP][PASSED] - click(findTestObject("Выручка в рублях/Фильтр ДЗО" + nameOfBlock)): Object: 'Object Repository/Выручка в рублях/Фильтр ДЗО' is clicked on

10-01-2025T03:16:12 - [MESSAGE][PASSED] - Object: 'Object Repository/Выручка в рублях/Фильтр ДЗО' is clicked on

10-01-2025T03:16:12 - [TEST_STEP][PASSED] - click(findTestObject("Выручка в рублях/Снять выделение в фильтре ДЗО" + nameOfBlock)): Object: 'Object Repository/Выручка в рублях/Снять выделение в фильтре ДЗО' is clicked on

10-01-2025T03:16:13 - [MESSAGE][PASSED] - Object: 'Object Repository/Выручка в рублях/Снять выделение в фильтре ДЗО' is clicked on

10-01-2025T03:16:13 - [TEST_STEP][PASSED] - click(findTestObject("Выручка в рублях/Применить в фильтре ДЗО" + nameOfBlock)): Object: 'Object Repository/Выручка в рублях/Применить в фильтре ДЗО' is clicked on

10-01-2025T03:16:13 - [MESSAGE][PASSED] - Object: 'Object Repository/Выручка в рублях/Применить в фильтре ДЗО' is clicked on

10-01-2025T03:16:13 - [TEST_STEP][PASSED] - delay(50): Delayed 50 second(s)

10-01-2025T03:17:03 - [MESSAGE][PASSED] - Delayed 50 second(s)

10-01-2025T03:17:03 - [TEST_STEP][PASSED] - Script1710234207206.Tumbler(run, vir, block, nameOfBlock): null

10-01-2025T03:17:03 - [TEST_STEP][PASSED] - println("run:" + run): null

10-01-2025T03:17:03 - [TEST_STEP][PASSED] - println("vir:" + vir): null

10-01-2025T03:17:03 - [TEST_STEP][PASSED] - println("block:" + block): null

10-01-2025T03:17:03 - [TEST_STEP][PASSED] - println("nameOfBlock:" + nameOfBlock): null

10-01-2025T03:17:03 - [TEST_STEP][PASSED] - if (vir == 1): null

10-01-2025T03:17:03 - [TEST_STEP][PASSED] - if (run == 2): null

10-01-2025T03:17:03 - [TEST_STEP][PASSED] - click(findTestObject("Выручка в рублях/Фильтр ДЗО" + nameOfBlock)): Object: 'Object Repository/Выручка в рублях/Фильтр ДЗО' is clicked on

10-01-2025T03:17:04 - [MESSAGE][PASSED] - Object: 'Object Repository/Выручка в рублях/Фильтр ДЗО' is clicked on

10-01-2025T03:17:04 - [TEST_STEP][PASSED] - Script1710234207206.Rosseti(nameOfBlock): null

10-01-2025T03:17:04 - [TEST_STEP][PASSED] - println("nameOfBlock:" + nameOfBlock): null

10-01-2025T03:17:04 - [TEST_STEP][PASSED] - click(findTestObject("Выручка в рублях/ПАО Россети" + nameOfBlock)): Object: 'Object Repository/Выручка в рублях/ПАО Россети' is clicked on

10-01-2025T03:17:04 - [MESSAGE][PASSED] - Object: 'Object Repository/Выручка в рублях/ПАО Россети' is clicked on

10-01-2025T03:17:04 - [TEST_STEP][PASSED] - click(findTestObject("Выручка в рублях/Применить в фильтре ДЗО" + nameOfBlock)): Object: 'Object Repository/Выручка в рублях/Применить в фильтре ДЗО' is clicked on

10-01-2025T03:17:05 - [MESSAGE][PASSED] - Object: 'Object Repository/Выручка в рублях/Применить в фильтре ДЗО' is clicked on

10-01-2025T03:17:05 - [TEST_STEP][PASSED] - if (run == 2): null

10-01-2025T03:17:05 - [TEST_STEP][PASSED] - if (vir == 1 || vir == 2): Text of object 'Object Repository/Выручка в рублях/График План' is: '1 311 033'

10-01-2025T03:17:05 - [TEST_STEP][PASSED] - a1 = getText(findTestObject("Выручка в рублях/График План")): Text of object 'Object Repository/Выручка в рублях/График План' is: '1 311 033'

10-01-2025T03:17:07 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выручка в рублях/График План' is: '1 311 033'

10-01-2025T03:17:07 - [TEST_STEP][PASSED] - if (vir == 1 || vir == 2): Text of object 'Object Repository/Выручка в рублях/График Факт' is: '1 316 817'

10-01-2025T03:17:07 - [TEST_STEP][PASSED] - a2 = getText(findTestObject("Выручка в рублях/График Факт")): Text of object 'Object Repository/Выручка в рублях/График Факт' is: '1 316 817'

10-01-2025T03:17:07 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выручка в рублях/График Факт' is: '1 316 817'

10-01-2025T03:17:07 - [TEST_STEP][PASSED] - a30 = getText(findTestObject("Выручка в рублях/span1" + perc)): Text of object 'Object Repository/Выручка в рублях/span1' is: '5 783.7 млн.руб.'

10-01-2025T03:17:08 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выручка в рублях/span1' is: '5 783.7 млн.руб.'

10-01-2025T03:17:08 - [TEST_STEP][PASSED] - i = a30.indexOf("млн.руб."): null

10-01-2025T03:17:08 - [TEST_STEP][PASSED] - if (i > -1): null

10-01-2025T03:17:08 - [TEST_STEP][PASSED] - a30 = a30.substring(0, i): null

10-01-2025T03:17:08 - [TEST_STEP][PASSED] - a30 = a30.replaceAll(" ", ""): null

10-01-2025T03:17:08 - [TEST_STEP][PASSED] - if (a30.contains("%")): null

10-01-2025T03:17:08 - [TEST_STEP][PASSED] - a30 = ").trim(): null

10-01-2025T03:17:08 - [TEST_STEP][PASSED] - println("a30: " + a30): null

10-01-2025T03:17:08 - [TEST_STEP][PASSED] - if (vir == 1 || vir == 2): Text of object 'Object Repository/Выручка в рублях/span2' is: '358'

10-01-2025T03:17:08 - [TEST_STEP][PASSED] - a31 = ").trim(): Text of object 'Object Repository/Выручка в рублях/span2' is: '358'

10-01-2025T03:17:08 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выручка в рублях/span2' is: '358'

10-01-2025T03:17:08 - [TEST_STEP][PASSED] - if (vir == 1 || vir == 2): Text of object 'Object Repository/Выручка в рублях/span3' is: '121'

10-01-2025T03:17:08 - [TEST_STEP][PASSED] - a32 = ").trim(): Text of object 'Object Repository/Выручка в рублях/span3' is: '121'

10-01-2025T03:17:08 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выручка в рублях/span3' is: '121'

10-01-2025T03:17:08 - [TEST_STEP][PASSED] - if (vir == 1 || vir == 2): Text of object 'Object Repository/Выручка в рублях/span8' is: '945'

10-01-2025T03:17:08 - [TEST_STEP][PASSED] - a33 = ").trim(): Text of object 'Object Repository/Выручка в рублях/span4' is: '239'

10-01-2025T03:17:09 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выручка в рублях/span4' is: '239'

10-01-2025T03:17:09 - [TEST_STEP][PASSED] - a34 = ").trim(): Text of object 'Object Repository/Выручка в рублях/span5' is: '4 507'

10-01-2025T03:17:09 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выручка в рублях/span5' is: '4 507'

10-01-2025T03:17:09 - [TEST_STEP][PASSED] - a35 = ").trim(): Text of object 'Object Repository/Выручка в рублях/span6' is: '5 172'

10-01-2025T03:17:09 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выручка в рублях/span6' is: '5 172'

10-01-2025T03:17:09 - [TEST_STEP][PASSED] - a36 = ").trim(): Text of object 'Object Repository/Выручка в рублях/span7' is: '8 574'

10-01-2025T03:17:09 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выручка в рублях/span7' is: '8 574'

10-01-2025T03:17:09 - [TEST_STEP][PASSED] - a37 = ").trim(): Text of object 'Object Repository/Выручка в рублях/span8' is: '945'

10-01-2025T03:17:10 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выручка в рублях/span8' is: '945'

10-01-2025T03:17:10 - [TEST_STEP][PASSED] - if (vir == 1 || vir == 2): Text of object 'Object Repository/Выручка в рублях/span17' is: '1 329'

10-01-2025T03:17:10 - [TEST_STEP][PASSED] - a38 = ").trim(): Text of object 'Object Repository/Выручка в рублях/span9' is: '784'

10-01-2025T03:17:10 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выручка в рублях/span9' is: '784'

10-01-2025T03:17:10 - [TEST_STEP][PASSED] - a39 = ").trim(): Text of object 'Object Repository/Выручка в рублях/span10' is: '2 396'

10-01-2025T03:17:10 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выручка в рублях/span10' is: '2 396'

10-01-2025T03:17:10 - [TEST_STEP][PASSED] - a310 = ").trim(): Text of object 'Object Repository/Выручка в рублях/span11' is: '241'

10-01-2025T03:17:11 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выручка в рублях/span11' is: '241'

10-01-2025T03:17:11 - [TEST_STEP][PASSED] - a311 = ").trim(): Text of object 'Object Repository/Выручка в рублях/span12' is: '-6 052'

10-01-2025T03:17:11 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выручка в рублях/span12' is: '-6 052'

10-01-2025T03:17:11 - [TEST_STEP][PASSED] - a312 = ").trim(): Text of object 'Object Repository/Выручка в рублях/span13' is: '2 027'

10-01-2025T03:17:11 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выручка в рублях/span13' is: '2 027'

10-01-2025T03:17:11 - [TEST_STEP][PASSED] - a313 = ").trim(): Text of object 'Object Repository/Выручка в рублях/span14' is: '-23 772'

10-01-2025T03:17:12 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выручка в рублях/span14' is: '-23 772'

10-01-2025T03:17:12 - [TEST_STEP][PASSED] - a314 = ").trim(): Text of object 'Object Repository/Выручка в рублях/span15' is: '3 732'

10-01-2025T03:17:12 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выручка в рублях/span15' is: '3 732'

10-01-2025T03:17:12 - [TEST_STEP][PASSED] - a315 = ").trim(): Text of object 'Object Repository/Выручка в рублях/span16' is: '4 813'

10-01-2025T03:17:12 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выручка в рублях/span16' is: '4 813'

10-01-2025T03:17:12 - [TEST_STEP][PASSED] - a316 = ").trim(): Text of object 'Object Repository/Выручка в рублях/span17' is: '1 329'

10-01-2025T03:17:13 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выручка в рублях/span17' is: '1 329'

10-01-2025T03:17:13 - [TEST_STEP][PASSED] - if (vir == 1 || vir == 2): Text of object 'Object Repository/Выручка в рублях/span18' is: '372'

10-01-2025T03:17:13 - [TEST_STEP][PASSED] - a317 = ").trim(): Text of object 'Object Repository/Выручка в рублях/span18' is: '372'

10-01-2025T03:17:13 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выручка в рублях/span18' is: '372'

10-01-2025T03:17:13 - [TEST_STEP][PASSED] - block = 2: null

10-01-2025T03:17:13 - [TEST_STEP][PASSED] - nameOfBlock = " Выручка": null

10-01-2025T03:17:13 - [TEST_STEP][PASSED] - Script1710234207206.PreSettings(run, vir, block, nameOfBlock, typeOfData, todaysDate): null

10-01-2025T03:17:13 - [TEST_STEP][PASSED] - openBrowser(""): Browser is opened with url: ''

10-01-2025T03:17:13 - [MESSAGE][WARNING] - A browser is already opened. Closing browser and opening a new one

10-01-2025T03:17:13 - [MESSAGE][INFO] - Starting 'Chrome' driver

10-01-2025T03:17:13 - [MESSAGE][INFO] - Action delay is set to 0 milliseconds

10-01-2025T03:17:14 - [MESSAGE][PASSED] - Browser is opened with url: ''

10-01-2025T03:17:14 - [TEST_STEP][PASSED] - refresh(): Refresh successfully

10-01-2025T03:17:15 - [MESSAGE][PASSED] - Refresh successfully

10-01-2025T03:17:15 - [TEST_STEP][PASSED] - delay(50): Delayed 50 second(s)

10-01-2025T03:18:05 - [MESSAGE][PASSED] - Delayed 50 second(s)

10-01-2025T03:18:05 - [TEST_STEP][PASSED] - println("run:" + run): null

10-01-2025T03:18:05 - [TEST_STEP][PASSED] - println("vir:" + vir): null

10-01-2025T03:18:05 - [TEST_STEP][PASSED] - println("block:" + block): null

10-01-2025T03:18:05 - [TEST_STEP][PASSED] - if (block == 1): null

10-01-2025T03:18:05 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:18:05 - [TEST_STEP][PASSED] - nameOfBlock = " Выручка": null

10-01-2025T03:18:05 - [TEST_STEP][PASSED] - println("nameOfBlock:" + nameOfBlock): null

10-01-2025T03:18:05 - [TEST_STEP][PASSED] - println("typeOfData:" + typeOfData): null

10-01-2025T03:18:05 - [TEST_STEP][PASSED] - println("todaysDate:" + todaysDate): null

10-01-2025T03:18:05 - [TEST_STEP][PASSED] - Script1710234207206.Autorization(block, nameOfBlock): null

10-01-2025T03:18:05 - [TEST_STEP][PASSED] - i = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:18:05 - [TEST_STEP][PASSED] - ii = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:18:05 - [TEST_STEP][PASSED] - urlData = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:18:05 - [TEST_STEP][PASSED] - searchWord = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:18:05 - [TEST_STEP][PASSED] - urlText = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:18:05 - [TEST_STEP][PASSED] - println("block:" + block): null

10-01-2025T03:18:05 - [TEST_STEP][PASSED] - if (block == 1): null

10-01-2025T03:18:05 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:18:05 - [TEST_STEP][PASSED] - delay(45): Delayed 45 second(s)

10-01-2025T03:18:50 - [MESSAGE][PASSED] - Delayed 45 second(s)

10-01-2025T03:18:50 - [TEST_STEP][PASSED] - nameOfBlock = " Выручка": null

10-01-2025T03:18:50 - [TEST_STEP][PASSED] - println("nameOfBlock:" + nameOfBlock): null

10-01-2025T03:18:50 - [TEST_STEP][PASSED] - if (block == 1): null

10-01-2025T03:18:50 - [TEST_STEP][PASSED] - else: Delayed 45 second(s)

10-01-2025T03:18:50 - [TEST_STEP][PASSED] - urlData = 9: null

10-01-2025T03:18:50 - [TEST_STEP][PASSED] - delay(45): Delayed 45 second(s)

10-01-2025T03:19:35 - [MESSAGE][PASSED] - Delayed 45 second(s)

10-01-2025T03:19:35 - [TEST_STEP][PASSED] - navigateToUrl(findTestData("PlanFact").getValue(10, urlData)): Navigate to 'https://bi.rosseti.digital/viewer?dashboardGuid=a1fd28b3785d443cbc4d7690a1d78e31&sheetGuid=86092a20c5984827a0c87b24cac76a50&fit=true' successfully

10-01-2025T03:19:40 - [MESSAGE][PASSED] - Navigate to 'https://bi.rosseti.digital/viewer?dashboardGuid=a1fd28b3785d443cbc4d7690a1d78e31&sheetGuid=86092a20c5984827a0c87b24cac76a50&fit=true' successfully

10-01-2025T03:19:40 - [TEST_STEP][PASSED] - urlText = getText(findTestObject("Страница авторизации/Text")): Text of object 'Object Repository/Страница авторизации/Text' is: 'Вход'

10-01-2025T03:19:41 - [MESSAGE][PASSED] - Text of object 'Object Repository/Страница авторизации/Text' is: 'Вход'

10-01-2025T03:19:41 - [TEST_STEP][PASSED] - searchWord = "Вход": null

10-01-2025T03:19:41 - [TEST_STEP][PASSED] - if (urlText == null || urlText.contains("ошибка") || urlText.contains(searchWord) == false): null

10-01-2025T03:19:41 - [TEST_STEP][PASSED] - if (verifyElementPresent(findTestObject("Страница авторизации/button_"), 30) == true): null

10-01-2025T03:19:42 - [MESSAGE][PASSED] - Object 'Object Repository/Страница авторизации/button_' is present

10-01-2025T03:19:42 - [TEST_STEP][PASSED] - setText(findTestObject("Страница авторизации/input__username"), findTestData("PlanFact").getValue(8, 1)): Text 'liazgina-di' is set on object 'Object Repository/Страница авторизации/input__username'

10-01-2025T03:19:42 - [MESSAGE][PASSED] - Text 'liazgina-di' is set on object 'Object Repository/Страница авторизации/input__username'

10-01-2025T03:19:42 - [TEST_STEP][PASSED] - setText(findTestObject("Страница авторизации/input__password"), findTestData("PlanFact").getValue(9, 1)): Text ')$%5srZ8o688Dm#q' is set on object 'Object Repository/Страница авторизации/input__password'

10-01-2025T03:19:43 - [MESSAGE][PASSED] - Text ')$%5srZ8o688Dm#q' is set on object 'Object Repository/Страница авторизации/input__password'

10-01-2025T03:19:43 - [TEST_STEP][PASSED] - click(findTestObject("Страница авторизации/button_")): Object: 'Object Repository/Страница авторизации/button_' is clicked on

10-01-2025T03:19:45 - [MESSAGE][PASSED] - Object: 'Object Repository/Страница авторизации/button_' is clicked on

10-01-2025T03:19:45 - [TEST_STEP][PASSED] - delay(45): Delayed 45 second(s)

10-01-2025T03:20:30 - [MESSAGE][PASSED] - Delayed 45 second(s)

10-01-2025T03:20:30 - [TEST_STEP][PASSED] - urlText = getText(findTestObject("Страница авторизации/Text")): Text of object 'Object Repository/Страница авторизации/Text' is: 'Период
Январь, Февраль, Март, Апрель, Май, Июнь, Июль, Август, Сентябрь, Октябрь, Ноябрь 2024 года
Выручка
Все
Выполнение плановых показателей по ПАО Россети за Январь, Февраль, Март, Апрель, Май, Июнь, Июль, Август, Сентябрь, Октябрь, Ноябрь 2024 года
План
Факт
Динамика
2024 год
0 млн.руб.
200 000 млн.руб.
400 000 млн.руб.
600 000 млн.руб.
800 000 млн.руб.
1 000 000 млн.руб.
1 200 000 млн.руб.
1 400 000 млн.руб.
1 600 000 млн.руб.
1 311 033
1 316 817
↑
ДЗО 
Все
Подписи данных
⬤Отклонение
АО «Тываэнерго»
АО «Чеченэнерго»
Россети Волга
Россети Кубань
Россети Ленэнерго (ГК)
Россети Московский регион
Россети Северный Кавказ (ГК)
Россети Северо-Запад
Россети Сибирь (ГК)
Россети Томск
Россети Тюмень
Россети Урал (ГК)
Россети ФСК ЕЭС
Россети Центр
Россети Центр и Приволжье (ГК)
Россети Юг (ГК)
Россети Янтарь
-27 500 млн.руб.
-25 000 млн.руб.
-22 500 млн.руб.
-20 000 млн.руб.
-17 500 млн.руб.
-15 000 млн.руб.
-12 500 млн.руб.
-10 000 млн.руб.
-7 500 млн.руб.
-5 000 млн.руб.
-2 500 млн.руб.
0 млн.руб.
2 500 млн.руб.
5 000 млн.руб.
7 500 млн.руб.
10 000 млн.руб.
12 500 млн.руб.
358
121
239
4 507
5 172
8 574
945
784
2 396
241
-6 052
2 027
-23 772
3 732
4 813
1 329
372
млн.
%
Выручка
Отклонение выручки по ПАО Россети за Январь, Февраль, Март, Апрель, Май, Июнь, Июль, Август, Сентябрь, Октябрь, Ноябрь 2024 года (факт/план, млн. руб)
ПАО Россети
5 783.7 млн.руб.
Статус данных
×
Просьба обратить внимание
Данные занесены не полностью
ВЫБРАННЫЕ ЗНАЧЕНИЯ ФИЛЬТРОВ
ДЗО | ПЕРИОД
ПАО Россети: [«Выбраны все филиалы по всем ДЗО по всем категориям»]
2024: [Янв, Фев, Мар, Апр, Май, Июн, Июл, Авг, Сен, Окт, Ноя]
*Внутренний оборот'

10-01-2025T03:20:31 - [MESSAGE][PASSED] - Text of object 'Object Repository/Страница авторизации/Text' is: 'Период
Январь, Февраль, Март, Апрель, Май, Июнь, Июль, Август, Сентябрь, Октябрь, Ноябрь 2024 года
Выручка
Все
Выполнение плановых показателей по ПАО Россети за Январь, Февраль, Март, Апрель, Май, Июнь, Июль, Август, Сентябрь, Октябрь, Ноябрь 2024 года
План
Факт
Динамика
2024 год
0 млн.руб.
200 000 млн.руб.
400 000 млн.руб.
600 000 млн.руб.
800 000 млн.руб.
1 000 000 млн.руб.
1 200 000 млн.руб.
1 400 000 млн.руб.
1 600 000 млн.руб.
1 311 033
1 316 817
↑
ДЗО 
Все
Подписи данных
⬤Отклонение
АО «Тываэнерго»
АО «Чеченэнерго»
Россети Волга
Россети Кубань
Россети Ленэнерго (ГК)
Россети Московский регион
Россети Северный Кавказ (ГК)
Россети Северо-Запад
Россети Сибирь (ГК)
Россети Томск
Россети Тюмень
Россети Урал (ГК)
Россети ФСК ЕЭС
Россети Центр
Россети Центр и Приволжье (ГК)
Россети Юг (ГК)
Россети Янтарь
-27 500 млн.руб.
-25 000 млн.руб.
-22 500 млн.руб.
-20 000 млн.руб.
-17 500 млн.руб.
-15 000 млн.руб.
-12 500 млн.руб.
-10 000 млн.руб.
-7 500 млн.руб.
-5 000 млн.руб.
-2 500 млн.руб.
0 млн.руб.
2 500 млн.руб.
5 000 млн.руб.
7 500 млн.руб.
10 000 млн.руб.
12 500 млн.руб.
358
121
239
4 507
5 172
8 574
945
784
2 396
241
-6 052
2 027
-23 772
3 732
4 813
1 329
372
млн.
%
Выручка
Отклонение выручки по ПАО Россети за Январь, Февраль, Март, Апрель, Май, Июнь, Июль, Август, Сентябрь, Октябрь, Ноябрь 2024 года (факт/план, млн. руб)
ПАО Россети
5 783.7 млн.руб.
Статус данных
×
Просьба обратить внимание
Данные занесены не полностью
ВЫБРАННЫЕ ЗНАЧЕНИЯ ФИЛЬТРОВ
ДЗО | ПЕРИОД
ПАО Россети: [«Выбраны все филиалы по всем ДЗО по всем категориям»]
2024: [Янв, Фев, Мар, Апр, Май, Июн, Июл, Авг, Сен, Окт, Ноя]
*Внутренний оборот'

10-01-2025T03:20:31 - [TEST_STEP][PASSED] - searchWord = "а": null

10-01-2025T03:20:31 - [TEST_STEP][PASSED] - if (urlText.contains("ошибка") || urlText.contains(searchWord) == false): null

10-01-2025T03:20:31 - [TEST_STEP][PASSED] - delay(45): Delayed 45 second(s)

10-01-2025T03:21:16 - [MESSAGE][PASSED] - Delayed 45 second(s)

10-01-2025T03:21:16 - [TEST_STEP][PASSED] - if (block == 2): Delayed 50 second(s)

10-01-2025T03:21:16 - [TEST_STEP][PASSED] - opoveshenie = getText(findTestObject("Выручка в рублях/Просьба обратить внимание")): Text of object 'Object Repository/Выручка в рублях/Просьба обратить внимание' is: 'Просьба обратить внимание'

10-01-2025T03:21:16 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выручка в рублях/Просьба обратить внимание' is: 'Просьба обратить внимание'

10-01-2025T03:21:16 - [TEST_STEP][PASSED] - if (opoveshenie == "Просьба обратить внимание"): Delayed 50 second(s)

10-01-2025T03:21:16 - [TEST_STEP][PASSED] - click(findTestObject("Выручка в рублях/Закрыть оповещение")): Object: 'Object Repository/Выручка в рублях/Закрыть оповещение' is clicked on

10-01-2025T03:21:16 - [MESSAGE][PASSED] - Object: 'Object Repository/Выручка в рублях/Закрыть оповещение' is clicked on

10-01-2025T03:21:16 - [TEST_STEP][PASSED] - delay(50): Delayed 50 second(s)

10-01-2025T03:22:06 - [MESSAGE][PASSED] - Delayed 50 second(s)

10-01-2025T03:22:06 - [TEST_STEP][PASSED] - click(findTestObject("Выручка в рублях/Фильтр Период" + nameOfBlock)): Object: 'Object Repository/Выручка в рублях/Фильтр Период Выручка' is clicked on

10-01-2025T03:22:07 - [MESSAGE][PASSED] - Object: 'Object Repository/Выручка в рублях/Фильтр Период Выручка' is clicked on

10-01-2025T03:22:07 - [TEST_STEP][PASSED] - click(findTestObject("Выручка в рублях/Снять выделение в фильтре Дата" + nameOfBlock)): Object: 'Object Repository/Выручка в рублях/Снять выделение в фильтре Дата Выручка' is clicked on

10-01-2025T03:22:08 - [MESSAGE][PASSED] - Object: 'Object Repository/Выручка в рублях/Снять выделение в фильтре Дата Выручка' is clicked on

10-01-2025T03:22:08 - [TEST_STEP][PASSED] - click(findTestObject("Выручка в рублях/Применить в фильтре Дата" + nameOfBlock)): Object: 'Object Repository/Выручка в рублях/Применить в фильтре Дата Выручка' is clicked on

10-01-2025T03:22:08 - [MESSAGE][PASSED] - Object: 'Object Repository/Выручка в рублях/Применить в фильтре Дата Выручка' is clicked on

10-01-2025T03:22:08 - [TEST_STEP][PASSED] - delay(50): Delayed 50 second(s)

10-01-2025T03:22:58 - [MESSAGE][PASSED] - Delayed 50 second(s)

10-01-2025T03:22:58 - [TEST_STEP][PASSED] - click(findTestObject("Выручка в рублях/Фильтр Период" + nameOfBlock)): Object: 'Object Repository/Выручка в рублях/Фильтр Период Выручка' is clicked on

10-01-2025T03:22:59 - [MESSAGE][PASSED] - Object: 'Object Repository/Выручка в рублях/Фильтр Период Выручка' is clicked on

10-01-2025T03:22:59 - [TEST_STEP][PASSED] - click(findTestObject("Выручка в рублях/Снять выделение в фильтре Дата" + nameOfBlock)): Object: 'Object Repository/Выручка в рублях/Снять выделение в фильтре Дата Выручка' is clicked on

10-01-2025T03:22:59 - [MESSAGE][PASSED] - Object: 'Object Repository/Выручка в рублях/Снять выделение в фильтре Дата Выручка' is clicked on

10-01-2025T03:22:59 - [TEST_STEP][PASSED] - scrollToElement(findTestObject("Выручка в рублях/2024 список" + nameOfBlock), 30): Scroll to object 'Object Repository/Выручка в рублях/2024 список Выручка' successfully

10-01-2025T03:22:59 - [MESSAGE][PASSED] - Scroll to object 'Object Repository/Выручка в рублях/2024 список Выручка' successfully

10-01-2025T03:22:59 - [TEST_STEP][PASSED] - click(findTestObject("Выручка в рублях/2024 список" + nameOfBlock)): Object: 'Object Repository/Выручка в рублях/2024 список Выручка' is clicked on

10-01-2025T03:23:00 - [MESSAGE][PASSED] - Object: 'Object Repository/Выручка в рублях/2024 список Выручка' is clicked on

10-01-2025T03:23:00 - [TEST_STEP][PASSED] - scrollToElement(findTestObject("Выручка в рублях/1 квартал 2024 выбрать" + nameOfBlock), 30): Scroll to object 'Object Repository/Выручка в рублях/1 квартал 2024 выбрать Выручка' successfully

10-01-2025T03:23:01 - [MESSAGE][PASSED] - Scroll to object 'Object Repository/Выручка в рублях/1 квартал 2024 выбрать Выручка' successfully

10-01-2025T03:23:01 - [TEST_STEP][PASSED] - click(findTestObject("Выручка в рублях/1 квартал 2024 выбрать" + nameOfBlock)): Object: 'Object Repository/Выручка в рублях/1 квартал 2024 выбрать Выручка' is clicked on

10-01-2025T03:23:01 - [MESSAGE][PASSED] - Object: 'Object Repository/Выручка в рублях/1 квартал 2024 выбрать Выручка' is clicked on

10-01-2025T03:23:01 - [TEST_STEP][PASSED] - scrollToElement(findTestObject("Выручка в рублях/2 квартал 2024 выбрать" + nameOfBlock), 30): Scroll to object 'Object Repository/Выручка в рублях/2 квартал 2024 выбрать Выручка' successfully

10-01-2025T03:23:01 - [MESSAGE][PASSED] - Scroll to object 'Object Repository/Выручка в рублях/2 квартал 2024 выбрать Выручка' successfully

10-01-2025T03:23:01 - [TEST_STEP][PASSED] - click(findTestObject("Выручка в рублях/2 квартал 2024 выбрать" + nameOfBlock)): Object: 'Object Repository/Выручка в рублях/2 квартал 2024 выбрать Выручка' is clicked on

10-01-2025T03:23:02 - [MESSAGE][PASSED] - Object: 'Object Repository/Выручка в рублях/2 квартал 2024 выбрать Выручка' is clicked on

10-01-2025T03:23:02 - [TEST_STEP][PASSED] - scrollToElement(findTestObject("Выручка в рублях/3 квартал 2024 список" + nameOfBlock), 30): Scroll to object 'Object Repository/Выручка в рублях/3 квартал 2024 список Выручка' successfully

10-01-2025T03:23:02 - [MESSAGE][PASSED] - Scroll to object 'Object Repository/Выручка в рублях/3 квартал 2024 список Выручка' successfully

10-01-2025T03:23:02 - [TEST_STEP][PASSED] - click(findTestObject("Выручка в рублях/3 квартал 2024" + nameOfBlock)): Object: 'Object Repository/Выручка в рублях/3 квартал 2024 Выручка' is clicked on

10-01-2025T03:23:03 - [MESSAGE][PASSED] - Object: 'Object Repository/Выручка в рублях/3 квартал 2024 Выручка' is clicked on

10-01-2025T03:23:03 - [TEST_STEP][PASSED] - scrollToElement(findTestObject("Выручка в рублях/4 квартал 2024 список" + nameOfBlock), 30): Scroll to object 'Object Repository/Выручка в рублях/4 квартал 2024 список Выручка' successfully

10-01-2025T03:23:03 - [MESSAGE][PASSED] - Scroll to object 'Object Repository/Выручка в рублях/4 квартал 2024 список Выручка' successfully

10-01-2025T03:23:03 - [TEST_STEP][PASSED] - click(findTestObject("Выручка в рублях/4 квартал 2024 список" + nameOfBlock)): Object: 'Object Repository/Выручка в рублях/4 квартал 2024 список Выручка' is clicked on

10-01-2025T03:23:03 - [MESSAGE][PASSED] - Object: 'Object Repository/Выручка в рублях/4 квартал 2024 список Выручка' is clicked on

10-01-2025T03:23:03 - [TEST_STEP][PASSED] - scrollToElement(findTestObject("Выручка в рублях/Октябрь 2024" + nameOfBlock), 30): Scroll to object 'Object Repository/Выручка в рублях/Октябрь 2024 Выручка' successfully

10-01-2025T03:23:04 - [MESSAGE][PASSED] - Scroll to object 'Object Repository/Выручка в рублях/Октябрь 2024 Выручка' successfully

10-01-2025T03:23:04 - [TEST_STEP][PASSED] - click(findTestObject("Выручка в рублях/Октябрь 2024" + nameOfBlock)): Object: 'Object Repository/Выручка в рублях/Октябрь 2024 Выручка' is clicked on

10-01-2025T03:23:04 - [MESSAGE][PASSED] - Object: 'Object Repository/Выручка в рублях/Октябрь 2024 Выручка' is clicked on

10-01-2025T03:23:04 - [TEST_STEP][PASSED] - scrollToElement(findTestObject("Выручка в рублях/Ноябрь 2024" + nameOfBlock), 30): Scroll to object 'Object Repository/Выручка в рублях/Ноябрь 2024 Выручка' successfully

10-01-2025T03:23:05 - [MESSAGE][PASSED] - Scroll to object 'Object Repository/Выручка в рублях/Ноябрь 2024 Выручка' successfully

10-01-2025T03:23:05 - [TEST_STEP][PASSED] - click(findTestObject("Выручка в рублях/Ноябрь 2024" + nameOfBlock)): Object: 'Object Repository/Выручка в рублях/Ноябрь 2024 Выручка' is clicked on

10-01-2025T03:23:05 - [MESSAGE][PASSED] - Object: 'Object Repository/Выручка в рублях/Ноябрь 2024 Выручка' is clicked on

10-01-2025T03:23:05 - [TEST_STEP][PASSED] - scrollToElement(findTestObject("Выручка в рублях/Заголовок дашборда" + nameOfBlock), 30): Scroll to object 'Object Repository/Выручка в рублях/Заголовок дашборда Выручка' successfully

10-01-2025T03:23:06 - [MESSAGE][PASSED] - Scroll to object 'Object Repository/Выручка в рублях/Заголовок дашборда Выручка' successfully

10-01-2025T03:23:06 - [TEST_STEP][PASSED] - click(findTestObject("Выручка в рублях/Применить в фильтре Дата" + nameOfBlock)): Object: 'Object Repository/Выручка в рублях/Применить в фильтре Дата Выручка' is clicked on

10-01-2025T03:23:06 - [MESSAGE][PASSED] - Object: 'Object Repository/Выручка в рублях/Применить в фильтре Дата Выручка' is clicked on

10-01-2025T03:23:06 - [TEST_STEP][PASSED] - delay(55): Delayed 55 second(s)

10-01-2025T03:24:01 - [MESSAGE][PASSED] - Delayed 55 second(s)

10-01-2025T03:24:01 - [TEST_STEP][PASSED] - click(findTestObject("Выручка в рублях/Фильтр ДЗО" + nameOfBlock)): Object: 'Object Repository/Выручка в рублях/Фильтр ДЗО Выручка' is clicked on

10-01-2025T03:24:02 - [MESSAGE][PASSED] - Object: 'Object Repository/Выручка в рублях/Фильтр ДЗО Выручка' is clicked on

10-01-2025T03:24:02 - [TEST_STEP][PASSED] - click(findTestObject("Выручка в рублях/Снять выделение в фильтре ДЗО" + nameOfBlock)): Object: 'Object Repository/Выручка в рублях/Снять выделение в фильтре ДЗО Выручка' is clicked on

10-01-2025T03:24:02 - [MESSAGE][PASSED] - Object: 'Object Repository/Выручка в рублях/Снять выделение в фильтре ДЗО Выручка' is clicked on

10-01-2025T03:24:02 - [TEST_STEP][PASSED] - click(findTestObject("Выручка в рублях/Применить в фильтре ДЗО" + nameOfBlock)): Object: 'Object Repository/Выручка в рублях/Применить в фильтре ДЗО Выручка' is clicked on

10-01-2025T03:24:03 - [MESSAGE][PASSED] - Object: 'Object Repository/Выручка в рублях/Применить в фильтре ДЗО Выручка' is clicked on

10-01-2025T03:24:03 - [TEST_STEP][PASSED] - delay(50): Delayed 50 second(s)

10-01-2025T03:24:53 - [MESSAGE][PASSED] - Delayed 50 second(s)

10-01-2025T03:24:53 - [TEST_STEP][PASSED] - Script1710234207206.Tumbler(run, vir, block, nameOfBlock): null

10-01-2025T03:24:53 - [TEST_STEP][PASSED] - println("run:" + run): null

10-01-2025T03:24:53 - [TEST_STEP][PASSED] - println("vir:" + vir): null

10-01-2025T03:24:53 - [TEST_STEP][PASSED] - println("block:" + block): null

10-01-2025T03:24:53 - [TEST_STEP][PASSED] - println("nameOfBlock:" + nameOfBlock): null

10-01-2025T03:24:53 - [TEST_STEP][PASSED] - if (vir == 1): null

10-01-2025T03:24:53 - [TEST_STEP][PASSED] - if (run == 2): null

10-01-2025T03:24:53 - [TEST_STEP][PASSED] - click(findTestObject("Выручка в рублях/Фильтр ДЗО" + nameOfBlock)): Object: 'Object Repository/Выручка в рублях/Фильтр ДЗО Выручка' is clicked on

10-01-2025T03:24:53 - [MESSAGE][PASSED] - Object: 'Object Repository/Выручка в рублях/Фильтр ДЗО Выручка' is clicked on

10-01-2025T03:24:53 - [TEST_STEP][PASSED] - Script1710234207206.Rosseti(nameOfBlock): null

10-01-2025T03:24:53 - [TEST_STEP][PASSED] - println("nameOfBlock:" + nameOfBlock): null

10-01-2025T03:24:53 - [TEST_STEP][PASSED] - click(findTestObject("Выручка в рублях/ПАО Россети" + nameOfBlock)): Object: 'Object Repository/Выручка в рублях/ПАО Россети Выручка' is clicked on

10-01-2025T03:24:54 - [MESSAGE][PASSED] - Object: 'Object Repository/Выручка в рублях/ПАО Россети Выручка' is clicked on

10-01-2025T03:24:54 - [TEST_STEP][PASSED] - click(findTestObject("Выручка в рублях/Применить в фильтре ДЗО" + nameOfBlock)): Object: 'Object Repository/Выручка в рублях/Применить в фильтре ДЗО Выручка' is clicked on

10-01-2025T03:24:55 - [MESSAGE][PASSED] - Object: 'Object Repository/Выручка в рублях/Применить в фильтре ДЗО Выручка' is clicked on

10-01-2025T03:24:55 - [TEST_STEP][PASSED] - if (vir == 1 || vir == 2): Text of object 'Object Repository/Выручка в рублях/График План Выручка' is: '1 311 033'

10-01-2025T03:24:55 - [TEST_STEP][PASSED] - b1 = getText(findTestObject("Выручка в рублях/График План Выручка")): Text of object 'Object Repository/Выручка в рублях/График План Выручка' is: '1 311 033'

10-01-2025T03:24:56 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выручка в рублях/График План Выручка' is: '1 311 033'

10-01-2025T03:24:56 - [TEST_STEP][PASSED] - if (vir == 1 || vir == 2): Text of object 'Object Repository/Выручка в рублях/График Факт Выручка' is: '1 316 817'

10-01-2025T03:24:56 - [TEST_STEP][PASSED] - b2 = getText(findTestObject("Выручка в рублях/График Факт Выручка")): Text of object 'Object Repository/Выручка в рублях/График Факт Выручка' is: '1 316 817'

10-01-2025T03:24:57 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выручка в рублях/График Факт Выручка' is: '1 316 817'

10-01-2025T03:24:57 - [TEST_STEP][PASSED] - b30 = getText(findTestObject("Выручка в рублях/span1" + perc)): Text of object 'Object Repository/Выручка в рублях/span1' is: '5 783.7 млн.руб.'

10-01-2025T03:24:57 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выручка в рублях/span1' is: '5 783.7 млн.руб.'

10-01-2025T03:24:57 - [TEST_STEP][PASSED] - i = b30.indexOf("млн.руб."): null

10-01-2025T03:24:57 - [TEST_STEP][PASSED] - if (i > -1): null

10-01-2025T03:24:57 - [TEST_STEP][PASSED] - b30 = b30.substring(0, i): null

10-01-2025T03:24:57 - [TEST_STEP][PASSED] - b30 = b30.replaceAll(" ", ""): null

10-01-2025T03:24:57 - [TEST_STEP][PASSED] - if (b30.contains("%")): null

10-01-2025T03:24:57 - [TEST_STEP][PASSED] - b30 = ").trim(): null

10-01-2025T03:24:57 - [TEST_STEP][PASSED] - println("b30: " + b30): null

10-01-2025T03:24:57 - [TEST_STEP][PASSED] - if (vir == 1 || vir == 2): Text of object 'Object Repository/Выручка в рублях/span2' is: '358'

10-01-2025T03:24:57 - [TEST_STEP][PASSED] - b31 = ").trim(): Text of object 'Object Repository/Выручка в рублях/span2' is: '358'

10-01-2025T03:24:57 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выручка в рублях/span2' is: '358'

10-01-2025T03:24:57 - [TEST_STEP][PASSED] - if (vir == 1 || vir == 2): Text of object 'Object Repository/Выручка в рублях/span3' is: '121'

10-01-2025T03:24:57 - [TEST_STEP][PASSED] - b32 = ").trim(): Text of object 'Object Repository/Выручка в рублях/span3' is: '121'

10-01-2025T03:24:58 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выручка в рублях/span3' is: '121'

10-01-2025T03:24:58 - [TEST_STEP][PASSED] - if (vir == 1 || vir == 2): Text of object 'Object Repository/Выручка в рублях/span8' is: '945'

10-01-2025T03:24:58 - [TEST_STEP][PASSED] - b33 = ").trim(): Text of object 'Object Repository/Выручка в рублях/span4' is: '239'

10-01-2025T03:24:58 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выручка в рублях/span4' is: '239'

10-01-2025T03:24:58 - [TEST_STEP][PASSED] - b34 = ").trim(): Text of object 'Object Repository/Выручка в рублях/span5' is: '4 507'

10-01-2025T03:24:58 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выручка в рублях/span5' is: '4 507'

10-01-2025T03:24:58 - [TEST_STEP][PASSED] - b35 = ").trim(): Text of object 'Object Repository/Выручка в рублях/span6' is: '5 172'

10-01-2025T03:24:59 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выручка в рублях/span6' is: '5 172'

10-01-2025T03:24:59 - [TEST_STEP][PASSED] - b36 = ").trim(): Text of object 'Object Repository/Выручка в рублях/span7' is: '8 574'

10-01-2025T03:24:59 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выручка в рублях/span7' is: '8 574'

10-01-2025T03:24:59 - [TEST_STEP][PASSED] - b37 = ").trim(): Text of object 'Object Repository/Выручка в рублях/span8' is: '945'

10-01-2025T03:24:59 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выручка в рублях/span8' is: '945'

10-01-2025T03:24:59 - [TEST_STEP][PASSED] - if (vir == 1 || vir == 2): Text of object 'Object Repository/Выручка в рублях/span17' is: '1 329'

10-01-2025T03:24:59 - [TEST_STEP][PASSED] - b38 = ").trim(): Text of object 'Object Repository/Выручка в рублях/span9' is: '784'

10-01-2025T03:24:59 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выручка в рублях/span9' is: '784'

10-01-2025T03:24:59 - [TEST_STEP][PASSED] - b39 = ").trim(): Text of object 'Object Repository/Выручка в рублях/span10' is: '2 396'

10-01-2025T03:25:00 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выручка в рублях/span10' is: '2 396'

10-01-2025T03:25:00 - [TEST_STEP][PASSED] - b310 = ").trim(): Text of object 'Object Repository/Выручка в рублях/span11' is: '241'

10-01-2025T03:25:00 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выручка в рублях/span11' is: '241'

10-01-2025T03:25:00 - [TEST_STEP][PASSED] - b311 = ").trim(): Text of object 'Object Repository/Выручка в рублях/span12' is: '-6 052'

10-01-2025T03:25:00 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выручка в рублях/span12' is: '-6 052'

10-01-2025T03:25:00 - [TEST_STEP][PASSED] - b312 = ").trim(): Text of object 'Object Repository/Выручка в рублях/span13' is: '2 027'

10-01-2025T03:25:01 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выручка в рублях/span13' is: '2 027'

10-01-2025T03:25:01 - [TEST_STEP][PASSED] - b313 = ").trim(): Text of object 'Object Repository/Выручка в рублях/span14' is: '-23 772'

10-01-2025T03:25:01 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выручка в рублях/span14' is: '-23 772'

10-01-2025T03:25:01 - [TEST_STEP][PASSED] - b314 = ").trim(): Text of object 'Object Repository/Выручка в рублях/span15' is: '3 732'

10-01-2025T03:25:01 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выручка в рублях/span15' is: '3 732'

10-01-2025T03:25:01 - [TEST_STEP][PASSED] - b315 = ").trim(): Text of object 'Object Repository/Выручка в рублях/span16' is: '4 813'

10-01-2025T03:25:02 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выручка в рублях/span16' is: '4 813'

10-01-2025T03:25:02 - [TEST_STEP][PASSED] - b316 = ").trim(): Text of object 'Object Repository/Выручка в рублях/span17' is: '1 329'

10-01-2025T03:25:02 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выручка в рублях/span17' is: '1 329'

10-01-2025T03:25:02 - [TEST_STEP][PASSED] - if (vir == 1 || vir == 2): Text of object 'Object Repository/Выручка в рублях/span18' is: '372'

10-01-2025T03:25:02 - [TEST_STEP][PASSED] - b317 = ").trim(): Text of object 'Object Repository/Выручка в рублях/span18' is: '372'

10-01-2025T03:25:02 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выручка в рублях/span18' is: '372'

10-01-2025T03:25:02 - [TEST_STEP][PASSED] - dZO = "ПАО Россети": null

10-01-2025T03:25:02 - [TEST_STEP][PASSED] - if (verifyEqual(a1, b1) == false): Actual object '1 311 033' and expected object '1 311 033' are equal

10-01-2025T03:25:02 - [MESSAGE][PASSED] - Actual object '1 311 033' and expected object '1 311 033' are equal

10-01-2025T03:25:02 - [TEST_STEP][PASSED] - if (verifyEqual(a2, b2) == false): Actual object '1 316 817' and expected object '1 316 817' are equal

10-01-2025T03:25:02 - [MESSAGE][PASSED] - Actual object '1 316 817' and expected object '1 316 817' are equal

10-01-2025T03:25:02 - [TEST_STEP][PASSED] - vidget = "Отклонения": null

10-01-2025T03:25:02 - [TEST_STEP][PASSED] - if (verifyEqual(a30, b30) == false): Actual object '5783.7' and expected object '5783.7' are equal

10-01-2025T03:25:02 - [MESSAGE][PASSED] - Actual object '5783.7' and expected object '5783.7' are equal

10-01-2025T03:25:02 - [TEST_STEP][PASSED] - dZO = "АО «Тываэнерго»": null

10-01-2025T03:25:02 - [TEST_STEP][PASSED] - if (verifyEqual(a31, b31) == false): Actual object '358' and expected object '358' are equal

10-01-2025T03:25:02 - [MESSAGE][PASSED] - Actual object '358' and expected object '358' are equal

10-01-2025T03:25:02 - [TEST_STEP][PASSED] - dZO = "АО «Чеченэнерго»": null

10-01-2025T03:25:02 - [TEST_STEP][PASSED] - if (verifyEqual(a32, b32) == false): Actual object '121' and expected object '121' are equal

10-01-2025T03:25:02 - [MESSAGE][PASSED] - Actual object '121' and expected object '121' are equal

10-01-2025T03:25:02 - [TEST_STEP][PASSED] - dZO = "Россети Волга": null

10-01-2025T03:25:02 - [TEST_STEP][PASSED] - if (verifyEqual(a33, b33) == false): Actual object '239' and expected object '239' are equal

10-01-2025T03:25:02 - [MESSAGE][PASSED] - Actual object '239' and expected object '239' are equal

10-01-2025T03:25:02 - [TEST_STEP][PASSED] - dZO = "Россети Кубань": null

10-01-2025T03:25:02 - [TEST_STEP][PASSED] - if (verifyEqual(a34, b34) == false): Actual object '4 507' and expected object '4 507' are equal

10-01-2025T03:25:02 - [MESSAGE][PASSED] - Actual object '4 507' and expected object '4 507' are equal

10-01-2025T03:25:02 - [TEST_STEP][PASSED] - dZO = "Россети Ленэнерго (ГК)": null

10-01-2025T03:25:02 - [TEST_STEP][PASSED] - if (verifyEqual(a35, b35) == false): Actual object '5 172' and expected object '5 172' are equal

10-01-2025T03:25:02 - [MESSAGE][PASSED] - Actual object '5 172' and expected object '5 172' are equal

10-01-2025T03:25:02 - [TEST_STEP][PASSED] - dZO = "Россети Московский регион": null

10-01-2025T03:25:02 - [TEST_STEP][PASSED] - if (verifyEqual(a36, b36) == false): Actual object '8 574' and expected object '8 574' are equal

10-01-2025T03:25:02 - [MESSAGE][PASSED] - Actual object '8 574' and expected object '8 574' are equal

10-01-2025T03:25:02 - [TEST_STEP][PASSED] - dZO = "Россети Северный Кавказ (ГК)": null

10-01-2025T03:25:02 - [TEST_STEP][PASSED] - if (verifyEqual(a37, b37) == false): Actual object '945' and expected object '945' are equal

10-01-2025T03:25:02 - [MESSAGE][PASSED] - Actual object '945' and expected object '945' are equal

10-01-2025T03:25:02 - [TEST_STEP][PASSED] - dZO = "Россети Северо-Запад": null

10-01-2025T03:25:02 - [TEST_STEP][PASSED] - if (verifyEqual(a38, b38) == false): Actual object '784' and expected object '784' are equal

10-01-2025T03:25:02 - [MESSAGE][PASSED] - Actual object '784' and expected object '784' are equal

10-01-2025T03:25:02 - [TEST_STEP][PASSED] - dZO = "Россети Сибирь (ГК)": null

10-01-2025T03:25:02 - [TEST_STEP][PASSED] - if (verifyEqual(a39, b39) == false): Actual object '2 396' and expected object '2 396' are equal

10-01-2025T03:25:02 - [MESSAGE][PASSED] - Actual object '2 396' and expected object '2 396' are equal

10-01-2025T03:25:02 - [TEST_STEP][PASSED] - dZO = "Россети Томск": null

10-01-2025T03:25:02 - [TEST_STEP][PASSED] - if (verifyEqual(a310, b310) == false): Actual object '241' and expected object '241' are equal

10-01-2025T03:25:02 - [MESSAGE][PASSED] - Actual object '241' and expected object '241' are equal

10-01-2025T03:25:02 - [TEST_STEP][PASSED] - dZO = "Россети Тюмень": null

10-01-2025T03:25:02 - [TEST_STEP][PASSED] - if (verifyEqual(a311, b311) == false): Actual object '-6 052' and expected object '-6 052' are equal

10-01-2025T03:25:02 - [MESSAGE][PASSED] - Actual object '-6 052' and expected object '-6 052' are equal

10-01-2025T03:25:02 - [TEST_STEP][PASSED] - dZO = "Россети Урал (ГК)": null

10-01-2025T03:25:02 - [TEST_STEP][PASSED] - if (verifyEqual(a312, b312) == false): Actual object '2 027' and expected object '2 027' are equal

10-01-2025T03:25:02 - [MESSAGE][PASSED] - Actual object '2 027' and expected object '2 027' are equal

10-01-2025T03:25:02 - [TEST_STEP][PASSED] - dZO = "Россети ФСК ЕЭС": null

10-01-2025T03:25:02 - [TEST_STEP][PASSED] - if (verifyEqual(a313, b313) == false): Actual object '-23 772' and expected object '-23 772' are equal

10-01-2025T03:25:02 - [MESSAGE][PASSED] - Actual object '-23 772' and expected object '-23 772' are equal

10-01-2025T03:25:02 - [TEST_STEP][PASSED] - dZO = "Россети Центр": null

10-01-2025T03:25:02 - [TEST_STEP][PASSED] - if (verifyEqual(a314, b314) == false): Actual object '3 732' and expected object '3 732' are equal

10-01-2025T03:25:02 - [MESSAGE][PASSED] - Actual object '3 732' and expected object '3 732' are equal

10-01-2025T03:25:02 - [TEST_STEP][PASSED] - dZO = "Россети Центр и Приволжье (ГК)": null

10-01-2025T03:25:02 - [TEST_STEP][PASSED] - if (verifyEqual(a315, b315) == false): Actual object '4 813' and expected object '4 813' are equal

10-01-2025T03:25:02 - [MESSAGE][PASSED] - Actual object '4 813' and expected object '4 813' are equal

10-01-2025T03:25:02 - [TEST_STEP][PASSED] - dZO = "Россети Юг (ГК)": null

10-01-2025T03:25:02 - [TEST_STEP][PASSED] - if (verifyEqual(a316, b316) == false): Actual object '1 329' and expected object '1 329' are equal

10-01-2025T03:25:02 - [MESSAGE][PASSED] - Actual object '1 329' and expected object '1 329' are equal

10-01-2025T03:25:02 - [TEST_STEP][PASSED] - dZO = "Россети Янтарь": null

10-01-2025T03:25:02 - [TEST_STEP][PASSED] - if (verifyEqual(a317, b317) == false): Actual object '372' and expected object '372' are equal

10-01-2025T03:25:02 - [MESSAGE][PASSED] - Actual object '372' and expected object '372' are equal

10-01-2025T03:25:02 - [TEST_STEP][PASSED] - closeBrowser(): null

10-01-2025T03:25:03 - [MESSAGE][PASSED] - Browser is closed

10-01-2025T03:25:03 - [TEST_STEP][PASSED] - Script1710234207206.Blocks(run, vir, block, nameOfBlock, typeOfData, viruchka, vidget, todaysDate, a, b, dZO, x, y): null

10-01-2025T03:25:03 - [TEST_STEP][PASSED] - i = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:25:03 - [TEST_STEP][PASSED] - perc = "": null

10-01-2025T03:25:03 - [TEST_STEP][PASSED] - a1 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:25:03 - [TEST_STEP][PASSED] - a2 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:25:03 - [TEST_STEP][PASSED] - a30 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:25:03 - [TEST_STEP][PASSED] - a31 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:25:03 - [TEST_STEP][PASSED] - a32 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:25:03 - [TEST_STEP][PASSED] - a33 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:25:03 - [TEST_STEP][PASSED] - a34 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:25:03 - [TEST_STEP][PASSED] - a35 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:25:03 - [TEST_STEP][PASSED] - a36 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:25:03 - [TEST_STEP][PASSED] - a37 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:25:03 - [TEST_STEP][PASSED] - a38 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:25:03 - [TEST_STEP][PASSED] - a39 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:25:03 - [TEST_STEP][PASSED] - a310 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:25:03 - [TEST_STEP][PASSED] - a311 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:25:03 - [TEST_STEP][PASSED] - a312 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:25:03 - [TEST_STEP][PASSED] - a313 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:25:03 - [TEST_STEP][PASSED] - a314 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:25:03 - [TEST_STEP][PASSED] - a315 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:25:03 - [TEST_STEP][PASSED] - a316 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:25:03 - [TEST_STEP][PASSED] - a317 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:25:03 - [TEST_STEP][PASSED] - b1 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:25:03 - [TEST_STEP][PASSED] - b2 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:25:03 - [TEST_STEP][PASSED] - b30 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:25:03 - [TEST_STEP][PASSED] - b31 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:25:03 - [TEST_STEP][PASSED] - b32 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:25:03 - [TEST_STEP][PASSED] - b33 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:25:03 - [TEST_STEP][PASSED] - b34 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:25:03 - [TEST_STEP][PASSED] - b35 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:25:03 - [TEST_STEP][PASSED] - b36 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:25:03 - [TEST_STEP][PASSED] - b37 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:25:03 - [TEST_STEP][PASSED] - b38 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:25:03 - [TEST_STEP][PASSED] - b39 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:25:03 - [TEST_STEP][PASSED] - b310 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:25:03 - [TEST_STEP][PASSED] - b311 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:25:03 - [TEST_STEP][PASSED] - b312 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:25:03 - [TEST_STEP][PASSED] - b313 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:25:03 - [TEST_STEP][PASSED] - b314 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:25:03 - [TEST_STEP][PASSED] - b315 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:25:03 - [TEST_STEP][PASSED] - b316 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:25:03 - [TEST_STEP][PASSED] - b317 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:25:03 - [TEST_STEP][PASSED] - block = 1: null

10-01-2025T03:25:03 - [TEST_STEP][PASSED] - nameOfBlock = "": null

10-01-2025T03:25:03 - [TEST_STEP][PASSED] - Script1710234207206.PreSettings(run, vir, block, nameOfBlock, typeOfData, todaysDate): null

10-01-2025T03:25:03 - [TEST_STEP][PASSED] - openBrowser(""): Browser is opened with url: ''

10-01-2025T03:25:03 - [MESSAGE][INFO] - Starting 'Chrome' driver

10-01-2025T03:25:03 - [MESSAGE][INFO] - Action delay is set to 0 milliseconds

10-01-2025T03:25:04 - [MESSAGE][PASSED] - Browser is opened with url: ''

10-01-2025T03:25:04 - [TEST_STEP][PASSED] - refresh(): Refresh successfully

10-01-2025T03:25:04 - [MESSAGE][PASSED] - Refresh successfully

10-01-2025T03:25:04 - [TEST_STEP][PASSED] - delay(50): Delayed 50 second(s)

10-01-2025T03:25:54 - [MESSAGE][PASSED] - Delayed 50 second(s)

10-01-2025T03:25:54 - [TEST_STEP][PASSED] - println("run:" + run): null

10-01-2025T03:25:54 - [TEST_STEP][PASSED] - println("vir:" + vir): null

10-01-2025T03:25:54 - [TEST_STEP][PASSED] - println("block:" + block): null

10-01-2025T03:25:54 - [TEST_STEP][PASSED] - if (block == 1): null

10-01-2025T03:25:54 - [TEST_STEP][PASSED] - nameOfBlock = "": null

10-01-2025T03:25:54 - [TEST_STEP][PASSED] - println("nameOfBlock:" + nameOfBlock): null

10-01-2025T03:25:54 - [TEST_STEP][PASSED] - println("typeOfData:" + typeOfData): null

10-01-2025T03:25:54 - [TEST_STEP][PASSED] - println("todaysDate:" + todaysDate): null

10-01-2025T03:25:54 - [TEST_STEP][PASSED] - Script1710234207206.Autorization(block, nameOfBlock): null

10-01-2025T03:25:54 - [TEST_STEP][PASSED] - i = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:25:54 - [TEST_STEP][PASSED] - ii = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:25:54 - [TEST_STEP][PASSED] - urlData = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:25:54 - [TEST_STEP][PASSED] - searchWord = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:25:54 - [TEST_STEP][PASSED] - urlText = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:25:54 - [TEST_STEP][PASSED] - println("block:" + block): null

10-01-2025T03:25:54 - [TEST_STEP][PASSED] - if (block == 1): null

10-01-2025T03:25:54 - [TEST_STEP][PASSED] - nameOfBlock = "": null

10-01-2025T03:25:54 - [TEST_STEP][PASSED] - println("nameOfBlock:" + nameOfBlock): null

10-01-2025T03:25:54 - [TEST_STEP][PASSED] - if (block == 1): Delayed 45 second(s)

10-01-2025T03:25:54 - [TEST_STEP][PASSED] - urlData = 2: null

10-01-2025T03:25:54 - [TEST_STEP][PASSED] - delay(45): Delayed 45 second(s)

10-01-2025T03:26:39 - [MESSAGE][PASSED] - Delayed 45 second(s)

10-01-2025T03:26:39 - [TEST_STEP][PASSED] - navigateToUrl(findTestData("PlanFact").getValue(10, urlData)): Navigate to 'https://bi.rosseti.digital/viewer?dashboardGuid=2301950b23be4ed89c1df75f2020051e&sheetGuid=b723206f698544fb87299f3095c00435&fit=true' successfully

10-01-2025T03:26:43 - [MESSAGE][PASSED] - Navigate to 'https://bi.rosseti.digital/viewer?dashboardGuid=2301950b23be4ed89c1df75f2020051e&sheetGuid=b723206f698544fb87299f3095c00435&fit=true' successfully

10-01-2025T03:26:43 - [TEST_STEP][PASSED] - urlText = getText(findTestObject("Страница авторизации/Text")): Text of object 'Object Repository/Страница авторизации/Text' is: 'Вход'

10-01-2025T03:26:45 - [MESSAGE][PASSED] - Text of object 'Object Repository/Страница авторизации/Text' is: 'Вход'

10-01-2025T03:26:45 - [TEST_STEP][PASSED] - searchWord = "Вход": null

10-01-2025T03:26:45 - [TEST_STEP][PASSED] - if (urlText == null || urlText.contains("ошибка") || urlText.contains(searchWord) == false): null

10-01-2025T03:26:45 - [TEST_STEP][PASSED] - if (verifyElementPresent(findTestObject("Страница авторизации/button_"), 30) == true): null

10-01-2025T03:26:45 - [MESSAGE][PASSED] - Object 'Object Repository/Страница авторизации/button_' is present

10-01-2025T03:26:45 - [TEST_STEP][PASSED] - setText(findTestObject("Страница авторизации/input__username"), findTestData("PlanFact").getValue(8, 1)): Text 'liazgina-di' is set on object 'Object Repository/Страница авторизации/input__username'

10-01-2025T03:26:46 - [MESSAGE][PASSED] - Text 'liazgina-di' is set on object 'Object Repository/Страница авторизации/input__username'

10-01-2025T03:26:46 - [TEST_STEP][PASSED] - setText(findTestObject("Страница авторизации/input__password"), findTestData("PlanFact").getValue(9, 1)): Text ')$%5srZ8o688Dm#q' is set on object 'Object Repository/Страница авторизации/input__password'

10-01-2025T03:26:46 - [MESSAGE][PASSED] - Text ')$%5srZ8o688Dm#q' is set on object 'Object Repository/Страница авторизации/input__password'

10-01-2025T03:26:46 - [TEST_STEP][PASSED] - click(findTestObject("Страница авторизации/button_")): Object: 'Object Repository/Страница авторизации/button_' is clicked on

10-01-2025T03:26:48 - [MESSAGE][PASSED] - Object: 'Object Repository/Страница авторизации/button_' is clicked on

10-01-2025T03:26:48 - [TEST_STEP][PASSED] - delay(45): Delayed 45 second(s)

10-01-2025T03:27:33 - [MESSAGE][PASSED] - Delayed 45 second(s)

10-01-2025T03:27:33 - [TEST_STEP][PASSED] - urlText = getText(findTestObject("Страница авторизации/Text")): Text of object 'Object Repository/Страница авторизации/Text' is: 'Период
1, 2, 3 кв., Октябрь, Ноябрь 2024 года
Выручка
Все
Выполнение плановых показателей по ПАО Россети за 1, 2, 3 кв., Октябрь, Ноябрь 2024 года
План
Факт
Динамика
2024 год
0 млн.руб.
100 000 млн.руб.
200 000 млн.руб.
300 000 млн.руб.
400 000 млн.руб.
500 000 млн.руб.
600 000 млн.руб.
700 000 млн.руб.
800 000 млн.руб.
900 000 млн.руб.
1 000 000 млн.руб.
1 100 000 млн.руб.
1 200 000 млн.руб.
1 300 000 млн.руб.
1 400 000 млн.руб.
1 500 000 млн.руб.
1 600 000 млн.руб.
1 311 033
1 316 817
↑
ДЗО 
Все
Внутренний оборот - выручка за услуги по передаче электрической энергии, учтенная в выручке за электроэнергию для конечных потребителей, при выполнении ДЗО функций гарантирующего поставщика
Подписи данных
⬤Отклонение
АО «Тываэнерго»
АО «Чеченэнерго»
Россети Волга
Россети Кубань
Россети Ленэнерго (ГК)
Россети Московский регион
Россети Северный Кавказ (ГК)
Россети Северо-Запад
Россети Сибирь (ГК)
Россети Томск
Россети Тюмень
Россети Урал (ГК)
Россети ФСК ЕЭС
Россети Центр
Россети Центр и Приволжье (ГК)
Россети Юг (ГК)
Россети Янтарь
-25 000 млн.руб.
-20 000 млн.руб.
-15 000 млн.руб.
-10 000 млн.руб.
-5 000 млн.руб.
0 млн.руб.
5 000 млн.руб.
10 000 млн.руб.
-30 000 млн.руб.
15 000 млн.руб.
358
121
239
4 507
5 172
8 574
945
784
2 396
241
-6 052
2 027
-23 772
3 732
4 813
1 329
372
млн.
%
Выручка
Отклонение выручки по ПАО Россети за 1, 2, 3 кв., Октябрь, Ноябрь 2024 года (факт/план, млн. руб)
ПАО Россети
5 783.7 млн.руб.
 '

10-01-2025T03:27:34 - [MESSAGE][PASSED] - Text of object 'Object Repository/Страница авторизации/Text' is: 'Период
1, 2, 3 кв., Октябрь, Ноябрь 2024 года
Выручка
Все
Выполнение плановых показателей по ПАО Россети за 1, 2, 3 кв., Октябрь, Ноябрь 2024 года
План
Факт
Динамика
2024 год
0 млн.руб.
100 000 млн.руб.
200 000 млн.руб.
300 000 млн.руб.
400 000 млн.руб.
500 000 млн.руб.
600 000 млн.руб.
700 000 млн.руб.
800 000 млн.руб.
900 000 млн.руб.
1 000 000 млн.руб.
1 100 000 млн.руб.
1 200 000 млн.руб.
1 300 000 млн.руб.
1 400 000 млн.руб.
1 500 000 млн.руб.
1 600 000 млн.руб.
1 311 033
1 316 817
↑
ДЗО 
Все
Внутренний оборот - выручка за услуги по передаче электрической энергии, учтенная в выручке за электроэнергию для конечных потребителей, при выполнении ДЗО функций гарантирующего поставщика
Подписи данных
⬤Отклонение
АО «Тываэнерго»
АО «Чеченэнерго»
Россети Волга
Россети Кубань
Россети Ленэнерго (ГК)
Россети Московский регион
Россети Северный Кавказ (ГК)
Россети Северо-Запад
Россети Сибирь (ГК)
Россети Томск
Россети Тюмень
Россети Урал (ГК)
Россети ФСК ЕЭС
Россети Центр
Россети Центр и Приволжье (ГК)
Россети Юг (ГК)
Россети Янтарь
-25 000 млн.руб.
-20 000 млн.руб.
-15 000 млн.руб.
-10 000 млн.руб.
-5 000 млн.руб.
0 млн.руб.
5 000 млн.руб.
10 000 млн.руб.
-30 000 млн.руб.
15 000 млн.руб.
358
121
239
4 507
5 172
8 574
945
784
2 396
241
-6 052
2 027
-23 772
3 732
4 813
1 329
372
млн.
%
Выручка
Отклонение выручки по ПАО Россети за 1, 2, 3 кв., Октябрь, Ноябрь 2024 года (факт/план, млн. руб)
ПАО Россети
5 783.7 млн.руб.
 '

10-01-2025T03:27:34 - [TEST_STEP][PASSED] - searchWord = "а": null

10-01-2025T03:27:34 - [TEST_STEP][PASSED] - if (urlText.contains("ошибка") || urlText.contains(searchWord) == false): null

10-01-2025T03:27:34 - [TEST_STEP][PASSED] - delay(45): Delayed 45 second(s)

10-01-2025T03:28:19 - [MESSAGE][PASSED] - Delayed 45 second(s)

10-01-2025T03:28:19 - [TEST_STEP][PASSED] - if (block == 2): null

10-01-2025T03:28:19 - [TEST_STEP][PASSED] - click(findTestObject("Выручка в рублях/Фильтр Период" + nameOfBlock)): Object: 'Object Repository/Выручка в рублях/Фильтр Период' is clicked on

10-01-2025T03:28:19 - [MESSAGE][PASSED] - Object: 'Object Repository/Выручка в рублях/Фильтр Период' is clicked on

10-01-2025T03:28:19 - [TEST_STEP][PASSED] - click(findTestObject("Выручка в рублях/Снять выделение в фильтре Дата" + nameOfBlock)): Object: 'Object Repository/Выручка в рублях/Снять выделение в фильтре Дата' is clicked on

10-01-2025T03:28:20 - [MESSAGE][PASSED] - Object: 'Object Repository/Выручка в рублях/Снять выделение в фильтре Дата' is clicked on

10-01-2025T03:28:20 - [TEST_STEP][PASSED] - click(findTestObject("Выручка в рублях/Применить в фильтре Дата" + nameOfBlock)): Object: 'Object Repository/Выручка в рублях/Применить в фильтре Дата' is clicked on

10-01-2025T03:28:20 - [MESSAGE][PASSED] - Object: 'Object Repository/Выручка в рублях/Применить в фильтре Дата' is clicked on

10-01-2025T03:28:20 - [TEST_STEP][PASSED] - delay(50): Delayed 50 second(s)

10-01-2025T03:29:10 - [MESSAGE][PASSED] - Delayed 50 second(s)

10-01-2025T03:29:10 - [TEST_STEP][PASSED] - click(findTestObject("Выручка в рублях/Фильтр Период" + nameOfBlock)): Object: 'Object Repository/Выручка в рублях/Фильтр Период' is clicked on

10-01-2025T03:29:11 - [MESSAGE][PASSED] - Object: 'Object Repository/Выручка в рублях/Фильтр Период' is clicked on

10-01-2025T03:29:11 - [TEST_STEP][PASSED] - click(findTestObject("Выручка в рублях/Снять выделение в фильтре Дата" + nameOfBlock)): Object: 'Object Repository/Выручка в рублях/Снять выделение в фильтре Дата' is clicked on

10-01-2025T03:29:11 - [MESSAGE][PASSED] - Object: 'Object Repository/Выручка в рублях/Снять выделение в фильтре Дата' is clicked on

10-01-2025T03:29:11 - [TEST_STEP][PASSED] - scrollToElement(findTestObject("Выручка в рублях/2024 список" + nameOfBlock), 30): Scroll to object 'Object Repository/Выручка в рублях/2024 список' successfully

10-01-2025T03:29:11 - [MESSAGE][PASSED] - Scroll to object 'Object Repository/Выручка в рублях/2024 список' successfully

10-01-2025T03:29:11 - [TEST_STEP][PASSED] - click(findTestObject("Выручка в рублях/2024 список" + nameOfBlock)): Object: 'Object Repository/Выручка в рублях/2024 список' is clicked on

10-01-2025T03:29:12 - [MESSAGE][PASSED] - Object: 'Object Repository/Выручка в рублях/2024 список' is clicked on

10-01-2025T03:29:12 - [TEST_STEP][PASSED] - scrollToElement(findTestObject("Выручка в рублях/1 квартал 2024 выбрать" + nameOfBlock), 30): Scroll to object 'Object Repository/Выручка в рублях/1 квартал 2024 выбрать' successfully

10-01-2025T03:29:12 - [MESSAGE][PASSED] - Scroll to object 'Object Repository/Выручка в рублях/1 квартал 2024 выбрать' successfully

10-01-2025T03:29:12 - [TEST_STEP][PASSED] - click(findTestObject("Выручка в рублях/1 квартал 2024 выбрать" + nameOfBlock)): Object: 'Object Repository/Выручка в рублях/1 квартал 2024 выбрать' is clicked on

10-01-2025T03:29:13 - [MESSAGE][PASSED] - Object: 'Object Repository/Выручка в рублях/1 квартал 2024 выбрать' is clicked on

10-01-2025T03:29:13 - [TEST_STEP][PASSED] - scrollToElement(findTestObject("Выручка в рублях/2 квартал 2024 выбрать" + nameOfBlock), 30): Scroll to object 'Object Repository/Выручка в рублях/2 квартал 2024 выбрать' successfully

10-01-2025T03:29:13 - [MESSAGE][PASSED] - Scroll to object 'Object Repository/Выручка в рублях/2 квартал 2024 выбрать' successfully

10-01-2025T03:29:13 - [TEST_STEP][PASSED] - click(findTestObject("Выручка в рублях/2 квартал 2024 выбрать" + nameOfBlock)): Object: 'Object Repository/Выручка в рублях/2 квартал 2024 выбрать' is clicked on

10-01-2025T03:29:14 - [MESSAGE][PASSED] - Object: 'Object Repository/Выручка в рублях/2 квартал 2024 выбрать' is clicked on

10-01-2025T03:29:14 - [TEST_STEP][PASSED] - scrollToElement(findTestObject("Выручка в рублях/3 квартал 2024 список" + nameOfBlock), 30): Scroll to object 'Object Repository/Выручка в рублях/3 квартал 2024 список' successfully

10-01-2025T03:29:14 - [MESSAGE][PASSED] - Scroll to object 'Object Repository/Выручка в рублях/3 квартал 2024 список' successfully

10-01-2025T03:29:14 - [TEST_STEP][PASSED] - click(findTestObject("Выручка в рублях/3 квартал 2024" + nameOfBlock)): Object: 'Object Repository/Выручка в рублях/3 квартал 2024' is clicked on

10-01-2025T03:29:14 - [MESSAGE][PASSED] - Object: 'Object Repository/Выручка в рублях/3 квартал 2024' is clicked on

10-01-2025T03:29:14 - [TEST_STEP][PASSED] - scrollToElement(findTestObject("Выручка в рублях/4 квартал 2024 список" + nameOfBlock), 30): Scroll to object 'Object Repository/Выручка в рублях/4 квартал 2024 список' successfully

10-01-2025T03:29:15 - [MESSAGE][PASSED] - Scroll to object 'Object Repository/Выручка в рублях/4 квартал 2024 список' successfully

10-01-2025T03:29:15 - [TEST_STEP][PASSED] - click(findTestObject("Выручка в рублях/4 квартал 2024 список" + nameOfBlock)): Object: 'Object Repository/Выручка в рублях/4 квартал 2024 список' is clicked on

10-01-2025T03:29:15 - [MESSAGE][PASSED] - Object: 'Object Repository/Выручка в рублях/4 квартал 2024 список' is clicked on

10-01-2025T03:29:15 - [TEST_STEP][PASSED] - scrollToElement(findTestObject("Выручка в рублях/Октябрь 2024" + nameOfBlock), 30): Scroll to object 'Object Repository/Выручка в рублях/Октябрь 2024' successfully

10-01-2025T03:29:16 - [MESSAGE][PASSED] - Scroll to object 'Object Repository/Выручка в рублях/Октябрь 2024' successfully

10-01-2025T03:29:16 - [TEST_STEP][PASSED] - click(findTestObject("Выручка в рублях/Октябрь 2024" + nameOfBlock)): Object: 'Object Repository/Выручка в рублях/Октябрь 2024' is clicked on

10-01-2025T03:29:16 - [MESSAGE][PASSED] - Object: 'Object Repository/Выручка в рублях/Октябрь 2024' is clicked on

10-01-2025T03:29:16 - [TEST_STEP][PASSED] - scrollToElement(findTestObject("Выручка в рублях/Ноябрь 2024" + nameOfBlock), 30): Scroll to object 'Object Repository/Выручка в рублях/Ноябрь 2024' successfully

10-01-2025T03:29:16 - [MESSAGE][PASSED] - Scroll to object 'Object Repository/Выручка в рублях/Ноябрь 2024' successfully

10-01-2025T03:29:16 - [TEST_STEP][PASSED] - click(findTestObject("Выручка в рублях/Ноябрь 2024" + nameOfBlock)): Object: 'Object Repository/Выручка в рублях/Ноябрь 2024' is clicked on

10-01-2025T03:29:17 - [MESSAGE][PASSED] - Object: 'Object Repository/Выручка в рублях/Ноябрь 2024' is clicked on

10-01-2025T03:29:17 - [TEST_STEP][PASSED] - scrollToElement(findTestObject("Выручка в рублях/Заголовок дашборда" + nameOfBlock), 30): Scroll to object 'Object Repository/Выручка в рублях/Заголовок дашборда' successfully

10-01-2025T03:29:17 - [MESSAGE][PASSED] - Scroll to object 'Object Repository/Выручка в рублях/Заголовок дашборда' successfully

10-01-2025T03:29:17 - [TEST_STEP][PASSED] - click(findTestObject("Выручка в рублях/Применить в фильтре Дата" + nameOfBlock)): Object: 'Object Repository/Выручка в рублях/Применить в фильтре Дата' is clicked on

10-01-2025T03:29:18 - [MESSAGE][PASSED] - Object: 'Object Repository/Выручка в рублях/Применить в фильтре Дата' is clicked on

10-01-2025T03:29:18 - [TEST_STEP][PASSED] - delay(55): Delayed 55 second(s)

10-01-2025T03:30:13 - [MESSAGE][PASSED] - Delayed 55 second(s)

10-01-2025T03:30:13 - [TEST_STEP][PASSED] - click(findTestObject("Выручка в рублях/Фильтр ДЗО" + nameOfBlock)): Object: 'Object Repository/Выручка в рублях/Фильтр ДЗО' is clicked on

10-01-2025T03:30:13 - [MESSAGE][PASSED] - Object: 'Object Repository/Выручка в рублях/Фильтр ДЗО' is clicked on

10-01-2025T03:30:13 - [TEST_STEP][PASSED] - click(findTestObject("Выручка в рублях/Снять выделение в фильтре ДЗО" + nameOfBlock)): Object: 'Object Repository/Выручка в рублях/Снять выделение в фильтре ДЗО' is clicked on

10-01-2025T03:30:14 - [MESSAGE][PASSED] - Object: 'Object Repository/Выручка в рублях/Снять выделение в фильтре ДЗО' is clicked on

10-01-2025T03:30:14 - [TEST_STEP][PASSED] - click(findTestObject("Выручка в рублях/Применить в фильтре ДЗО" + nameOfBlock)): Object: 'Object Repository/Выручка в рублях/Применить в фильтре ДЗО' is clicked on

10-01-2025T03:30:14 - [MESSAGE][PASSED] - Object: 'Object Repository/Выручка в рублях/Применить в фильтре ДЗО' is clicked on

10-01-2025T03:30:14 - [TEST_STEP][PASSED] - delay(50): Delayed 50 second(s)

10-01-2025T03:31:04 - [MESSAGE][PASSED] - Delayed 50 second(s)

10-01-2025T03:31:04 - [TEST_STEP][PASSED] - Script1710234207206.Tumbler(run, vir, block, nameOfBlock): null

10-01-2025T03:31:04 - [TEST_STEP][PASSED] - println("run:" + run): null

10-01-2025T03:31:04 - [TEST_STEP][PASSED] - println("vir:" + vir): null

10-01-2025T03:31:04 - [TEST_STEP][PASSED] - println("block:" + block): null

10-01-2025T03:31:04 - [TEST_STEP][PASSED] - println("nameOfBlock:" + nameOfBlock): null

10-01-2025T03:31:04 - [TEST_STEP][PASSED] - if (vir == 1): null

10-01-2025T03:31:04 - [TEST_STEP][PASSED] - else if (vir == 2): Object: 'Object Repository/Выручка в рублях/Применить в фильтре Выручка' is clicked on

10-01-2025T03:31:04 - [TEST_STEP][PASSED] - if (run == 2): null

10-01-2025T03:31:04 - [TEST_STEP][PASSED] - click(findTestObject("Выручка в рублях/Фильтр Выручка" + nameOfBlock)): Object: 'Object Repository/Выручка в рублях/Фильтр Выручка' is clicked on

10-01-2025T03:31:05 - [MESSAGE][PASSED] - Object: 'Object Repository/Выручка в рублях/Фильтр Выручка' is clicked on

10-01-2025T03:31:05 - [TEST_STEP][PASSED] - click(findTestObject("Выручка в рублях/Итого в фильтре Выручка" + nameOfBlock)): Object: 'Object Repository/Выручка в рублях/Итого в фильтре Выручка' is clicked on

10-01-2025T03:31:05 - [MESSAGE][PASSED] - Object: 'Object Repository/Выручка в рублях/Итого в фильтре Выручка' is clicked on

10-01-2025T03:31:05 - [TEST_STEP][PASSED] - click(findTestObject("Выручка в рублях/Применить в фильтре Выручка" + nameOfBlock)): Object: 'Object Repository/Выручка в рублях/Применить в фильтре Выручка' is clicked on

10-01-2025T03:31:06 - [MESSAGE][PASSED] - Object: 'Object Repository/Выручка в рублях/Применить в фильтре Выручка' is clicked on

10-01-2025T03:31:06 - [TEST_STEP][PASSED] - click(findTestObject("Выручка в рублях/Фильтр ДЗО" + nameOfBlock)): Object: 'Object Repository/Выручка в рублях/Фильтр ДЗО' is clicked on

10-01-2025T03:31:08 - [MESSAGE][PASSED] - Object: 'Object Repository/Выручка в рублях/Фильтр ДЗО' is clicked on

10-01-2025T03:31:08 - [TEST_STEP][PASSED] - Script1710234207206.Rosseti(nameOfBlock): null

10-01-2025T03:31:08 - [TEST_STEP][PASSED] - println("nameOfBlock:" + nameOfBlock): null

10-01-2025T03:31:08 - [TEST_STEP][PASSED] - click(findTestObject("Выручка в рублях/ПАО Россети" + nameOfBlock)): Object: 'Object Repository/Выручка в рублях/ПАО Россети' is clicked on

10-01-2025T03:31:09 - [MESSAGE][PASSED] - Object: 'Object Repository/Выручка в рублях/ПАО Россети' is clicked on

10-01-2025T03:31:09 - [TEST_STEP][PASSED] - click(findTestObject("Выручка в рублях/Применить в фильтре ДЗО" + nameOfBlock)): Object: 'Object Repository/Выручка в рублях/Применить в фильтре ДЗО' is clicked on

10-01-2025T03:31:09 - [MESSAGE][PASSED] - Object: 'Object Repository/Выручка в рублях/Применить в фильтре ДЗО' is clicked on

10-01-2025T03:31:09 - [TEST_STEP][PASSED] - if (run == 2): null

10-01-2025T03:31:09 - [TEST_STEP][PASSED] - if (vir == 1 || vir == 2): Text of object 'Object Repository/Выручка в рублях/График План' is: '1 288 813'

10-01-2025T03:31:09 - [TEST_STEP][PASSED] - a1 = getText(findTestObject("Выручка в рублях/График План")): Text of object 'Object Repository/Выручка в рублях/График План' is: '1 288 813'

10-01-2025T03:31:11 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выручка в рублях/График План' is: '1 288 813'

10-01-2025T03:31:11 - [TEST_STEP][PASSED] - if (vir == 1 || vir == 2): Text of object 'Object Repository/Выручка в рублях/График Факт' is: '1 293 912'

10-01-2025T03:31:11 - [TEST_STEP][PASSED] - a2 = getText(findTestObject("Выручка в рублях/График Факт")): Text of object 'Object Repository/Выручка в рублях/График Факт' is: '1 293 912'

10-01-2025T03:31:11 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выручка в рублях/График Факт' is: '1 293 912'

10-01-2025T03:31:11 - [TEST_STEP][PASSED] - a30 = getText(findTestObject("Выручка в рублях/span1" + perc)): Text of object 'Object Repository/Выручка в рублях/span1' is: '5 099.2 млн.руб.'

10-01-2025T03:31:11 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выручка в рублях/span1' is: '5 099.2 млн.руб.'

10-01-2025T03:31:11 - [TEST_STEP][PASSED] - i = a30.indexOf("млн.руб."): null

10-01-2025T03:31:11 - [TEST_STEP][PASSED] - if (i > -1): null

10-01-2025T03:31:11 - [TEST_STEP][PASSED] - a30 = a30.substring(0, i): null

10-01-2025T03:31:11 - [TEST_STEP][PASSED] - a30 = a30.replaceAll(" ", ""): null

10-01-2025T03:31:11 - [TEST_STEP][PASSED] - if (a30.contains("%")): null

10-01-2025T03:31:11 - [TEST_STEP][PASSED] - a30 = ").trim(): null

10-01-2025T03:31:11 - [TEST_STEP][PASSED] - println("a30: " + a30): null

10-01-2025T03:31:11 - [TEST_STEP][PASSED] - if (vir == 1 || vir == 2): Text of object 'Object Repository/Выручка в рублях/span2' is: '481'

10-01-2025T03:31:11 - [TEST_STEP][PASSED] - a31 = ").trim(): Text of object 'Object Repository/Выручка в рублях/span2' is: '481'

10-01-2025T03:31:12 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выручка в рублях/span2' is: '481'

10-01-2025T03:31:12 - [TEST_STEP][PASSED] - if (vir == 1 || vir == 2): Text of object 'Object Repository/Выручка в рублях/span3' is: '-13'

10-01-2025T03:31:12 - [TEST_STEP][PASSED] - a32 = ").trim(): Text of object 'Object Repository/Выручка в рублях/span3' is: '-13'

10-01-2025T03:31:12 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выручка в рублях/span3' is: '-13'

10-01-2025T03:31:12 - [TEST_STEP][PASSED] - if (vir == 1 || vir == 2): Text of object 'Object Repository/Выручка в рублях/span8' is: '313'

10-01-2025T03:31:12 - [TEST_STEP][PASSED] - a33 = ").trim(): Text of object 'Object Repository/Выручка в рублях/span4' is: '239'

10-01-2025T03:31:12 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выручка в рублях/span4' is: '239'

10-01-2025T03:31:12 - [TEST_STEP][PASSED] - a34 = ").trim(): Text of object 'Object Repository/Выручка в рублях/span5' is: '4 507'

10-01-2025T03:31:12 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выручка в рублях/span5' is: '4 507'

10-01-2025T03:31:12 - [TEST_STEP][PASSED] - a35 = ").trim(): Text of object 'Object Repository/Выручка в рублях/span6' is: '5 172'

10-01-2025T03:31:13 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выручка в рублях/span6' is: '5 172'

10-01-2025T03:31:13 - [TEST_STEP][PASSED] - a36 = ").trim(): Text of object 'Object Repository/Выручка в рублях/span7' is: '8 574'

10-01-2025T03:31:13 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выручка в рублях/span7' is: '8 574'

10-01-2025T03:31:13 - [TEST_STEP][PASSED] - a37 = ").trim(): Text of object 'Object Repository/Выручка в рублях/span8' is: '313'

10-01-2025T03:31:13 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выручка в рублях/span8' is: '313'

10-01-2025T03:31:13 - [TEST_STEP][PASSED] - if (vir == 1 || vir == 2): Text of object 'Object Repository/Выручка в рублях/span17' is: '1 287'

10-01-2025T03:31:13 - [TEST_STEP][PASSED] - a38 = ").trim(): Text of object 'Object Repository/Выручка в рублях/span9' is: '784'

10-01-2025T03:31:14 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выручка в рублях/span9' is: '784'

10-01-2025T03:31:14 - [TEST_STEP][PASSED] - a39 = ").trim(): Text of object 'Object Repository/Выручка в рублях/span10' is: '2 396'

10-01-2025T03:31:14 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выручка в рублях/span10' is: '2 396'

10-01-2025T03:31:14 - [TEST_STEP][PASSED] - a310 = ").trim(): Text of object 'Object Repository/Выручка в рублях/span11' is: '241'

10-01-2025T03:31:14 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выручка в рублях/span11' is: '241'

10-01-2025T03:31:14 - [TEST_STEP][PASSED] - a311 = ").trim(): Text of object 'Object Repository/Выручка в рублях/span12' is: '-6 052'

10-01-2025T03:31:15 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выручка в рублях/span12' is: '-6 052'

10-01-2025T03:31:15 - [TEST_STEP][PASSED] - a312 = ").trim(): Text of object 'Object Repository/Выручка в рублях/span13' is: '2 027'

10-01-2025T03:31:15 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выручка в рублях/span13' is: '2 027'

10-01-2025T03:31:15 - [TEST_STEP][PASSED] - a313 = ").trim(): Text of object 'Object Repository/Выручка в рублях/span14' is: '-23 772'

10-01-2025T03:31:15 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выручка в рублях/span14' is: '-23 772'

10-01-2025T03:31:15 - [TEST_STEP][PASSED] - a314 = ").trim(): Text of object 'Object Repository/Выручка в рублях/span15' is: '3 732'

10-01-2025T03:31:15 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выручка в рублях/span15' is: '3 732'

10-01-2025T03:31:15 - [TEST_STEP][PASSED] - a315 = ").trim(): Text of object 'Object Repository/Выручка в рублях/span16' is: '4 813'

10-01-2025T03:31:16 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выручка в рублях/span16' is: '4 813'

10-01-2025T03:31:16 - [TEST_STEP][PASSED] - a316 = ").trim(): Text of object 'Object Repository/Выручка в рублях/span17' is: '1 287'

10-01-2025T03:31:16 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выручка в рублях/span17' is: '1 287'

10-01-2025T03:31:16 - [TEST_STEP][PASSED] - if (vir == 1 || vir == 2): Text of object 'Object Repository/Выручка в рублях/span18' is: '372'

10-01-2025T03:31:16 - [TEST_STEP][PASSED] - a317 = ").trim(): Text of object 'Object Repository/Выручка в рублях/span18' is: '372'

10-01-2025T03:31:16 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выручка в рублях/span18' is: '372'

10-01-2025T03:31:16 - [TEST_STEP][PASSED] - block = 2: null

10-01-2025T03:31:16 - [TEST_STEP][PASSED] - nameOfBlock = " Выручка": null

10-01-2025T03:31:16 - [TEST_STEP][PASSED] - Script1710234207206.PreSettings(run, vir, block, nameOfBlock, typeOfData, todaysDate): null

10-01-2025T03:31:16 - [TEST_STEP][PASSED] - openBrowser(""): Browser is opened with url: ''

10-01-2025T03:31:16 - [MESSAGE][WARNING] - A browser is already opened. Closing browser and opening a new one

10-01-2025T03:31:17 - [MESSAGE][INFO] - Starting 'Chrome' driver

10-01-2025T03:31:17 - [MESSAGE][INFO] - Action delay is set to 0 milliseconds

10-01-2025T03:31:17 - [MESSAGE][PASSED] - Browser is opened with url: ''

10-01-2025T03:31:17 - [TEST_STEP][PASSED] - refresh(): Refresh successfully

10-01-2025T03:31:18 - [MESSAGE][PASSED] - Refresh successfully

10-01-2025T03:31:18 - [TEST_STEP][PASSED] - delay(50): Delayed 50 second(s)

10-01-2025T03:32:08 - [MESSAGE][PASSED] - Delayed 50 second(s)

10-01-2025T03:32:08 - [TEST_STEP][PASSED] - println("run:" + run): null

10-01-2025T03:32:08 - [TEST_STEP][PASSED] - println("vir:" + vir): null

10-01-2025T03:32:08 - [TEST_STEP][PASSED] - println("block:" + block): null

10-01-2025T03:32:08 - [TEST_STEP][PASSED] - if (block == 1): null

10-01-2025T03:32:08 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:32:08 - [TEST_STEP][PASSED] - nameOfBlock = " Выручка": null

10-01-2025T03:32:08 - [TEST_STEP][PASSED] - println("nameOfBlock:" + nameOfBlock): null

10-01-2025T03:32:08 - [TEST_STEP][PASSED] - println("typeOfData:" + typeOfData): null

10-01-2025T03:32:08 - [TEST_STEP][PASSED] - println("todaysDate:" + todaysDate): null

10-01-2025T03:32:08 - [TEST_STEP][PASSED] - Script1710234207206.Autorization(block, nameOfBlock): null

10-01-2025T03:32:08 - [TEST_STEP][PASSED] - i = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:32:08 - [TEST_STEP][PASSED] - ii = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:32:08 - [TEST_STEP][PASSED] - urlData = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:32:08 - [TEST_STEP][PASSED] - searchWord = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:32:08 - [TEST_STEP][PASSED] - urlText = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:32:08 - [TEST_STEP][PASSED] - println("block:" + block): null

10-01-2025T03:32:08 - [TEST_STEP][PASSED] - if (block == 1): null

10-01-2025T03:32:08 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:32:08 - [TEST_STEP][PASSED] - delay(45): Delayed 45 second(s)

10-01-2025T03:32:53 - [MESSAGE][PASSED] - Delayed 45 second(s)

10-01-2025T03:32:53 - [TEST_STEP][PASSED] - nameOfBlock = " Выручка": null

10-01-2025T03:32:53 - [TEST_STEP][PASSED] - println("nameOfBlock:" + nameOfBlock): null

10-01-2025T03:32:53 - [TEST_STEP][PASSED] - if (block == 1): null

10-01-2025T03:32:53 - [TEST_STEP][PASSED] - else: Delayed 45 second(s)

10-01-2025T03:32:53 - [TEST_STEP][PASSED] - urlData = 9: null

10-01-2025T03:32:53 - [TEST_STEP][PASSED] - delay(45): Delayed 45 second(s)

10-01-2025T03:33:38 - [MESSAGE][PASSED] - Delayed 45 second(s)

10-01-2025T03:33:38 - [TEST_STEP][PASSED] - navigateToUrl(findTestData("PlanFact").getValue(10, urlData)): Navigate to 'https://bi.rosseti.digital/viewer?dashboardGuid=a1fd28b3785d443cbc4d7690a1d78e31&sheetGuid=86092a20c5984827a0c87b24cac76a50&fit=true' successfully

10-01-2025T03:33:43 - [MESSAGE][PASSED] - Navigate to 'https://bi.rosseti.digital/viewer?dashboardGuid=a1fd28b3785d443cbc4d7690a1d78e31&sheetGuid=86092a20c5984827a0c87b24cac76a50&fit=true' successfully

10-01-2025T03:33:43 - [TEST_STEP][PASSED] - urlText = getText(findTestObject("Страница авторизации/Text")): Text of object 'Object Repository/Страница авторизации/Text' is: 'Вход'

10-01-2025T03:33:43 - [MESSAGE][PASSED] - Text of object 'Object Repository/Страница авторизации/Text' is: 'Вход'

10-01-2025T03:33:43 - [TEST_STEP][PASSED] - searchWord = "Вход": null

10-01-2025T03:33:43 - [TEST_STEP][PASSED] - if (urlText == null || urlText.contains("ошибка") || urlText.contains(searchWord) == false): null

10-01-2025T03:33:43 - [TEST_STEP][PASSED] - if (verifyElementPresent(findTestObject("Страница авторизации/button_"), 30) == true): null

10-01-2025T03:33:44 - [MESSAGE][PASSED] - Object 'Object Repository/Страница авторизации/button_' is present

10-01-2025T03:33:44 - [TEST_STEP][PASSED] - setText(findTestObject("Страница авторизации/input__username"), findTestData("PlanFact").getValue(8, 1)): Text 'liazgina-di' is set on object 'Object Repository/Страница авторизации/input__username'

10-01-2025T03:33:44 - [MESSAGE][PASSED] - Text 'liazgina-di' is set on object 'Object Repository/Страница авторизации/input__username'

10-01-2025T03:33:44 - [TEST_STEP][PASSED] - setText(findTestObject("Страница авторизации/input__password"), findTestData("PlanFact").getValue(9, 1)): Text ')$%5srZ8o688Dm#q' is set on object 'Object Repository/Страница авторизации/input__password'

10-01-2025T03:33:45 - [MESSAGE][PASSED] - Text ')$%5srZ8o688Dm#q' is set on object 'Object Repository/Страница авторизации/input__password'

10-01-2025T03:33:45 - [TEST_STEP][PASSED] - click(findTestObject("Страница авторизации/button_")): Object: 'Object Repository/Страница авторизации/button_' is clicked on

10-01-2025T03:33:46 - [MESSAGE][PASSED] - Object: 'Object Repository/Страница авторизации/button_' is clicked on

10-01-2025T03:33:46 - [TEST_STEP][PASSED] - delay(45): Delayed 45 second(s)

10-01-2025T03:34:31 - [MESSAGE][PASSED] - Delayed 45 second(s)

10-01-2025T03:34:31 - [TEST_STEP][PASSED] - urlText = getText(findTestObject("Страница авторизации/Text")): Text of object 'Object Repository/Страница авторизации/Text' is: 'Период
Январь, Февраль, Март, Апрель, Май, Июнь, Июль, Август, Сентябрь, Октябрь, Ноябрь 2024 года
Выручка
Все
Выполнение плановых показателей по ПАО Россети за Январь, Февраль, Март, Апрель, Май, Июнь, Июль, Август, Сентябрь, Октябрь, Ноябрь 2024 года
План
Факт
Динамика
2024 год
0 млн.руб.
200 000 млн.руб.
400 000 млн.руб.
600 000 млн.руб.
800 000 млн.руб.
1 000 000 млн.руб.
1 200 000 млн.руб.
1 400 000 млн.руб.
1 600 000 млн.руб.
1 311 033
1 316 817
↑
ДЗО 
Все
Подписи данных
⬤Отклонение
АО «Тываэнерго»
АО «Чеченэнерго»
Россети Волга
Россети Кубань
Россети Ленэнерго (ГК)
Россети Московский регион
Россети Северный Кавказ (ГК)
Россети Северо-Запад
Россети Сибирь (ГК)
Россети Томск
Россети Тюмень
Россети Урал (ГК)
Россети ФСК ЕЭС
Россети Центр
Россети Центр и Приволжье (ГК)
Россети Юг (ГК)
Россети Янтарь
-27 500 млн.руб.
-25 000 млн.руб.
-22 500 млн.руб.
-20 000 млн.руб.
-17 500 млн.руб.
-15 000 млн.руб.
-12 500 млн.руб.
-10 000 млн.руб.
-7 500 млн.руб.
-5 000 млн.руб.
-2 500 млн.руб.
0 млн.руб.
2 500 млн.руб.
5 000 млн.руб.
7 500 млн.руб.
10 000 млн.руб.
12 500 млн.руб.
358
121
239
4 507
5 172
8 574
945
784
2 396
241
-6 052
2 027
-23 772
3 732
4 813
1 329
372
млн.
%
Выручка
Отклонение выручки по ПАО Россети за Январь, Февраль, Март, Апрель, Май, Июнь, Июль, Август, Сентябрь, Октябрь, Ноябрь 2024 года (факт/план, млн. руб)
ПАО Россети
5 783.7 млн.руб.
Статус данных
×
Просьба обратить внимание
Данные занесены не полностью
ВЫБРАННЫЕ ЗНАЧЕНИЯ ФИЛЬТРОВ
ДЗО | ПЕРИОД
ПАО Россети: [«Выбраны все филиалы по всем ДЗО по всем категориям»]
2024: [Янв, Фев, Мар, Апр, Май, Июн, Июл, Авг, Сен, Окт, Ноя]
*Внутренний оборот'

10-01-2025T03:34:32 - [MESSAGE][PASSED] - Text of object 'Object Repository/Страница авторизации/Text' is: 'Период
Январь, Февраль, Март, Апрель, Май, Июнь, Июль, Август, Сентябрь, Октябрь, Ноябрь 2024 года
Выручка
Все
Выполнение плановых показателей по ПАО Россети за Январь, Февраль, Март, Апрель, Май, Июнь, Июль, Август, Сентябрь, Октябрь, Ноябрь 2024 года
План
Факт
Динамика
2024 год
0 млн.руб.
200 000 млн.руб.
400 000 млн.руб.
600 000 млн.руб.
800 000 млн.руб.
1 000 000 млн.руб.
1 200 000 млн.руб.
1 400 000 млн.руб.
1 600 000 млн.руб.
1 311 033
1 316 817
↑
ДЗО 
Все
Подписи данных
⬤Отклонение
АО «Тываэнерго»
АО «Чеченэнерго»
Россети Волга
Россети Кубань
Россети Ленэнерго (ГК)
Россети Московский регион
Россети Северный Кавказ (ГК)
Россети Северо-Запад
Россети Сибирь (ГК)
Россети Томск
Россети Тюмень
Россети Урал (ГК)
Россети ФСК ЕЭС
Россети Центр
Россети Центр и Приволжье (ГК)
Россети Юг (ГК)
Россети Янтарь
-27 500 млн.руб.
-25 000 млн.руб.
-22 500 млн.руб.
-20 000 млн.руб.
-17 500 млн.руб.
-15 000 млн.руб.
-12 500 млн.руб.
-10 000 млн.руб.
-7 500 млн.руб.
-5 000 млн.руб.
-2 500 млн.руб.
0 млн.руб.
2 500 млн.руб.
5 000 млн.руб.
7 500 млн.руб.
10 000 млн.руб.
12 500 млн.руб.
358
121
239
4 507
5 172
8 574
945
784
2 396
241
-6 052
2 027
-23 772
3 732
4 813
1 329
372
млн.
%
Выручка
Отклонение выручки по ПАО Россети за Январь, Февраль, Март, Апрель, Май, Июнь, Июль, Август, Сентябрь, Октябрь, Ноябрь 2024 года (факт/план, млн. руб)
ПАО Россети
5 783.7 млн.руб.
Статус данных
×
Просьба обратить внимание
Данные занесены не полностью
ВЫБРАННЫЕ ЗНАЧЕНИЯ ФИЛЬТРОВ
ДЗО | ПЕРИОД
ПАО Россети: [«Выбраны все филиалы по всем ДЗО по всем категориям»]
2024: [Янв, Фев, Мар, Апр, Май, Июн, Июл, Авг, Сен, Окт, Ноя]
*Внутренний оборот'

10-01-2025T03:34:32 - [TEST_STEP][PASSED] - searchWord = "а": null

10-01-2025T03:34:32 - [TEST_STEP][PASSED] - if (urlText.contains("ошибка") || urlText.contains(searchWord) == false): null

10-01-2025T03:34:32 - [TEST_STEP][PASSED] - delay(45): Delayed 45 second(s)

10-01-2025T03:35:17 - [MESSAGE][PASSED] - Delayed 45 second(s)

10-01-2025T03:35:17 - [TEST_STEP][PASSED] - if (block == 2): Delayed 50 second(s)

10-01-2025T03:35:17 - [TEST_STEP][PASSED] - opoveshenie = getText(findTestObject("Выручка в рублях/Просьба обратить внимание")): Text of object 'Object Repository/Выручка в рублях/Просьба обратить внимание' is: 'Просьба обратить внимание'

10-01-2025T03:35:17 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выручка в рублях/Просьба обратить внимание' is: 'Просьба обратить внимание'

10-01-2025T03:35:17 - [TEST_STEP][PASSED] - if (opoveshenie == "Просьба обратить внимание"): Delayed 50 second(s)

10-01-2025T03:35:17 - [TEST_STEP][PASSED] - click(findTestObject("Выручка в рублях/Закрыть оповещение")): Object: 'Object Repository/Выручка в рублях/Закрыть оповещение' is clicked on

10-01-2025T03:35:18 - [MESSAGE][PASSED] - Object: 'Object Repository/Выручка в рублях/Закрыть оповещение' is clicked on

10-01-2025T03:35:18 - [TEST_STEP][PASSED] - delay(50): Delayed 50 second(s)

10-01-2025T03:36:08 - [MESSAGE][PASSED] - Delayed 50 second(s)

10-01-2025T03:36:08 - [TEST_STEP][PASSED] - click(findTestObject("Выручка в рублях/Фильтр Период" + nameOfBlock)): Object: 'Object Repository/Выручка в рублях/Фильтр Период Выручка' is clicked on

10-01-2025T03:36:08 - [MESSAGE][PASSED] - Object: 'Object Repository/Выручка в рублях/Фильтр Период Выручка' is clicked on

10-01-2025T03:36:08 - [TEST_STEP][PASSED] - click(findTestObject("Выручка в рублях/Снять выделение в фильтре Дата" + nameOfBlock)): Object: 'Object Repository/Выручка в рублях/Снять выделение в фильтре Дата Выручка' is clicked on

10-01-2025T03:36:09 - [MESSAGE][PASSED] - Object: 'Object Repository/Выручка в рублях/Снять выделение в фильтре Дата Выручка' is clicked on

10-01-2025T03:36:09 - [TEST_STEP][PASSED] - click(findTestObject("Выручка в рублях/Применить в фильтре Дата" + nameOfBlock)): Object: 'Object Repository/Выручка в рублях/Применить в фильтре Дата Выручка' is clicked on

10-01-2025T03:36:09 - [MESSAGE][PASSED] - Object: 'Object Repository/Выручка в рублях/Применить в фильтре Дата Выручка' is clicked on

10-01-2025T03:36:09 - [TEST_STEP][PASSED] - delay(50): Delayed 50 second(s)

10-01-2025T03:36:59 - [MESSAGE][PASSED] - Delayed 50 second(s)

10-01-2025T03:36:59 - [TEST_STEP][PASSED] - click(findTestObject("Выручка в рублях/Фильтр Период" + nameOfBlock)): Object: 'Object Repository/Выручка в рублях/Фильтр Период Выручка' is clicked on

10-01-2025T03:37:00 - [MESSAGE][PASSED] - Object: 'Object Repository/Выручка в рублях/Фильтр Период Выручка' is clicked on

10-01-2025T03:37:00 - [TEST_STEP][PASSED] - click(findTestObject("Выручка в рублях/Снять выделение в фильтре Дата" + nameOfBlock)): Object: 'Object Repository/Выручка в рублях/Снять выделение в фильтре Дата Выручка' is clicked on

10-01-2025T03:37:00 - [MESSAGE][PASSED] - Object: 'Object Repository/Выручка в рублях/Снять выделение в фильтре Дата Выручка' is clicked on

10-01-2025T03:37:00 - [TEST_STEP][PASSED] - scrollToElement(findTestObject("Выручка в рублях/2024 список" + nameOfBlock), 30): Scroll to object 'Object Repository/Выручка в рублях/2024 список Выручка' successfully

10-01-2025T03:37:01 - [MESSAGE][PASSED] - Scroll to object 'Object Repository/Выручка в рублях/2024 список Выручка' successfully

10-01-2025T03:37:01 - [TEST_STEP][PASSED] - click(findTestObject("Выручка в рублях/2024 список" + nameOfBlock)): Object: 'Object Repository/Выручка в рублях/2024 список Выручка' is clicked on

10-01-2025T03:37:01 - [MESSAGE][PASSED] - Object: 'Object Repository/Выручка в рублях/2024 список Выручка' is clicked on

10-01-2025T03:37:01 - [TEST_STEP][PASSED] - scrollToElement(findTestObject("Выручка в рублях/1 квартал 2024 выбрать" + nameOfBlock), 30): Scroll to object 'Object Repository/Выручка в рублях/1 квартал 2024 выбрать Выручка' successfully

10-01-2025T03:37:02 - [MESSAGE][PASSED] - Scroll to object 'Object Repository/Выручка в рублях/1 квартал 2024 выбрать Выручка' successfully

10-01-2025T03:37:02 - [TEST_STEP][PASSED] - click(findTestObject("Выручка в рублях/1 квартал 2024 выбрать" + nameOfBlock)): Object: 'Object Repository/Выручка в рублях/1 квартал 2024 выбрать Выручка' is clicked on

10-01-2025T03:37:02 - [MESSAGE][PASSED] - Object: 'Object Repository/Выручка в рублях/1 квартал 2024 выбрать Выручка' is clicked on

10-01-2025T03:37:02 - [TEST_STEP][PASSED] - scrollToElement(findTestObject("Выручка в рублях/2 квартал 2024 выбрать" + nameOfBlock), 30): Scroll to object 'Object Repository/Выручка в рублях/2 квартал 2024 выбрать Выручка' successfully

10-01-2025T03:37:02 - [MESSAGE][PASSED] - Scroll to object 'Object Repository/Выручка в рублях/2 квартал 2024 выбрать Выручка' successfully

10-01-2025T03:37:02 - [TEST_STEP][PASSED] - click(findTestObject("Выручка в рублях/2 квартал 2024 выбрать" + nameOfBlock)): Object: 'Object Repository/Выручка в рублях/2 квартал 2024 выбрать Выручка' is clicked on

10-01-2025T03:37:03 - [MESSAGE][PASSED] - Object: 'Object Repository/Выручка в рублях/2 квартал 2024 выбрать Выручка' is clicked on

10-01-2025T03:37:03 - [TEST_STEP][PASSED] - scrollToElement(findTestObject("Выручка в рублях/3 квартал 2024 список" + nameOfBlock), 30): Scroll to object 'Object Repository/Выручка в рублях/3 квартал 2024 список Выручка' successfully

10-01-2025T03:37:03 - [MESSAGE][PASSED] - Scroll to object 'Object Repository/Выручка в рублях/3 квартал 2024 список Выручка' successfully

10-01-2025T03:37:03 - [TEST_STEP][PASSED] - click(findTestObject("Выручка в рублях/3 квартал 2024" + nameOfBlock)): Object: 'Object Repository/Выручка в рублях/3 квартал 2024 Выручка' is clicked on

10-01-2025T03:37:04 - [MESSAGE][PASSED] - Object: 'Object Repository/Выручка в рублях/3 квартал 2024 Выручка' is clicked on

10-01-2025T03:37:04 - [TEST_STEP][PASSED] - scrollToElement(findTestObject("Выручка в рублях/4 квартал 2024 список" + nameOfBlock), 30): Scroll to object 'Object Repository/Выручка в рублях/4 квартал 2024 список Выручка' successfully

10-01-2025T03:37:04 - [MESSAGE][PASSED] - Scroll to object 'Object Repository/Выручка в рублях/4 квартал 2024 список Выручка' successfully

10-01-2025T03:37:04 - [TEST_STEP][PASSED] - click(findTestObject("Выручка в рублях/4 квартал 2024 список" + nameOfBlock)): Object: 'Object Repository/Выручка в рублях/4 квартал 2024 список Выручка' is clicked on

10-01-2025T03:37:04 - [MESSAGE][PASSED] - Object: 'Object Repository/Выручка в рублях/4 квартал 2024 список Выручка' is clicked on

10-01-2025T03:37:04 - [TEST_STEP][PASSED] - scrollToElement(findTestObject("Выручка в рублях/Октябрь 2024" + nameOfBlock), 30): Scroll to object 'Object Repository/Выручка в рублях/Октябрь 2024 Выручка' successfully

10-01-2025T03:37:05 - [MESSAGE][PASSED] - Scroll to object 'Object Repository/Выручка в рублях/Октябрь 2024 Выручка' successfully

10-01-2025T03:37:05 - [TEST_STEP][PASSED] - click(findTestObject("Выручка в рублях/Октябрь 2024" + nameOfBlock)): Object: 'Object Repository/Выручка в рублях/Октябрь 2024 Выручка' is clicked on

10-01-2025T03:37:05 - [MESSAGE][PASSED] - Object: 'Object Repository/Выручка в рублях/Октябрь 2024 Выручка' is clicked on

10-01-2025T03:37:05 - [TEST_STEP][PASSED] - scrollToElement(findTestObject("Выручка в рублях/Ноябрь 2024" + nameOfBlock), 30): Scroll to object 'Object Repository/Выручка в рублях/Ноябрь 2024 Выручка' successfully

10-01-2025T03:37:06 - [MESSAGE][PASSED] - Scroll to object 'Object Repository/Выручка в рублях/Ноябрь 2024 Выручка' successfully

10-01-2025T03:37:06 - [TEST_STEP][PASSED] - click(findTestObject("Выручка в рублях/Ноябрь 2024" + nameOfBlock)): Object: 'Object Repository/Выручка в рублях/Ноябрь 2024 Выручка' is clicked on

10-01-2025T03:37:06 - [MESSAGE][PASSED] - Object: 'Object Repository/Выручка в рублях/Ноябрь 2024 Выручка' is clicked on

10-01-2025T03:37:06 - [TEST_STEP][PASSED] - scrollToElement(findTestObject("Выручка в рублях/Заголовок дашборда" + nameOfBlock), 30): Scroll to object 'Object Repository/Выручка в рублях/Заголовок дашборда Выручка' successfully

10-01-2025T03:37:06 - [MESSAGE][PASSED] - Scroll to object 'Object Repository/Выручка в рублях/Заголовок дашборда Выручка' successfully

10-01-2025T03:37:06 - [TEST_STEP][PASSED] - click(findTestObject("Выручка в рублях/Применить в фильтре Дата" + nameOfBlock)): Object: 'Object Repository/Выручка в рублях/Применить в фильтре Дата Выручка' is clicked on

10-01-2025T03:37:07 - [MESSAGE][PASSED] - Object: 'Object Repository/Выручка в рублях/Применить в фильтре Дата Выручка' is clicked on

10-01-2025T03:37:07 - [TEST_STEP][PASSED] - delay(55): Delayed 55 second(s)

10-01-2025T03:38:02 - [MESSAGE][PASSED] - Delayed 55 second(s)

10-01-2025T03:38:02 - [TEST_STEP][PASSED] - click(findTestObject("Выручка в рублях/Фильтр ДЗО" + nameOfBlock)): Object: 'Object Repository/Выручка в рублях/Фильтр ДЗО Выручка' is clicked on

10-01-2025T03:38:02 - [MESSAGE][PASSED] - Object: 'Object Repository/Выручка в рублях/Фильтр ДЗО Выручка' is clicked on

10-01-2025T03:38:02 - [TEST_STEP][PASSED] - click(findTestObject("Выручка в рублях/Снять выделение в фильтре ДЗО" + nameOfBlock)): Object: 'Object Repository/Выручка в рублях/Снять выделение в фильтре ДЗО Выручка' is clicked on

10-01-2025T03:38:03 - [MESSAGE][PASSED] - Object: 'Object Repository/Выручка в рублях/Снять выделение в фильтре ДЗО Выручка' is clicked on

10-01-2025T03:38:03 - [TEST_STEP][PASSED] - click(findTestObject("Выручка в рублях/Применить в фильтре ДЗО" + nameOfBlock)): Object: 'Object Repository/Выручка в рублях/Применить в фильтре ДЗО Выручка' is clicked on

10-01-2025T03:38:04 - [MESSAGE][PASSED] - Object: 'Object Repository/Выручка в рублях/Применить в фильтре ДЗО Выручка' is clicked on

10-01-2025T03:38:04 - [TEST_STEP][PASSED] - delay(50): Delayed 50 second(s)

10-01-2025T03:38:54 - [MESSAGE][PASSED] - Delayed 50 second(s)

10-01-2025T03:38:54 - [TEST_STEP][PASSED] - Script1710234207206.Tumbler(run, vir, block, nameOfBlock): null

10-01-2025T03:38:54 - [TEST_STEP][PASSED] - println("run:" + run): null

10-01-2025T03:38:54 - [TEST_STEP][PASSED] - println("vir:" + vir): null

10-01-2025T03:38:54 - [TEST_STEP][PASSED] - println("block:" + block): null

10-01-2025T03:38:54 - [TEST_STEP][PASSED] - println("nameOfBlock:" + nameOfBlock): null

10-01-2025T03:38:54 - [TEST_STEP][PASSED] - if (vir == 1): null

10-01-2025T03:38:54 - [TEST_STEP][PASSED] - else if (vir == 2): Object: 'Object Repository/Выручка в рублях/Применить в фильтре Выручка Выручка' is clicked on

10-01-2025T03:38:54 - [TEST_STEP][PASSED] - if (run == 2): null

10-01-2025T03:38:54 - [TEST_STEP][PASSED] - click(findTestObject("Выручка в рублях/Фильтр Выручка" + nameOfBlock)): Object: 'Object Repository/Выручка в рублях/Фильтр Выручка Выручка' is clicked on

10-01-2025T03:38:54 - [MESSAGE][PASSED] - Object: 'Object Repository/Выручка в рублях/Фильтр Выручка Выручка' is clicked on

10-01-2025T03:38:54 - [TEST_STEP][PASSED] - click(findTestObject("Выручка в рублях/Итого в фильтре Выручка" + nameOfBlock)): Object: 'Object Repository/Выручка в рублях/Итого в фильтре Выручка Выручка' is clicked on

10-01-2025T03:38:54 - [MESSAGE][PASSED] - Object: 'Object Repository/Выручка в рублях/Итого в фильтре Выручка Выручка' is clicked on

10-01-2025T03:38:54 - [TEST_STEP][PASSED] - click(findTestObject("Выручка в рублях/Применить в фильтре Выручка" + nameOfBlock)): Object: 'Object Repository/Выручка в рублях/Применить в фильтре Выручка Выручка' is clicked on

10-01-2025T03:38:55 - [MESSAGE][PASSED] - Object: 'Object Repository/Выручка в рублях/Применить в фильтре Выручка Выручка' is clicked on

10-01-2025T03:38:55 - [TEST_STEP][PASSED] - click(findTestObject("Выручка в рублях/Фильтр ДЗО" + nameOfBlock)): Object: 'Object Repository/Выручка в рублях/Фильтр ДЗО Выручка' is clicked on

10-01-2025T03:38:57 - [MESSAGE][PASSED] - Object: 'Object Repository/Выручка в рублях/Фильтр ДЗО Выручка' is clicked on

10-01-2025T03:38:57 - [TEST_STEP][PASSED] - Script1710234207206.Rosseti(nameOfBlock): null

10-01-2025T03:38:57 - [TEST_STEP][PASSED] - println("nameOfBlock:" + nameOfBlock): null

10-01-2025T03:38:57 - [TEST_STEP][PASSED] - click(findTestObject("Выручка в рублях/ПАО Россети" + nameOfBlock)): Object: 'Object Repository/Выручка в рублях/ПАО Россети Выручка' is clicked on

10-01-2025T03:38:57 - [MESSAGE][PASSED] - Object: 'Object Repository/Выручка в рублях/ПАО Россети Выручка' is clicked on

10-01-2025T03:38:57 - [TEST_STEP][PASSED] - click(findTestObject("Выручка в рублях/Применить в фильтре ДЗО" + nameOfBlock)): Object: 'Object Repository/Выручка в рублях/Применить в фильтре ДЗО Выручка' is clicked on

10-01-2025T03:38:58 - [MESSAGE][PASSED] - Object: 'Object Repository/Выручка в рублях/Применить в фильтре ДЗО Выручка' is clicked on

10-01-2025T03:38:58 - [TEST_STEP][PASSED] - if (vir == 1 || vir == 2): Text of object 'Object Repository/Выручка в рублях/График План Выручка' is: '1 288 813'

10-01-2025T03:38:58 - [TEST_STEP][PASSED] - b1 = getText(findTestObject("Выручка в рублях/График План Выручка")): Text of object 'Object Repository/Выручка в рублях/График План Выручка' is: '1 288 813'

10-01-2025T03:39:00 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выручка в рублях/График План Выручка' is: '1 288 813'

10-01-2025T03:39:00 - [TEST_STEP][PASSED] - if (vir == 1 || vir == 2): Text of object 'Object Repository/Выручка в рублях/График Факт Выручка' is: '1 293 912'

10-01-2025T03:39:00 - [TEST_STEP][PASSED] - b2 = getText(findTestObject("Выручка в рублях/График Факт Выручка")): Text of object 'Object Repository/Выручка в рублях/График Факт Выручка' is: '1 293 912'

10-01-2025T03:39:00 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выручка в рублях/График Факт Выручка' is: '1 293 912'

10-01-2025T03:39:00 - [TEST_STEP][PASSED] - b30 = getText(findTestObject("Выручка в рублях/span1" + perc)): Text of object 'Object Repository/Выручка в рублях/span1' is: '5 099.2 млн.руб.'

10-01-2025T03:39:01 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выручка в рублях/span1' is: '5 099.2 млн.руб.'

10-01-2025T03:39:01 - [TEST_STEP][PASSED] - i = b30.indexOf("млн.руб."): null

10-01-2025T03:39:01 - [TEST_STEP][PASSED] - if (i > -1): null

10-01-2025T03:39:01 - [TEST_STEP][PASSED] - b30 = b30.substring(0, i): null

10-01-2025T03:39:01 - [TEST_STEP][PASSED] - b30 = b30.replaceAll(" ", ""): null

10-01-2025T03:39:01 - [TEST_STEP][PASSED] - if (b30.contains("%")): null

10-01-2025T03:39:01 - [TEST_STEP][PASSED] - b30 = ").trim(): null

10-01-2025T03:39:01 - [TEST_STEP][PASSED] - println("b30: " + b30): null

10-01-2025T03:39:01 - [TEST_STEP][PASSED] - if (vir == 1 || vir == 2): Text of object 'Object Repository/Выручка в рублях/span2' is: '481'

10-01-2025T03:39:01 - [TEST_STEP][PASSED] - b31 = ").trim(): Text of object 'Object Repository/Выручка в рублях/span2' is: '481'

10-01-2025T03:39:01 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выручка в рублях/span2' is: '481'

10-01-2025T03:39:01 - [TEST_STEP][PASSED] - if (vir == 1 || vir == 2): Text of object 'Object Repository/Выручка в рублях/span3' is: '-13'

10-01-2025T03:39:01 - [TEST_STEP][PASSED] - b32 = ").trim(): Text of object 'Object Repository/Выручка в рублях/span3' is: '-13'

10-01-2025T03:39:01 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выручка в рублях/span3' is: '-13'

10-01-2025T03:39:01 - [TEST_STEP][PASSED] - if (vir == 1 || vir == 2): Text of object 'Object Repository/Выручка в рублях/span8' is: '313'

10-01-2025T03:39:01 - [TEST_STEP][PASSED] - b33 = ").trim(): Text of object 'Object Repository/Выручка в рублях/span4' is: '239'

10-01-2025T03:39:02 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выручка в рублях/span4' is: '239'

10-01-2025T03:39:02 - [TEST_STEP][PASSED] - b34 = ").trim(): Text of object 'Object Repository/Выручка в рублях/span5' is: '4 507'

10-01-2025T03:39:02 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выручка в рублях/span5' is: '4 507'

10-01-2025T03:39:02 - [TEST_STEP][PASSED] - b35 = ").trim(): Text of object 'Object Repository/Выручка в рублях/span6' is: '5 172'

10-01-2025T03:39:02 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выручка в рублях/span6' is: '5 172'

10-01-2025T03:39:02 - [TEST_STEP][PASSED] - b36 = ").trim(): Text of object 'Object Repository/Выручка в рублях/span7' is: '8 574'

10-01-2025T03:39:03 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выручка в рублях/span7' is: '8 574'

10-01-2025T03:39:03 - [TEST_STEP][PASSED] - b37 = ").trim(): Text of object 'Object Repository/Выручка в рублях/span8' is: '313'

10-01-2025T03:39:03 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выручка в рублях/span8' is: '313'

10-01-2025T03:39:03 - [TEST_STEP][PASSED] - if (vir == 1 || vir == 2): Text of object 'Object Repository/Выручка в рублях/span17' is: '1 287'

10-01-2025T03:39:03 - [TEST_STEP][PASSED] - b38 = ").trim(): Text of object 'Object Repository/Выручка в рублях/span9' is: '784'

10-01-2025T03:39:03 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выручка в рублях/span9' is: '784'

10-01-2025T03:39:03 - [TEST_STEP][PASSED] - b39 = ").trim(): Text of object 'Object Repository/Выручка в рублях/span10' is: '2 396'

10-01-2025T03:39:03 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выручка в рублях/span10' is: '2 396'

10-01-2025T03:39:03 - [TEST_STEP][PASSED] - b310 = ").trim(): Text of object 'Object Repository/Выручка в рублях/span11' is: '241'

10-01-2025T03:39:04 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выручка в рублях/span11' is: '241'

10-01-2025T03:39:04 - [TEST_STEP][PASSED] - b311 = ").trim(): Text of object 'Object Repository/Выручка в рублях/span12' is: '-6 052'

10-01-2025T03:39:04 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выручка в рублях/span12' is: '-6 052'

10-01-2025T03:39:04 - [TEST_STEP][PASSED] - b312 = ").trim(): Text of object 'Object Repository/Выручка в рублях/span13' is: '2 027'

10-01-2025T03:39:04 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выручка в рублях/span13' is: '2 027'

10-01-2025T03:39:04 - [TEST_STEP][PASSED] - b313 = ").trim(): Text of object 'Object Repository/Выручка в рублях/span14' is: '-23 772'

10-01-2025T03:39:05 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выручка в рублях/span14' is: '-23 772'

10-01-2025T03:39:05 - [TEST_STEP][PASSED] - b314 = ").trim(): Text of object 'Object Repository/Выручка в рублях/span15' is: '3 732'

10-01-2025T03:39:05 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выручка в рублях/span15' is: '3 732'

10-01-2025T03:39:05 - [TEST_STEP][PASSED] - b315 = ").trim(): Text of object 'Object Repository/Выручка в рублях/span16' is: '4 813'

10-01-2025T03:39:05 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выручка в рублях/span16' is: '4 813'

10-01-2025T03:39:05 - [TEST_STEP][PASSED] - b316 = ").trim(): Text of object 'Object Repository/Выручка в рублях/span17' is: '1 287'

10-01-2025T03:39:06 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выручка в рублях/span17' is: '1 287'

10-01-2025T03:39:06 - [TEST_STEP][PASSED] - if (vir == 1 || vir == 2): Text of object 'Object Repository/Выручка в рублях/span18' is: '372'

10-01-2025T03:39:06 - [TEST_STEP][PASSED] - b317 = ").trim(): Text of object 'Object Repository/Выручка в рублях/span18' is: '372'

10-01-2025T03:39:06 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выручка в рублях/span18' is: '372'

10-01-2025T03:39:06 - [TEST_STEP][PASSED] - dZO = "ПАО Россети": null

10-01-2025T03:39:06 - [TEST_STEP][PASSED] - if (verifyEqual(a1, b1) == false): Actual object '1 288 813' and expected object '1 288 813' are equal

10-01-2025T03:39:06 - [MESSAGE][PASSED] - Actual object '1 288 813' and expected object '1 288 813' are equal

10-01-2025T03:39:06 - [TEST_STEP][PASSED] - if (verifyEqual(a2, b2) == false): Actual object '1 293 912' and expected object '1 293 912' are equal

10-01-2025T03:39:06 - [MESSAGE][PASSED] - Actual object '1 293 912' and expected object '1 293 912' are equal

10-01-2025T03:39:06 - [TEST_STEP][PASSED] - vidget = "Отклонения": null

10-01-2025T03:39:06 - [TEST_STEP][PASSED] - if (verifyEqual(a30, b30) == false): Actual object '5099.2' and expected object '5099.2' are equal

10-01-2025T03:39:06 - [MESSAGE][PASSED] - Actual object '5099.2' and expected object '5099.2' are equal

10-01-2025T03:39:06 - [TEST_STEP][PASSED] - dZO = "АО «Тываэнерго»": null

10-01-2025T03:39:06 - [TEST_STEP][PASSED] - if (verifyEqual(a31, b31) == false): Actual object '481' and expected object '481' are equal

10-01-2025T03:39:06 - [MESSAGE][PASSED] - Actual object '481' and expected object '481' are equal

10-01-2025T03:39:06 - [TEST_STEP][PASSED] - dZO = "АО «Чеченэнерго»": null

10-01-2025T03:39:06 - [TEST_STEP][PASSED] - if (verifyEqual(a32, b32) == false): Actual object '-13' and expected object '-13' are equal

10-01-2025T03:39:06 - [MESSAGE][PASSED] - Actual object '-13' and expected object '-13' are equal

10-01-2025T03:39:06 - [TEST_STEP][PASSED] - dZO = "Россети Волга": null

10-01-2025T03:39:06 - [TEST_STEP][PASSED] - if (verifyEqual(a33, b33) == false): Actual object '239' and expected object '239' are equal

10-01-2025T03:39:06 - [MESSAGE][PASSED] - Actual object '239' and expected object '239' are equal

10-01-2025T03:39:06 - [TEST_STEP][PASSED] - dZO = "Россети Кубань": null

10-01-2025T03:39:06 - [TEST_STEP][PASSED] - if (verifyEqual(a34, b34) == false): Actual object '4 507' and expected object '4 507' are equal

10-01-2025T03:39:06 - [MESSAGE][PASSED] - Actual object '4 507' and expected object '4 507' are equal

10-01-2025T03:39:06 - [TEST_STEP][PASSED] - dZO = "Россети Ленэнерго (ГК)": null

10-01-2025T03:39:06 - [TEST_STEP][PASSED] - if (verifyEqual(a35, b35) == false): Actual object '5 172' and expected object '5 172' are equal

10-01-2025T03:39:06 - [MESSAGE][PASSED] - Actual object '5 172' and expected object '5 172' are equal

10-01-2025T03:39:06 - [TEST_STEP][PASSED] - dZO = "Россети Московский регион": null

10-01-2025T03:39:06 - [TEST_STEP][PASSED] - if (verifyEqual(a36, b36) == false): Actual object '8 574' and expected object '8 574' are equal

10-01-2025T03:39:06 - [MESSAGE][PASSED] - Actual object '8 574' and expected object '8 574' are equal

10-01-2025T03:39:06 - [TEST_STEP][PASSED] - dZO = "Россети Северный Кавказ (ГК)": null

10-01-2025T03:39:06 - [TEST_STEP][PASSED] - if (verifyEqual(a37, b37) == false): Actual object '313' and expected object '313' are equal

10-01-2025T03:39:06 - [MESSAGE][PASSED] - Actual object '313' and expected object '313' are equal

10-01-2025T03:39:06 - [TEST_STEP][PASSED] - dZO = "Россети Северо-Запад": null

10-01-2025T03:39:06 - [TEST_STEP][PASSED] - if (verifyEqual(a38, b38) == false): Actual object '784' and expected object '784' are equal

10-01-2025T03:39:06 - [MESSAGE][PASSED] - Actual object '784' and expected object '784' are equal

10-01-2025T03:39:06 - [TEST_STEP][PASSED] - dZO = "Россети Сибирь (ГК)": null

10-01-2025T03:39:06 - [TEST_STEP][PASSED] - if (verifyEqual(a39, b39) == false): Actual object '2 396' and expected object '2 396' are equal

10-01-2025T03:39:06 - [MESSAGE][PASSED] - Actual object '2 396' and expected object '2 396' are equal

10-01-2025T03:39:06 - [TEST_STEP][PASSED] - dZO = "Россети Томск": null

10-01-2025T03:39:06 - [TEST_STEP][PASSED] - if (verifyEqual(a310, b310) == false): Actual object '241' and expected object '241' are equal

10-01-2025T03:39:06 - [MESSAGE][PASSED] - Actual object '241' and expected object '241' are equal

10-01-2025T03:39:06 - [TEST_STEP][PASSED] - dZO = "Россети Тюмень": null

10-01-2025T03:39:06 - [TEST_STEP][PASSED] - if (verifyEqual(a311, b311) == false): Actual object '-6 052' and expected object '-6 052' are equal

10-01-2025T03:39:06 - [MESSAGE][PASSED] - Actual object '-6 052' and expected object '-6 052' are equal

10-01-2025T03:39:06 - [TEST_STEP][PASSED] - dZO = "Россети Урал (ГК)": null

10-01-2025T03:39:06 - [TEST_STEP][PASSED] - if (verifyEqual(a312, b312) == false): Actual object '2 027' and expected object '2 027' are equal

10-01-2025T03:39:06 - [MESSAGE][PASSED] - Actual object '2 027' and expected object '2 027' are equal

10-01-2025T03:39:06 - [TEST_STEP][PASSED] - dZO = "Россети ФСК ЕЭС": null

10-01-2025T03:39:06 - [TEST_STEP][PASSED] - if (verifyEqual(a313, b313) == false): Actual object '-23 772' and expected object '-23 772' are equal

10-01-2025T03:39:06 - [MESSAGE][PASSED] - Actual object '-23 772' and expected object '-23 772' are equal

10-01-2025T03:39:06 - [TEST_STEP][PASSED] - dZO = "Россети Центр": null

10-01-2025T03:39:06 - [TEST_STEP][PASSED] - if (verifyEqual(a314, b314) == false): Actual object '3 732' and expected object '3 732' are equal

10-01-2025T03:39:06 - [MESSAGE][PASSED] - Actual object '3 732' and expected object '3 732' are equal

10-01-2025T03:39:06 - [TEST_STEP][PASSED] - dZO = "Россети Центр и Приволжье (ГК)": null

10-01-2025T03:39:06 - [TEST_STEP][PASSED] - if (verifyEqual(a315, b315) == false): Actual object '4 813' and expected object '4 813' are equal

10-01-2025T03:39:06 - [MESSAGE][PASSED] - Actual object '4 813' and expected object '4 813' are equal

10-01-2025T03:39:06 - [TEST_STEP][PASSED] - dZO = "Россети Юг (ГК)": null

10-01-2025T03:39:06 - [TEST_STEP][PASSED] - if (verifyEqual(a316, b316) == false): Actual object '1 287' and expected object '1 287' are equal

10-01-2025T03:39:06 - [MESSAGE][PASSED] - Actual object '1 287' and expected object '1 287' are equal

10-01-2025T03:39:06 - [TEST_STEP][PASSED] - dZO = "Россети Янтарь": null

10-01-2025T03:39:06 - [TEST_STEP][PASSED] - if (verifyEqual(a317, b317) == false): Actual object '372' and expected object '372' are equal

10-01-2025T03:39:06 - [MESSAGE][PASSED] - Actual object '372' and expected object '372' are equal

10-01-2025T03:39:06 - [TEST_STEP][PASSED] - closeBrowser(): null

10-01-2025T03:39:06 - [MESSAGE][PASSED] - Browser is closed

10-01-2025T03:39:06 - [TEST_STEP][PASSED] - Script1710234207206.Blocks(run, vir, block, nameOfBlock, typeOfData, viruchka, vidget, todaysDate, a, b, dZO, x, y): null

10-01-2025T03:39:06 - [TEST_STEP][PASSED] - i = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:39:06 - [TEST_STEP][PASSED] - perc = "": null

10-01-2025T03:39:06 - [TEST_STEP][PASSED] - a1 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:39:06 - [TEST_STEP][PASSED] - a2 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:39:06 - [TEST_STEP][PASSED] - a30 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:39:06 - [TEST_STEP][PASSED] - a31 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:39:06 - [TEST_STEP][PASSED] - a32 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:39:06 - [TEST_STEP][PASSED] - a33 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:39:06 - [TEST_STEP][PASSED] - a34 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:39:06 - [TEST_STEP][PASSED] - a35 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:39:06 - [TEST_STEP][PASSED] - a36 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:39:06 - [TEST_STEP][PASSED] - a37 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:39:06 - [TEST_STEP][PASSED] - a38 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:39:06 - [TEST_STEP][PASSED] - a39 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:39:06 - [TEST_STEP][PASSED] - a310 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:39:06 - [TEST_STEP][PASSED] - a311 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:39:06 - [TEST_STEP][PASSED] - a312 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:39:06 - [TEST_STEP][PASSED] - a313 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:39:06 - [TEST_STEP][PASSED] - a314 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:39:06 - [TEST_STEP][PASSED] - a315 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:39:06 - [TEST_STEP][PASSED] - a316 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:39:06 - [TEST_STEP][PASSED] - a317 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:39:06 - [TEST_STEP][PASSED] - b1 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:39:06 - [TEST_STEP][PASSED] - b2 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:39:06 - [TEST_STEP][PASSED] - b30 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:39:06 - [TEST_STEP][PASSED] - b31 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:39:06 - [TEST_STEP][PASSED] - b32 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:39:06 - [TEST_STEP][PASSED] - b33 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:39:06 - [TEST_STEP][PASSED] - b34 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:39:06 - [TEST_STEP][PASSED] - b35 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:39:06 - [TEST_STEP][PASSED] - b36 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:39:06 - [TEST_STEP][PASSED] - b37 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:39:06 - [TEST_STEP][PASSED] - b38 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:39:06 - [TEST_STEP][PASSED] - b39 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:39:06 - [TEST_STEP][PASSED] - b310 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:39:06 - [TEST_STEP][PASSED] - b311 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:39:06 - [TEST_STEP][PASSED] - b312 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:39:06 - [TEST_STEP][PASSED] - b313 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:39:06 - [TEST_STEP][PASSED] - b314 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:39:06 - [TEST_STEP][PASSED] - b315 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:39:06 - [TEST_STEP][PASSED] - b316 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:39:06 - [TEST_STEP][PASSED] - b317 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:39:06 - [TEST_STEP][PASSED] - block = 1: null

10-01-2025T03:39:06 - [TEST_STEP][PASSED] - nameOfBlock = "": null

10-01-2025T03:39:06 - [TEST_STEP][PASSED] - Script1710234207206.PreSettings(run, vir, block, nameOfBlock, typeOfData, todaysDate): null

10-01-2025T03:39:06 - [TEST_STEP][PASSED] - openBrowser(""): Browser is opened with url: ''

10-01-2025T03:39:06 - [MESSAGE][INFO] - Starting 'Chrome' driver

10-01-2025T03:39:06 - [MESSAGE][INFO] - Action delay is set to 0 milliseconds

10-01-2025T03:39:07 - [MESSAGE][PASSED] - Browser is opened with url: ''

10-01-2025T03:39:07 - [TEST_STEP][PASSED] - refresh(): Refresh successfully

10-01-2025T03:39:07 - [MESSAGE][PASSED] - Refresh successfully

10-01-2025T03:39:07 - [TEST_STEP][PASSED] - delay(50): Delayed 50 second(s)

10-01-2025T03:39:57 - [MESSAGE][PASSED] - Delayed 50 second(s)

10-01-2025T03:39:57 - [TEST_STEP][PASSED] - println("run:" + run): null

10-01-2025T03:39:57 - [TEST_STEP][PASSED] - println("vir:" + vir): null

10-01-2025T03:39:57 - [TEST_STEP][PASSED] - println("block:" + block): null

10-01-2025T03:39:57 - [TEST_STEP][PASSED] - if (block == 1): null

10-01-2025T03:39:57 - [TEST_STEP][PASSED] - nameOfBlock = "": null

10-01-2025T03:39:57 - [TEST_STEP][PASSED] - println("nameOfBlock:" + nameOfBlock): null

10-01-2025T03:39:57 - [TEST_STEP][PASSED] - println("typeOfData:" + typeOfData): null

10-01-2025T03:39:57 - [TEST_STEP][PASSED] - println("todaysDate:" + todaysDate): null

10-01-2025T03:39:57 - [TEST_STEP][PASSED] - Script1710234207206.Autorization(block, nameOfBlock): null

10-01-2025T03:39:57 - [TEST_STEP][PASSED] - i = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:39:57 - [TEST_STEP][PASSED] - ii = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:39:57 - [TEST_STEP][PASSED] - urlData = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:39:57 - [TEST_STEP][PASSED] - searchWord = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:39:57 - [TEST_STEP][PASSED] - urlText = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:39:57 - [TEST_STEP][PASSED] - println("block:" + block): null

10-01-2025T03:39:57 - [TEST_STEP][PASSED] - if (block == 1): null

10-01-2025T03:39:57 - [TEST_STEP][PASSED] - nameOfBlock = "": null

10-01-2025T03:39:57 - [TEST_STEP][PASSED] - println("nameOfBlock:" + nameOfBlock): null

10-01-2025T03:39:57 - [TEST_STEP][PASSED] - if (block == 1): Delayed 45 second(s)

10-01-2025T03:39:57 - [TEST_STEP][PASSED] - urlData = 2: null

10-01-2025T03:39:57 - [TEST_STEP][PASSED] - delay(45): Delayed 45 second(s)

10-01-2025T03:40:42 - [MESSAGE][PASSED] - Delayed 45 second(s)

10-01-2025T03:40:42 - [TEST_STEP][PASSED] - navigateToUrl(findTestData("PlanFact").getValue(10, urlData)): Navigate to 'https://bi.rosseti.digital/viewer?dashboardGuid=2301950b23be4ed89c1df75f2020051e&sheetGuid=b723206f698544fb87299f3095c00435&fit=true' successfully

10-01-2025T03:40:48 - [MESSAGE][PASSED] - Navigate to 'https://bi.rosseti.digital/viewer?dashboardGuid=2301950b23be4ed89c1df75f2020051e&sheetGuid=b723206f698544fb87299f3095c00435&fit=true' successfully

10-01-2025T03:40:48 - [TEST_STEP][PASSED] - urlText = getText(findTestObject("Страница авторизации/Text")): Text of object 'Object Repository/Страница авторизации/Text' is: 'Вход'

10-01-2025T03:40:49 - [MESSAGE][PASSED] - Text of object 'Object Repository/Страница авторизации/Text' is: 'Вход'

10-01-2025T03:40:49 - [TEST_STEP][PASSED] - searchWord = "Вход": null

10-01-2025T03:40:49 - [TEST_STEP][PASSED] - if (urlText == null || urlText.contains("ошибка") || urlText.contains(searchWord) == false): null

10-01-2025T03:40:49 - [TEST_STEP][PASSED] - if (verifyElementPresent(findTestObject("Страница авторизации/button_"), 30) == true): null

10-01-2025T03:40:50 - [MESSAGE][PASSED] - Object 'Object Repository/Страница авторизации/button_' is present

10-01-2025T03:40:50 - [TEST_STEP][PASSED] - setText(findTestObject("Страница авторизации/input__username"), findTestData("PlanFact").getValue(8, 1)): Text 'liazgina-di' is set on object 'Object Repository/Страница авторизации/input__username'

10-01-2025T03:40:50 - [MESSAGE][PASSED] - Text 'liazgina-di' is set on object 'Object Repository/Страница авторизации/input__username'

10-01-2025T03:40:50 - [TEST_STEP][PASSED] - setText(findTestObject("Страница авторизации/input__password"), findTestData("PlanFact").getValue(9, 1)): Text ')$%5srZ8o688Dm#q' is set on object 'Object Repository/Страница авторизации/input__password'

10-01-2025T03:40:51 - [MESSAGE][PASSED] - Text ')$%5srZ8o688Dm#q' is set on object 'Object Repository/Страница авторизации/input__password'

10-01-2025T03:40:51 - [TEST_STEP][PASSED] - click(findTestObject("Страница авторизации/button_")): Object: 'Object Repository/Страница авторизации/button_' is clicked on

10-01-2025T03:40:52 - [MESSAGE][PASSED] - Object: 'Object Repository/Страница авторизации/button_' is clicked on

10-01-2025T03:40:52 - [TEST_STEP][PASSED] - delay(45): Delayed 45 second(s)

10-01-2025T03:41:37 - [MESSAGE][PASSED] - Delayed 45 second(s)

10-01-2025T03:41:37 - [TEST_STEP][PASSED] - urlText = getText(findTestObject("Страница авторизации/Text")): Text of object 'Object Repository/Страница авторизации/Text' is: 'Период
1, 2, 3 кв., Октябрь, Ноябрь 2024 года
Выручка
Все
Выполнение плановых показателей по ПАО Россети за 1, 2, 3 кв., Октябрь, Ноябрь 2024 года
План
Факт
Динамика
2024 год
0 млн.руб.
100 000 млн.руб.
200 000 млн.руб.
300 000 млн.руб.
400 000 млн.руб.
500 000 млн.руб.
600 000 млн.руб.
700 000 млн.руб.
800 000 млн.руб.
900 000 млн.руб.
1 000 000 млн.руб.
1 100 000 млн.руб.
1 200 000 млн.руб.
1 300 000 млн.руб.
1 400 000 млн.руб.
1 500 000 млн.руб.
1 600 000 млн.руб.
1 311 033
1 316 817
↑
ДЗО 
Все
Внутренний оборот - выручка за услуги по передаче электрической энергии, учтенная в выручке за электроэнергию для конечных потребителей, при выполнении ДЗО функций гарантирующего поставщика
Подписи данных
⬤Отклонение
АО «Тываэнерго»
АО «Чеченэнерго»
Россети Волга
Россети Кубань
Россети Ленэнерго (ГК)
Россети Московский регион
Россети Северный Кавказ (ГК)
Россети Северо-Запад
Россети Сибирь (ГК)
Россети Томск
Россети Тюмень
Россети Урал (ГК)
Россети ФСК ЕЭС
Россети Центр
Россети Центр и Приволжье (ГК)
Россети Юг (ГК)
Россети Янтарь
-25 000 млн.руб.
-20 000 млн.руб.
-15 000 млн.руб.
-10 000 млн.руб.
-5 000 млн.руб.
0 млн.руб.
5 000 млн.руб.
10 000 млн.руб.
-30 000 млн.руб.
15 000 млн.руб.
358
121
239
4 507
5 172
8 574
945
784
2 396
241
-6 052
2 027
-23 772
3 732
4 813
1 329
372
млн.
%
Выручка
Отклонение выручки по ПАО Россети за 1, 2, 3 кв., Октябрь, Ноябрь 2024 года (факт/план, млн. руб)
ПАО Россети
5 783.7 млн.руб.
 '

10-01-2025T03:41:38 - [MESSAGE][PASSED] - Text of object 'Object Repository/Страница авторизации/Text' is: 'Период
1, 2, 3 кв., Октябрь, Ноябрь 2024 года
Выручка
Все
Выполнение плановых показателей по ПАО Россети за 1, 2, 3 кв., Октябрь, Ноябрь 2024 года
План
Факт
Динамика
2024 год
0 млн.руб.
100 000 млн.руб.
200 000 млн.руб.
300 000 млн.руб.
400 000 млн.руб.
500 000 млн.руб.
600 000 млн.руб.
700 000 млн.руб.
800 000 млн.руб.
900 000 млн.руб.
1 000 000 млн.руб.
1 100 000 млн.руб.
1 200 000 млн.руб.
1 300 000 млн.руб.
1 400 000 млн.руб.
1 500 000 млн.руб.
1 600 000 млн.руб.
1 311 033
1 316 817
↑
ДЗО 
Все
Внутренний оборот - выручка за услуги по передаче электрической энергии, учтенная в выручке за электроэнергию для конечных потребителей, при выполнении ДЗО функций гарантирующего поставщика
Подписи данных
⬤Отклонение
АО «Тываэнерго»
АО «Чеченэнерго»
Россети Волга
Россети Кубань
Россети Ленэнерго (ГК)
Россети Московский регион
Россети Северный Кавказ (ГК)
Россети Северо-Запад
Россети Сибирь (ГК)
Россети Томск
Россети Тюмень
Россети Урал (ГК)
Россети ФСК ЕЭС
Россети Центр
Россети Центр и Приволжье (ГК)
Россети Юг (ГК)
Россети Янтарь
-25 000 млн.руб.
-20 000 млн.руб.
-15 000 млн.руб.
-10 000 млн.руб.
-5 000 млн.руб.
0 млн.руб.
5 000 млн.руб.
10 000 млн.руб.
-30 000 млн.руб.
15 000 млн.руб.
358
121
239
4 507
5 172
8 574
945
784
2 396
241
-6 052
2 027
-23 772
3 732
4 813
1 329
372
млн.
%
Выручка
Отклонение выручки по ПАО Россети за 1, 2, 3 кв., Октябрь, Ноябрь 2024 года (факт/план, млн. руб)
ПАО Россети
5 783.7 млн.руб.
 '

10-01-2025T03:41:38 - [TEST_STEP][PASSED] - searchWord = "а": null

10-01-2025T03:41:38 - [TEST_STEP][PASSED] - if (urlText.contains("ошибка") || urlText.contains(searchWord) == false): null

10-01-2025T03:41:38 - [TEST_STEP][PASSED] - delay(45): Delayed 45 second(s)

10-01-2025T03:42:23 - [MESSAGE][PASSED] - Delayed 45 second(s)

10-01-2025T03:42:23 - [TEST_STEP][PASSED] - if (block == 2): null

10-01-2025T03:42:23 - [TEST_STEP][PASSED] - click(findTestObject("Выручка в рублях/Фильтр Период" + nameOfBlock)): Object: 'Object Repository/Выручка в рублях/Фильтр Период' is clicked on

10-01-2025T03:42:24 - [MESSAGE][PASSED] - Object: 'Object Repository/Выручка в рублях/Фильтр Период' is clicked on

10-01-2025T03:42:24 - [TEST_STEP][PASSED] - click(findTestObject("Выручка в рублях/Снять выделение в фильтре Дата" + nameOfBlock)): Object: 'Object Repository/Выручка в рублях/Снять выделение в фильтре Дата' is clicked on

10-01-2025T03:42:24 - [MESSAGE][PASSED] - Object: 'Object Repository/Выручка в рублях/Снять выделение в фильтре Дата' is clicked on

10-01-2025T03:42:24 - [TEST_STEP][PASSED] - click(findTestObject("Выручка в рублях/Применить в фильтре Дата" + nameOfBlock)): Object: 'Object Repository/Выручка в рублях/Применить в фильтре Дата' is clicked on

10-01-2025T03:42:25 - [MESSAGE][PASSED] - Object: 'Object Repository/Выручка в рублях/Применить в фильтре Дата' is clicked on

10-01-2025T03:42:25 - [TEST_STEP][PASSED] - delay(50): Delayed 50 second(s)

10-01-2025T03:43:15 - [MESSAGE][PASSED] - Delayed 50 second(s)

10-01-2025T03:43:15 - [TEST_STEP][PASSED] - click(findTestObject("Выручка в рублях/Фильтр Период" + nameOfBlock)): Object: 'Object Repository/Выручка в рублях/Фильтр Период' is clicked on

10-01-2025T03:43:15 - [MESSAGE][PASSED] - Object: 'Object Repository/Выручка в рублях/Фильтр Период' is clicked on

10-01-2025T03:43:15 - [TEST_STEP][PASSED] - click(findTestObject("Выручка в рублях/Снять выделение в фильтре Дата" + nameOfBlock)): Object: 'Object Repository/Выручка в рублях/Снять выделение в фильтре Дата' is clicked on

10-01-2025T03:43:16 - [MESSAGE][PASSED] - Object: 'Object Repository/Выручка в рублях/Снять выделение в фильтре Дата' is clicked on

10-01-2025T03:43:16 - [TEST_STEP][PASSED] - scrollToElement(findTestObject("Выручка в рублях/2024 список" + nameOfBlock), 30): Scroll to object 'Object Repository/Выручка в рублях/2024 список' successfully

10-01-2025T03:43:16 - [MESSAGE][PASSED] - Scroll to object 'Object Repository/Выручка в рублях/2024 список' successfully

10-01-2025T03:43:16 - [TEST_STEP][PASSED] - click(findTestObject("Выручка в рублях/2024 список" + nameOfBlock)): Object: 'Object Repository/Выручка в рублях/2024 список' is clicked on

10-01-2025T03:43:16 - [MESSAGE][PASSED] - Object: 'Object Repository/Выручка в рублях/2024 список' is clicked on

10-01-2025T03:43:16 - [TEST_STEP][PASSED] - scrollToElement(findTestObject("Выручка в рублях/1 квартал 2024 выбрать" + nameOfBlock), 30): Scroll to object 'Object Repository/Выручка в рублях/1 квартал 2024 выбрать' successfully

10-01-2025T03:43:17 - [MESSAGE][PASSED] - Scroll to object 'Object Repository/Выручка в рублях/1 квартал 2024 выбрать' successfully

10-01-2025T03:43:17 - [TEST_STEP][PASSED] - click(findTestObject("Выручка в рублях/1 квартал 2024 выбрать" + nameOfBlock)): Object: 'Object Repository/Выручка в рублях/1 квартал 2024 выбрать' is clicked on

10-01-2025T03:43:17 - [MESSAGE][PASSED] - Object: 'Object Repository/Выручка в рублях/1 квартал 2024 выбрать' is clicked on

10-01-2025T03:43:17 - [TEST_STEP][PASSED] - scrollToElement(findTestObject("Выручка в рублях/2 квартал 2024 выбрать" + nameOfBlock), 30): Scroll to object 'Object Repository/Выручка в рублях/2 квартал 2024 выбрать' successfully

10-01-2025T03:43:18 - [MESSAGE][PASSED] - Scroll to object 'Object Repository/Выручка в рублях/2 квартал 2024 выбрать' successfully

10-01-2025T03:43:18 - [TEST_STEP][PASSED] - click(findTestObject("Выручка в рублях/2 квартал 2024 выбрать" + nameOfBlock)): Object: 'Object Repository/Выручка в рублях/2 квартал 2024 выбрать' is clicked on

10-01-2025T03:43:18 - [MESSAGE][PASSED] - Object: 'Object Repository/Выручка в рублях/2 квартал 2024 выбрать' is clicked on

10-01-2025T03:43:18 - [TEST_STEP][PASSED] - scrollToElement(findTestObject("Выручка в рублях/3 квартал 2024 список" + nameOfBlock), 30): Scroll to object 'Object Repository/Выручка в рублях/3 квартал 2024 список' successfully

10-01-2025T03:43:18 - [MESSAGE][PASSED] - Scroll to object 'Object Repository/Выручка в рублях/3 квартал 2024 список' successfully

10-01-2025T03:43:18 - [TEST_STEP][PASSED] - click(findTestObject("Выручка в рублях/3 квартал 2024" + nameOfBlock)): Object: 'Object Repository/Выручка в рублях/3 квартал 2024' is clicked on

10-01-2025T03:43:19 - [MESSAGE][PASSED] - Object: 'Object Repository/Выручка в рублях/3 квартал 2024' is clicked on

10-01-2025T03:43:19 - [TEST_STEP][PASSED] - scrollToElement(findTestObject("Выручка в рублях/4 квартал 2024 список" + nameOfBlock), 30): Scroll to object 'Object Repository/Выручка в рублях/4 квартал 2024 список' successfully

10-01-2025T03:43:19 - [MESSAGE][PASSED] - Scroll to object 'Object Repository/Выручка в рублях/4 квартал 2024 список' successfully

10-01-2025T03:43:19 - [TEST_STEP][PASSED] - click(findTestObject("Выручка в рублях/4 квартал 2024 список" + nameOfBlock)): Object: 'Object Repository/Выручка в рублях/4 квартал 2024 список' is clicked on

10-01-2025T03:43:20 - [MESSAGE][PASSED] - Object: 'Object Repository/Выручка в рублях/4 квартал 2024 список' is clicked on

10-01-2025T03:43:20 - [TEST_STEP][PASSED] - scrollToElement(findTestObject("Выручка в рублях/Октябрь 2024" + nameOfBlock), 30): Scroll to object 'Object Repository/Выручка в рублях/Октябрь 2024' successfully

10-01-2025T03:43:20 - [MESSAGE][PASSED] - Scroll to object 'Object Repository/Выручка в рублях/Октябрь 2024' successfully

10-01-2025T03:43:20 - [TEST_STEP][PASSED] - click(findTestObject("Выручка в рублях/Октябрь 2024" + nameOfBlock)): Object: 'Object Repository/Выручка в рублях/Октябрь 2024' is clicked on

10-01-2025T03:43:20 - [MESSAGE][PASSED] - Object: 'Object Repository/Выручка в рублях/Октябрь 2024' is clicked on

10-01-2025T03:43:20 - [TEST_STEP][PASSED] - scrollToElement(findTestObject("Выручка в рублях/Ноябрь 2024" + nameOfBlock), 30): Scroll to object 'Object Repository/Выручка в рублях/Ноябрь 2024' successfully

10-01-2025T03:43:21 - [MESSAGE][PASSED] - Scroll to object 'Object Repository/Выручка в рублях/Ноябрь 2024' successfully

10-01-2025T03:43:21 - [TEST_STEP][PASSED] - click(findTestObject("Выручка в рублях/Ноябрь 2024" + nameOfBlock)): Object: 'Object Repository/Выручка в рублях/Ноябрь 2024' is clicked on

10-01-2025T03:43:21 - [MESSAGE][PASSED] - Object: 'Object Repository/Выручка в рублях/Ноябрь 2024' is clicked on

10-01-2025T03:43:21 - [TEST_STEP][PASSED] - scrollToElement(findTestObject("Выручка в рублях/Заголовок дашборда" + nameOfBlock), 30): Scroll to object 'Object Repository/Выручка в рублях/Заголовок дашборда' successfully

10-01-2025T03:43:22 - [MESSAGE][PASSED] - Scroll to object 'Object Repository/Выручка в рублях/Заголовок дашборда' successfully

10-01-2025T03:43:22 - [TEST_STEP][PASSED] - click(findTestObject("Выручка в рублях/Применить в фильтре Дата" + nameOfBlock)): Object: 'Object Repository/Выручка в рублях/Применить в фильтре Дата' is clicked on

10-01-2025T03:43:22 - [MESSAGE][PASSED] - Object: 'Object Repository/Выручка в рублях/Применить в фильтре Дата' is clicked on

10-01-2025T03:43:22 - [TEST_STEP][PASSED] - delay(55): Delayed 55 second(s)

10-01-2025T03:44:17 - [MESSAGE][PASSED] - Delayed 55 second(s)

10-01-2025T03:44:17 - [TEST_STEP][PASSED] - click(findTestObject("Выручка в рублях/Фильтр ДЗО" + nameOfBlock)): Object: 'Object Repository/Выручка в рублях/Фильтр ДЗО' is clicked on

10-01-2025T03:44:17 - [MESSAGE][PASSED] - Object: 'Object Repository/Выручка в рублях/Фильтр ДЗО' is clicked on

10-01-2025T03:44:17 - [TEST_STEP][PASSED] - click(findTestObject("Выручка в рублях/Снять выделение в фильтре ДЗО" + nameOfBlock)): Object: 'Object Repository/Выручка в рублях/Снять выделение в фильтре ДЗО' is clicked on

10-01-2025T03:44:18 - [MESSAGE][PASSED] - Object: 'Object Repository/Выручка в рублях/Снять выделение в фильтре ДЗО' is clicked on

10-01-2025T03:44:18 - [TEST_STEP][PASSED] - click(findTestObject("Выручка в рублях/Применить в фильтре ДЗО" + nameOfBlock)): Object: 'Object Repository/Выручка в рублях/Применить в фильтре ДЗО' is clicked on

10-01-2025T03:44:19 - [MESSAGE][PASSED] - Object: 'Object Repository/Выручка в рублях/Применить в фильтре ДЗО' is clicked on

10-01-2025T03:44:19 - [TEST_STEP][PASSED] - delay(50): Delayed 50 second(s)

10-01-2025T03:45:09 - [MESSAGE][PASSED] - Delayed 50 second(s)

10-01-2025T03:45:09 - [TEST_STEP][PASSED] - Script1710234207206.Tumbler(run, vir, block, nameOfBlock): null

10-01-2025T03:45:09 - [TEST_STEP][PASSED] - println("run:" + run): null

10-01-2025T03:45:09 - [TEST_STEP][PASSED] - println("vir:" + vir): null

10-01-2025T03:45:09 - [TEST_STEP][PASSED] - println("block:" + block): null

10-01-2025T03:45:09 - [TEST_STEP][PASSED] - println("nameOfBlock:" + nameOfBlock): null

10-01-2025T03:45:09 - [TEST_STEP][PASSED] - if (vir == 1): null

10-01-2025T03:45:09 - [TEST_STEP][PASSED] - else if (vir == 2): null

10-01-2025T03:45:09 - [TEST_STEP][PASSED] - else if (vir == 3): Object: 'Object Repository/Выручка в рублях/Применить в фильтре Выручка' is clicked on

10-01-2025T03:45:09 - [TEST_STEP][PASSED] - if (run == 2): null

10-01-2025T03:45:09 - [TEST_STEP][PASSED] - click(findTestObject("Выручка в рублях/Фильтр Выручка" + nameOfBlock)): Object: 'Object Repository/Выручка в рублях/Фильтр Выручка' is clicked on

10-01-2025T03:45:09 - [MESSAGE][PASSED] - Object: 'Object Repository/Выручка в рублях/Фильтр Выручка' is clicked on

10-01-2025T03:45:09 - [TEST_STEP][PASSED] - click(findTestObject("Выручка в рублях/Внутренний оборот в фильтре Выручка" + nameOfBlock)): Object: 'Object Repository/Выручка в рублях/Внутренний оборот в фильтре Выручка' is clicked on

10-01-2025T03:45:09 - [MESSAGE][PASSED] - Object: 'Object Repository/Выручка в рублях/Внутренний оборот в фильтре Выручка' is clicked on

10-01-2025T03:45:09 - [TEST_STEP][PASSED] - click(findTestObject("Выручка в рублях/Применить в фильтре Выручка" + nameOfBlock)): Object: 'Object Repository/Выручка в рублях/Применить в фильтре Выручка' is clicked on

10-01-2025T03:45:10 - [MESSAGE][PASSED] - Object: 'Object Repository/Выручка в рублях/Применить в фильтре Выручка' is clicked on

10-01-2025T03:45:10 - [TEST_STEP][PASSED] - click(findTestObject("Выручка в рублях/Фильтр ДЗО" + nameOfBlock)): Object: 'Object Repository/Выручка в рублях/Фильтр ДЗО' is clicked on

10-01-2025T03:45:12 - [MESSAGE][PASSED] - Object: 'Object Repository/Выручка в рублях/Фильтр ДЗО' is clicked on

10-01-2025T03:45:12 - [TEST_STEP][PASSED] - Script1710234207206.Rosseti(nameOfBlock): null

10-01-2025T03:45:12 - [TEST_STEP][PASSED] - println("nameOfBlock:" + nameOfBlock): null

10-01-2025T03:45:12 - [TEST_STEP][PASSED] - click(findTestObject("Выручка в рублях/ПАО Россети" + nameOfBlock)): Object: 'Object Repository/Выручка в рублях/ПАО Россети' is clicked on

10-01-2025T03:45:12 - [MESSAGE][PASSED] - Object: 'Object Repository/Выручка в рублях/ПАО Россети' is clicked on

10-01-2025T03:45:12 - [TEST_STEP][PASSED] - click(findTestObject("Выручка в рублях/Применить в фильтре ДЗО" + nameOfBlock)): Object: 'Object Repository/Выручка в рублях/Применить в фильтре ДЗО' is clicked on

10-01-2025T03:45:13 - [MESSAGE][PASSED] - Object: 'Object Repository/Выручка в рублях/Применить в фильтре ДЗО' is clicked on

10-01-2025T03:45:13 - [TEST_STEP][PASSED] - if (run == 2): null

10-01-2025T03:45:13 - [TEST_STEP][PASSED] - if (vir == 1 || vir == 2): null

10-01-2025T03:45:13 - [TEST_STEP][PASSED] - else: Text of object 'Object Repository/Выручка в рублях/vir3Plan' is: '22 220'

10-01-2025T03:45:13 - [TEST_STEP][PASSED] - a1 = getText(findTestObject("Выручка в рублях/vir3Plan")): Text of object 'Object Repository/Выручка в рублях/vir3Plan' is: '22 220'

10-01-2025T03:45:14 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выручка в рублях/vir3Plan' is: '22 220'

10-01-2025T03:45:14 - [TEST_STEP][PASSED] - if (vir == 1 || vir == 2): null

10-01-2025T03:45:14 - [TEST_STEP][PASSED] - else: Text of object 'Object Repository/Выручка в рублях/vir3Fact' is: '22 905'

10-01-2025T03:45:14 - [TEST_STEP][PASSED] - a2 = getText(findTestObject("Выручка в рублях/vir3Fact")): Text of object 'Object Repository/Выручка в рублях/vir3Fact' is: '22 905'

10-01-2025T03:45:15 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выручка в рублях/vir3Fact' is: '22 905'

10-01-2025T03:45:15 - [TEST_STEP][PASSED] - a30 = getText(findTestObject("Выручка в рублях/span1" + perc)): Text of object 'Object Repository/Выручка в рублях/span1' is: '684.5 млн.руб.'

10-01-2025T03:45:15 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выручка в рублях/span1' is: '684.5 млн.руб.'

10-01-2025T03:45:15 - [TEST_STEP][PASSED] - i = a30.indexOf("млн.руб."): null

10-01-2025T03:45:15 - [TEST_STEP][PASSED] - if (i > -1): null

10-01-2025T03:45:15 - [TEST_STEP][PASSED] - a30 = a30.substring(0, i): null

10-01-2025T03:45:15 - [TEST_STEP][PASSED] - a30 = a30.replaceAll(" ", ""): null

10-01-2025T03:45:15 - [TEST_STEP][PASSED] - if (a30.contains("%")): null

10-01-2025T03:45:15 - [TEST_STEP][PASSED] - a30 = ").trim(): null

10-01-2025T03:45:15 - [TEST_STEP][PASSED] - println("a30: " + a30): null

10-01-2025T03:45:15 - [TEST_STEP][PASSED] - if (vir == 1 || vir == 2): null

10-01-2025T03:45:15 - [TEST_STEP][PASSED] - else: Text of object 'Object Repository/Выручка в рублях/span15' is: '133'

10-01-2025T03:45:15 - [TEST_STEP][PASSED] - a31 = ").trim(): Text of object 'Object Repository/Выручка в рублях/span15' is: '133'

10-01-2025T03:45:15 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выручка в рублях/span15' is: '133'

10-01-2025T03:45:15 - [TEST_STEP][PASSED] - if (vir == 1 || vir == 2): null

10-01-2025T03:45:15 - [TEST_STEP][PASSED] - else: Text of object 'Object Repository/Выручка в рублях/span16' is: '632'

10-01-2025T03:45:15 - [TEST_STEP][PASSED] - a32 = ").trim(): Text of object 'Object Repository/Выручка в рублях/span16' is: '632'

10-01-2025T03:45:15 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выручка в рублях/span16' is: '632'

10-01-2025T03:45:15 - [TEST_STEP][PASSED] - if (vir == 1 || vir == 2): null

10-01-2025T03:45:15 - [TEST_STEP][PASSED] - else: Text of object 'Object Repository/Выручка в рублях/span17' is: '0'

10-01-2025T03:45:15 - [TEST_STEP][PASSED] - a37 = ").trim(): Text of object 'Object Repository/Выручка в рублях/span17' is: '0'

10-01-2025T03:45:16 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выручка в рублях/span17' is: '0'

10-01-2025T03:45:16 - [TEST_STEP][PASSED] - if (vir == 1 || vir == 2): null

10-01-2025T03:45:16 - [TEST_STEP][PASSED] - else: Text of object 'Object Repository/Выручка в рублях/span18' is: '42'

10-01-2025T03:45:16 - [TEST_STEP][PASSED] - a316 = ").trim(): Text of object 'Object Repository/Выручка в рублях/span18' is: '42'

10-01-2025T03:45:16 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выручка в рублях/span18' is: '42'

10-01-2025T03:45:16 - [TEST_STEP][PASSED] - if (vir == 1 || vir == 2): null

10-01-2025T03:45:16 - [TEST_STEP][PASSED] - block = 2: null

10-01-2025T03:45:16 - [TEST_STEP][PASSED] - nameOfBlock = " Выручка": null

10-01-2025T03:45:16 - [TEST_STEP][PASSED] - Script1710234207206.PreSettings(run, vir, block, nameOfBlock, typeOfData, todaysDate): null

10-01-2025T03:45:16 - [TEST_STEP][PASSED] - openBrowser(""): Browser is opened with url: ''

10-01-2025T03:45:16 - [MESSAGE][WARNING] - A browser is already opened. Closing browser and opening a new one

10-01-2025T03:45:16 - [MESSAGE][INFO] - Starting 'Chrome' driver

10-01-2025T03:45:16 - [MESSAGE][INFO] - Action delay is set to 0 milliseconds

10-01-2025T03:45:17 - [MESSAGE][PASSED] - Browser is opened with url: ''

10-01-2025T03:45:17 - [TEST_STEP][PASSED] - refresh(): Refresh successfully

10-01-2025T03:45:17 - [MESSAGE][PASSED] - Refresh successfully

10-01-2025T03:45:17 - [TEST_STEP][PASSED] - delay(50): Delayed 50 second(s)

10-01-2025T03:46:07 - [MESSAGE][PASSED] - Delayed 50 second(s)

10-01-2025T03:46:07 - [TEST_STEP][PASSED] - println("run:" + run): null

10-01-2025T03:46:07 - [TEST_STEP][PASSED] - println("vir:" + vir): null

10-01-2025T03:46:07 - [TEST_STEP][PASSED] - println("block:" + block): null

10-01-2025T03:46:07 - [TEST_STEP][PASSED] - if (block == 1): null

10-01-2025T03:46:07 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:46:07 - [TEST_STEP][PASSED] - nameOfBlock = " Выручка": null

10-01-2025T03:46:07 - [TEST_STEP][PASSED] - println("nameOfBlock:" + nameOfBlock): null

10-01-2025T03:46:07 - [TEST_STEP][PASSED] - println("typeOfData:" + typeOfData): null

10-01-2025T03:46:07 - [TEST_STEP][PASSED] - println("todaysDate:" + todaysDate): null

10-01-2025T03:46:07 - [TEST_STEP][PASSED] - Script1710234207206.Autorization(block, nameOfBlock): null

10-01-2025T03:46:07 - [TEST_STEP][PASSED] - i = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:46:07 - [TEST_STEP][PASSED] - ii = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:46:07 - [TEST_STEP][PASSED] - urlData = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:46:07 - [TEST_STEP][PASSED] - searchWord = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:46:07 - [TEST_STEP][PASSED] - urlText = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:46:07 - [TEST_STEP][PASSED] - println("block:" + block): null

10-01-2025T03:46:07 - [TEST_STEP][PASSED] - if (block == 1): null

10-01-2025T03:46:07 - [TEST_STEP][PASSED] - else: null

10-01-2025T03:46:07 - [TEST_STEP][PASSED] - delay(45): Delayed 45 second(s)

10-01-2025T03:46:52 - [MESSAGE][PASSED] - Delayed 45 second(s)

10-01-2025T03:46:52 - [TEST_STEP][PASSED] - nameOfBlock = " Выручка": null

10-01-2025T03:46:52 - [TEST_STEP][PASSED] - println("nameOfBlock:" + nameOfBlock): null

10-01-2025T03:46:52 - [TEST_STEP][PASSED] - if (block == 1): null

10-01-2025T03:46:52 - [TEST_STEP][PASSED] - else: Delayed 45 second(s)

10-01-2025T03:46:52 - [TEST_STEP][PASSED] - urlData = 9: null

10-01-2025T03:46:52 - [TEST_STEP][PASSED] - delay(45): Delayed 45 second(s)

10-01-2025T03:47:37 - [MESSAGE][PASSED] - Delayed 45 second(s)

10-01-2025T03:47:37 - [TEST_STEP][PASSED] - navigateToUrl(findTestData("PlanFact").getValue(10, urlData)): Navigate to 'https://bi.rosseti.digital/viewer?dashboardGuid=a1fd28b3785d443cbc4d7690a1d78e31&sheetGuid=86092a20c5984827a0c87b24cac76a50&fit=true' successfully

10-01-2025T03:47:42 - [MESSAGE][PASSED] - Navigate to 'https://bi.rosseti.digital/viewer?dashboardGuid=a1fd28b3785d443cbc4d7690a1d78e31&sheetGuid=86092a20c5984827a0c87b24cac76a50&fit=true' successfully

10-01-2025T03:47:42 - [TEST_STEP][PASSED] - urlText = getText(findTestObject("Страница авторизации/Text")): Text of object 'Object Repository/Страница авторизации/Text' is: 'Вход'

10-01-2025T03:47:44 - [MESSAGE][PASSED] - Text of object 'Object Repository/Страница авторизации/Text' is: 'Вход'

10-01-2025T03:47:44 - [TEST_STEP][PASSED] - searchWord = "Вход": null

10-01-2025T03:47:44 - [TEST_STEP][PASSED] - if (urlText == null || urlText.contains("ошибка") || urlText.contains(searchWord) == false): null

10-01-2025T03:47:44 - [TEST_STEP][PASSED] - if (verifyElementPresent(findTestObject("Страница авторизации/button_"), 30) == true): null

10-01-2025T03:47:44 - [MESSAGE][PASSED] - Object 'Object Repository/Страница авторизации/button_' is present

10-01-2025T03:47:44 - [TEST_STEP][PASSED] - setText(findTestObject("Страница авторизации/input__username"), findTestData("PlanFact").getValue(8, 1)): Text 'liazgina-di' is set on object 'Object Repository/Страница авторизации/input__username'

10-01-2025T03:47:45 - [MESSAGE][PASSED] - Text 'liazgina-di' is set on object 'Object Repository/Страница авторизации/input__username'

10-01-2025T03:47:45 - [TEST_STEP][PASSED] - setText(findTestObject("Страница авторизации/input__password"), findTestData("PlanFact").getValue(9, 1)): Text ')$%5srZ8o688Dm#q' is set on object 'Object Repository/Страница авторизации/input__password'

10-01-2025T03:47:45 - [MESSAGE][PASSED] - Text ')$%5srZ8o688Dm#q' is set on object 'Object Repository/Страница авторизации/input__password'

10-01-2025T03:47:45 - [TEST_STEP][PASSED] - click(findTestObject("Страница авторизации/button_")): Object: 'Object Repository/Страница авторизации/button_' is clicked on

10-01-2025T03:47:47 - [MESSAGE][PASSED] - Object: 'Object Repository/Страница авторизации/button_' is clicked on

10-01-2025T03:47:47 - [TEST_STEP][PASSED] - delay(45): Delayed 45 second(s)

10-01-2025T03:48:32 - [MESSAGE][PASSED] - Delayed 45 second(s)

10-01-2025T03:48:32 - [TEST_STEP][PASSED] - urlText = getText(findTestObject("Страница авторизации/Text")): Text of object 'Object Repository/Страница авторизации/Text' is: 'Период
Январь, Февраль, Март, Апрель, Май, Июнь, Июль, Август, Сентябрь, Октябрь, Ноябрь 2024 года
Выручка
Все
Выполнение плановых показателей по ПАО Россети за Январь, Февраль, Март, Апрель, Май, Июнь, Июль, Август, Сентябрь, Октябрь, Ноябрь 2024 года
План
Факт
Динамика
2024 год
0 млн.руб.
200 000 млн.руб.
400 000 млн.руб.
600 000 млн.руб.
800 000 млн.руб.
1 000 000 млн.руб.
1 200 000 млн.руб.
1 400 000 млн.руб.
1 600 000 млн.руб.
1 311 033
1 316 817
↑
ДЗО 
Все
Подписи данных
⬤Отклонение
АО «Тываэнерго»
АО «Чеченэнерго»
Россети Волга
Россети Кубань
Россети Ленэнерго (ГК)
Россети Московский регион
Россети Северный Кавказ (ГК)
Россети Северо-Запад
Россети Сибирь (ГК)
Россети Томск
Россети Тюмень
Россети Урал (ГК)
Россети ФСК ЕЭС
Россети Центр
Россети Центр и Приволжье (ГК)
Россети Юг (ГК)
Россети Янтарь
-27 500 млн.руб.
-25 000 млн.руб.
-22 500 млн.руб.
-20 000 млн.руб.
-17 500 млн.руб.
-15 000 млн.руб.
-12 500 млн.руб.
-10 000 млн.руб.
-7 500 млн.руб.
-5 000 млн.руб.
-2 500 млн.руб.
0 млн.руб.
2 500 млн.руб.
5 000 млн.руб.
7 500 млн.руб.
10 000 млн.руб.
12 500 млн.руб.
358
121
239
4 507
5 172
8 574
945
784
2 396
241
-6 052
2 027
-23 772
3 732
4 813
1 329
372
млн.
%
Выручка
Отклонение выручки по ПАО Россети за Январь, Февраль, Март, Апрель, Май, Июнь, Июль, Август, Сентябрь, Октябрь, Ноябрь 2024 года (факт/план, млн. руб)
ПАО Россети
5 783.7 млн.руб.
Статус данных
×
Просьба обратить внимание
Данные занесены не полностью
ВЫБРАННЫЕ ЗНАЧЕНИЯ ФИЛЬТРОВ
ДЗО | ПЕРИОД
ПАО Россети: [«Выбраны все филиалы по всем ДЗО по всем категориям»]
2024: [Янв, Фев, Мар, Апр, Май, Июн, Июл, Авг, Сен, Окт, Ноя]
*Внутренний оборот'

10-01-2025T03:48:32 - [MESSAGE][PASSED] - Text of object 'Object Repository/Страница авторизации/Text' is: 'Период
Январь, Февраль, Март, Апрель, Май, Июнь, Июль, Август, Сентябрь, Октябрь, Ноябрь 2024 года
Выручка
Все
Выполнение плановых показателей по ПАО Россети за Январь, Февраль, Март, Апрель, Май, Июнь, Июль, Август, Сентябрь, Октябрь, Ноябрь 2024 года
План
Факт
Динамика
2024 год
0 млн.руб.
200 000 млн.руб.
400 000 млн.руб.
600 000 млн.руб.
800 000 млн.руб.
1 000 000 млн.руб.
1 200 000 млн.руб.
1 400 000 млн.руб.
1 600 000 млн.руб.
1 311 033
1 316 817
↑
ДЗО 
Все
Подписи данных
⬤Отклонение
АО «Тываэнерго»
АО «Чеченэнерго»
Россети Волга
Россети Кубань
Россети Ленэнерго (ГК)
Россети Московский регион
Россети Северный Кавказ (ГК)
Россети Северо-Запад
Россети Сибирь (ГК)
Россети Томск
Россети Тюмень
Россети Урал (ГК)
Россети ФСК ЕЭС
Россети Центр
Россети Центр и Приволжье (ГК)
Россети Юг (ГК)
Россети Янтарь
-27 500 млн.руб.
-25 000 млн.руб.
-22 500 млн.руб.
-20 000 млн.руб.
-17 500 млн.руб.
-15 000 млн.руб.
-12 500 млн.руб.
-10 000 млн.руб.
-7 500 млн.руб.
-5 000 млн.руб.
-2 500 млн.руб.
0 млн.руб.
2 500 млн.руб.
5 000 млн.руб.
7 500 млн.руб.
10 000 млн.руб.
12 500 млн.руб.
358
121
239
4 507
5 172
8 574
945
784
2 396
241
-6 052
2 027
-23 772
3 732
4 813
1 329
372
млн.
%
Выручка
Отклонение выручки по ПАО Россети за Январь, Февраль, Март, Апрель, Май, Июнь, Июль, Август, Сентябрь, Октябрь, Ноябрь 2024 года (факт/план, млн. руб)
ПАО Россети
5 783.7 млн.руб.
Статус данных
×
Просьба обратить внимание
Данные занесены не полностью
ВЫБРАННЫЕ ЗНАЧЕНИЯ ФИЛЬТРОВ
ДЗО | ПЕРИОД
ПАО Россети: [«Выбраны все филиалы по всем ДЗО по всем категориям»]
2024: [Янв, Фев, Мар, Апр, Май, Июн, Июл, Авг, Сен, Окт, Ноя]
*Внутренний оборот'

10-01-2025T03:48:32 - [TEST_STEP][PASSED] - searchWord = "а": null

10-01-2025T03:48:32 - [TEST_STEP][PASSED] - if (urlText.contains("ошибка") || urlText.contains(searchWord) == false): null

10-01-2025T03:48:32 - [TEST_STEP][PASSED] - delay(45): Delayed 45 second(s)

10-01-2025T03:49:17 - [MESSAGE][PASSED] - Delayed 45 second(s)

10-01-2025T03:49:17 - [TEST_STEP][PASSED] - if (block == 2): Delayed 50 second(s)

10-01-2025T03:49:17 - [TEST_STEP][PASSED] - opoveshenie = getText(findTestObject("Выручка в рублях/Просьба обратить внимание")): Text of object 'Object Repository/Выручка в рублях/Просьба обратить внимание' is: 'Просьба обратить внимание'

10-01-2025T03:49:18 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выручка в рублях/Просьба обратить внимание' is: 'Просьба обратить внимание'

10-01-2025T03:49:18 - [TEST_STEP][PASSED] - if (opoveshenie == "Просьба обратить внимание"): Delayed 50 second(s)

10-01-2025T03:49:18 - [TEST_STEP][PASSED] - click(findTestObject("Выручка в рублях/Закрыть оповещение")): Object: 'Object Repository/Выручка в рублях/Закрыть оповещение' is clicked on

10-01-2025T03:49:18 - [MESSAGE][PASSED] - Object: 'Object Repository/Выручка в рублях/Закрыть оповещение' is clicked on

10-01-2025T03:49:18 - [TEST_STEP][PASSED] - delay(50): Delayed 50 second(s)

10-01-2025T03:50:08 - [MESSAGE][PASSED] - Delayed 50 second(s)

10-01-2025T03:50:08 - [TEST_STEP][PASSED] - click(findTestObject("Выручка в рублях/Фильтр Период" + nameOfBlock)): Object: 'Object Repository/Выручка в рублях/Фильтр Период Выручка' is clicked on

10-01-2025T03:50:08 - [MESSAGE][PASSED] - Object: 'Object Repository/Выручка в рублях/Фильтр Период Выручка' is clicked on

10-01-2025T03:50:08 - [TEST_STEP][PASSED] - click(findTestObject("Выручка в рублях/Снять выделение в фильтре Дата" + nameOfBlock)): Object: 'Object Repository/Выручка в рублях/Снять выделение в фильтре Дата Выручка' is clicked on

10-01-2025T03:50:09 - [MESSAGE][PASSED] - Object: 'Object Repository/Выручка в рублях/Снять выделение в фильтре Дата Выручка' is clicked on

10-01-2025T03:50:09 - [TEST_STEP][PASSED] - click(findTestObject("Выручка в рублях/Применить в фильтре Дата" + nameOfBlock)): Object: 'Object Repository/Выручка в рублях/Применить в фильтре Дата Выручка' is clicked on

10-01-2025T03:50:10 - [MESSAGE][PASSED] - Object: 'Object Repository/Выручка в рублях/Применить в фильтре Дата Выручка' is clicked on

10-01-2025T03:50:10 - [TEST_STEP][PASSED] - delay(50): Delayed 50 second(s)

10-01-2025T03:51:00 - [MESSAGE][PASSED] - Delayed 50 second(s)

10-01-2025T03:51:00 - [TEST_STEP][PASSED] - click(findTestObject("Выручка в рублях/Фильтр Период" + nameOfBlock)): Object: 'Object Repository/Выручка в рублях/Фильтр Период Выручка' is clicked on

10-01-2025T03:51:00 - [MESSAGE][PASSED] - Object: 'Object Repository/Выручка в рублях/Фильтр Период Выручка' is clicked on

10-01-2025T03:51:00 - [TEST_STEP][PASSED] - click(findTestObject("Выручка в рублях/Снять выделение в фильтре Дата" + nameOfBlock)): Object: 'Object Repository/Выручка в рублях/Снять выделение в фильтре Дата Выручка' is clicked on

10-01-2025T03:51:01 - [MESSAGE][PASSED] - Object: 'Object Repository/Выручка в рублях/Снять выделение в фильтре Дата Выручка' is clicked on

10-01-2025T03:51:01 - [TEST_STEP][PASSED] - scrollToElement(findTestObject("Выручка в рублях/2024 список" + nameOfBlock), 30): Scroll to object 'Object Repository/Выручка в рублях/2024 список Выручка' successfully

10-01-2025T03:51:01 - [MESSAGE][PASSED] - Scroll to object 'Object Repository/Выручка в рублях/2024 список Выручка' successfully

10-01-2025T03:51:01 - [TEST_STEP][PASSED] - click(findTestObject("Выручка в рублях/2024 список" + nameOfBlock)): Object: 'Object Repository/Выручка в рублях/2024 список Выручка' is clicked on

10-01-2025T03:51:01 - [MESSAGE][PASSED] - Object: 'Object Repository/Выручка в рублях/2024 список Выручка' is clicked on

10-01-2025T03:51:01 - [TEST_STEP][PASSED] - scrollToElement(findTestObject("Выручка в рублях/1 квартал 2024 выбрать" + nameOfBlock), 30): Scroll to object 'Object Repository/Выручка в рублях/1 квартал 2024 выбрать Выручка' successfully

10-01-2025T03:51:02 - [MESSAGE][PASSED] - Scroll to object 'Object Repository/Выручка в рублях/1 квартал 2024 выбрать Выручка' successfully

10-01-2025T03:51:02 - [TEST_STEP][PASSED] - click(findTestObject("Выручка в рублях/1 квартал 2024 выбрать" + nameOfBlock)): Object: 'Object Repository/Выручка в рублях/1 квартал 2024 выбрать Выручка' is clicked on

10-01-2025T03:51:02 - [MESSAGE][PASSED] - Object: 'Object Repository/Выручка в рублях/1 квартал 2024 выбрать Выручка' is clicked on

10-01-2025T03:51:02 - [TEST_STEP][PASSED] - scrollToElement(findTestObject("Выручка в рублях/2 квартал 2024 выбрать" + nameOfBlock), 30): Scroll to object 'Object Repository/Выручка в рублях/2 квартал 2024 выбрать Выручка' successfully

10-01-2025T03:51:03 - [MESSAGE][PASSED] - Scroll to object 'Object Repository/Выручка в рублях/2 квартал 2024 выбрать Выручка' successfully

10-01-2025T03:51:03 - [TEST_STEP][PASSED] - click(findTestObject("Выручка в рублях/2 квартал 2024 выбрать" + nameOfBlock)): Object: 'Object Repository/Выручка в рублях/2 квартал 2024 выбрать Выручка' is clicked on

10-01-2025T03:51:03 - [MESSAGE][PASSED] - Object: 'Object Repository/Выручка в рублях/2 квартал 2024 выбрать Выручка' is clicked on

10-01-2025T03:51:03 - [TEST_STEP][PASSED] - scrollToElement(findTestObject("Выручка в рублях/3 квартал 2024 список" + nameOfBlock), 30): Scroll to object 'Object Repository/Выручка в рублях/3 квартал 2024 список Выручка' successfully

10-01-2025T03:51:04 - [MESSAGE][PASSED] - Scroll to object 'Object Repository/Выручка в рублях/3 квартал 2024 список Выручка' successfully

10-01-2025T03:51:04 - [TEST_STEP][PASSED] - click(findTestObject("Выручка в рублях/3 квартал 2024" + nameOfBlock)): Object: 'Object Repository/Выручка в рублях/3 квартал 2024 Выручка' is clicked on

10-01-2025T03:51:04 - [MESSAGE][PASSED] - Object: 'Object Repository/Выручка в рублях/3 квартал 2024 Выручка' is clicked on

10-01-2025T03:51:04 - [TEST_STEP][PASSED] - scrollToElement(findTestObject("Выручка в рублях/4 квартал 2024 список" + nameOfBlock), 30): Scroll to object 'Object Repository/Выручка в рублях/4 квартал 2024 список Выручка' successfully

10-01-2025T03:51:04 - [MESSAGE][PASSED] - Scroll to object 'Object Repository/Выручка в рублях/4 квартал 2024 список Выручка' successfully

10-01-2025T03:51:04 - [TEST_STEP][PASSED] - click(findTestObject("Выручка в рублях/4 квартал 2024 список" + nameOfBlock)): Object: 'Object Repository/Выручка в рублях/4 квартал 2024 список Выручка' is clicked on

10-01-2025T03:51:05 - [MESSAGE][PASSED] - Object: 'Object Repository/Выручка в рублях/4 квартал 2024 список Выручка' is clicked on

10-01-2025T03:51:05 - [TEST_STEP][PASSED] - scrollToElement(findTestObject("Выручка в рублях/Октябрь 2024" + nameOfBlock), 30): Scroll to object 'Object Repository/Выручка в рублях/Октябрь 2024 Выручка' successfully

10-01-2025T03:51:05 - [MESSAGE][PASSED] - Scroll to object 'Object Repository/Выручка в рублях/Октябрь 2024 Выручка' successfully

10-01-2025T03:51:05 - [TEST_STEP][PASSED] - click(findTestObject("Выручка в рублях/Октябрь 2024" + nameOfBlock)): Object: 'Object Repository/Выручка в рублях/Октябрь 2024 Выручка' is clicked on

10-01-2025T03:51:05 - [MESSAGE][PASSED] - Object: 'Object Repository/Выручка в рублях/Октябрь 2024 Выручка' is clicked on

10-01-2025T03:51:05 - [TEST_STEP][PASSED] - scrollToElement(findTestObject("Выручка в рублях/Ноябрь 2024" + nameOfBlock), 30): Scroll to object 'Object Repository/Выручка в рублях/Ноябрь 2024 Выручка' successfully

10-01-2025T03:51:06 - [MESSAGE][PASSED] - Scroll to object 'Object Repository/Выручка в рублях/Ноябрь 2024 Выручка' successfully

10-01-2025T03:51:06 - [TEST_STEP][PASSED] - click(findTestObject("Выручка в рублях/Ноябрь 2024" + nameOfBlock)): Object: 'Object Repository/Выручка в рублях/Ноябрь 2024 Выручка' is clicked on

10-01-2025T03:51:06 - [MESSAGE][PASSED] - Object: 'Object Repository/Выручка в рублях/Ноябрь 2024 Выручка' is clicked on

10-01-2025T03:51:06 - [TEST_STEP][PASSED] - scrollToElement(findTestObject("Выручка в рублях/Заголовок дашборда" + nameOfBlock), 30): Scroll to object 'Object Repository/Выручка в рублях/Заголовок дашборда Выручка' successfully

10-01-2025T03:51:07 - [MESSAGE][PASSED] - Scroll to object 'Object Repository/Выручка в рублях/Заголовок дашборда Выручка' successfully

10-01-2025T03:51:07 - [TEST_STEP][PASSED] - click(findTestObject("Выручка в рублях/Применить в фильтре Дата" + nameOfBlock)): Object: 'Object Repository/Выручка в рублях/Применить в фильтре Дата Выручка' is clicked on

10-01-2025T03:51:07 - [MESSAGE][PASSED] - Object: 'Object Repository/Выручка в рублях/Применить в фильтре Дата Выручка' is clicked on

10-01-2025T03:51:07 - [TEST_STEP][PASSED] - delay(55): Delayed 55 second(s)

10-01-2025T03:52:02 - [MESSAGE][PASSED] - Delayed 55 second(s)

10-01-2025T03:52:02 - [TEST_STEP][PASSED] - click(findTestObject("Выручка в рублях/Фильтр ДЗО" + nameOfBlock)): Object: 'Object Repository/Выручка в рублях/Фильтр ДЗО Выручка' is clicked on

10-01-2025T03:52:03 - [MESSAGE][PASSED] - Object: 'Object Repository/Выручка в рублях/Фильтр ДЗО Выручка' is clicked on

10-01-2025T03:52:03 - [TEST_STEP][PASSED] - click(findTestObject("Выручка в рублях/Снять выделение в фильтре ДЗО" + nameOfBlock)): Object: 'Object Repository/Выручка в рублях/Снять выделение в фильтре ДЗО Выручка' is clicked on

10-01-2025T03:52:03 - [MESSAGE][PASSED] - Object: 'Object Repository/Выручка в рублях/Снять выделение в фильтре ДЗО Выручка' is clicked on

10-01-2025T03:52:03 - [TEST_STEP][PASSED] - click(findTestObject("Выручка в рублях/Применить в фильтре ДЗО" + nameOfBlock)): Object: 'Object Repository/Выручка в рублях/Применить в фильтре ДЗО Выручка' is clicked on

10-01-2025T03:52:04 - [MESSAGE][PASSED] - Object: 'Object Repository/Выручка в рублях/Применить в фильтре ДЗО Выручка' is clicked on

10-01-2025T03:52:04 - [TEST_STEP][PASSED] - delay(50): Delayed 50 second(s)

10-01-2025T03:52:54 - [MESSAGE][PASSED] - Delayed 50 second(s)

10-01-2025T03:52:54 - [TEST_STEP][PASSED] - Script1710234207206.Tumbler(run, vir, block, nameOfBlock): null

10-01-2025T03:52:54 - [TEST_STEP][PASSED] - println("run:" + run): null

10-01-2025T03:52:54 - [TEST_STEP][PASSED] - println("vir:" + vir): null

10-01-2025T03:52:54 - [TEST_STEP][PASSED] - println("block:" + block): null

10-01-2025T03:52:54 - [TEST_STEP][PASSED] - println("nameOfBlock:" + nameOfBlock): null

10-01-2025T03:52:54 - [TEST_STEP][PASSED] - if (vir == 1): null

10-01-2025T03:52:54 - [TEST_STEP][PASSED] - else if (vir == 2): null

10-01-2025T03:52:54 - [TEST_STEP][PASSED] - else if (vir == 3): Object: 'Object Repository/Выручка в рублях/Применить в фильтре Выручка Выручка' is clicked on

10-01-2025T03:52:54 - [TEST_STEP][PASSED] - if (run == 2): null

10-01-2025T03:52:54 - [TEST_STEP][PASSED] - click(findTestObject("Выручка в рублях/Фильтр Выручка" + nameOfBlock)): Object: 'Object Repository/Выручка в рублях/Фильтр Выручка Выручка' is clicked on

10-01-2025T03:52:54 - [MESSAGE][PASSED] - Object: 'Object Repository/Выручка в рублях/Фильтр Выручка Выручка' is clicked on

10-01-2025T03:52:54 - [TEST_STEP][PASSED] - click(findTestObject("Выручка в рублях/Внутренний оборот в фильтре Выручка" + nameOfBlock)): Object: 'Object Repository/Выручка в рублях/Внутренний оборот в фильтре Выручка Выручка' is clicked on

10-01-2025T03:52:55 - [MESSAGE][PASSED] - Object: 'Object Repository/Выручка в рублях/Внутренний оборот в фильтре Выручка Выручка' is clicked on

10-01-2025T03:52:55 - [TEST_STEP][PASSED] - click(findTestObject("Выручка в рублях/Применить в фильтре Выручка" + nameOfBlock)): Object: 'Object Repository/Выручка в рублях/Применить в фильтре Выручка Выручка' is clicked on

10-01-2025T03:52:56 - [MESSAGE][PASSED] - Object: 'Object Repository/Выручка в рублях/Применить в фильтре Выручка Выручка' is clicked on

10-01-2025T03:52:56 - [TEST_STEP][PASSED] - click(findTestObject("Выручка в рублях/Фильтр ДЗО" + nameOfBlock)): Object: 'Object Repository/Выручка в рублях/Фильтр ДЗО Выручка' is clicked on

10-01-2025T03:52:57 - [MESSAGE][PASSED] - Object: 'Object Repository/Выручка в рублях/Фильтр ДЗО Выручка' is clicked on

10-01-2025T03:52:57 - [TEST_STEP][PASSED] - Script1710234207206.Rosseti(nameOfBlock): null

10-01-2025T03:52:57 - [TEST_STEP][PASSED] - println("nameOfBlock:" + nameOfBlock): null

10-01-2025T03:52:57 - [TEST_STEP][PASSED] - click(findTestObject("Выручка в рублях/ПАО Россети" + nameOfBlock)): Object: 'Object Repository/Выручка в рублях/ПАО Россети Выручка' is clicked on

10-01-2025T03:52:57 - [MESSAGE][PASSED] - Object: 'Object Repository/Выручка в рублях/ПАО Россети Выручка' is clicked on

10-01-2025T03:52:57 - [TEST_STEP][PASSED] - click(findTestObject("Выручка в рублях/Применить в фильтре ДЗО" + nameOfBlock)): Object: 'Object Repository/Выручка в рублях/Применить в фильтре ДЗО Выручка' is clicked on

10-01-2025T03:52:58 - [MESSAGE][PASSED] - Object: 'Object Repository/Выручка в рублях/Применить в фильтре ДЗО Выручка' is clicked on

10-01-2025T03:52:58 - [TEST_STEP][PASSED] - if (vir == 1 || vir == 2): null

10-01-2025T03:52:58 - [TEST_STEP][PASSED] - else: Text of object 'Object Repository/Выручка в рублях/vir3Plan Выручка' is: '22 220'

10-01-2025T03:52:58 - [TEST_STEP][PASSED] - b1 = getText(findTestObject("Выручка в рублях/vir3Plan Выручка")): Text of object 'Object Repository/Выручка в рублях/vir3Plan Выручка' is: '22 220'

10-01-2025T03:53:00 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выручка в рублях/vir3Plan Выручка' is: '22 220'

10-01-2025T03:53:00 - [TEST_STEP][PASSED] - if (vir == 1 || vir == 2): null

10-01-2025T03:53:00 - [TEST_STEP][PASSED] - else: Text of object 'Object Repository/Выручка в рублях/vir3Fact Выручка' is: '22 905'

10-01-2025T03:53:00 - [TEST_STEP][PASSED] - b2 = getText(findTestObject("Выручка в рублях/vir3Fact Выручка")): Text of object 'Object Repository/Выручка в рублях/vir3Fact Выручка' is: '22 905'

10-01-2025T03:53:00 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выручка в рублях/vir3Fact Выручка' is: '22 905'

10-01-2025T03:53:00 - [TEST_STEP][PASSED] - b30 = getText(findTestObject("Выручка в рублях/span1" + perc)): Text of object 'Object Repository/Выручка в рублях/span1' is: '684.5 млн.руб.'

10-01-2025T03:53:01 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выручка в рублях/span1' is: '684.5 млн.руб.'

10-01-2025T03:53:01 - [TEST_STEP][PASSED] - i = b30.indexOf("млн.руб."): null

10-01-2025T03:53:01 - [TEST_STEP][PASSED] - if (i > -1): null

10-01-2025T03:53:01 - [TEST_STEP][PASSED] - b30 = b30.substring(0, i): null

10-01-2025T03:53:01 - [TEST_STEP][PASSED] - b30 = b30.replaceAll(" ", ""): null

10-01-2025T03:53:01 - [TEST_STEP][PASSED] - if (b30.contains("%")): null

10-01-2025T03:53:01 - [TEST_STEP][PASSED] - b30 = ").trim(): null

10-01-2025T03:53:01 - [TEST_STEP][PASSED] - println("b30: " + b30): null

10-01-2025T03:53:01 - [TEST_STEP][PASSED] - if (vir == 1 || vir == 2): null

10-01-2025T03:53:01 - [TEST_STEP][PASSED] - else: Text of object 'Object Repository/Выручка в рублях/span15' is: '133'

10-01-2025T03:53:01 - [TEST_STEP][PASSED] - b31 = ").trim(): Text of object 'Object Repository/Выручка в рублях/span15' is: '133'

10-01-2025T03:53:01 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выручка в рублях/span15' is: '133'

10-01-2025T03:53:01 - [TEST_STEP][PASSED] - if (vir == 1 || vir == 2): null

10-01-2025T03:53:01 - [TEST_STEP][PASSED] - else: Text of object 'Object Repository/Выручка в рублях/span16' is: '632'

10-01-2025T03:53:01 - [TEST_STEP][PASSED] - b32 = ").trim(): Text of object 'Object Repository/Выручка в рублях/span16' is: '632'

10-01-2025T03:53:01 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выручка в рублях/span16' is: '632'

10-01-2025T03:53:01 - [TEST_STEP][PASSED] - if (vir == 1 || vir == 2): null

10-01-2025T03:53:01 - [TEST_STEP][PASSED] - else: Text of object 'Object Repository/Выручка в рублях/span17' is: '0'

10-01-2025T03:53:01 - [TEST_STEP][PASSED] - b37 = ").trim(): Text of object 'Object Repository/Выручка в рублях/span17' is: '0'

10-01-2025T03:53:02 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выручка в рублях/span17' is: '0'

10-01-2025T03:53:02 - [TEST_STEP][PASSED] - if (vir == 1 || vir == 2): null

10-01-2025T03:53:02 - [TEST_STEP][PASSED] - else: Text of object 'Object Repository/Выручка в рублях/span18' is: '42'

10-01-2025T03:53:02 - [TEST_STEP][PASSED] - b316 = ").trim(): Text of object 'Object Repository/Выручка в рублях/span18' is: '42'

10-01-2025T03:53:02 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выручка в рублях/span18' is: '42'

10-01-2025T03:53:02 - [TEST_STEP][PASSED] - if (vir == 1 || vir == 2): null

10-01-2025T03:53:02 - [TEST_STEP][PASSED] - dZO = "ПАО Россети": null

10-01-2025T03:53:02 - [TEST_STEP][PASSED] - if (verifyEqual(a1, b1) == false): Actual object '22 220' and expected object '22 220' are equal

10-01-2025T03:53:02 - [MESSAGE][PASSED] - Actual object '22 220' and expected object '22 220' are equal

10-01-2025T03:53:02 - [TEST_STEP][PASSED] - if (verifyEqual(a2, b2) == false): Actual object '22 905' and expected object '22 905' are equal

10-01-2025T03:53:02 - [MESSAGE][PASSED] - Actual object '22 905' and expected object '22 905' are equal

10-01-2025T03:53:02 - [TEST_STEP][PASSED] - vidget = "Отклонения": null

10-01-2025T03:53:02 - [TEST_STEP][PASSED] - if (verifyEqual(a30, b30) == false): Actual object '684.5' and expected object '684.5' are equal

10-01-2025T03:53:02 - [MESSAGE][PASSED] - Actual object '684.5' and expected object '684.5' are equal

10-01-2025T03:53:02 - [TEST_STEP][PASSED] - dZO = "АО «Тываэнерго»": null

10-01-2025T03:53:02 - [TEST_STEP][PASSED] - if (verifyEqual(a31, b31) == false): Actual object '133' and expected object '133' are equal

10-01-2025T03:53:02 - [MESSAGE][PASSED] - Actual object '133' and expected object '133' are equal

10-01-2025T03:53:02 - [TEST_STEP][PASSED] - dZO = "АО «Чеченэнерго»": null

10-01-2025T03:53:02 - [TEST_STEP][PASSED] - if (verifyEqual(a32, b32) == false): Actual object '632' and expected object '632' are equal

10-01-2025T03:53:02 - [MESSAGE][PASSED] - Actual object '632' and expected object '632' are equal

10-01-2025T03:53:02 - [TEST_STEP][PASSED] - dZO = "Россети Волга": null

10-01-2025T03:53:02 - [TEST_STEP][PASSED] - if (verifyEqual(a33, b33) == false): Actual object 'null' and expected object 'null' are equal

10-01-2025T03:53:02 - [MESSAGE][PASSED] - Actual object 'null' and expected object 'null' are equal

10-01-2025T03:53:02 - [TEST_STEP][PASSED] - dZO = "Россети Кубань": null

10-01-2025T03:53:02 - [TEST_STEP][PASSED] - if (verifyEqual(a34, b34) == false): Actual object 'null' and expected object 'null' are equal

10-01-2025T03:53:02 - [MESSAGE][PASSED] - Actual object 'null' and expected object 'null' are equal

10-01-2025T03:53:02 - [TEST_STEP][PASSED] - dZO = "Россети Ленэнерго (ГК)": null

10-01-2025T03:53:02 - [TEST_STEP][PASSED] - if (verifyEqual(a35, b35) == false): Actual object 'null' and expected object 'null' are equal

10-01-2025T03:53:02 - [MESSAGE][PASSED] - Actual object 'null' and expected object 'null' are equal

10-01-2025T03:53:02 - [TEST_STEP][PASSED] - dZO = "Россети Московский регион": null

10-01-2025T03:53:02 - [TEST_STEP][PASSED] - if (verifyEqual(a36, b36) == false): Actual object 'null' and expected object 'null' are equal

10-01-2025T03:53:02 - [MESSAGE][PASSED] - Actual object 'null' and expected object 'null' are equal

10-01-2025T03:53:02 - [TEST_STEP][PASSED] - dZO = "Россети Северный Кавказ (ГК)": null

10-01-2025T03:53:02 - [TEST_STEP][PASSED] - if (verifyEqual(a37, b37) == false): Actual object '0' and expected object '0' are equal

10-01-2025T03:53:02 - [MESSAGE][PASSED] - Actual object '0' and expected object '0' are equal

10-01-2025T03:53:02 - [TEST_STEP][PASSED] - dZO = "Россети Северо-Запад": null

10-01-2025T03:53:02 - [TEST_STEP][PASSED] - if (verifyEqual(a38, b38) == false): Actual object 'null' and expected object 'null' are equal

10-01-2025T03:53:02 - [MESSAGE][PASSED] - Actual object 'null' and expected object 'null' are equal

10-01-2025T03:53:02 - [TEST_STEP][PASSED] - dZO = "Россети Сибирь (ГК)": null

10-01-2025T03:53:02 - [TEST_STEP][PASSED] - if (verifyEqual(a39, b39) == false): Actual object 'null' and expected object 'null' are equal

10-01-2025T03:53:02 - [MESSAGE][PASSED] - Actual object 'null' and expected object 'null' are equal

10-01-2025T03:53:02 - [TEST_STEP][PASSED] - dZO = "Россети Томск": null

10-01-2025T03:53:02 - [TEST_STEP][PASSED] - if (verifyEqual(a310, b310) == false): Actual object 'null' and expected object 'null' are equal

10-01-2025T03:53:02 - [MESSAGE][PASSED] - Actual object 'null' and expected object 'null' are equal

10-01-2025T03:53:02 - [TEST_STEP][PASSED] - dZO = "Россети Тюмень": null

10-01-2025T03:53:02 - [TEST_STEP][PASSED] - if (verifyEqual(a311, b311) == false): Actual object 'null' and expected object 'null' are equal

10-01-2025T03:53:02 - [MESSAGE][PASSED] - Actual object 'null' and expected object 'null' are equal

10-01-2025T03:53:02 - [TEST_STEP][PASSED] - dZO = "Россети Урал (ГК)": null

10-01-2025T03:53:02 - [TEST_STEP][PASSED] - if (verifyEqual(a312, b312) == false): Actual object 'null' and expected object 'null' are equal

10-01-2025T03:53:02 - [MESSAGE][PASSED] - Actual object 'null' and expected object 'null' are equal

10-01-2025T03:53:02 - [TEST_STEP][PASSED] - dZO = "Россети ФСК ЕЭС": null

10-01-2025T03:53:02 - [TEST_STEP][PASSED] - if (verifyEqual(a313, b313) == false): Actual object 'null' and expected object 'null' are equal

10-01-2025T03:53:02 - [MESSAGE][PASSED] - Actual object 'null' and expected object 'null' are equal

10-01-2025T03:53:02 - [TEST_STEP][PASSED] - dZO = "Россети Центр": null

10-01-2025T03:53:02 - [TEST_STEP][PASSED] - if (verifyEqual(a314, b314) == false): Actual object 'null' and expected object 'null' are equal

10-01-2025T03:53:02 - [MESSAGE][PASSED] - Actual object 'null' and expected object 'null' are equal

10-01-2025T03:53:02 - [TEST_STEP][PASSED] - dZO = "Россети Центр и Приволжье (ГК)": null

10-01-2025T03:53:02 - [TEST_STEP][PASSED] - if (verifyEqual(a315, b315) == false): Actual object 'null' and expected object 'null' are equal

10-01-2025T03:53:02 - [MESSAGE][PASSED] - Actual object 'null' and expected object 'null' are equal

10-01-2025T03:53:02 - [TEST_STEP][PASSED] - dZO = "Россети Юг (ГК)": null

10-01-2025T03:53:02 - [TEST_STEP][PASSED] - if (verifyEqual(a316, b316) == false): Actual object '42' and expected object '42' are equal

10-01-2025T03:53:02 - [MESSAGE][PASSED] - Actual object '42' and expected object '42' are equal

10-01-2025T03:53:02 - [TEST_STEP][PASSED] - dZO = "Россети Янтарь": null

10-01-2025T03:53:02 - [TEST_STEP][PASSED] - if (verifyEqual(a317, b317) == false): Actual object 'null' and expected object 'null' are equal

10-01-2025T03:53:02 - [MESSAGE][PASSED] - Actual object 'null' and expected object 'null' are equal

10-01-2025T03:53:02 - [TEST_STEP][PASSED] - closeBrowser(): null

10-01-2025T03:53:02 - [MESSAGE][PASSED] - Browser is closed

10-01-2025T03:53:02 - [TEST_STEP][PASSED] - Script1710234207206.ViruchkaChange(run, vir, block, nameOfBlock, typeOfData, viruchka, vidget, todaysDate, a, b, dZO, x, y): null

10-01-2025T03:53:02 - [TEST_STEP][PASSED] - for ([vir = 1, vir < 4, (vir++)]): null

10-01-2025T03:53:02 - [TEST_STEP][PASSED] - Script1710234207206.Blocks(run, vir, block, nameOfBlock, typeOfData, viruchka, vidget, todaysDate, a, b, dZO, x, y): null

10-01-2025T03:53:02 - [TEST_STEP][PASSED] - i = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:53:02 - [TEST_STEP][PASSED] - perc = "": null

10-01-2025T03:53:02 - [TEST_STEP][PASSED] - a1 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:53:02 - [TEST_STEP][PASSED] - a2 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:53:02 - [TEST_STEP][PASSED] - a30 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:53:02 - [TEST_STEP][PASSED] - a31 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:53:02 - [TEST_STEP][PASSED] - a32 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:53:02 - [TEST_STEP][PASSED] - a33 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:53:02 - [TEST_STEP][PASSED] - a34 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:53:02 - [TEST_STEP][PASSED] - a35 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:53:02 - [TEST_STEP][PASSED] - a36 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:53:02 - [TEST_STEP][PASSED] - a37 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:53:02 - [TEST_STEP][PASSED] - a38 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:53:02 - [TEST_STEP][PASSED] - a39 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:53:02 - [TEST_STEP][PASSED] - a310 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:53:02 - [TEST_STEP][PASSED] - a311 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:53:02 - [TEST_STEP][PASSED] - a312 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:53:02 - [TEST_STEP][PASSED] - a313 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:53:02 - [TEST_STEP][PASSED] - a314 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:53:02 - [TEST_STEP][PASSED] - a315 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:53:02 - [TEST_STEP][PASSED] - a316 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:53:02 - [TEST_STEP][PASSED] - a317 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:53:02 - [TEST_STEP][PASSED] - b1 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:53:02 - [TEST_STEP][PASSED] - b2 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:53:02 - [TEST_STEP][PASSED] - b30 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:53:02 - [TEST_STEP][PASSED] - b31 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:53:02 - [TEST_STEP][PASSED] - b32 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:53:02 - [TEST_STEP][PASSED] - b33 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:53:02 - [TEST_STEP][PASSED] - b34 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:53:02 - [TEST_STEP][PASSED] - b35 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:53:02 - [TEST_STEP][PASSED] - b36 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:53:02 - [TEST_STEP][PASSED] - b37 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:53:02 - [TEST_STEP][PASSED] - b38 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:53:02 - [TEST_STEP][PASSED] - b39 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:53:02 - [TEST_STEP][PASSED] - b310 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:53:02 - [TEST_STEP][PASSED] - b311 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:53:02 - [TEST_STEP][PASSED] - b312 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:53:02 - [TEST_STEP][PASSED] - b313 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:53:02 - [TEST_STEP][PASSED] - b314 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:53:02 - [TEST_STEP][PASSED] - b315 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:53:02 - [TEST_STEP][PASSED] - b316 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:53:02 - [TEST_STEP][PASSED] - b317 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:53:02 - [TEST_STEP][PASSED] - block = 1: null

10-01-2025T03:53:02 - [TEST_STEP][PASSED] - nameOfBlock = "": null

10-01-2025T03:53:02 - [TEST_STEP][PASSED] - Script1710234207206.PreSettings(run, vir, block, nameOfBlock, typeOfData, todaysDate): null

10-01-2025T03:53:02 - [TEST_STEP][PASSED] - openBrowser(""): Browser is opened with url: ''

10-01-2025T03:53:02 - [MESSAGE][INFO] - Starting 'Chrome' driver

10-01-2025T03:53:02 - [MESSAGE][INFO] - Action delay is set to 0 milliseconds

10-01-2025T03:53:04 - [MESSAGE][PASSED] - Browser is opened with url: ''

10-01-2025T03:53:04 - [TEST_STEP][PASSED] - refresh(): Refresh successfully

10-01-2025T03:53:04 - [MESSAGE][PASSED] - Refresh successfully

10-01-2025T03:53:04 - [TEST_STEP][PASSED] - delay(50): Delayed 50 second(s)

10-01-2025T03:53:54 - [MESSAGE][PASSED] - Delayed 50 second(s)

10-01-2025T03:53:54 - [TEST_STEP][PASSED] - println("run:" + run): null

10-01-2025T03:53:54 - [TEST_STEP][PASSED] - println("vir:" + vir): null

10-01-2025T03:53:54 - [TEST_STEP][PASSED] - println("block:" + block): null

10-01-2025T03:53:54 - [TEST_STEP][PASSED] - if (block == 1): null

10-01-2025T03:53:54 - [TEST_STEP][PASSED] - nameOfBlock = "": null

10-01-2025T03:53:54 - [TEST_STEP][PASSED] - println("nameOfBlock:" + nameOfBlock): null

10-01-2025T03:53:54 - [TEST_STEP][PASSED] - println("typeOfData:" + typeOfData): null

10-01-2025T03:53:54 - [TEST_STEP][PASSED] - println("todaysDate:" + todaysDate): null

10-01-2025T03:53:54 - [TEST_STEP][PASSED] - Script1710234207206.Autorization(block, nameOfBlock): null

10-01-2025T03:53:54 - [TEST_STEP][PASSED] - i = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:53:54 - [TEST_STEP][PASSED] - ii = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:53:54 - [TEST_STEP][PASSED] - urlData = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:53:54 - [TEST_STEP][PASSED] - searchWord = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:53:54 - [TEST_STEP][PASSED] - urlText = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T03:53:54 - [TEST_STEP][PASSED] - println("block:" + block): null

10-01-2025T03:53:54 - [TEST_STEP][PASSED] - if (block == 1): null

10-01-2025T03:53:54 - [TEST_STEP][PASSED] - nameOfBlock = "": null

10-01-2025T03:53:54 - [TEST_STEP][PASSED] - println("nameOfBlock:" + nameOfBlock): null

10-01-2025T03:53:54 - [TEST_STEP][PASSED] - if (block == 1): Delayed 45 second(s)

10-01-2025T03:53:54 - [TEST_STEP][PASSED] - urlData = 2: null

10-01-2025T03:53:54 - [TEST_STEP][PASSED] - delay(45): Delayed 45 second(s)

10-01-2025T03:54:39 - [MESSAGE][PASSED] - Delayed 45 second(s)

10-01-2025T03:54:39 - [TEST_STEP][PASSED] - navigateToUrl(findTestData("PlanFact").getValue(10, urlData)): Navigate to 'https://bi.rosseti.digital/viewer?dashboardGuid=2301950b23be4ed89c1df75f2020051e&sheetGuid=b723206f698544fb87299f3095c00435&fit=true' successfully

10-01-2025T03:54:45 - [MESSAGE][PASSED] - Navigate to 'https://bi.rosseti.digital/viewer?dashboardGuid=2301950b23be4ed89c1df75f2020051e&sheetGuid=b723206f698544fb87299f3095c00435&fit=true' successfully

10-01-2025T03:54:45 - [TEST_STEP][PASSED] - urlText = getText(findTestObject("Страница авторизации/Text")): Text of object 'Object Repository/Страница авторизации/Text' is: 'Вход'

10-01-2025T03:54:47 - [MESSAGE][PASSED] - Text of object 'Object Repository/Страница авторизации/Text' is: 'Вход'

10-01-2025T03:54:47 - [TEST_STEP][PASSED] - searchWord = "Вход": null

10-01-2025T03:54:47 - [TEST_STEP][PASSED] - if (urlText == null || urlText.contains("ошибка") || urlText.contains(searchWord) == false): null

10-01-2025T03:54:47 - [TEST_STEP][PASSED] - if (verifyElementPresent(findTestObject("Страница авторизации/button_"), 30) == true): null

10-01-2025T03:54:47 - [MESSAGE][PASSED] - Object 'Object Repository/Страница авторизации/button_' is present

10-01-2025T03:54:47 - [TEST_STEP][PASSED] - setText(findTestObject("Страница авторизации/input__username"), findTestData("PlanFact").getValue(8, 1)): Text 'liazgina-di' is set on object 'Object Repository/Страница авторизации/input__username'

10-01-2025T03:54:48 - [MESSAGE][PASSED] - Text 'liazgina-di' is set on object 'Object Repository/Страница авторизации/input__username'

10-01-2025T03:54:48 - [TEST_STEP][PASSED] - setText(findTestObject("Страница авторизации/input__password"), findTestData("PlanFact").getValue(9, 1)): Text ')$%5srZ8o688Dm#q' is set on object 'Object Repository/Страница авторизации/input__password'

10-01-2025T03:54:48 - [MESSAGE][PASSED] - Text ')$%5srZ8o688Dm#q' is set on object 'Object Repository/Страница авторизации/input__password'

10-01-2025T03:54:48 - [TEST_STEP][PASSED] - click(findTestObject("Страница авторизации/button_")): Object: 'Object Repository/Страница авторизации/button_' is clicked on

10-01-2025T03:54:50 - [MESSAGE][PASSED] - Object: 'Object Repository/Страница авторизации/button_' is clicked on

10-01-2025T03:54:50 - [TEST_STEP][PASSED] - delay(45): Delayed 45 second(s)

10-01-2025T03:55:35 - [MESSAGE][PASSED] - Delayed 45 second(s)

10-01-2025T03:55:35 - [TEST_STEP][PASSED] - urlText = getText(findTestObject("Страница авторизации/Text")): Text of object 'Object Repository/Страница авторизации/Text' is: 'Период
1, 2, 3 кв., Октябрь, Ноябрь 2024 года
Выручка
Все
Выполнение плановых показателей по ПАО Россети за 1, 2, 3 кв., Октябрь, Ноябрь 2024 года
План
Факт
Динамика
2024 год
0 млн.руб.
100 000 млн.руб.
200 000 млн.руб.
300 000 млн.руб.
400 000 млн.руб.
500 000 млн.руб.
600 000 млн.руб.
700 000 млн.руб.
800 000 млн.руб.
900 000 млн.руб.
1 000 000 млн.руб.
1 100 000 млн.руб.
1 200 000 млн.руб.
1 300 000 млн.руб.
1 400 000 млн.руб.
1 500 000 млн.руб.
1 600 000 млн.руб.
1 311 033
1 316 817
↑
ДЗО 
Все
Внутренний оборот - выручка за услуги по передаче электрической энергии, учтенная в выручке за электроэнергию для конечных потребителей, при выполнении ДЗО функций гарантирующего поставщика
Подписи данных
⬤Отклонение
АО «Тываэнерго»
АО «Чеченэнерго»
Россети Волга
Россети Кубань
Россети Ленэнерго (ГК)
Россети Московский регион
Россети Северный Кавказ (ГК)
Россети Северо-Запад
Россети Сибирь (ГК)
Россети Томск
Россети Тюмень
Россети Урал (ГК)
Россети ФСК ЕЭС
Россети Центр
Россети Центр и Приволжье (ГК)
Россети Юг (ГК)
Россети Янтарь
-25 000 млн.руб.
-20 000 млн.руб.
-15 000 млн.руб.
-10 000 млн.руб.
-5 000 млн.руб.
0 млн.руб.
5 000 млн.руб.
10 000 млн.руб.
-30 000 млн.руб.
15 000 млн.руб.
358
121
239
4 507
5 172
8 574
945
784
2 396
241
-6 052
2 027
-23 772
3 732
4 813
1 329
372
млн.
%
Выручка
Отклонение выручки по ПАО Россети за 1, 2, 3 кв., Октябрь, Ноябрь 2024 года (факт/план, млн. руб)
ПАО Россети
5 783.7 млн.руб.
 '

10-01-2025T03:55:36 - [MESSAGE][PASSED] - Text of object 'Object Repository/Страница авторизации/Text' is: 'Период
1, 2, 3 кв., Октябрь, Ноябрь 2024 года
Выручка
Все
Выполнение плановых показателей по ПАО Россети за 1, 2, 3 кв., Октябрь, Ноябрь 2024 года
План
Факт
Динамика
2024 год
0 млн.руб.
100 000 млн.руб.
200 000 млн.руб.
300 000 млн.руб.
400 000 млн.руб.
500 000 млн.руб.
600 000 млн.руб.
700 000 млн.руб.
800 000 млн.руб.
900 000 млн.руб.
1 000 000 млн.руб.
1 100 000 млн.руб.
1 200 000 млн.руб.
1 300 000 млн.руб.
1 400 000 млн.руб.
1 500 000 млн.руб.
1 600 000 млн.руб.
1 311 033
1 316 817
↑
ДЗО 
Все
Внутренний оборот - выручка за услуги по передаче электрической энергии, учтенная в выручке за электроэнергию для конечных потребителей, при выполнении ДЗО функций гарантирующего поставщика
Подписи данных
⬤Отклонение
АО «Тываэнерго»
АО «Чеченэнерго»
Россети Волга
Россети Кубань
Россети Ленэнерго (ГК)
Россети Московский регион
Россети Северный Кавказ (ГК)
Россети Северо-Запад
Россети Сибирь (ГК)
Россети Томск
Россети Тюмень
Россети Урал (ГК)
Россети ФСК ЕЭС
Россети Центр
Россети Центр и Приволжье (ГК)
Россети Юг (ГК)
Россети Янтарь
-25 000 млн.руб.
-20 000 млн.руб.
-15 000 млн.руб.
-10 000 млн.руб.
-5 000 млн.руб.
0 млн.руб.
5 000 млн.руб.
10 000 млн.руб.
-30 000 млн.руб.
15 000 млн.руб.
358
121
239
4 507
5 172
8 574
945
784
2 396
241
-6 052
2 027
-23 772
3 732
4 813
1 329
372
млн.
%
Выручка
Отклонение выручки по ПАО Россети за 1, 2, 3 кв., Октябрь, Ноябрь 2024 года (факт/план, млн. руб)
ПАО Россети
5 783.7 млн.руб.
 '

10-01-2025T03:55:36 - [TEST_STEP][PASSED] - searchWord = "а": null

10-01-2025T03:55:36 - [TEST_STEP][PASSED] - if (urlText.contains("ошибка") || urlText.contains(searchWord) == false): null

10-01-2025T03:55:36 - [TEST_STEP][PASSED] - delay(45): Delayed 45 second(s)

10-01-2025T03:56:21 - [MESSAGE][PASSED] - Delayed 45 second(s)

10-01-2025T03:56:21 - [TEST_STEP][PASSED] - if (block == 2): null

10-01-2025T03:56:21 - [TEST_STEP][PASSED] - click(findTestObject("Выручка в рублях/Фильтр Период" + nameOfBlock)): Object: 'Object Repository/Выручка в рублях/Фильтр Период' is clicked on

10-01-2025T03:56:21 - [MESSAGE][PASSED] - Object: 'Object Repository/Выручка в рублях/Фильтр Период' is clicked on

10-01-2025T03:56:21 - [TEST_STEP][PASSED] - click(findTestObject("Выручка в рублях/Снять выделение в фильтре Дата" + nameOfBlock)): Object: 'Object Repository/Выручка в рублях/Снять выделение в фильтре Дата' is clicked on

10-01-2025T03:56:22 - [MESSAGE][PASSED] - Object: 'Object Repository/Выручка в рублях/Снять выделение в фильтре Дата' is clicked on

10-01-2025T03:56:22 - [TEST_STEP][PASSED] - click(findTestObject("Выручка в рублях/Применить в фильтре Дата" + nameOfBlock)): Object: 'Object Repository/Выручка в рублях/Применить в фильтре Дата' is clicked on

10-01-2025T03:56:22 - [MESSAGE][PASSED] - Object: 'Object Repository/Выручка в рублях/Применить в фильтре Дата' is clicked on

10-01-2025T03:56:22 - [TEST_STEP][PASSED] - delay(50): Delayed 50 second(s)

10-01-2025T03:57:12 - [MESSAGE][PASSED] - Delayed 50 second(s)

10-01-2025T03:57:12 - [TEST_STEP][PASSED] - click(findTestObject("Выручка в рублях/Фильтр Период" + nameOfBlock)): Object: 'Object Repository/Выручка в рублях/Фильтр Период' is clicked on

10-01-2025T03:57:12 - [MESSAGE][PASSED] - Object: 'Object Repository/Выручка в рублях/Фильтр Период' is clicked on

10-01-2025T03:57:12 - [TEST_STEP][PASSED] - click(findTestObject("Выручка в рублях/Снять выделение в фильтре Дата" + nameOfBlock)): Object: 'Object Repository/Выручка в рублях/Снять выделение в фильтре Дата' is clicked on

10-01-2025T03:57:13 - [MESSAGE][PASSED] - Object: 'Object Repository/Выручка в рублях/Снять выделение в фильтре Дата' is clicked on

10-01-2025T03:57:13 - [TEST_STEP][PASSED] - scrollToElement(findTestObject("Выручка в рублях/2024 список" + nameOfBlock), 30): Scroll to object 'Object Repository/Выручка в рублях/2024 список' successfully

10-01-2025T03:57:13 - [MESSAGE][PASSED] - Scroll to object 'Object Repository/Выручка в рублях/2024 список' successfully

10-01-2025T03:57:13 - [TEST_STEP][PASSED] - click(findTestObject("Выручка в рублях/2024 список" + nameOfBlock)): Object: 'Object Repository/Выручка в рублях/2024 список' is clicked on

10-01-2025T03:57:14 - [MESSAGE][PASSED] - Object: 'Object Repository/Выручка в рублях/2024 список' is clicked on

10-01-2025T03:57:14 - [TEST_STEP][PASSED] - scrollToElement(findTestObject("Выручка в рублях/1 квартал 2024 выбрать" + nameOfBlock), 30): Scroll to object 'Object Repository/Выручка в рублях/1 квартал 2024 выбрать' successfully

10-01-2025T03:57:14 - [MESSAGE][PASSED] - Scroll to object 'Object Repository/Выручка в рублях/1 квартал 2024 выбрать' successfully

10-01-2025T03:57:14 - [TEST_STEP][PASSED] - click(findTestObject("Выручка в рублях/1 квартал 2024 выбрать" + nameOfBlock)): Object: 'Object Repository/Выручка в рублях/1 квартал 2024 выбрать' is clicked on

10-01-2025T03:57:14 - [MESSAGE][PASSED] - Object: 'Object Repository/Выручка в рублях/1 квартал 2024 выбрать' is clicked on

10-01-2025T03:57:14 - [TEST_STEP][PASSED] - scrollToElement(findTestObject("Выручка в рублях/2 квартал 2024 выбрать" + nameOfBlock), 30): Scroll to object 'Object Repository/Выручка в рублях/2 квартал 2024 выбрать' successfully

10-01-2025T03:57:15 - [MESSAGE][PASSED] - Scroll to object 'Object Repository/Выручка в рублях/2 квартал 2024 выбрать' successfully

10-01-2025T03:57:15 - [TEST_STEP][PASSED] - click(findTestObject("Выручка в рублях/2 квартал 2024 выбрать" + nameOfBlock)): Object: 'Object Repository/Выручка в рублях/2 квартал 2024 выбрать' is clicked on

10-01-2025T03:57:15 - [MESSAGE][PASSED] - Object: 'Object Repository/Выручка в рублях/2 квартал 2024 выбрать' is clicked on

10-01-2025T03:57:15 - [TEST_STEP][PASSED] - scrollToElement(findTestObject("Выручка в рублях/3 квартал 2024 список" + nameOfBlock), 30): Scroll to object 'Object Repository/Выручка в рублях/3 квартал 2024 список' successfully

10-01-2025T03:57:16 - [MESSAGE][PASSED] - Scroll to object 'Object Repository/Выручка в рублях/3 квартал 2024 список' successfully

10-01-2025T03:57:16 - [TEST_STEP][PASSED] - click(findTestObject("Выручка в рублях/3 квартал 2024" + nameOfBlock)): Object: 'Object Repository/Выручка в рублях/3 квартал 2024' is clicked on

10-01-2025T03:57:16 - [MESSAGE][PASSED] - Object: 'Object Repository/Выручка в рублях/3 квартал 2024' is clicked on

10-01-2025T03:57:16 - [TEST_STEP][PASSED] - scrollToElement(findTestObject("Выручка в рублях/4 квартал 2024 список" + nameOfBlock), 30): Scroll to object 'Object Repository/Выручка в рублях/4 квартал 2024 список' successfully

10-01-2025T03:57:17 - [MESSAGE][PASSED] - Scroll to object 'Object Repository/Выручка в рублях/4 квартал 2024 список' successfully

10-01-2025T03:57:17 - [TEST_STEP][PASSED] - click(findTestObject("Выручка в рублях/4 квартал 2024 список" + nameOfBlock)): Object: 'Object Repository/Выручка в рублях/4 квартал 2024 список' is clicked on

10-01-2025T03:57:17 - [MESSAGE][PASSED] - Object: 'Object Repository/Выручка в рублях/4 квартал 2024 список' is clicked on

10-01-2025T03:57:17 - [TEST_STEP][PASSED] - scrollToElement(findTestObject("Выручка в рублях/Октябрь 2024" + nameOfBlock), 30): Scroll to object 'Object Repository/Выручка в рублях/Октябрь 2024' successfully

10-01-2025T03:57:17 - [MESSAGE][PASSED] - Scroll to object 'Object Repository/Выручка в рублях/Октябрь 2024' successfully

10-01-2025T03:57:17 - [TEST_STEP][PASSED] - click(findTestObject("Выручка в рублях/Октябрь 2024" + nameOfBlock)): Object: 'Object Repository/Выручка в рублях/Октябрь 2024' is clicked on

10-01-2025T03:57:18 - [MESSAGE][PASSED] - Object: 'Object Repository/Выручка в рублях/Октябрь 2024' is clicked on

10-01-2025T03:57:18 - [TEST_STEP][PASSED] - scrollToElement(findTestObject("Выручка в рублях/Ноябрь 2024" + nameOfBlock), 30): Scroll to object 'Object Repository/Выручка в рублях/Ноябрь 2024' successfully

10-01-2025T03:57:18 - [MESSAGE][PASSED] - Scroll to object 'Object Repository/Выручка в рублях/Ноябрь 2024' successfully

10-01-2025T03:57:18 - [TEST_STEP][PASSED] - click(findTestObject("Выручка в рублях/Ноябрь 2024" + nameOfBlock)): Object: 'Object Repository/Выручка в рублях/Ноябрь 2024' is clicked on

10-01-2025T03:57:18 - [MESSAGE][PASSED] - Object: 'Object Repository/Выручка в рублях/Ноябрь 2024' is clicked on

10-01-2025T03:57:18 - [TEST_STEP][PASSED] - scrollToElement(findTestObject("Выручка в рублях/Заголовок дашборда" + nameOfBlock), 30): Scroll to object 'Object Repository/Выручка в рублях/Заголовок дашборда' successfully

10-01-2025T03:57:19 - [MESSAGE][PASSED] - Scroll to object 'Object Repository/Выручка в рублях/Заголовок дашборда' successfully

10-01-2025T03:57:19 - [TEST_STEP][PASSED] - click(findTestObject("Выручка в рублях/Применить в фильтре Дата" + nameOfBlock)): Object: 'Object Repository/Выручка в рублях/Применить в фильтре Дата' is clicked on

10-01-2025T03:57:19 - [MESSAGE][PASSED] - Object: 'Object Repository/Выручка в рублях/Применить в фильтре Дата' is clicked on

10-01-2025T03:57:19 - [TEST_STEP][PASSED] - delay(55): Delayed 55 second(s)

10-01-2025T03:58:15 - [MESSAGE][PASSED] - Delayed 55 second(s)

10-01-2025T03:58:15 - [TEST_STEP][PASSED] - click(findTestObject("Выручка в рублях/Фильтр ДЗО" + nameOfBlock)): Object: 'Object Repository/Выручка в рублях/Фильтр ДЗО' is clicked on

10-01-2025T03:58:15 - [MESSAGE][PASSED] - Object: 'Object Repository/Выручка в рублях/Фильтр ДЗО' is clicked on

10-01-2025T03:58:15 - [TEST_STEP][PASSED] - click(findTestObject("Выручка в рублях/Снять выделение в фильтре ДЗО" + nameOfBlock)): Object: 'Object Repository/Выручка в рублях/Снять выделение в фильтре ДЗО' is clicked on

10-01-2025T03:58:15 - [MESSAGE][PASSED] - Object: 'Object Repository/Выручка в рублях/Снять выделение в фильтре ДЗО' is clicked on

10-01-2025T03:58:15 - [TEST_STEP][PASSED] - click(findTestObject("Выручка в рублях/Применить в фильтре ДЗО" + nameOfBlock)): Object: 'Object Repository/Выручка в рублях/Применить в фильтре ДЗО' is clicked on

10-01-2025T03:58:16 - [MESSAGE][PASSED] - Object: 'Object Repository/Выручка в рублях/Применить в фильтре ДЗО' is clicked on

10-01-2025T03:58:16 - [TEST_STEP][PASSED] - delay(50): Delayed 50 second(s)

10-01-2025T03:59:06 - [MESSAGE][PASSED] - Delayed 50 second(s)

10-01-2025T03:59:06 - [TEST_STEP][PASSED] - Script1710234207206.Tumbler(run, vir, block, nameOfBlock): null

10-01-2025T03:59:06 - [TEST_STEP][PASSED] - println("run:" + run): null

10-01-2025T03:59:06 - [TEST_STEP][PASSED] - println("vir:" + vir): null

10-01-2025T03:59:06 - [TEST_STEP][PASSED] - println("block:" + block): null

10-01-2025T03:59:06 - [TEST_STEP][PASSED] - println("nameOfBlock:" + nameOfBlock): null

10-01-2025T03:59:06 - [TEST_STEP][PASSED] - if (vir == 1): Object: 'Object Repository/Выручка в рублях/Переключить отображение с млн на проценты Выручка в рублях' is clicked on

10-01-2025T03:59:06 - [TEST_STEP][PASSED] - if (run == 2): Object: 'Object Repository/Выручка в рублях/Переключить отображение с млн на проценты Выручка в рублях' is clicked on

10-01-2025T03:59:06 - [TEST_STEP][PASSED] - click(findTestObject("Выручка в рублях/Переключить отображение с млн на проценты Выручка в рублях" + nameOfBlock)): Object: 'Object Repository/Выручка в рублях/Переключить отображение с млн на проценты Выручка в рублях' is clicked on

10-01-2025T03:59:06 - [MESSAGE][PASSED] - Object: 'Object Repository/Выручка в рублях/Переключить отображение с млн на проценты Выручка в рублях' is clicked on

10-01-2025T03:59:06 - [TEST_STEP][PASSED] - click(findTestObject("Выручка в рублях/Фильтр ДЗО" + nameOfBlock)): Object: 'Object Repository/Выручка в рублях/Фильтр ДЗО' is clicked on

10-01-2025T03:59:07 - [MESSAGE][PASSED] - Object: 'Object Repository/Выручка в рублях/Фильтр ДЗО' is clicked on

10-01-2025T03:59:07 - [TEST_STEP][PASSED] - Script1710234207206.Rosseti(nameOfBlock): null

10-01-2025T03:59:07 - [TEST_STEP][PASSED] - println("nameOfBlock:" + nameOfBlock): null

10-01-2025T03:59:07 - [TEST_STEP][PASSED] - click(findTestObject("Выручка в рублях/ПАО Россети" + nameOfBlock)): Object: 'Object Repository/Выручка в рублях/ПАО Россети' is clicked on

10-01-2025T03:59:07 - [MESSAGE][PASSED] - Object: 'Object Repository/Выручка в рублях/ПАО Россети' is clicked on

10-01-2025T03:59:07 - [TEST_STEP][PASSED] - click(findTestObject("Выручка в рублях/Применить в фильтре ДЗО" + nameOfBlock)): Object: 'Object Repository/Выручка в рублях/Применить в фильтре ДЗО' is clicked on

10-01-2025T03:59:08 - [MESSAGE][PASSED] - Object: 'Object Repository/Выручка в рублях/Применить в фильтре ДЗО' is clicked on

10-01-2025T03:59:08 - [TEST_STEP][PASSED] - if (run == 2): null

10-01-2025T03:59:08 - [TEST_STEP][PASSED] - perc = " Perc": null

10-01-2025T03:59:08 - [TEST_STEP][PASSED] - if (vir == 1 || vir == 2): Text of object 'Object Repository/Выручка в рублях/График План' is: '1 311 033'

10-01-2025T03:59:08 - [TEST_STEP][PASSED] - a1 = getText(findTestObject("Выручка в рублях/График План")): Text of object 'Object Repository/Выручка в рублях/График План' is: '1 311 033'

10-01-2025T03:59:10 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выручка в рублях/График План' is: '1 311 033'

10-01-2025T03:59:10 - [TEST_STEP][PASSED] - if (vir == 1 || vir == 2): Text of object 'Object Repository/Выручка в рублях/График Факт' is: '1 316 817'

10-01-2025T03:59:10 - [TEST_STEP][PASSED] - a2 = getText(findTestObject("Выручка в рублях/График Факт")): Text of object 'Object Repository/Выручка в рублях/График Факт' is: '1 316 817'

10-01-2025T03:59:10 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выручка в рублях/График Факт' is: '1 316 817'

10-01-2025T03:59:10 - [TEST_STEP][PASSED] - a30 = getText(findTestObject("Выручка в рублях/span1" + perc)): Text of object 'Object Repository/Выручка в рублях/span1 Perc' is: '-95.38 %'

10-01-2025T03:59:10 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выручка в рублях/span1 Perc' is: '-95.38 %'

10-01-2025T03:59:10 - [TEST_STEP][PASSED] - i = a30.indexOf("млн.руб."): null

10-01-2025T03:59:10 - [TEST_STEP][PASSED] - if (i > -1): null

10-01-2025T03:59:10 - [TEST_STEP][PASSED] - if (a30.contains("%")): null

10-01-2025T03:59:10 - [TEST_STEP][PASSED] - a30 = a30.replaceAll("%", ""): null

10-01-2025T03:59:10 - [TEST_STEP][PASSED] - a30 = ").trim(): null

10-01-2025T03:59:10 - [TEST_STEP][PASSED] - println("a30: " + a30): null

10-01-2025T03:59:10 - [TEST_STEP][PASSED] - if (vir == 1 || vir == 2): Text of object 'Object Repository/Выручка в рублях/span2 Perc' is: '-100 %'

10-01-2025T03:59:10 - [TEST_STEP][PASSED] - a31 = ").trim(): Text of object 'Object Repository/Выручка в рублях/span2 Perc' is: '-100 %'

10-01-2025T03:59:10 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выручка в рублях/span2 Perc' is: '-100 %'

10-01-2025T03:59:10 - [TEST_STEP][PASSED] - if (vir == 1 || vir == 2): Text of object 'Object Repository/Выручка в рублях/span3 Perc' is: '-90.99 %'

10-01-2025T03:59:10 - [TEST_STEP][PASSED] - a32 = ").trim(): Text of object 'Object Repository/Выручка в рублях/span3 Perc' is: '-90.99 %'

10-01-2025T03:59:11 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выручка в рублях/span3 Perc' is: '-90.99 %'

10-01-2025T03:59:11 - [TEST_STEP][PASSED] - if (vir == 1 || vir == 2): Text of object 'Object Repository/Выручка в рублях/span8 Perc' is: '-90.67 %'

10-01-2025T03:59:11 - [TEST_STEP][PASSED] - a33 = ").trim(): Text of object 'Object Repository/Выручка в рублях/span4 Perc' is: '-90.7 %'

10-01-2025T03:59:11 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выручка в рублях/span4 Perc' is: '-90.7 %'

10-01-2025T03:59:11 - [TEST_STEP][PASSED] - a34 = ").trim(): Text of object 'Object Repository/Выручка в рублях/span5 Perc' is: '-91.02 %'

10-01-2025T03:59:11 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выручка в рублях/span5 Perc' is: '-91.02 %'

10-01-2025T03:59:11 - [TEST_STEP][PASSED] - a35 = ").trim(): Text of object 'Object Repository/Выручка в рублях/span6 Perc' is: '-90.02 %'

10-01-2025T03:59:12 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выручка в рублях/span6 Perc' is: '-90.02 %'

10-01-2025T03:59:12 - [TEST_STEP][PASSED] - a36 = ").trim(): Text of object 'Object Repository/Выручка в рублях/span7 Perc' is: '-100 %'

10-01-2025T03:59:12 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выручка в рублях/span7 Perc' is: '-100 %'

10-01-2025T03:59:12 - [TEST_STEP][PASSED] - a37 = ").trim(): Text of object 'Object Repository/Выручка в рублях/span8 Perc' is: '-90.67 %'

10-01-2025T03:59:12 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выручка в рублях/span8 Perc' is: '-90.67 %'

10-01-2025T03:59:12 - [TEST_STEP][PASSED] - if (vir == 1 || vir == 2): Text of object 'Object Repository/Выручка в рублях/span17 Perc' is: '-91.1 %'

10-01-2025T03:59:12 - [TEST_STEP][PASSED] - a38 = ").trim(): Text of object 'Object Repository/Выручка в рублях/span9 Perc' is: '-89.48 %'

10-01-2025T03:59:13 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выручка в рублях/span9 Perc' is: '-89.48 %'

10-01-2025T03:59:13 - [TEST_STEP][PASSED] - a39 = ").trim(): Text of object 'Object Repository/Выручка в рублях/span10 Perc' is: '-100 %'

10-01-2025T03:59:13 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выручка в рублях/span10 Perc' is: '-100 %'

10-01-2025T03:59:13 - [TEST_STEP][PASSED] - a310 = ").trim(): Text of object 'Object Repository/Выручка в рублях/span11 Perc' is: '-90.63 %'

10-01-2025T03:59:13 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выручка в рублях/span11 Perc' is: '-90.63 %'

10-01-2025T03:59:13 - [TEST_STEP][PASSED] - a311 = ").trim(): Text of object 'Object Repository/Выручка в рублях/span12 Perc' is: '-92.22 %'

10-01-2025T03:59:13 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выручка в рублях/span12 Perc' is: '-92.22 %'

10-01-2025T03:59:13 - [TEST_STEP][PASSED] - a312 = ").trim(): Text of object 'Object Repository/Выручка в рублях/span13 Perc' is: '-89.69 %'

10-01-2025T03:59:14 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выручка в рублях/span13 Perc' is: '-89.69 %'

10-01-2025T03:59:14 - [TEST_STEP][PASSED] - a313 = ").trim(): Text of object 'Object Repository/Выручка в рублях/span14 Perc' is: '-100 %'

10-01-2025T03:59:14 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выручка в рублях/span14 Perc' is: '-100 %'

10-01-2025T03:59:14 - [TEST_STEP][PASSED] - a314 = ").trim(): Text of object 'Object Repository/Выручка в рублях/span15 Perc' is: '-100 %'

10-01-2025T03:59:14 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выручка в рублях/span15 Perc' is: '-100 %'

10-01-2025T03:59:14 - [TEST_STEP][PASSED] - a315 = ").trim(): Text of object 'Object Repository/Выручка в рублях/span16 Perc' is: '-93.32 %'

10-01-2025T03:59:15 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выручка в рублях/span16 Perc' is: '-93.32 %'

10-01-2025T03:59:15 - [TEST_STEP][PASSED] - a316 = ").trim(): Text of object 'Object Repository/Выручка в рублях/span17 Perc' is: '-91.1 %'

10-01-2025T03:59:15 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выручка в рублях/span17 Perc' is: '-91.1 %'

10-01-2025T03:59:15 - [TEST_STEP][PASSED] - if (vir == 1 || vir == 2): Text of object 'Object Repository/Выручка в рублях/span18 Perc' is: '-100 %'

10-01-2025T03:59:15 - [TEST_STEP][PASSED] - a317 = ").trim(): Text of object 'Object Repository/Выручка в рублях/span18 Perc' is: '-100 %'

10-01-2025T03:59:15 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выручка в рублях/span18 Perc' is: '-100 %'

10-01-2025T03:59:15 - [TEST_STEP][PASSED] - block = 2: null

10-01-2025T03:59:15 - [TEST_STEP][PASSED] - nameOfBlock = " Выручка": null

10-01-2025T03:59:15 - [TEST_STEP][PASSED] - Script1710234207206.PreSettings(run, vir, block, nameOfBlock, typeOfData, todaysDate): null

10-01-2025T03:59:15 - [TEST_STEP][PASSED] - openBrowser(""): Browser is opened with url: ''

10-01-2025T03:59:15 - [MESSAGE][WARNING] - A browser is already opened. Closing browser and opening a new one

10-01-2025T03:59:16 - [MESSAGE][INFO] - Starting 'Chrome' driver

10-01-2025T03:59:16 - [MESSAGE][INFO] - Action delay is set to 0 milliseconds

10-01-2025T03:59:17 - [MESSAGE][PASSED] - Browser is opened with url: ''

10-01-2025T03:59:17 - [TEST_STEP][PASSED] - refresh(): Refresh successfully

10-01-2025T03:59:17 - [MESSAGE][PASSED] - Refresh successfully

10-01-2025T03:59:17 - [TEST_STEP][PASSED] - delay(50): Delayed 50 second(s)

10-01-2025T04:00:07 - [MESSAGE][PASSED] - Delayed 50 second(s)

10-01-2025T04:00:07 - [TEST_STEP][PASSED] - println("run:" + run): null

10-01-2025T04:00:07 - [TEST_STEP][PASSED] - println("vir:" + vir): null

10-01-2025T04:00:07 - [TEST_STEP][PASSED] - println("block:" + block): null

10-01-2025T04:00:07 - [TEST_STEP][PASSED] - if (block == 1): null

10-01-2025T04:00:07 - [TEST_STEP][PASSED] - else: null

10-01-2025T04:00:07 - [TEST_STEP][PASSED] - nameOfBlock = " Выручка": null

10-01-2025T04:00:07 - [TEST_STEP][PASSED] - println("nameOfBlock:" + nameOfBlock): null

10-01-2025T04:00:07 - [TEST_STEP][PASSED] - println("typeOfData:" + typeOfData): null

10-01-2025T04:00:07 - [TEST_STEP][PASSED] - println("todaysDate:" + todaysDate): null

10-01-2025T04:00:07 - [TEST_STEP][PASSED] - Script1710234207206.Autorization(block, nameOfBlock): null

10-01-2025T04:00:07 - [TEST_STEP][PASSED] - i = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:00:07 - [TEST_STEP][PASSED] - ii = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:00:07 - [TEST_STEP][PASSED] - urlData = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:00:07 - [TEST_STEP][PASSED] - searchWord = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:00:07 - [TEST_STEP][PASSED] - urlText = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:00:07 - [TEST_STEP][PASSED] - println("block:" + block): null

10-01-2025T04:00:07 - [TEST_STEP][PASSED] - if (block == 1): null

10-01-2025T04:00:07 - [TEST_STEP][PASSED] - else: null

10-01-2025T04:00:07 - [TEST_STEP][PASSED] - delay(45): Delayed 45 second(s)

10-01-2025T04:00:52 - [MESSAGE][PASSED] - Delayed 45 second(s)

10-01-2025T04:00:52 - [TEST_STEP][PASSED] - nameOfBlock = " Выручка": null

10-01-2025T04:00:52 - [TEST_STEP][PASSED] - println("nameOfBlock:" + nameOfBlock): null

10-01-2025T04:00:52 - [TEST_STEP][PASSED] - if (block == 1): null

10-01-2025T04:00:52 - [TEST_STEP][PASSED] - else: Delayed 45 second(s)

10-01-2025T04:00:52 - [TEST_STEP][PASSED] - urlData = 9: null

10-01-2025T04:00:52 - [TEST_STEP][PASSED] - delay(45): Delayed 45 second(s)

10-01-2025T04:01:37 - [MESSAGE][PASSED] - Delayed 45 second(s)

10-01-2025T04:01:37 - [TEST_STEP][PASSED] - navigateToUrl(findTestData("PlanFact").getValue(10, urlData)): Navigate to 'https://bi.rosseti.digital/viewer?dashboardGuid=a1fd28b3785d443cbc4d7690a1d78e31&sheetGuid=86092a20c5984827a0c87b24cac76a50&fit=true' successfully

10-01-2025T04:01:43 - [MESSAGE][PASSED] - Navigate to 'https://bi.rosseti.digital/viewer?dashboardGuid=a1fd28b3785d443cbc4d7690a1d78e31&sheetGuid=86092a20c5984827a0c87b24cac76a50&fit=true' successfully

10-01-2025T04:01:43 - [TEST_STEP][PASSED] - urlText = getText(findTestObject("Страница авторизации/Text")): Text of object 'Object Repository/Страница авторизации/Text' is: 'Вход'

10-01-2025T04:01:45 - [MESSAGE][PASSED] - Text of object 'Object Repository/Страница авторизации/Text' is: 'Вход'

10-01-2025T04:01:45 - [TEST_STEP][PASSED] - searchWord = "Вход": null

10-01-2025T04:01:45 - [TEST_STEP][PASSED] - if (urlText == null || urlText.contains("ошибка") || urlText.contains(searchWord) == false): null

10-01-2025T04:01:45 - [TEST_STEP][PASSED] - if (verifyElementPresent(findTestObject("Страница авторизации/button_"), 30) == true): null

10-01-2025T04:01:45 - [MESSAGE][PASSED] - Object 'Object Repository/Страница авторизации/button_' is present

10-01-2025T04:01:45 - [TEST_STEP][PASSED] - setText(findTestObject("Страница авторизации/input__username"), findTestData("PlanFact").getValue(8, 1)): Text 'liazgina-di' is set on object 'Object Repository/Страница авторизации/input__username'

10-01-2025T04:01:46 - [MESSAGE][PASSED] - Text 'liazgina-di' is set on object 'Object Repository/Страница авторизации/input__username'

10-01-2025T04:01:46 - [TEST_STEP][PASSED] - setText(findTestObject("Страница авторизации/input__password"), findTestData("PlanFact").getValue(9, 1)): Text ')$%5srZ8o688Dm#q' is set on object 'Object Repository/Страница авторизации/input__password'

10-01-2025T04:01:47 - [MESSAGE][PASSED] - Text ')$%5srZ8o688Dm#q' is set on object 'Object Repository/Страница авторизации/input__password'

10-01-2025T04:01:47 - [TEST_STEP][PASSED] - click(findTestObject("Страница авторизации/button_")): Object: 'Object Repository/Страница авторизации/button_' is clicked on

10-01-2025T04:01:48 - [MESSAGE][PASSED] - Object: 'Object Repository/Страница авторизации/button_' is clicked on

10-01-2025T04:01:48 - [TEST_STEP][PASSED] - delay(45): Delayed 45 second(s)

10-01-2025T04:02:33 - [MESSAGE][PASSED] - Delayed 45 second(s)

10-01-2025T04:02:33 - [TEST_STEP][PASSED] - urlText = getText(findTestObject("Страница авторизации/Text")): Text of object 'Object Repository/Страница авторизации/Text' is: 'Период
Выбрано: 5
Выручка
Все
Выполнение плановых показателей, млн.руб.
План
Факт
Динамика
2024 год
0 млн.руб.
200 000 млн.руб.
400 000 млн.руб.
600 000 млн.руб.
800 000 млн.руб.
1 000 000 млн.руб.
1 200 000 млн.руб.
1 400 000 млн.руб.
1 600 000 млн.руб.
1 311 033
1 316 817
↑
ДЗО 
Все
Подписи данных
⬤Отклонение
АО «Тываэнерго»
АО «Чеченэнерго»
Россети Волга
Россети Кубань
Россети Ленэнерго (ГК)
Россети Московский регион
Россети Северный Кавказ (ГК)
Россети Северо-Запад
Россети Сибирь (ГК)
Россети Томск
Россети Тюмень
Россети Урал (ГК)
Россети ФСК ЕЭС
Россети Центр
Россети Центр и Приволжье (ГК)
Россети Юг (ГК)
Россети Янтарь
-27 500 млн.руб.
-25 000 млн.руб.
-22 500 млн.руб.
-20 000 млн.руб.
-17 500 млн.руб.
-15 000 млн.руб.
-12 500 млн.руб.
-10 000 млн.руб.
-7 500 млн.руб.
-5 000 млн.руб.
-2 500 млн.руб.
0 млн.руб.
2 500 млн.руб.
5 000 млн.руб.
7 500 млн.руб.
10 000 млн.руб.
12 500 млн.руб.
358
121
239
4 507
5 172
8 574
945
784
2 396
241
-6 052
2 027
-23 772
3 732
4 813
1 329
372
млн.
%
Выручка
Отклонение выручки (факт/план, млн. руб) 
ПАО Россети
5 783.7 млн.руб.
Статус данных
×
Просьба обратить внимание
Данные занесены не полностью
ВЫБРАННЫЕ ЗНАЧЕНИЯ ФИЛЬТРОВ
ДЗО | ПЕРИОД
ПАО Россети: [«Выбраны все филиалы по всем ДЗО по всем категориям»]
2024: [Янв, Фев, Мар, Апр, Май, Июн, Июл, Авг, Сен, Окт, Ноя]
*Внутренний оборот'

10-01-2025T04:02:34 - [MESSAGE][PASSED] - Text of object 'Object Repository/Страница авторизации/Text' is: 'Период
Выбрано: 5
Выручка
Все
Выполнение плановых показателей, млн.руб.
План
Факт
Динамика
2024 год
0 млн.руб.
200 000 млн.руб.
400 000 млн.руб.
600 000 млн.руб.
800 000 млн.руб.
1 000 000 млн.руб.
1 200 000 млн.руб.
1 400 000 млн.руб.
1 600 000 млн.руб.
1 311 033
1 316 817
↑
ДЗО 
Все
Подписи данных
⬤Отклонение
АО «Тываэнерго»
АО «Чеченэнерго»
Россети Волга
Россети Кубань
Россети Ленэнерго (ГК)
Россети Московский регион
Россети Северный Кавказ (ГК)
Россети Северо-Запад
Россети Сибирь (ГК)
Россети Томск
Россети Тюмень
Россети Урал (ГК)
Россети ФСК ЕЭС
Россети Центр
Россети Центр и Приволжье (ГК)
Россети Юг (ГК)
Россети Янтарь
-27 500 млн.руб.
-25 000 млн.руб.
-22 500 млн.руб.
-20 000 млн.руб.
-17 500 млн.руб.
-15 000 млн.руб.
-12 500 млн.руб.
-10 000 млн.руб.
-7 500 млн.руб.
-5 000 млн.руб.
-2 500 млн.руб.
0 млн.руб.
2 500 млн.руб.
5 000 млн.руб.
7 500 млн.руб.
10 000 млн.руб.
12 500 млн.руб.
358
121
239
4 507
5 172
8 574
945
784
2 396
241
-6 052
2 027
-23 772
3 732
4 813
1 329
372
млн.
%
Выручка
Отклонение выручки (факт/план, млн. руб) 
ПАО Россети
5 783.7 млн.руб.
Статус данных
×
Просьба обратить внимание
Данные занесены не полностью
ВЫБРАННЫЕ ЗНАЧЕНИЯ ФИЛЬТРОВ
ДЗО | ПЕРИОД
ПАО Россети: [«Выбраны все филиалы по всем ДЗО по всем категориям»]
2024: [Янв, Фев, Мар, Апр, Май, Июн, Июл, Авг, Сен, Окт, Ноя]
*Внутренний оборот'

10-01-2025T04:02:34 - [TEST_STEP][PASSED] - searchWord = "а": null

10-01-2025T04:02:34 - [TEST_STEP][PASSED] - if (urlText.contains("ошибка") || urlText.contains(searchWord) == false): null

10-01-2025T04:02:34 - [TEST_STEP][PASSED] - delay(45): Delayed 45 second(s)

10-01-2025T04:03:19 - [MESSAGE][PASSED] - Delayed 45 second(s)

10-01-2025T04:03:19 - [TEST_STEP][PASSED] - if (block == 2): Delayed 50 second(s)

10-01-2025T04:03:19 - [TEST_STEP][PASSED] - opoveshenie = getText(findTestObject("Выручка в рублях/Просьба обратить внимание")): Text of object 'Object Repository/Выручка в рублях/Просьба обратить внимание' is: 'Просьба обратить внимание'

10-01-2025T04:03:19 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выручка в рублях/Просьба обратить внимание' is: 'Просьба обратить внимание'

10-01-2025T04:03:19 - [TEST_STEP][PASSED] - if (opoveshenie == "Просьба обратить внимание"): Delayed 50 second(s)

10-01-2025T04:03:19 - [TEST_STEP][PASSED] - click(findTestObject("Выручка в рублях/Закрыть оповещение")): Object: 'Object Repository/Выручка в рублях/Закрыть оповещение' is clicked on

10-01-2025T04:03:19 - [MESSAGE][PASSED] - Object: 'Object Repository/Выручка в рублях/Закрыть оповещение' is clicked on

10-01-2025T04:03:19 - [TEST_STEP][PASSED] - delay(50): Delayed 50 second(s)

10-01-2025T04:04:09 - [MESSAGE][PASSED] - Delayed 50 second(s)

10-01-2025T04:04:09 - [TEST_STEP][PASSED] - click(findTestObject("Выручка в рублях/Фильтр Период" + nameOfBlock)): Object: 'Object Repository/Выручка в рублях/Фильтр Период Выручка' is clicked on

10-01-2025T04:04:10 - [MESSAGE][PASSED] - Object: 'Object Repository/Выручка в рублях/Фильтр Период Выручка' is clicked on

10-01-2025T04:04:10 - [TEST_STEP][PASSED] - click(findTestObject("Выручка в рублях/Снять выделение в фильтре Дата" + nameOfBlock)): Object: 'Object Repository/Выручка в рублях/Снять выделение в фильтре Дата Выручка' is clicked on

10-01-2025T04:04:10 - [MESSAGE][PASSED] - Object: 'Object Repository/Выручка в рублях/Снять выделение в фильтре Дата Выручка' is clicked on

10-01-2025T04:04:10 - [TEST_STEP][PASSED] - click(findTestObject("Выручка в рублях/Применить в фильтре Дата" + nameOfBlock)): Object: 'Object Repository/Выручка в рублях/Применить в фильтре Дата Выручка' is clicked on

10-01-2025T04:04:11 - [MESSAGE][PASSED] - Object: 'Object Repository/Выручка в рублях/Применить в фильтре Дата Выручка' is clicked on

10-01-2025T04:04:11 - [TEST_STEP][PASSED] - delay(50): Delayed 50 second(s)

10-01-2025T04:05:01 - [MESSAGE][PASSED] - Delayed 50 second(s)

10-01-2025T04:05:01 - [TEST_STEP][PASSED] - click(findTestObject("Выручка в рублях/Фильтр Период" + nameOfBlock)): Object: 'Object Repository/Выручка в рублях/Фильтр Период Выручка' is clicked on

10-01-2025T04:05:01 - [MESSAGE][PASSED] - Object: 'Object Repository/Выручка в рублях/Фильтр Период Выручка' is clicked on

10-01-2025T04:05:01 - [TEST_STEP][PASSED] - click(findTestObject("Выручка в рублях/Снять выделение в фильтре Дата" + nameOfBlock)): Object: 'Object Repository/Выручка в рублях/Снять выделение в фильтре Дата Выручка' is clicked on

10-01-2025T04:05:02 - [MESSAGE][PASSED] - Object: 'Object Repository/Выручка в рублях/Снять выделение в фильтре Дата Выручка' is clicked on

10-01-2025T04:05:02 - [TEST_STEP][PASSED] - scrollToElement(findTestObject("Выручка в рублях/2024 список" + nameOfBlock), 30): Scroll to object 'Object Repository/Выручка в рублях/2024 список Выручка' successfully

10-01-2025T04:05:02 - [MESSAGE][PASSED] - Scroll to object 'Object Repository/Выручка в рублях/2024 список Выручка' successfully

10-01-2025T04:05:02 - [TEST_STEP][PASSED] - click(findTestObject("Выручка в рублях/2024 список" + nameOfBlock)): Object: 'Object Repository/Выручка в рублях/2024 список Выручка' is clicked on

10-01-2025T04:05:03 - [MESSAGE][PASSED] - Object: 'Object Repository/Выручка в рублях/2024 список Выручка' is clicked on

10-01-2025T04:05:03 - [TEST_STEP][PASSED] - scrollToElement(findTestObject("Выручка в рублях/1 квартал 2024 выбрать" + nameOfBlock), 30): Scroll to object 'Object Repository/Выручка в рублях/1 квартал 2024 выбрать Выручка' successfully

10-01-2025T04:05:03 - [MESSAGE][PASSED] - Scroll to object 'Object Repository/Выручка в рублях/1 квартал 2024 выбрать Выручка' successfully

10-01-2025T04:05:03 - [TEST_STEP][PASSED] - click(findTestObject("Выручка в рублях/1 квартал 2024 выбрать" + nameOfBlock)): Object: 'Object Repository/Выручка в рублях/1 квартал 2024 выбрать Выручка' is clicked on

10-01-2025T04:05:03 - [MESSAGE][PASSED] - Object: 'Object Repository/Выручка в рублях/1 квартал 2024 выбрать Выручка' is clicked on

10-01-2025T04:05:03 - [TEST_STEP][PASSED] - scrollToElement(findTestObject("Выручка в рублях/2 квартал 2024 выбрать" + nameOfBlock), 30): Scroll to object 'Object Repository/Выручка в рублях/2 квартал 2024 выбрать Выручка' successfully

10-01-2025T04:05:04 - [MESSAGE][PASSED] - Scroll to object 'Object Repository/Выручка в рублях/2 квартал 2024 выбрать Выручка' successfully

10-01-2025T04:05:04 - [TEST_STEP][PASSED] - click(findTestObject("Выручка в рублях/2 квартал 2024 выбрать" + nameOfBlock)): Object: 'Object Repository/Выручка в рублях/2 квартал 2024 выбрать Выручка' is clicked on

10-01-2025T04:05:04 - [MESSAGE][PASSED] - Object: 'Object Repository/Выручка в рублях/2 квартал 2024 выбрать Выручка' is clicked on

10-01-2025T04:05:04 - [TEST_STEP][PASSED] - scrollToElement(findTestObject("Выручка в рублях/3 квартал 2024 список" + nameOfBlock), 30): Scroll to object 'Object Repository/Выручка в рублях/3 квартал 2024 список Выручка' successfully

10-01-2025T04:05:05 - [MESSAGE][PASSED] - Scroll to object 'Object Repository/Выручка в рублях/3 квартал 2024 список Выручка' successfully

10-01-2025T04:05:05 - [TEST_STEP][PASSED] - click(findTestObject("Выручка в рублях/3 квартал 2024" + nameOfBlock)): Object: 'Object Repository/Выручка в рублях/3 квартал 2024 Выручка' is clicked on

10-01-2025T04:05:05 - [MESSAGE][PASSED] - Object: 'Object Repository/Выручка в рублях/3 квартал 2024 Выручка' is clicked on

10-01-2025T04:05:05 - [TEST_STEP][PASSED] - scrollToElement(findTestObject("Выручка в рублях/4 квартал 2024 список" + nameOfBlock), 30): Scroll to object 'Object Repository/Выручка в рублях/4 квартал 2024 список Выручка' successfully

10-01-2025T04:05:06 - [MESSAGE][PASSED] - Scroll to object 'Object Repository/Выручка в рублях/4 квартал 2024 список Выручка' successfully

10-01-2025T04:05:06 - [TEST_STEP][PASSED] - click(findTestObject("Выручка в рублях/4 квартал 2024 список" + nameOfBlock)): Object: 'Object Repository/Выручка в рублях/4 квартал 2024 список Выручка' is clicked on

10-01-2025T04:05:06 - [MESSAGE][PASSED] - Object: 'Object Repository/Выручка в рублях/4 квартал 2024 список Выручка' is clicked on

10-01-2025T04:05:06 - [TEST_STEP][PASSED] - scrollToElement(findTestObject("Выручка в рублях/Октябрь 2024" + nameOfBlock), 30): Scroll to object 'Object Repository/Выручка в рублях/Октябрь 2024 Выручка' successfully

10-01-2025T04:05:06 - [MESSAGE][PASSED] - Scroll to object 'Object Repository/Выручка в рублях/Октябрь 2024 Выручка' successfully

10-01-2025T04:05:06 - [TEST_STEP][PASSED] - click(findTestObject("Выручка в рублях/Октябрь 2024" + nameOfBlock)): Object: 'Object Repository/Выручка в рублях/Октябрь 2024 Выручка' is clicked on

10-01-2025T04:05:07 - [MESSAGE][PASSED] - Object: 'Object Repository/Выручка в рублях/Октябрь 2024 Выручка' is clicked on

10-01-2025T04:05:07 - [TEST_STEP][PASSED] - scrollToElement(findTestObject("Выручка в рублях/Ноябрь 2024" + nameOfBlock), 30): Scroll to object 'Object Repository/Выручка в рублях/Ноябрь 2024 Выручка' successfully

10-01-2025T04:05:07 - [MESSAGE][PASSED] - Scroll to object 'Object Repository/Выручка в рублях/Ноябрь 2024 Выручка' successfully

10-01-2025T04:05:07 - [TEST_STEP][PASSED] - click(findTestObject("Выручка в рублях/Ноябрь 2024" + nameOfBlock)): Object: 'Object Repository/Выручка в рублях/Ноябрь 2024 Выручка' is clicked on

10-01-2025T04:05:08 - [MESSAGE][PASSED] - Object: 'Object Repository/Выручка в рублях/Ноябрь 2024 Выручка' is clicked on

10-01-2025T04:05:08 - [TEST_STEP][PASSED] - scrollToElement(findTestObject("Выручка в рублях/Заголовок дашборда" + nameOfBlock), 30): Scroll to object 'Object Repository/Выручка в рублях/Заголовок дашборда Выручка' successfully

10-01-2025T04:05:08 - [MESSAGE][PASSED] - Scroll to object 'Object Repository/Выручка в рублях/Заголовок дашборда Выручка' successfully

10-01-2025T04:05:08 - [TEST_STEP][PASSED] - click(findTestObject("Выручка в рублях/Применить в фильтре Дата" + nameOfBlock)): Object: 'Object Repository/Выручка в рублях/Применить в фильтре Дата Выручка' is clicked on

10-01-2025T04:05:09 - [MESSAGE][PASSED] - Object: 'Object Repository/Выручка в рублях/Применить в фильтре Дата Выручка' is clicked on

10-01-2025T04:05:09 - [TEST_STEP][PASSED] - delay(55): Delayed 55 second(s)

10-01-2025T04:06:04 - [MESSAGE][PASSED] - Delayed 55 second(s)

10-01-2025T04:06:04 - [TEST_STEP][PASSED] - click(findTestObject("Выручка в рублях/Фильтр ДЗО" + nameOfBlock)): Object: 'Object Repository/Выручка в рублях/Фильтр ДЗО Выручка' is clicked on

10-01-2025T04:06:04 - [MESSAGE][PASSED] - Object: 'Object Repository/Выручка в рублях/Фильтр ДЗО Выручка' is clicked on

10-01-2025T04:06:04 - [TEST_STEP][PASSED] - click(findTestObject("Выручка в рублях/Снять выделение в фильтре ДЗО" + nameOfBlock)): Object: 'Object Repository/Выручка в рублях/Снять выделение в фильтре ДЗО Выручка' is clicked on

10-01-2025T04:06:05 - [MESSAGE][PASSED] - Object: 'Object Repository/Выручка в рублях/Снять выделение в фильтре ДЗО Выручка' is clicked on

10-01-2025T04:06:05 - [TEST_STEP][PASSED] - click(findTestObject("Выручка в рублях/Применить в фильтре ДЗО" + nameOfBlock)): Object: 'Object Repository/Выручка в рублях/Применить в фильтре ДЗО Выручка' is clicked on

10-01-2025T04:06:05 - [MESSAGE][PASSED] - Object: 'Object Repository/Выручка в рублях/Применить в фильтре ДЗО Выручка' is clicked on

10-01-2025T04:06:05 - [TEST_STEP][PASSED] - delay(50): Delayed 50 second(s)

10-01-2025T04:06:55 - [MESSAGE][PASSED] - Delayed 50 second(s)

10-01-2025T04:06:55 - [TEST_STEP][PASSED] - Script1710234207206.Tumbler(run, vir, block, nameOfBlock): null

10-01-2025T04:06:55 - [TEST_STEP][PASSED] - println("run:" + run): null

10-01-2025T04:06:55 - [TEST_STEP][PASSED] - println("vir:" + vir): null

10-01-2025T04:06:55 - [TEST_STEP][PASSED] - println("block:" + block): null

10-01-2025T04:06:55 - [TEST_STEP][PASSED] - println("nameOfBlock:" + nameOfBlock): null

10-01-2025T04:06:55 - [TEST_STEP][PASSED] - if (vir == 1): Object: 'Object Repository/Выручка в рублях/Переключить отображение с млн на проценты Выручка в рублях Выручка' is clicked on

10-01-2025T04:06:55 - [TEST_STEP][PASSED] - if (run == 2): Object: 'Object Repository/Выручка в рублях/Переключить отображение с млн на проценты Выручка в рублях Выручка' is clicked on

10-01-2025T04:06:55 - [TEST_STEP][PASSED] - click(findTestObject("Выручка в рублях/Переключить отображение с млн на проценты Выручка в рублях" + nameOfBlock)): Object: 'Object Repository/Выручка в рублях/Переключить отображение с млн на проценты Выручка в рублях Выручка' is clicked on

10-01-2025T04:06:56 - [MESSAGE][PASSED] - Object: 'Object Repository/Выручка в рублях/Переключить отображение с млн на проценты Выручка в рублях Выручка' is clicked on

10-01-2025T04:06:56 - [TEST_STEP][PASSED] - click(findTestObject("Выручка в рублях/Фильтр ДЗО" + nameOfBlock)): Object: 'Object Repository/Выручка в рублях/Фильтр ДЗО Выручка' is clicked on

10-01-2025T04:06:56 - [MESSAGE][PASSED] - Object: 'Object Repository/Выручка в рублях/Фильтр ДЗО Выручка' is clicked on

10-01-2025T04:06:56 - [TEST_STEP][PASSED] - Script1710234207206.Rosseti(nameOfBlock): null

10-01-2025T04:06:56 - [TEST_STEP][PASSED] - println("nameOfBlock:" + nameOfBlock): null

10-01-2025T04:06:56 - [TEST_STEP][PASSED] - click(findTestObject("Выручка в рублях/ПАО Россети" + nameOfBlock)): Object: 'Object Repository/Выручка в рублях/ПАО Россети Выручка' is clicked on

10-01-2025T04:06:56 - [MESSAGE][PASSED] - Object: 'Object Repository/Выручка в рублях/ПАО Россети Выручка' is clicked on

10-01-2025T04:06:56 - [TEST_STEP][PASSED] - click(findTestObject("Выручка в рублях/Применить в фильтре ДЗО" + nameOfBlock)): Object: 'Object Repository/Выручка в рублях/Применить в фильтре ДЗО Выручка' is clicked on

10-01-2025T04:06:57 - [MESSAGE][PASSED] - Object: 'Object Repository/Выручка в рублях/Применить в фильтре ДЗО Выручка' is clicked on

10-01-2025T04:06:57 - [TEST_STEP][PASSED] - if (vir == 1 || vir == 2): Text of object 'Object Repository/Выручка в рублях/График План Выручка' is: '1 311 033'

10-01-2025T04:06:57 - [TEST_STEP][PASSED] - b1 = getText(findTestObject("Выручка в рублях/График План Выручка")): Text of object 'Object Repository/Выручка в рублях/График План Выручка' is: '1 311 033'

10-01-2025T04:06:59 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выручка в рублях/График План Выручка' is: '1 311 033'

10-01-2025T04:06:59 - [TEST_STEP][PASSED] - if (vir == 1 || vir == 2): Text of object 'Object Repository/Выручка в рублях/График Факт Выручка' is: '1 316 817'

10-01-2025T04:06:59 - [TEST_STEP][PASSED] - b2 = getText(findTestObject("Выручка в рублях/График Факт Выручка")): Text of object 'Object Repository/Выручка в рублях/График Факт Выручка' is: '1 316 817'

10-01-2025T04:07:00 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выручка в рублях/График Факт Выручка' is: '1 316 817'

10-01-2025T04:07:00 - [TEST_STEP][PASSED] - b30 = getText(findTestObject("Выручка в рублях/span1" + perc)): Text of object 'Object Repository/Выручка в рублях/span1 Perc' is: '-95.24 %'

10-01-2025T04:07:00 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выручка в рублях/span1 Perc' is: '-95.24 %'

10-01-2025T04:07:00 - [TEST_STEP][PASSED] - i = b30.indexOf("млн.руб."): null

10-01-2025T04:07:00 - [TEST_STEP][PASSED] - if (i > -1): null

10-01-2025T04:07:00 - [TEST_STEP][PASSED] - if (b30.contains("%")): null

10-01-2025T04:07:00 - [TEST_STEP][PASSED] - b30 = b30.replaceAll("%", ""): null

10-01-2025T04:07:00 - [TEST_STEP][PASSED] - b30 = ").trim(): null

10-01-2025T04:07:00 - [TEST_STEP][PASSED] - println("b30: " + b30): null

10-01-2025T04:07:00 - [TEST_STEP][PASSED] - if (vir == 1 || vir == 2): Text of object 'Object Repository/Выручка в рублях/span2 Perc' is: '-100 %'

10-01-2025T04:07:00 - [TEST_STEP][PASSED] - b31 = ").trim(): Text of object 'Object Repository/Выручка в рублях/span2 Perc' is: '-100 %'

10-01-2025T04:07:00 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выручка в рублях/span2 Perc' is: '-100 %'

10-01-2025T04:07:00 - [TEST_STEP][PASSED] - if (vir == 1 || vir == 2): Text of object 'Object Repository/Выручка в рублях/span3 Perc' is: '-90.14 %'

10-01-2025T04:07:00 - [TEST_STEP][PASSED] - b32 = ").trim(): Text of object 'Object Repository/Выручка в рублях/span3 Perc' is: '-90.14 %'

10-01-2025T04:07:00 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выручка в рублях/span3 Perc' is: '-90.14 %'

10-01-2025T04:07:00 - [TEST_STEP][PASSED] - if (vir == 1 || vir == 2): Text of object 'Object Repository/Выручка в рублях/span8 Perc' is: '-89.72 %'

10-01-2025T04:07:00 - [TEST_STEP][PASSED] - b33 = ").trim(): Text of object 'Object Repository/Выручка в рублях/span4 Perc' is: '-89.76 %'

10-01-2025T04:07:01 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выручка в рублях/span4 Perc' is: '-89.76 %'

10-01-2025T04:07:01 - [TEST_STEP][PASSED] - b34 = ").trim(): Text of object 'Object Repository/Выручка в рублях/span5 Perc' is: '-90.21 %'

10-01-2025T04:07:01 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выручка в рублях/span5 Perc' is: '-90.21 %'

10-01-2025T04:07:01 - [TEST_STEP][PASSED] - b35 = ").trim(): Text of object 'Object Repository/Выручка в рублях/span6 Perc' is: '-88.99 %'

10-01-2025T04:07:01 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выручка в рублях/span6 Perc' is: '-88.99 %'

10-01-2025T04:07:01 - [TEST_STEP][PASSED] - b36 = ").trim(): Text of object 'Object Repository/Выручка в рублях/span7 Perc' is: '-100 %'

10-01-2025T04:07:02 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выручка в рублях/span7 Perc' is: '-100 %'

10-01-2025T04:07:02 - [TEST_STEP][PASSED] - b37 = ").trim(): Text of object 'Object Repository/Выручка в рублях/span8 Perc' is: '-89.72 %'

10-01-2025T04:07:02 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выручка в рублях/span8 Perc' is: '-89.72 %'

10-01-2025T04:07:02 - [TEST_STEP][PASSED] - if (vir == 1 || vir == 2): Text of object 'Object Repository/Выручка в рублях/span17 Perc' is: '-90.23 %'

10-01-2025T04:07:02 - [TEST_STEP][PASSED] - b38 = ").trim(): Text of object 'Object Repository/Выручка в рублях/span9 Perc' is: '-89.48 %'

10-01-2025T04:07:02 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выручка в рублях/span9 Perc' is: '-89.48 %'

10-01-2025T04:07:02 - [TEST_STEP][PASSED] - b39 = ").trim(): Text of object 'Object Repository/Выручка в рублях/span10 Perc' is: '-100 %'

10-01-2025T04:07:03 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выручка в рублях/span10 Perc' is: '-100 %'

10-01-2025T04:07:03 - [TEST_STEP][PASSED] - b310 = ").trim(): Text of object 'Object Repository/Выручка в рублях/span11 Perc' is: '-89.66 %'

10-01-2025T04:07:03 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выручка в рублях/span11 Perc' is: '-89.66 %'

10-01-2025T04:07:03 - [TEST_STEP][PASSED] - b311 = ").trim(): Text of object 'Object Repository/Выручка в рублях/span12 Perc' is: '-91.46 %'

10-01-2025T04:07:03 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выручка в рублях/span12 Perc' is: '-91.46 %'

10-01-2025T04:07:03 - [TEST_STEP][PASSED] - b312 = ").trim(): Text of object 'Object Repository/Выручка в рублях/span13 Perc' is: '-89.69 %'

10-01-2025T04:07:03 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выручка в рублях/span13 Perc' is: '-89.69 %'

10-01-2025T04:07:03 - [TEST_STEP][PASSED] - b313 = ").trim(): Text of object 'Object Repository/Выручка в рублях/span14 Perc' is: '-100 %'

10-01-2025T04:07:04 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выручка в рублях/span14 Perc' is: '-100 %'

10-01-2025T04:07:04 - [TEST_STEP][PASSED] - b314 = ").trim(): Text of object 'Object Repository/Выручка в рублях/span15 Perc' is: '-100 %'

10-01-2025T04:07:04 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выручка в рублях/span15 Perc' is: '-100 %'

10-01-2025T04:07:04 - [TEST_STEP][PASSED] - b315 = ").trim(): Text of object 'Object Repository/Выручка в рублях/span16 Perc' is: '-93.32 %'

10-01-2025T04:07:04 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выручка в рублях/span16 Perc' is: '-93.32 %'

10-01-2025T04:07:04 - [TEST_STEP][PASSED] - b316 = ").trim(): Text of object 'Object Repository/Выручка в рублях/span17 Perc' is: '-90.23 %'

10-01-2025T04:07:05 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выручка в рублях/span17 Perc' is: '-90.23 %'

10-01-2025T04:07:05 - [TEST_STEP][PASSED] - if (vir == 1 || vir == 2): Text of object 'Object Repository/Выручка в рублях/span18 Perc' is: '-100 %'

10-01-2025T04:07:05 - [TEST_STEP][PASSED] - b317 = ").trim(): Text of object 'Object Repository/Выручка в рублях/span18 Perc' is: '-100 %'

10-01-2025T04:07:05 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выручка в рублях/span18 Perc' is: '-100 %'

10-01-2025T04:07:05 - [TEST_STEP][PASSED] - dZO = "ПАО Россети": null

10-01-2025T04:07:05 - [TEST_STEP][PASSED] - if (verifyEqual(a1, b1) == false): Actual object '1 311 033' and expected object '1 311 033' are equal

10-01-2025T04:07:05 - [MESSAGE][PASSED] - Actual object '1 311 033' and expected object '1 311 033' are equal

10-01-2025T04:07:05 - [TEST_STEP][PASSED] - if (verifyEqual(a2, b2) == false): Actual object '1 316 817' and expected object '1 316 817' are equal

10-01-2025T04:07:05 - [MESSAGE][PASSED] - Actual object '1 316 817' and expected object '1 316 817' are equal

10-01-2025T04:07:05 - [TEST_STEP][PASSED] - vidget = "Отклонения": null

10-01-2025T04:07:05 - [TEST_STEP][FAILED] - if (verifyEqual(a30, b30) == false): null

10-01-2025T04:07:05 - [MESSAGE][FAILED] - Unable to verify equal between actual object '-95.38' and expected object '-95.24' (Root cause: com.kms.katalon.core.exception.StepFailedException: Actual object '-95.38' and expected object '-95.24' are not equal
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.doCall(VerifyEqualKeyword.groovy:58)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.call(VerifyEqualKeyword.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:75)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.verifyEqual(VerifyEqualKeyword.groovy:63)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.execute(VerifyEqualKeyword.groovy:44)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:74)
	at com.kms.katalon.core.keyword.BuiltinKeywords.verifyEqual(BuiltinKeywords.groovy:146)
	at jdk.internal.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at Выручка в рублях сверка дашбордов ПАО Россети.Blocks(Выручка в рублях сверка дашбордов ПАО Россети:357)
	at Выручка в рублях сверка дашбордов ПАО Россети.ViruchkaChange(Выручка в рублях сверка дашбордов ПАО Россети:60)
	at Выручка в рублях сверка дашбордов ПАО Россети.run(Выручка в рублях сверка дашбордов ПАО Россети:55)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:448)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:439)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:418)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:410)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:285)
	at com.kms.katalon.core.common.CommonExecutor.accessTestCaseMainPhase(CommonExecutor.java:65)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:150)
	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:106)
	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:180)
	at TempTestSuite1736466949911.run(TempTestSuite1736466949911.groovy:35)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
)

10-01-2025T04:07:05 - [TEST_STEP][PASSED] - a = replaceAll("\s+", "").toDouble(): null

10-01-2025T04:07:05 - [TEST_STEP][PASSED] - b = replaceAll("\s+", "").toDouble(): null

10-01-2025T04:07:05 - [TEST_STEP][PASSED] - Script1710234207206.WriteToExcel(todaysDate, run, vir, block, typeOfData, viruchka, vidget, nameOfBlock, a, b, dZO): null

10-01-2025T04:07:05 - [TEST_STEP][PASSED] - println(run): null

10-01-2025T04:07:05 - [TEST_STEP][PASSED] - if (run == 1): null

10-01-2025T04:07:05 - [TEST_STEP][PASSED] - else if (run == 2): null

10-01-2025T04:07:05 - [TEST_STEP][PASSED] - typeOfData = "Проценты": null

10-01-2025T04:07:05 - [TEST_STEP][PASSED] - println("todaysDate:" + todaysDate): null

10-01-2025T04:07:05 - [TEST_STEP][PASSED] - println("typeOfData:" + typeOfData): null

10-01-2025T04:07:05 - [TEST_STEP][PASSED] - viruchka = getText(findTestObject("Выручка в рублях/Фильтр Выручка" + nameOfBlock)): Text of object 'Object Repository/Выручка в рублях/Фильтр Выручка Выручка' is: 'Все'

10-01-2025T04:07:05 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выручка в рублях/Фильтр Выручка Выручка' is: 'Все'

10-01-2025T04:07:05 - [TEST_STEP][PASSED] - println("viruchka" + viruchka): null

10-01-2025T04:07:05 - [TEST_STEP][PASSED] - println("vidget" + vidget): null

10-01-2025T04:07:05 - [TEST_STEP][PASSED] - println("a" + a): null

10-01-2025T04:07:05 - [TEST_STEP][PASSED] - println("b" + b): null

10-01-2025T04:07:05 - [TEST_STEP][PASSED] - sheetName = "Sheet1": null

10-01-2025T04:07:05 - [TEST_STEP][PASSED] - data = findTestData("PlanFact"): null

10-01-2025T04:07:05 - [TEST_STEP][PASSED] - n = data.getRowNumbers() + 1: null

10-01-2025T04:07:05 - [TEST_STEP][PASSED] - period = getText(findTestObject("Выручка в рублях/Фильтр Период")): Text of object 'Object Repository/Выручка в рублях/Фильтр Период' is: 'Октябрь, Ноябрь и 1, 2, 3 кв. 2024 года'

10-01-2025T04:07:06 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выручка в рублях/Фильтр Период' is: 'Октябрь, Ноябрь и 1, 2, 3 кв. 2024 года'

10-01-2025T04:07:06 - [TEST_STEP][PASSED] - println(period): null

10-01-2025T04:07:06 - [TEST_STEP][PASSED] - dashboardName = "Выручка в рублях": null

10-01-2025T04:07:06 - [TEST_STEP][PASSED] - workbook01 = getWorkbook(excelFilePath): null

10-01-2025T04:07:06 - [TEST_STEP][PASSED] - sheet01 = getExcelSheet(workbook01, sheetName): null

10-01-2025T04:07:06 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 0, dashboardName): null

10-01-2025T04:07:06 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 1, dZO): null

10-01-2025T04:07:06 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 2, vidget): null

10-01-2025T04:07:06 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 3, viruchka): null

10-01-2025T04:07:06 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 4, typeOfData): null

10-01-2025T04:07:06 - [TEST_STEP][PASSED] - if (a == null): null

10-01-2025T04:07:06 - [TEST_STEP][PASSED] - else: null

10-01-2025T04:07:06 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 5, a): null

10-01-2025T04:07:06 - [TEST_STEP][PASSED] - if (b == null): null

10-01-2025T04:07:06 - [TEST_STEP][PASSED] - else: null

10-01-2025T04:07:06 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 6, b): null

10-01-2025T04:07:06 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 7, period): null

10-01-2025T04:07:06 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 8, todaysDate): null

10-01-2025T04:07:06 - [TEST_STEP][PASSED] - n = n + 1: null

10-01-2025T04:07:06 - [TEST_STEP][PASSED] - saveWorkbook(excelFilePath, workbook01): null

10-01-2025T04:07:06 - [TEST_STEP][PASSED] - dZO = "АО «Тываэнерго»": null

10-01-2025T04:07:06 - [TEST_STEP][PASSED] - if (verifyEqual(a31, b31) == false): Actual object '-100' and expected object '-100' are equal

10-01-2025T04:07:06 - [MESSAGE][PASSED] - Actual object '-100' and expected object '-100' are equal

10-01-2025T04:07:06 - [TEST_STEP][PASSED] - dZO = "АО «Чеченэнерго»": null

10-01-2025T04:07:06 - [TEST_STEP][FAILED] - if (verifyEqual(a32, b32) == false): null

10-01-2025T04:07:06 - [MESSAGE][FAILED] - Unable to verify equal between actual object '-90.99' and expected object '-90.14' (Root cause: com.kms.katalon.core.exception.StepFailedException: Actual object '-90.99' and expected object '-90.14' are not equal
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.doCall(VerifyEqualKeyword.groovy:58)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.call(VerifyEqualKeyword.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:75)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.verifyEqual(VerifyEqualKeyword.groovy:63)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.execute(VerifyEqualKeyword.groovy:44)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:74)
	at com.kms.katalon.core.keyword.BuiltinKeywords.verifyEqual(BuiltinKeywords.groovy:146)
	at jdk.internal.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at Выручка в рублях сверка дашбордов ПАО Россети.Blocks(Выручка в рублях сверка дашбордов ПАО Россети:377)
	at Выручка в рублях сверка дашбордов ПАО Россети.ViruchkaChange(Выручка в рублях сверка дашбордов ПАО Россети:60)
	at Выручка в рублях сверка дашбордов ПАО Россети.run(Выручка в рублях сверка дашбордов ПАО Россети:55)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:448)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:439)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:418)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:410)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:285)
	at com.kms.katalon.core.common.CommonExecutor.accessTestCaseMainPhase(CommonExecutor.java:65)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:150)
	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:106)
	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:180)
	at TempTestSuite1736466949911.run(TempTestSuite1736466949911.groovy:35)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
)

10-01-2025T04:07:06 - [TEST_STEP][PASSED] - a = replaceAll("\s+", "").toDouble(): null

10-01-2025T04:07:06 - [TEST_STEP][PASSED] - b = replaceAll("\s+", "").toDouble(): null

10-01-2025T04:07:06 - [TEST_STEP][PASSED] - Script1710234207206.WriteToExcel(todaysDate, run, vir, block, typeOfData, viruchka, vidget, nameOfBlock, a, b, dZO): null

10-01-2025T04:07:06 - [TEST_STEP][PASSED] - println(run): null

10-01-2025T04:07:06 - [TEST_STEP][PASSED] - if (run == 1): null

10-01-2025T04:07:06 - [TEST_STEP][PASSED] - else if (run == 2): null

10-01-2025T04:07:06 - [TEST_STEP][PASSED] - typeOfData = "Проценты": null

10-01-2025T04:07:06 - [TEST_STEP][PASSED] - println("todaysDate:" + todaysDate): null

10-01-2025T04:07:06 - [TEST_STEP][PASSED] - println("typeOfData:" + typeOfData): null

10-01-2025T04:07:06 - [TEST_STEP][PASSED] - viruchka = getText(findTestObject("Выручка в рублях/Фильтр Выручка" + nameOfBlock)): Text of object 'Object Repository/Выручка в рублях/Фильтр Выручка Выручка' is: 'Все'

10-01-2025T04:07:06 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выручка в рублях/Фильтр Выручка Выручка' is: 'Все'

10-01-2025T04:07:06 - [TEST_STEP][PASSED] - println("viruchka" + viruchka): null

10-01-2025T04:07:06 - [TEST_STEP][PASSED] - println("vidget" + vidget): null

10-01-2025T04:07:06 - [TEST_STEP][PASSED] - println("a" + a): null

10-01-2025T04:07:06 - [TEST_STEP][PASSED] - println("b" + b): null

10-01-2025T04:07:06 - [TEST_STEP][PASSED] - sheetName = "Sheet1": null

10-01-2025T04:07:06 - [TEST_STEP][PASSED] - data = findTestData("PlanFact"): null

10-01-2025T04:07:06 - [TEST_STEP][PASSED] - n = data.getRowNumbers() + 1: null

10-01-2025T04:07:06 - [TEST_STEP][PASSED] - period = getText(findTestObject("Выручка в рублях/Фильтр Период")): Text of object 'Object Repository/Выручка в рублях/Фильтр Период' is: 'Октябрь, Ноябрь и 1, 2, 3 кв. 2024 года'

10-01-2025T04:07:07 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выручка в рублях/Фильтр Период' is: 'Октябрь, Ноябрь и 1, 2, 3 кв. 2024 года'

10-01-2025T04:07:07 - [TEST_STEP][PASSED] - println(period): null

10-01-2025T04:07:07 - [TEST_STEP][PASSED] - dashboardName = "Выручка в рублях": null

10-01-2025T04:07:07 - [TEST_STEP][PASSED] - workbook01 = getWorkbook(excelFilePath): null

10-01-2025T04:07:07 - [TEST_STEP][PASSED] - sheet01 = getExcelSheet(workbook01, sheetName): null

10-01-2025T04:07:07 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 0, dashboardName): null

10-01-2025T04:07:07 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 1, dZO): null

10-01-2025T04:07:07 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 2, vidget): null

10-01-2025T04:07:07 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 3, viruchka): null

10-01-2025T04:07:07 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 4, typeOfData): null

10-01-2025T04:07:07 - [TEST_STEP][PASSED] - if (a == null): null

10-01-2025T04:07:07 - [TEST_STEP][PASSED] - else: null

10-01-2025T04:07:07 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 5, a): null

10-01-2025T04:07:07 - [TEST_STEP][PASSED] - if (b == null): null

10-01-2025T04:07:07 - [TEST_STEP][PASSED] - else: null

10-01-2025T04:07:07 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 6, b): null

10-01-2025T04:07:07 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 7, period): null

10-01-2025T04:07:07 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 8, todaysDate): null

10-01-2025T04:07:07 - [TEST_STEP][PASSED] - n = n + 1: null

10-01-2025T04:07:07 - [TEST_STEP][PASSED] - saveWorkbook(excelFilePath, workbook01): null

10-01-2025T04:07:07 - [TEST_STEP][PASSED] - dZO = "Россети Волга": null

10-01-2025T04:07:07 - [TEST_STEP][FAILED] - if (verifyEqual(a33, b33) == false): null

10-01-2025T04:07:07 - [MESSAGE][FAILED] - Unable to verify equal between actual object '-90.7' and expected object '-89.76' (Root cause: com.kms.katalon.core.exception.StepFailedException: Actual object '-90.7' and expected object '-89.76' are not equal
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.doCall(VerifyEqualKeyword.groovy:58)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.call(VerifyEqualKeyword.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:75)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.verifyEqual(VerifyEqualKeyword.groovy:63)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.execute(VerifyEqualKeyword.groovy:44)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:74)
	at com.kms.katalon.core.keyword.BuiltinKeywords.verifyEqual(BuiltinKeywords.groovy:146)
	at jdk.internal.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at Выручка в рублях сверка дашбордов ПАО Россети.Blocks(Выручка в рублях сверка дашбордов ПАО Россети:387)
	at Выручка в рублях сверка дашбордов ПАО Россети.ViruchkaChange(Выручка в рублях сверка дашбордов ПАО Россети:60)
	at Выручка в рублях сверка дашбордов ПАО Россети.run(Выручка в рублях сверка дашбордов ПАО Россети:55)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:448)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:439)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:418)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:410)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:285)
	at com.kms.katalon.core.common.CommonExecutor.accessTestCaseMainPhase(CommonExecutor.java:65)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:150)
	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:106)
	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:180)
	at TempTestSuite1736466949911.run(TempTestSuite1736466949911.groovy:35)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
)

10-01-2025T04:07:07 - [TEST_STEP][PASSED] - a = replaceAll("\s+", "").toDouble(): null

10-01-2025T04:07:07 - [TEST_STEP][PASSED] - b = replaceAll("\s+", "").toDouble(): null

10-01-2025T04:07:07 - [TEST_STEP][PASSED] - Script1710234207206.WriteToExcel(todaysDate, run, vir, block, typeOfData, viruchka, vidget, nameOfBlock, a, b, dZO): null

10-01-2025T04:07:07 - [TEST_STEP][PASSED] - println(run): null

10-01-2025T04:07:07 - [TEST_STEP][PASSED] - if (run == 1): null

10-01-2025T04:07:07 - [TEST_STEP][PASSED] - else if (run == 2): null

10-01-2025T04:07:07 - [TEST_STEP][PASSED] - typeOfData = "Проценты": null

10-01-2025T04:07:07 - [TEST_STEP][PASSED] - println("todaysDate:" + todaysDate): null

10-01-2025T04:07:07 - [TEST_STEP][PASSED] - println("typeOfData:" + typeOfData): null

10-01-2025T04:07:07 - [TEST_STEP][PASSED] - viruchka = getText(findTestObject("Выручка в рублях/Фильтр Выручка" + nameOfBlock)): Text of object 'Object Repository/Выручка в рублях/Фильтр Выручка Выручка' is: 'Все'

10-01-2025T04:07:07 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выручка в рублях/Фильтр Выручка Выручка' is: 'Все'

10-01-2025T04:07:07 - [TEST_STEP][PASSED] - println("viruchka" + viruchka): null

10-01-2025T04:07:07 - [TEST_STEP][PASSED] - println("vidget" + vidget): null

10-01-2025T04:07:07 - [TEST_STEP][PASSED] - println("a" + a): null

10-01-2025T04:07:07 - [TEST_STEP][PASSED] - println("b" + b): null

10-01-2025T04:07:07 - [TEST_STEP][PASSED] - sheetName = "Sheet1": null

10-01-2025T04:07:07 - [TEST_STEP][PASSED] - data = findTestData("PlanFact"): null

10-01-2025T04:07:07 - [TEST_STEP][PASSED] - n = data.getRowNumbers() + 1: null

10-01-2025T04:07:07 - [TEST_STEP][PASSED] - period = getText(findTestObject("Выручка в рублях/Фильтр Период")): Text of object 'Object Repository/Выручка в рублях/Фильтр Период' is: 'Октябрь, Ноябрь и 1, 2, 3 кв. 2024 года'

10-01-2025T04:07:08 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выручка в рублях/Фильтр Период' is: 'Октябрь, Ноябрь и 1, 2, 3 кв. 2024 года'

10-01-2025T04:07:08 - [TEST_STEP][PASSED] - println(period): null

10-01-2025T04:07:08 - [TEST_STEP][PASSED] - dashboardName = "Выручка в рублях": null

10-01-2025T04:07:08 - [TEST_STEP][PASSED] - workbook01 = getWorkbook(excelFilePath): null

10-01-2025T04:07:08 - [TEST_STEP][PASSED] - sheet01 = getExcelSheet(workbook01, sheetName): null

10-01-2025T04:07:08 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 0, dashboardName): null

10-01-2025T04:07:08 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 1, dZO): null

10-01-2025T04:07:08 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 2, vidget): null

10-01-2025T04:07:08 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 3, viruchka): null

10-01-2025T04:07:08 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 4, typeOfData): null

10-01-2025T04:07:08 - [TEST_STEP][PASSED] - if (a == null): null

10-01-2025T04:07:08 - [TEST_STEP][PASSED] - else: null

10-01-2025T04:07:08 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 5, a): null

10-01-2025T04:07:08 - [TEST_STEP][PASSED] - if (b == null): null

10-01-2025T04:07:08 - [TEST_STEP][PASSED] - else: null

10-01-2025T04:07:08 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 6, b): null

10-01-2025T04:07:08 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 7, period): null

10-01-2025T04:07:08 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 8, todaysDate): null

10-01-2025T04:07:08 - [TEST_STEP][PASSED] - n = n + 1: null

10-01-2025T04:07:08 - [TEST_STEP][PASSED] - saveWorkbook(excelFilePath, workbook01): null

10-01-2025T04:07:08 - [TEST_STEP][PASSED] - dZO = "Россети Кубань": null

10-01-2025T04:07:08 - [TEST_STEP][FAILED] - if (verifyEqual(a34, b34) == false): null

10-01-2025T04:07:08 - [MESSAGE][FAILED] - Unable to verify equal between actual object '-91.02' and expected object '-90.21' (Root cause: com.kms.katalon.core.exception.StepFailedException: Actual object '-91.02' and expected object '-90.21' are not equal
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.doCall(VerifyEqualKeyword.groovy:58)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.call(VerifyEqualKeyword.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:75)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.verifyEqual(VerifyEqualKeyword.groovy:63)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.execute(VerifyEqualKeyword.groovy:44)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:74)
	at com.kms.katalon.core.keyword.BuiltinKeywords.verifyEqual(BuiltinKeywords.groovy:146)
	at jdk.internal.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at Выручка в рублях сверка дашбордов ПАО Россети.Blocks(Выручка в рублях сверка дашбордов ПАО Россети:397)
	at Выручка в рублях сверка дашбордов ПАО Россети.ViruchkaChange(Выручка в рублях сверка дашбордов ПАО Россети:60)
	at Выручка в рублях сверка дашбордов ПАО Россети.run(Выручка в рублях сверка дашбордов ПАО Россети:55)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:448)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:439)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:418)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:410)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:285)
	at com.kms.katalon.core.common.CommonExecutor.accessTestCaseMainPhase(CommonExecutor.java:65)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:150)
	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:106)
	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:180)
	at TempTestSuite1736466949911.run(TempTestSuite1736466949911.groovy:35)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
)

10-01-2025T04:07:08 - [TEST_STEP][PASSED] - a = replaceAll("\s+", "").toDouble(): null

10-01-2025T04:07:08 - [TEST_STEP][PASSED] - b = replaceAll("\s+", "").toDouble(): null

10-01-2025T04:07:08 - [TEST_STEP][PASSED] - Script1710234207206.WriteToExcel(todaysDate, run, vir, block, typeOfData, viruchka, vidget, nameOfBlock, a, b, dZO): null

10-01-2025T04:07:08 - [TEST_STEP][PASSED] - println(run): null

10-01-2025T04:07:08 - [TEST_STEP][PASSED] - if (run == 1): null

10-01-2025T04:07:08 - [TEST_STEP][PASSED] - else if (run == 2): null

10-01-2025T04:07:08 - [TEST_STEP][PASSED] - typeOfData = "Проценты": null

10-01-2025T04:07:08 - [TEST_STEP][PASSED] - println("todaysDate:" + todaysDate): null

10-01-2025T04:07:08 - [TEST_STEP][PASSED] - println("typeOfData:" + typeOfData): null

10-01-2025T04:07:08 - [TEST_STEP][PASSED] - viruchka = getText(findTestObject("Выручка в рублях/Фильтр Выручка" + nameOfBlock)): Text of object 'Object Repository/Выручка в рублях/Фильтр Выручка Выручка' is: 'Все'

10-01-2025T04:07:08 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выручка в рублях/Фильтр Выручка Выручка' is: 'Все'

10-01-2025T04:07:08 - [TEST_STEP][PASSED] - println("viruchka" + viruchka): null

10-01-2025T04:07:08 - [TEST_STEP][PASSED] - println("vidget" + vidget): null

10-01-2025T04:07:08 - [TEST_STEP][PASSED] - println("a" + a): null

10-01-2025T04:07:08 - [TEST_STEP][PASSED] - println("b" + b): null

10-01-2025T04:07:08 - [TEST_STEP][PASSED] - sheetName = "Sheet1": null

10-01-2025T04:07:08 - [TEST_STEP][PASSED] - data = findTestData("PlanFact"): null

10-01-2025T04:07:08 - [TEST_STEP][PASSED] - n = data.getRowNumbers() + 1: null

10-01-2025T04:07:08 - [TEST_STEP][PASSED] - period = getText(findTestObject("Выручка в рублях/Фильтр Период")): Text of object 'Object Repository/Выручка в рублях/Фильтр Период' is: 'Октябрь, Ноябрь и 1, 2, 3 кв. 2024 года'

10-01-2025T04:07:09 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выручка в рублях/Фильтр Период' is: 'Октябрь, Ноябрь и 1, 2, 3 кв. 2024 года'

10-01-2025T04:07:09 - [TEST_STEP][PASSED] - println(period): null

10-01-2025T04:07:09 - [TEST_STEP][PASSED] - dashboardName = "Выручка в рублях": null

10-01-2025T04:07:09 - [TEST_STEP][PASSED] - workbook01 = getWorkbook(excelFilePath): null

10-01-2025T04:07:09 - [TEST_STEP][PASSED] - sheet01 = getExcelSheet(workbook01, sheetName): null

10-01-2025T04:07:09 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 0, dashboardName): null

10-01-2025T04:07:09 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 1, dZO): null

10-01-2025T04:07:09 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 2, vidget): null

10-01-2025T04:07:09 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 3, viruchka): null

10-01-2025T04:07:09 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 4, typeOfData): null

10-01-2025T04:07:09 - [TEST_STEP][PASSED] - if (a == null): null

10-01-2025T04:07:09 - [TEST_STEP][PASSED] - else: null

10-01-2025T04:07:09 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 5, a): null

10-01-2025T04:07:09 - [TEST_STEP][PASSED] - if (b == null): null

10-01-2025T04:07:09 - [TEST_STEP][PASSED] - else: null

10-01-2025T04:07:09 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 6, b): null

10-01-2025T04:07:09 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 7, period): null

10-01-2025T04:07:09 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 8, todaysDate): null

10-01-2025T04:07:09 - [TEST_STEP][PASSED] - n = n + 1: null

10-01-2025T04:07:09 - [TEST_STEP][PASSED] - saveWorkbook(excelFilePath, workbook01): null

10-01-2025T04:07:09 - [TEST_STEP][PASSED] - dZO = "Россети Ленэнерго (ГК)": null

10-01-2025T04:07:09 - [TEST_STEP][FAILED] - if (verifyEqual(a35, b35) == false): null

10-01-2025T04:07:09 - [MESSAGE][FAILED] - Unable to verify equal between actual object '-90.02' and expected object '-88.99' (Root cause: com.kms.katalon.core.exception.StepFailedException: Actual object '-90.02' and expected object '-88.99' are not equal
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.doCall(VerifyEqualKeyword.groovy:58)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.call(VerifyEqualKeyword.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:75)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.verifyEqual(VerifyEqualKeyword.groovy:63)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.execute(VerifyEqualKeyword.groovy:44)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:74)
	at com.kms.katalon.core.keyword.BuiltinKeywords.verifyEqual(BuiltinKeywords.groovy:146)
	at jdk.internal.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at Выручка в рублях сверка дашбордов ПАО Россети.Blocks(Выручка в рублях сверка дашбордов ПАО Россети:407)
	at Выручка в рублях сверка дашбордов ПАО Россети.ViruchkaChange(Выручка в рублях сверка дашбордов ПАО Россети:60)
	at Выручка в рублях сверка дашбордов ПАО Россети.run(Выручка в рублях сверка дашбордов ПАО Россети:55)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:448)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:439)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:418)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:410)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:285)
	at com.kms.katalon.core.common.CommonExecutor.accessTestCaseMainPhase(CommonExecutor.java:65)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:150)
	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:106)
	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:180)
	at TempTestSuite1736466949911.run(TempTestSuite1736466949911.groovy:35)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
)

10-01-2025T04:07:09 - [TEST_STEP][PASSED] - a = replaceAll("\s+", "").toDouble(): null

10-01-2025T04:07:09 - [TEST_STEP][PASSED] - b = replaceAll("\s+", "").toDouble(): null

10-01-2025T04:07:09 - [TEST_STEP][PASSED] - Script1710234207206.WriteToExcel(todaysDate, run, vir, block, typeOfData, viruchka, vidget, nameOfBlock, a, b, dZO): null

10-01-2025T04:07:09 - [TEST_STEP][PASSED] - println(run): null

10-01-2025T04:07:09 - [TEST_STEP][PASSED] - if (run == 1): null

10-01-2025T04:07:09 - [TEST_STEP][PASSED] - else if (run == 2): null

10-01-2025T04:07:09 - [TEST_STEP][PASSED] - typeOfData = "Проценты": null

10-01-2025T04:07:09 - [TEST_STEP][PASSED] - println("todaysDate:" + todaysDate): null

10-01-2025T04:07:09 - [TEST_STEP][PASSED] - println("typeOfData:" + typeOfData): null

10-01-2025T04:07:09 - [TEST_STEP][PASSED] - viruchka = getText(findTestObject("Выручка в рублях/Фильтр Выручка" + nameOfBlock)): Text of object 'Object Repository/Выручка в рублях/Фильтр Выручка Выручка' is: 'Все'

10-01-2025T04:07:09 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выручка в рублях/Фильтр Выручка Выручка' is: 'Все'

10-01-2025T04:07:09 - [TEST_STEP][PASSED] - println("viruchka" + viruchka): null

10-01-2025T04:07:09 - [TEST_STEP][PASSED] - println("vidget" + vidget): null

10-01-2025T04:07:09 - [TEST_STEP][PASSED] - println("a" + a): null

10-01-2025T04:07:09 - [TEST_STEP][PASSED] - println("b" + b): null

10-01-2025T04:07:09 - [TEST_STEP][PASSED] - sheetName = "Sheet1": null

10-01-2025T04:07:09 - [TEST_STEP][PASSED] - data = findTestData("PlanFact"): null

10-01-2025T04:07:09 - [TEST_STEP][PASSED] - n = data.getRowNumbers() + 1: null

10-01-2025T04:07:09 - [TEST_STEP][PASSED] - period = getText(findTestObject("Выручка в рублях/Фильтр Период")): Text of object 'Object Repository/Выручка в рублях/Фильтр Период' is: 'Октябрь, Ноябрь и 1, 2, 3 кв. 2024 года'

10-01-2025T04:07:09 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выручка в рублях/Фильтр Период' is: 'Октябрь, Ноябрь и 1, 2, 3 кв. 2024 года'

10-01-2025T04:07:09 - [TEST_STEP][PASSED] - println(period): null

10-01-2025T04:07:09 - [TEST_STEP][PASSED] - dashboardName = "Выручка в рублях": null

10-01-2025T04:07:09 - [TEST_STEP][PASSED] - workbook01 = getWorkbook(excelFilePath): null

10-01-2025T04:07:10 - [TEST_STEP][PASSED] - sheet01 = getExcelSheet(workbook01, sheetName): null

10-01-2025T04:07:10 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 0, dashboardName): null

10-01-2025T04:07:10 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 1, dZO): null

10-01-2025T04:07:10 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 2, vidget): null

10-01-2025T04:07:10 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 3, viruchka): null

10-01-2025T04:07:10 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 4, typeOfData): null

10-01-2025T04:07:10 - [TEST_STEP][PASSED] - if (a == null): null

10-01-2025T04:07:10 - [TEST_STEP][PASSED] - else: null

10-01-2025T04:07:10 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 5, a): null

10-01-2025T04:07:10 - [TEST_STEP][PASSED] - if (b == null): null

10-01-2025T04:07:10 - [TEST_STEP][PASSED] - else: null

10-01-2025T04:07:10 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 6, b): null

10-01-2025T04:07:10 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 7, period): null

10-01-2025T04:07:10 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 8, todaysDate): null

10-01-2025T04:07:10 - [TEST_STEP][PASSED] - n = n + 1: null

10-01-2025T04:07:10 - [TEST_STEP][PASSED] - saveWorkbook(excelFilePath, workbook01): null

10-01-2025T04:07:10 - [TEST_STEP][PASSED] - dZO = "Россети Московский регион": null

10-01-2025T04:07:10 - [TEST_STEP][PASSED] - if (verifyEqual(a36, b36) == false): Actual object '-100' and expected object '-100' are equal

10-01-2025T04:07:10 - [MESSAGE][PASSED] - Actual object '-100' and expected object '-100' are equal

10-01-2025T04:07:10 - [TEST_STEP][PASSED] - dZO = "Россети Северный Кавказ (ГК)": null

10-01-2025T04:07:10 - [TEST_STEP][FAILED] - if (verifyEqual(a37, b37) == false): null

10-01-2025T04:07:10 - [MESSAGE][FAILED] - Unable to verify equal between actual object '-90.67' and expected object '-89.72' (Root cause: com.kms.katalon.core.exception.StepFailedException: Actual object '-90.67' and expected object '-89.72' are not equal
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.doCall(VerifyEqualKeyword.groovy:58)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.call(VerifyEqualKeyword.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:75)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.verifyEqual(VerifyEqualKeyword.groovy:63)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.execute(VerifyEqualKeyword.groovy:44)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:74)
	at com.kms.katalon.core.keyword.BuiltinKeywords.verifyEqual(BuiltinKeywords.groovy:146)
	at jdk.internal.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at Выручка в рублях сверка дашбордов ПАО Россети.Blocks(Выручка в рублях сверка дашбордов ПАО Россети:427)
	at Выручка в рублях сверка дашбордов ПАО Россети.ViruchkaChange(Выручка в рублях сверка дашбордов ПАО Россети:60)
	at Выручка в рублях сверка дашбордов ПАО Россети.run(Выручка в рублях сверка дашбордов ПАО Россети:55)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:448)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:439)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:418)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:410)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:285)
	at com.kms.katalon.core.common.CommonExecutor.accessTestCaseMainPhase(CommonExecutor.java:65)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:150)
	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:106)
	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:180)
	at TempTestSuite1736466949911.run(TempTestSuite1736466949911.groovy:35)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
)

10-01-2025T04:07:10 - [TEST_STEP][PASSED] - a = replaceAll("\s+", "").toDouble(): null

10-01-2025T04:07:10 - [TEST_STEP][PASSED] - b = replaceAll("\s+", "").toDouble(): null

10-01-2025T04:07:10 - [TEST_STEP][PASSED] - Script1710234207206.WriteToExcel(todaysDate, run, vir, block, typeOfData, viruchka, vidget, nameOfBlock, a, b, dZO): null

10-01-2025T04:07:10 - [TEST_STEP][PASSED] - println(run): null

10-01-2025T04:07:10 - [TEST_STEP][PASSED] - if (run == 1): null

10-01-2025T04:07:10 - [TEST_STEP][PASSED] - else if (run == 2): null

10-01-2025T04:07:10 - [TEST_STEP][PASSED] - typeOfData = "Проценты": null

10-01-2025T04:07:10 - [TEST_STEP][PASSED] - println("todaysDate:" + todaysDate): null

10-01-2025T04:07:10 - [TEST_STEP][PASSED] - println("typeOfData:" + typeOfData): null

10-01-2025T04:07:10 - [TEST_STEP][PASSED] - viruchka = getText(findTestObject("Выручка в рублях/Фильтр Выручка" + nameOfBlock)): Text of object 'Object Repository/Выручка в рублях/Фильтр Выручка Выручка' is: 'Все'

10-01-2025T04:07:10 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выручка в рублях/Фильтр Выручка Выручка' is: 'Все'

10-01-2025T04:07:10 - [TEST_STEP][PASSED] - println("viruchka" + viruchka): null

10-01-2025T04:07:10 - [TEST_STEP][PASSED] - println("vidget" + vidget): null

10-01-2025T04:07:10 - [TEST_STEP][PASSED] - println("a" + a): null

10-01-2025T04:07:10 - [TEST_STEP][PASSED] - println("b" + b): null

10-01-2025T04:07:10 - [TEST_STEP][PASSED] - sheetName = "Sheet1": null

10-01-2025T04:07:10 - [TEST_STEP][PASSED] - data = findTestData("PlanFact"): null

10-01-2025T04:07:10 - [TEST_STEP][PASSED] - n = data.getRowNumbers() + 1: null

10-01-2025T04:07:10 - [TEST_STEP][PASSED] - period = getText(findTestObject("Выручка в рублях/Фильтр Период")): Text of object 'Object Repository/Выручка в рублях/Фильтр Период' is: 'Октябрь, Ноябрь и 1, 2, 3 кв. 2024 года'

10-01-2025T04:07:10 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выручка в рублях/Фильтр Период' is: 'Октябрь, Ноябрь и 1, 2, 3 кв. 2024 года'

10-01-2025T04:07:10 - [TEST_STEP][PASSED] - println(period): null

10-01-2025T04:07:10 - [TEST_STEP][PASSED] - dashboardName = "Выручка в рублях": null

10-01-2025T04:07:10 - [TEST_STEP][PASSED] - workbook01 = getWorkbook(excelFilePath): null

10-01-2025T04:07:10 - [TEST_STEP][PASSED] - sheet01 = getExcelSheet(workbook01, sheetName): null

10-01-2025T04:07:10 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 0, dashboardName): null

10-01-2025T04:07:10 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 1, dZO): null

10-01-2025T04:07:10 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 2, vidget): null

10-01-2025T04:07:10 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 3, viruchka): null

10-01-2025T04:07:10 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 4, typeOfData): null

10-01-2025T04:07:10 - [TEST_STEP][PASSED] - if (a == null): null

10-01-2025T04:07:10 - [TEST_STEP][PASSED] - else: null

10-01-2025T04:07:10 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 5, a): null

10-01-2025T04:07:10 - [TEST_STEP][PASSED] - if (b == null): null

10-01-2025T04:07:10 - [TEST_STEP][PASSED] - else: null

10-01-2025T04:07:10 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 6, b): null

10-01-2025T04:07:10 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 7, period): null

10-01-2025T04:07:10 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 8, todaysDate): null

10-01-2025T04:07:10 - [TEST_STEP][PASSED] - n = n + 1: null

10-01-2025T04:07:10 - [TEST_STEP][PASSED] - saveWorkbook(excelFilePath, workbook01): null

10-01-2025T04:07:11 - [TEST_STEP][PASSED] - dZO = "Россети Северо-Запад": null

10-01-2025T04:07:11 - [TEST_STEP][PASSED] - if (verifyEqual(a38, b38) == false): Actual object '-89.48' and expected object '-89.48' are equal

10-01-2025T04:07:11 - [MESSAGE][PASSED] - Actual object '-89.48' and expected object '-89.48' are equal

10-01-2025T04:07:11 - [TEST_STEP][PASSED] - dZO = "Россети Сибирь (ГК)": null

10-01-2025T04:07:11 - [TEST_STEP][PASSED] - if (verifyEqual(a39, b39) == false): Actual object '-100' and expected object '-100' are equal

10-01-2025T04:07:11 - [MESSAGE][PASSED] - Actual object '-100' and expected object '-100' are equal

10-01-2025T04:07:11 - [TEST_STEP][PASSED] - dZO = "Россети Томск": null

10-01-2025T04:07:11 - [TEST_STEP][FAILED] - if (verifyEqual(a310, b310) == false): null

10-01-2025T04:07:11 - [MESSAGE][FAILED] - Unable to verify equal between actual object '-90.63' and expected object '-89.66' (Root cause: com.kms.katalon.core.exception.StepFailedException: Actual object '-90.63' and expected object '-89.66' are not equal
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.doCall(VerifyEqualKeyword.groovy:58)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.call(VerifyEqualKeyword.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:75)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.verifyEqual(VerifyEqualKeyword.groovy:63)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.execute(VerifyEqualKeyword.groovy:44)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:74)
	at com.kms.katalon.core.keyword.BuiltinKeywords.verifyEqual(BuiltinKeywords.groovy:146)
	at jdk.internal.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at Выручка в рублях сверка дашбордов ПАО Россети.Blocks(Выручка в рублях сверка дашбордов ПАО Россети:457)
	at Выручка в рублях сверка дашбордов ПАО Россети.ViruchkaChange(Выручка в рублях сверка дашбордов ПАО Россети:60)
	at Выручка в рублях сверка дашбордов ПАО Россети.run(Выручка в рублях сверка дашбордов ПАО Россети:55)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:448)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:439)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:418)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:410)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:285)
	at com.kms.katalon.core.common.CommonExecutor.accessTestCaseMainPhase(CommonExecutor.java:65)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:150)
	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:106)
	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:180)
	at TempTestSuite1736466949911.run(TempTestSuite1736466949911.groovy:35)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
)

10-01-2025T04:07:11 - [TEST_STEP][PASSED] - a = replaceAll("\s+", "").toDouble(): null

10-01-2025T04:07:11 - [TEST_STEP][PASSED] - b = replaceAll("\s+", "").toDouble(): null

10-01-2025T04:07:11 - [TEST_STEP][PASSED] - Script1710234207206.WriteToExcel(todaysDate, run, vir, block, typeOfData, viruchka, vidget, nameOfBlock, a, b, dZO): null

10-01-2025T04:07:11 - [TEST_STEP][PASSED] - println(run): null

10-01-2025T04:07:11 - [TEST_STEP][PASSED] - if (run == 1): null

10-01-2025T04:07:11 - [TEST_STEP][PASSED] - else if (run == 2): null

10-01-2025T04:07:11 - [TEST_STEP][PASSED] - typeOfData = "Проценты": null

10-01-2025T04:07:11 - [TEST_STEP][PASSED] - println("todaysDate:" + todaysDate): null

10-01-2025T04:07:11 - [TEST_STEP][PASSED] - println("typeOfData:" + typeOfData): null

10-01-2025T04:07:11 - [TEST_STEP][PASSED] - viruchka = getText(findTestObject("Выручка в рублях/Фильтр Выручка" + nameOfBlock)): Text of object 'Object Repository/Выручка в рублях/Фильтр Выручка Выручка' is: 'Все'

10-01-2025T04:07:11 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выручка в рублях/Фильтр Выручка Выручка' is: 'Все'

10-01-2025T04:07:11 - [TEST_STEP][PASSED] - println("viruchka" + viruchka): null

10-01-2025T04:07:11 - [TEST_STEP][PASSED] - println("vidget" + vidget): null

10-01-2025T04:07:11 - [TEST_STEP][PASSED] - println("a" + a): null

10-01-2025T04:07:11 - [TEST_STEP][PASSED] - println("b" + b): null

10-01-2025T04:07:11 - [TEST_STEP][PASSED] - sheetName = "Sheet1": null

10-01-2025T04:07:11 - [TEST_STEP][PASSED] - data = findTestData("PlanFact"): null

10-01-2025T04:07:11 - [TEST_STEP][PASSED] - n = data.getRowNumbers() + 1: null

10-01-2025T04:07:11 - [TEST_STEP][PASSED] - period = getText(findTestObject("Выручка в рублях/Фильтр Период")): Text of object 'Object Repository/Выручка в рублях/Фильтр Период' is: 'Октябрь, Ноябрь и 1, 2, 3 кв. 2024 года'

10-01-2025T04:07:11 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выручка в рублях/Фильтр Период' is: 'Октябрь, Ноябрь и 1, 2, 3 кв. 2024 года'

10-01-2025T04:07:11 - [TEST_STEP][PASSED] - println(period): null

10-01-2025T04:07:11 - [TEST_STEP][PASSED] - dashboardName = "Выручка в рублях": null

10-01-2025T04:07:11 - [TEST_STEP][PASSED] - workbook01 = getWorkbook(excelFilePath): null

10-01-2025T04:07:11 - [TEST_STEP][PASSED] - sheet01 = getExcelSheet(workbook01, sheetName): null

10-01-2025T04:07:11 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 0, dashboardName): null

10-01-2025T04:07:11 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 1, dZO): null

10-01-2025T04:07:11 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 2, vidget): null

10-01-2025T04:07:11 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 3, viruchka): null

10-01-2025T04:07:11 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 4, typeOfData): null

10-01-2025T04:07:11 - [TEST_STEP][PASSED] - if (a == null): null

10-01-2025T04:07:11 - [TEST_STEP][PASSED] - else: null

10-01-2025T04:07:11 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 5, a): null

10-01-2025T04:07:11 - [TEST_STEP][PASSED] - if (b == null): null

10-01-2025T04:07:11 - [TEST_STEP][PASSED] - else: null

10-01-2025T04:07:11 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 6, b): null

10-01-2025T04:07:11 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 7, period): null

10-01-2025T04:07:11 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 8, todaysDate): null

10-01-2025T04:07:11 - [TEST_STEP][PASSED] - n = n + 1: null

10-01-2025T04:07:11 - [TEST_STEP][PASSED] - saveWorkbook(excelFilePath, workbook01): null

10-01-2025T04:07:12 - [TEST_STEP][PASSED] - dZO = "Россети Тюмень": null

10-01-2025T04:07:12 - [TEST_STEP][FAILED] - if (verifyEqual(a311, b311) == false): null

10-01-2025T04:07:12 - [MESSAGE][FAILED] - Unable to verify equal between actual object '-92.22' and expected object '-91.46' (Root cause: com.kms.katalon.core.exception.StepFailedException: Actual object '-92.22' and expected object '-91.46' are not equal
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.doCall(VerifyEqualKeyword.groovy:58)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.call(VerifyEqualKeyword.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:75)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.verifyEqual(VerifyEqualKeyword.groovy:63)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.execute(VerifyEqualKeyword.groovy:44)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:74)
	at com.kms.katalon.core.keyword.BuiltinKeywords.verifyEqual(BuiltinKeywords.groovy:146)
	at jdk.internal.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at Выручка в рублях сверка дашбордов ПАО Россети.Blocks(Выручка в рублях сверка дашбордов ПАО Россети:467)
	at Выручка в рублях сверка дашбордов ПАО Россети.ViruchkaChange(Выручка в рублях сверка дашбордов ПАО Россети:60)
	at Выручка в рублях сверка дашбордов ПАО Россети.run(Выручка в рублях сверка дашбордов ПАО Россети:55)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:448)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:439)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:418)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:410)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:285)
	at com.kms.katalon.core.common.CommonExecutor.accessTestCaseMainPhase(CommonExecutor.java:65)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:150)
	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:106)
	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:180)
	at TempTestSuite1736466949911.run(TempTestSuite1736466949911.groovy:35)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
)

10-01-2025T04:07:12 - [TEST_STEP][PASSED] - a = replaceAll("\s+", "").toDouble(): null

10-01-2025T04:07:12 - [TEST_STEP][PASSED] - b = replaceAll("\s+", "").toDouble(): null

10-01-2025T04:07:12 - [TEST_STEP][PASSED] - Script1710234207206.WriteToExcel(todaysDate, run, vir, block, typeOfData, viruchka, vidget, nameOfBlock, a, b, dZO): null

10-01-2025T04:07:12 - [TEST_STEP][PASSED] - println(run): null

10-01-2025T04:07:12 - [TEST_STEP][PASSED] - if (run == 1): null

10-01-2025T04:07:12 - [TEST_STEP][PASSED] - else if (run == 2): null

10-01-2025T04:07:12 - [TEST_STEP][PASSED] - typeOfData = "Проценты": null

10-01-2025T04:07:12 - [TEST_STEP][PASSED] - println("todaysDate:" + todaysDate): null

10-01-2025T04:07:12 - [TEST_STEP][PASSED] - println("typeOfData:" + typeOfData): null

10-01-2025T04:07:12 - [TEST_STEP][PASSED] - viruchka = getText(findTestObject("Выручка в рублях/Фильтр Выручка" + nameOfBlock)): Text of object 'Object Repository/Выручка в рублях/Фильтр Выручка Выручка' is: 'Все'

10-01-2025T04:07:12 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выручка в рублях/Фильтр Выручка Выручка' is: 'Все'

10-01-2025T04:07:12 - [TEST_STEP][PASSED] - println("viruchka" + viruchka): null

10-01-2025T04:07:12 - [TEST_STEP][PASSED] - println("vidget" + vidget): null

10-01-2025T04:07:12 - [TEST_STEP][PASSED] - println("a" + a): null

10-01-2025T04:07:12 - [TEST_STEP][PASSED] - println("b" + b): null

10-01-2025T04:07:12 - [TEST_STEP][PASSED] - sheetName = "Sheet1": null

10-01-2025T04:07:12 - [TEST_STEP][PASSED] - data = findTestData("PlanFact"): null

10-01-2025T04:07:12 - [TEST_STEP][PASSED] - n = data.getRowNumbers() + 1: null

10-01-2025T04:07:12 - [TEST_STEP][PASSED] - period = getText(findTestObject("Выручка в рублях/Фильтр Период")): Text of object 'Object Repository/Выручка в рублях/Фильтр Период' is: 'Октябрь, Ноябрь и 1, 2, 3 кв. 2024 года'

10-01-2025T04:07:12 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выручка в рублях/Фильтр Период' is: 'Октябрь, Ноябрь и 1, 2, 3 кв. 2024 года'

10-01-2025T04:07:12 - [TEST_STEP][PASSED] - println(period): null

10-01-2025T04:07:12 - [TEST_STEP][PASSED] - dashboardName = "Выручка в рублях": null

10-01-2025T04:07:12 - [TEST_STEP][PASSED] - workbook01 = getWorkbook(excelFilePath): null

10-01-2025T04:07:12 - [TEST_STEP][PASSED] - sheet01 = getExcelSheet(workbook01, sheetName): null

10-01-2025T04:07:12 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 0, dashboardName): null

10-01-2025T04:07:12 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 1, dZO): null

10-01-2025T04:07:12 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 2, vidget): null

10-01-2025T04:07:12 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 3, viruchka): null

10-01-2025T04:07:12 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 4, typeOfData): null

10-01-2025T04:07:12 - [TEST_STEP][PASSED] - if (a == null): null

10-01-2025T04:07:12 - [TEST_STEP][PASSED] - else: null

10-01-2025T04:07:12 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 5, a): null

10-01-2025T04:07:12 - [TEST_STEP][PASSED] - if (b == null): null

10-01-2025T04:07:12 - [TEST_STEP][PASSED] - else: null

10-01-2025T04:07:12 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 6, b): null

10-01-2025T04:07:12 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 7, period): null

10-01-2025T04:07:12 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 8, todaysDate): null

10-01-2025T04:07:12 - [TEST_STEP][PASSED] - n = n + 1: null

10-01-2025T04:07:12 - [TEST_STEP][PASSED] - saveWorkbook(excelFilePath, workbook01): null

10-01-2025T04:07:13 - [TEST_STEP][PASSED] - dZO = "Россети Урал (ГК)": null

10-01-2025T04:07:13 - [TEST_STEP][PASSED] - if (verifyEqual(a312, b312) == false): Actual object '-89.69' and expected object '-89.69' are equal

10-01-2025T04:07:13 - [MESSAGE][PASSED] - Actual object '-89.69' and expected object '-89.69' are equal

10-01-2025T04:07:13 - [TEST_STEP][PASSED] - dZO = "Россети ФСК ЕЭС": null

10-01-2025T04:07:13 - [TEST_STEP][PASSED] - if (verifyEqual(a313, b313) == false): Actual object '-100' and expected object '-100' are equal

10-01-2025T04:07:13 - [MESSAGE][PASSED] - Actual object '-100' and expected object '-100' are equal

10-01-2025T04:07:13 - [TEST_STEP][PASSED] - dZO = "Россети Центр": null

10-01-2025T04:07:13 - [TEST_STEP][PASSED] - if (verifyEqual(a314, b314) == false): Actual object '-100' and expected object '-100' are equal

10-01-2025T04:07:13 - [MESSAGE][PASSED] - Actual object '-100' and expected object '-100' are equal

10-01-2025T04:07:13 - [TEST_STEP][PASSED] - dZO = "Россети Центр и Приволжье (ГК)": null

10-01-2025T04:07:13 - [TEST_STEP][PASSED] - if (verifyEqual(a315, b315) == false): Actual object '-93.32' and expected object '-93.32' are equal

10-01-2025T04:07:13 - [MESSAGE][PASSED] - Actual object '-93.32' and expected object '-93.32' are equal

10-01-2025T04:07:13 - [TEST_STEP][PASSED] - dZO = "Россети Юг (ГК)": null

10-01-2025T04:07:13 - [TEST_STEP][FAILED] - if (verifyEqual(a316, b316) == false): null

10-01-2025T04:07:13 - [MESSAGE][FAILED] - Unable to verify equal between actual object '-91.1' and expected object '-90.23' (Root cause: com.kms.katalon.core.exception.StepFailedException: Actual object '-91.1' and expected object '-90.23' are not equal
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.doCall(VerifyEqualKeyword.groovy:58)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.call(VerifyEqualKeyword.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:75)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.verifyEqual(VerifyEqualKeyword.groovy:63)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.execute(VerifyEqualKeyword.groovy:44)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:74)
	at com.kms.katalon.core.keyword.BuiltinKeywords.verifyEqual(BuiltinKeywords.groovy:146)
	at jdk.internal.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at Выручка в рублях сверка дашбордов ПАО Россети.Blocks(Выручка в рублях сверка дашбордов ПАО Россети:517)
	at Выручка в рублях сверка дашбордов ПАО Россети.ViruchkaChange(Выручка в рублях сверка дашбордов ПАО Россети:60)
	at Выручка в рублях сверка дашбордов ПАО Россети.run(Выручка в рублях сверка дашбордов ПАО Россети:55)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:448)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:439)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:418)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:410)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:285)
	at com.kms.katalon.core.common.CommonExecutor.accessTestCaseMainPhase(CommonExecutor.java:65)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:150)
	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:106)
	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:180)
	at TempTestSuite1736466949911.run(TempTestSuite1736466949911.groovy:35)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
)

10-01-2025T04:07:13 - [TEST_STEP][PASSED] - a = replaceAll("\s+", "").toDouble(): null

10-01-2025T04:07:13 - [TEST_STEP][PASSED] - b = replaceAll("\s+", "").toDouble(): null

10-01-2025T04:07:13 - [TEST_STEP][PASSED] - Script1710234207206.WriteToExcel(todaysDate, run, vir, block, typeOfData, viruchka, vidget, nameOfBlock, a, b, dZO): null

10-01-2025T04:07:13 - [TEST_STEP][PASSED] - println(run): null

10-01-2025T04:07:13 - [TEST_STEP][PASSED] - if (run == 1): null

10-01-2025T04:07:13 - [TEST_STEP][PASSED] - else if (run == 2): null

10-01-2025T04:07:13 - [TEST_STEP][PASSED] - typeOfData = "Проценты": null

10-01-2025T04:07:13 - [TEST_STEP][PASSED] - println("todaysDate:" + todaysDate): null

10-01-2025T04:07:13 - [TEST_STEP][PASSED] - println("typeOfData:" + typeOfData): null

10-01-2025T04:07:13 - [TEST_STEP][PASSED] - viruchka = getText(findTestObject("Выручка в рублях/Фильтр Выручка" + nameOfBlock)): Text of object 'Object Repository/Выручка в рублях/Фильтр Выручка Выручка' is: 'Все'

10-01-2025T04:07:13 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выручка в рублях/Фильтр Выручка Выручка' is: 'Все'

10-01-2025T04:07:13 - [TEST_STEP][PASSED] - println("viruchka" + viruchka): null

10-01-2025T04:07:13 - [TEST_STEP][PASSED] - println("vidget" + vidget): null

10-01-2025T04:07:13 - [TEST_STEP][PASSED] - println("a" + a): null

10-01-2025T04:07:13 - [TEST_STEP][PASSED] - println("b" + b): null

10-01-2025T04:07:13 - [TEST_STEP][PASSED] - sheetName = "Sheet1": null

10-01-2025T04:07:13 - [TEST_STEP][PASSED] - data = findTestData("PlanFact"): null

10-01-2025T04:07:13 - [TEST_STEP][PASSED] - n = data.getRowNumbers() + 1: null

10-01-2025T04:07:13 - [TEST_STEP][PASSED] - period = getText(findTestObject("Выручка в рублях/Фильтр Период")): Text of object 'Object Repository/Выручка в рублях/Фильтр Период' is: 'Октябрь, Ноябрь и 1, 2, 3 кв. 2024 года'

10-01-2025T04:07:13 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выручка в рублях/Фильтр Период' is: 'Октябрь, Ноябрь и 1, 2, 3 кв. 2024 года'

10-01-2025T04:07:13 - [TEST_STEP][PASSED] - println(period): null

10-01-2025T04:07:13 - [TEST_STEP][PASSED] - dashboardName = "Выручка в рублях": null

10-01-2025T04:07:13 - [TEST_STEP][PASSED] - workbook01 = getWorkbook(excelFilePath): null

10-01-2025T04:07:13 - [TEST_STEP][PASSED] - sheet01 = getExcelSheet(workbook01, sheetName): null

10-01-2025T04:07:13 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 0, dashboardName): null

10-01-2025T04:07:13 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 1, dZO): null

10-01-2025T04:07:13 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 2, vidget): null

10-01-2025T04:07:13 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 3, viruchka): null

10-01-2025T04:07:13 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 4, typeOfData): null

10-01-2025T04:07:13 - [TEST_STEP][PASSED] - if (a == null): null

10-01-2025T04:07:13 - [TEST_STEP][PASSED] - else: null

10-01-2025T04:07:13 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 5, a): null

10-01-2025T04:07:13 - [TEST_STEP][PASSED] - if (b == null): null

10-01-2025T04:07:13 - [TEST_STEP][PASSED] - else: null

10-01-2025T04:07:13 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 6, b): null

10-01-2025T04:07:13 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 7, period): null

10-01-2025T04:07:13 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 8, todaysDate): null

10-01-2025T04:07:13 - [TEST_STEP][PASSED] - n = n + 1: null

10-01-2025T04:07:13 - [TEST_STEP][PASSED] - saveWorkbook(excelFilePath, workbook01): null

10-01-2025T04:07:14 - [TEST_STEP][PASSED] - dZO = "Россети Янтарь": null

10-01-2025T04:07:14 - [TEST_STEP][PASSED] - if (verifyEqual(a317, b317) == false): Actual object '-100' and expected object '-100' are equal

10-01-2025T04:07:14 - [MESSAGE][PASSED] - Actual object '-100' and expected object '-100' are equal

10-01-2025T04:07:14 - [TEST_STEP][PASSED] - closeBrowser(): null

10-01-2025T04:07:14 - [MESSAGE][PASSED] - Browser is closed

10-01-2025T04:07:14 - [TEST_STEP][PASSED] - Script1710234207206.Blocks(run, vir, block, nameOfBlock, typeOfData, viruchka, vidget, todaysDate, a, b, dZO, x, y): null

10-01-2025T04:07:14 - [TEST_STEP][PASSED] - i = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:07:14 - [TEST_STEP][PASSED] - perc = "": null

10-01-2025T04:07:14 - [TEST_STEP][PASSED] - a1 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:07:14 - [TEST_STEP][PASSED] - a2 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:07:14 - [TEST_STEP][PASSED] - a30 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:07:14 - [TEST_STEP][PASSED] - a31 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:07:14 - [TEST_STEP][PASSED] - a32 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:07:14 - [TEST_STEP][PASSED] - a33 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:07:14 - [TEST_STEP][PASSED] - a34 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:07:14 - [TEST_STEP][PASSED] - a35 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:07:14 - [TEST_STEP][PASSED] - a36 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:07:14 - [TEST_STEP][PASSED] - a37 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:07:14 - [TEST_STEP][PASSED] - a38 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:07:14 - [TEST_STEP][PASSED] - a39 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:07:14 - [TEST_STEP][PASSED] - a310 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:07:14 - [TEST_STEP][PASSED] - a311 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:07:14 - [TEST_STEP][PASSED] - a312 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:07:14 - [TEST_STEP][PASSED] - a313 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:07:14 - [TEST_STEP][PASSED] - a314 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:07:14 - [TEST_STEP][PASSED] - a315 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:07:14 - [TEST_STEP][PASSED] - a316 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:07:14 - [TEST_STEP][PASSED] - a317 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:07:14 - [TEST_STEP][PASSED] - b1 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:07:14 - [TEST_STEP][PASSED] - b2 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:07:14 - [TEST_STEP][PASSED] - b30 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:07:14 - [TEST_STEP][PASSED] - b31 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:07:14 - [TEST_STEP][PASSED] - b32 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:07:14 - [TEST_STEP][PASSED] - b33 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:07:14 - [TEST_STEP][PASSED] - b34 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:07:14 - [TEST_STEP][PASSED] - b35 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:07:14 - [TEST_STEP][PASSED] - b36 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:07:14 - [TEST_STEP][PASSED] - b37 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:07:14 - [TEST_STEP][PASSED] - b38 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:07:14 - [TEST_STEP][PASSED] - b39 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:07:14 - [TEST_STEP][PASSED] - b310 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:07:14 - [TEST_STEP][PASSED] - b311 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:07:14 - [TEST_STEP][PASSED] - b312 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:07:14 - [TEST_STEP][PASSED] - b313 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:07:14 - [TEST_STEP][PASSED] - b314 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:07:14 - [TEST_STEP][PASSED] - b315 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:07:14 - [TEST_STEP][PASSED] - b316 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:07:14 - [TEST_STEP][PASSED] - b317 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:07:14 - [TEST_STEP][PASSED] - block = 1: null

10-01-2025T04:07:14 - [TEST_STEP][PASSED] - nameOfBlock = "": null

10-01-2025T04:07:14 - [TEST_STEP][PASSED] - Script1710234207206.PreSettings(run, vir, block, nameOfBlock, typeOfData, todaysDate): null

10-01-2025T04:07:14 - [TEST_STEP][PASSED] - openBrowser(""): Browser is opened with url: ''

10-01-2025T04:07:14 - [MESSAGE][INFO] - Starting 'Chrome' driver

10-01-2025T04:07:14 - [MESSAGE][INFO] - Action delay is set to 0 milliseconds

10-01-2025T04:07:15 - [MESSAGE][PASSED] - Browser is opened with url: ''

10-01-2025T04:07:15 - [TEST_STEP][PASSED] - refresh(): Refresh successfully

10-01-2025T04:07:15 - [MESSAGE][PASSED] - Refresh successfully

10-01-2025T04:07:15 - [TEST_STEP][PASSED] - delay(50): Delayed 50 second(s)

10-01-2025T04:08:05 - [MESSAGE][PASSED] - Delayed 50 second(s)

10-01-2025T04:08:05 - [TEST_STEP][PASSED] - println("run:" + run): null

10-01-2025T04:08:05 - [TEST_STEP][PASSED] - println("vir:" + vir): null

10-01-2025T04:08:05 - [TEST_STEP][PASSED] - println("block:" + block): null

10-01-2025T04:08:05 - [TEST_STEP][PASSED] - if (block == 1): null

10-01-2025T04:08:05 - [TEST_STEP][PASSED] - nameOfBlock = "": null

10-01-2025T04:08:05 - [TEST_STEP][PASSED] - println("nameOfBlock:" + nameOfBlock): null

10-01-2025T04:08:05 - [TEST_STEP][PASSED] - println("typeOfData:" + typeOfData): null

10-01-2025T04:08:05 - [TEST_STEP][PASSED] - println("todaysDate:" + todaysDate): null

10-01-2025T04:08:05 - [TEST_STEP][PASSED] - Script1710234207206.Autorization(block, nameOfBlock): null

10-01-2025T04:08:05 - [TEST_STEP][PASSED] - i = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:08:05 - [TEST_STEP][PASSED] - ii = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:08:05 - [TEST_STEP][PASSED] - urlData = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:08:05 - [TEST_STEP][PASSED] - searchWord = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:08:05 - [TEST_STEP][PASSED] - urlText = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:08:05 - [TEST_STEP][PASSED] - println("block:" + block): null

10-01-2025T04:08:05 - [TEST_STEP][PASSED] - if (block == 1): null

10-01-2025T04:08:05 - [TEST_STEP][PASSED] - nameOfBlock = "": null

10-01-2025T04:08:05 - [TEST_STEP][PASSED] - println("nameOfBlock:" + nameOfBlock): null

10-01-2025T04:08:05 - [TEST_STEP][PASSED] - if (block == 1): Delayed 45 second(s)

10-01-2025T04:08:05 - [TEST_STEP][PASSED] - urlData = 2: null

10-01-2025T04:08:05 - [TEST_STEP][PASSED] - delay(45): Delayed 45 second(s)

10-01-2025T04:08:50 - [MESSAGE][PASSED] - Delayed 45 second(s)

10-01-2025T04:08:50 - [TEST_STEP][PASSED] - navigateToUrl(findTestData("PlanFact").getValue(10, urlData)): Navigate to 'https://bi.rosseti.digital/viewer?dashboardGuid=2301950b23be4ed89c1df75f2020051e&sheetGuid=b723206f698544fb87299f3095c00435&fit=true' successfully

10-01-2025T04:08:58 - [MESSAGE][PASSED] - Navigate to 'https://bi.rosseti.digital/viewer?dashboardGuid=2301950b23be4ed89c1df75f2020051e&sheetGuid=b723206f698544fb87299f3095c00435&fit=true' successfully

10-01-2025T04:08:58 - [TEST_STEP][PASSED] - urlText = getText(findTestObject("Страница авторизации/Text")): Text of object 'Object Repository/Страница авторизации/Text' is: 'Вход'

10-01-2025T04:08:59 - [MESSAGE][PASSED] - Text of object 'Object Repository/Страница авторизации/Text' is: 'Вход'

10-01-2025T04:08:59 - [TEST_STEP][PASSED] - searchWord = "Вход": null

10-01-2025T04:08:59 - [TEST_STEP][PASSED] - if (urlText == null || urlText.contains("ошибка") || urlText.contains(searchWord) == false): null

10-01-2025T04:08:59 - [TEST_STEP][PASSED] - if (verifyElementPresent(findTestObject("Страница авторизации/button_"), 30) == true): null

10-01-2025T04:08:59 - [MESSAGE][PASSED] - Object 'Object Repository/Страница авторизации/button_' is present

10-01-2025T04:08:59 - [TEST_STEP][PASSED] - setText(findTestObject("Страница авторизации/input__username"), findTestData("PlanFact").getValue(8, 1)): Text 'liazgina-di' is set on object 'Object Repository/Страница авторизации/input__username'

10-01-2025T04:09:00 - [MESSAGE][PASSED] - Text 'liazgina-di' is set on object 'Object Repository/Страница авторизации/input__username'

10-01-2025T04:09:00 - [TEST_STEP][PASSED] - setText(findTestObject("Страница авторизации/input__password"), findTestData("PlanFact").getValue(9, 1)): Text ')$%5srZ8o688Dm#q' is set on object 'Object Repository/Страница авторизации/input__password'

10-01-2025T04:09:01 - [MESSAGE][PASSED] - Text ')$%5srZ8o688Dm#q' is set on object 'Object Repository/Страница авторизации/input__password'

10-01-2025T04:09:01 - [TEST_STEP][PASSED] - click(findTestObject("Страница авторизации/button_")): Object: 'Object Repository/Страница авторизации/button_' is clicked on

10-01-2025T04:09:02 - [MESSAGE][PASSED] - Object: 'Object Repository/Страница авторизации/button_' is clicked on

10-01-2025T04:09:02 - [TEST_STEP][PASSED] - delay(45): Delayed 45 second(s)

10-01-2025T04:09:47 - [MESSAGE][PASSED] - Delayed 45 second(s)

10-01-2025T04:09:47 - [TEST_STEP][PASSED] - urlText = getText(findTestObject("Страница авторизации/Text")): Text of object 'Object Repository/Страница авторизации/Text' is: 'Период
1, 2, 3 кв., Октябрь, Ноябрь 2024 года
Выручка
Все
Выполнение плановых показателей по ПАО Россети за 1, 2, 3 кв., Октябрь, Ноябрь 2024 года
План
Факт
Динамика
2024 год
0 млн.руб.
100 000 млн.руб.
200 000 млн.руб.
300 000 млн.руб.
400 000 млн.руб.
500 000 млн.руб.
600 000 млн.руб.
700 000 млн.руб.
800 000 млн.руб.
900 000 млн.руб.
1 000 000 млн.руб.
1 100 000 млн.руб.
1 200 000 млн.руб.
1 300 000 млн.руб.
1 400 000 млн.руб.
1 500 000 млн.руб.
1 600 000 млн.руб.
1 311 033
1 316 817
↑
ДЗО 
Все
Внутренний оборот - выручка за услуги по передаче электрической энергии, учтенная в выручке за электроэнергию для конечных потребителей, при выполнении ДЗО функций гарантирующего поставщика
Подписи данных
⬤Отклонение
АО «Тываэнерго»
АО «Чеченэнерго»
Россети Волга
Россети Кубань
Россети Ленэнерго (ГК)
Россети Московский регион
Россети Северный Кавказ (ГК)
Россети Северо-Запад
Россети Сибирь (ГК)
Россети Томск
Россети Тюмень
Россети Урал (ГК)
Россети ФСК ЕЭС
Россети Центр
Россети Центр и Приволжье (ГК)
Россети Юг (ГК)
Россети Янтарь
-25 000 млн.руб.
-20 000 млн.руб.
-15 000 млн.руб.
-10 000 млн.руб.
-5 000 млн.руб.
0 млн.руб.
5 000 млн.руб.
10 000 млн.руб.
-30 000 млн.руб.
15 000 млн.руб.
358
121
239
4 507
5 172
8 574
945
784
2 396
241
-6 052
2 027
-23 772
3 732
4 813
1 329
372
млн.
%
Выручка
Отклонение выручки по ПАО Россети за 1, 2, 3 кв., Октябрь, Ноябрь 2024 года (факт/план, млн. руб)
ПАО Россети
5 783.7 млн.руб.
 '

10-01-2025T04:09:48 - [MESSAGE][PASSED] - Text of object 'Object Repository/Страница авторизации/Text' is: 'Период
1, 2, 3 кв., Октябрь, Ноябрь 2024 года
Выручка
Все
Выполнение плановых показателей по ПАО Россети за 1, 2, 3 кв., Октябрь, Ноябрь 2024 года
План
Факт
Динамика
2024 год
0 млн.руб.
100 000 млн.руб.
200 000 млн.руб.
300 000 млн.руб.
400 000 млн.руб.
500 000 млн.руб.
600 000 млн.руб.
700 000 млн.руб.
800 000 млн.руб.
900 000 млн.руб.
1 000 000 млн.руб.
1 100 000 млн.руб.
1 200 000 млн.руб.
1 300 000 млн.руб.
1 400 000 млн.руб.
1 500 000 млн.руб.
1 600 000 млн.руб.
1 311 033
1 316 817
↑
ДЗО 
Все
Внутренний оборот - выручка за услуги по передаче электрической энергии, учтенная в выручке за электроэнергию для конечных потребителей, при выполнении ДЗО функций гарантирующего поставщика
Подписи данных
⬤Отклонение
АО «Тываэнерго»
АО «Чеченэнерго»
Россети Волга
Россети Кубань
Россети Ленэнерго (ГК)
Россети Московский регион
Россети Северный Кавказ (ГК)
Россети Северо-Запад
Россети Сибирь (ГК)
Россети Томск
Россети Тюмень
Россети Урал (ГК)
Россети ФСК ЕЭС
Россети Центр
Россети Центр и Приволжье (ГК)
Россети Юг (ГК)
Россети Янтарь
-25 000 млн.руб.
-20 000 млн.руб.
-15 000 млн.руб.
-10 000 млн.руб.
-5 000 млн.руб.
0 млн.руб.
5 000 млн.руб.
10 000 млн.руб.
-30 000 млн.руб.
15 000 млн.руб.
358
121
239
4 507
5 172
8 574
945
784
2 396
241
-6 052
2 027
-23 772
3 732
4 813
1 329
372
млн.
%
Выручка
Отклонение выручки по ПАО Россети за 1, 2, 3 кв., Октябрь, Ноябрь 2024 года (факт/план, млн. руб)
ПАО Россети
5 783.7 млн.руб.
 '

10-01-2025T04:09:48 - [TEST_STEP][PASSED] - searchWord = "а": null

10-01-2025T04:09:48 - [TEST_STEP][PASSED] - if (urlText.contains("ошибка") || urlText.contains(searchWord) == false): null

10-01-2025T04:09:48 - [TEST_STEP][PASSED] - delay(45): Delayed 45 second(s)

10-01-2025T04:10:33 - [MESSAGE][PASSED] - Delayed 45 second(s)

10-01-2025T04:10:33 - [TEST_STEP][PASSED] - if (block == 2): null

10-01-2025T04:10:33 - [TEST_STEP][PASSED] - click(findTestObject("Выручка в рублях/Фильтр Период" + nameOfBlock)): Object: 'Object Repository/Выручка в рублях/Фильтр Период' is clicked on

10-01-2025T04:10:34 - [MESSAGE][PASSED] - Object: 'Object Repository/Выручка в рублях/Фильтр Период' is clicked on

10-01-2025T04:10:34 - [TEST_STEP][PASSED] - click(findTestObject("Выручка в рублях/Снять выделение в фильтре Дата" + nameOfBlock)): Object: 'Object Repository/Выручка в рублях/Снять выделение в фильтре Дата' is clicked on

10-01-2025T04:10:34 - [MESSAGE][PASSED] - Object: 'Object Repository/Выручка в рублях/Снять выделение в фильтре Дата' is clicked on

10-01-2025T04:10:34 - [TEST_STEP][PASSED] - click(findTestObject("Выручка в рублях/Применить в фильтре Дата" + nameOfBlock)): Object: 'Object Repository/Выручка в рублях/Применить в фильтре Дата' is clicked on

10-01-2025T04:10:35 - [MESSAGE][PASSED] - Object: 'Object Repository/Выручка в рублях/Применить в фильтре Дата' is clicked on

10-01-2025T04:10:35 - [TEST_STEP][PASSED] - delay(50): Delayed 50 second(s)

10-01-2025T04:11:25 - [MESSAGE][PASSED] - Delayed 50 second(s)

10-01-2025T04:11:25 - [TEST_STEP][PASSED] - click(findTestObject("Выручка в рублях/Фильтр Период" + nameOfBlock)): Object: 'Object Repository/Выручка в рублях/Фильтр Период' is clicked on

10-01-2025T04:11:25 - [MESSAGE][PASSED] - Object: 'Object Repository/Выручка в рублях/Фильтр Период' is clicked on

10-01-2025T04:11:25 - [TEST_STEP][PASSED] - click(findTestObject("Выручка в рублях/Снять выделение в фильтре Дата" + nameOfBlock)): Object: 'Object Repository/Выручка в рублях/Снять выделение в фильтре Дата' is clicked on

10-01-2025T04:11:25 - [MESSAGE][PASSED] - Object: 'Object Repository/Выручка в рублях/Снять выделение в фильтре Дата' is clicked on

10-01-2025T04:11:25 - [TEST_STEP][PASSED] - scrollToElement(findTestObject("Выручка в рублях/2024 список" + nameOfBlock), 30): Scroll to object 'Object Repository/Выручка в рублях/2024 список' successfully

10-01-2025T04:11:26 - [MESSAGE][PASSED] - Scroll to object 'Object Repository/Выручка в рублях/2024 список' successfully

10-01-2025T04:11:26 - [TEST_STEP][PASSED] - click(findTestObject("Выручка в рублях/2024 список" + nameOfBlock)): Object: 'Object Repository/Выручка в рублях/2024 список' is clicked on

10-01-2025T04:11:26 - [MESSAGE][PASSED] - Object: 'Object Repository/Выручка в рублях/2024 список' is clicked on

10-01-2025T04:11:26 - [TEST_STEP][PASSED] - scrollToElement(findTestObject("Выручка в рублях/1 квартал 2024 выбрать" + nameOfBlock), 30): Scroll to object 'Object Repository/Выручка в рублях/1 квартал 2024 выбрать' successfully

10-01-2025T04:11:27 - [MESSAGE][PASSED] - Scroll to object 'Object Repository/Выручка в рублях/1 квартал 2024 выбрать' successfully

10-01-2025T04:11:27 - [TEST_STEP][PASSED] - click(findTestObject("Выручка в рублях/1 квартал 2024 выбрать" + nameOfBlock)): Object: 'Object Repository/Выручка в рублях/1 квартал 2024 выбрать' is clicked on

10-01-2025T04:11:27 - [MESSAGE][PASSED] - Object: 'Object Repository/Выручка в рублях/1 квартал 2024 выбрать' is clicked on

10-01-2025T04:11:27 - [TEST_STEP][PASSED] - scrollToElement(findTestObject("Выручка в рублях/2 квартал 2024 выбрать" + nameOfBlock), 30): Scroll to object 'Object Repository/Выручка в рублях/2 квартал 2024 выбрать' successfully

10-01-2025T04:11:27 - [MESSAGE][PASSED] - Scroll to object 'Object Repository/Выручка в рублях/2 квартал 2024 выбрать' successfully

10-01-2025T04:11:27 - [TEST_STEP][PASSED] - click(findTestObject("Выручка в рублях/2 квартал 2024 выбрать" + nameOfBlock)): Object: 'Object Repository/Выручка в рублях/2 квартал 2024 выбрать' is clicked on

10-01-2025T04:11:28 - [MESSAGE][PASSED] - Object: 'Object Repository/Выручка в рублях/2 квартал 2024 выбрать' is clicked on

10-01-2025T04:11:28 - [TEST_STEP][PASSED] - scrollToElement(findTestObject("Выручка в рублях/3 квартал 2024 список" + nameOfBlock), 30): Scroll to object 'Object Repository/Выручка в рублях/3 квартал 2024 список' successfully

10-01-2025T04:11:28 - [MESSAGE][PASSED] - Scroll to object 'Object Repository/Выручка в рублях/3 квартал 2024 список' successfully

10-01-2025T04:11:28 - [TEST_STEP][PASSED] - click(findTestObject("Выручка в рублях/3 квартал 2024" + nameOfBlock)): Object: 'Object Repository/Выручка в рублях/3 квартал 2024' is clicked on

10-01-2025T04:11:29 - [MESSAGE][PASSED] - Object: 'Object Repository/Выручка в рублях/3 квартал 2024' is clicked on

10-01-2025T04:11:29 - [TEST_STEP][PASSED] - scrollToElement(findTestObject("Выручка в рублях/4 квартал 2024 список" + nameOfBlock), 30): Scroll to object 'Object Repository/Выручка в рублях/4 квартал 2024 список' successfully

10-01-2025T04:11:29 - [MESSAGE][PASSED] - Scroll to object 'Object Repository/Выручка в рублях/4 квартал 2024 список' successfully

10-01-2025T04:11:29 - [TEST_STEP][PASSED] - click(findTestObject("Выручка в рублях/4 квартал 2024 список" + nameOfBlock)): Object: 'Object Repository/Выручка в рублях/4 квартал 2024 список' is clicked on

10-01-2025T04:11:29 - [MESSAGE][PASSED] - Object: 'Object Repository/Выручка в рублях/4 квартал 2024 список' is clicked on

10-01-2025T04:11:29 - [TEST_STEP][PASSED] - scrollToElement(findTestObject("Выручка в рублях/Октябрь 2024" + nameOfBlock), 30): Scroll to object 'Object Repository/Выручка в рублях/Октябрь 2024' successfully

10-01-2025T04:11:30 - [MESSAGE][PASSED] - Scroll to object 'Object Repository/Выручка в рублях/Октябрь 2024' successfully

10-01-2025T04:11:30 - [TEST_STEP][PASSED] - click(findTestObject("Выручка в рублях/Октябрь 2024" + nameOfBlock)): Object: 'Object Repository/Выручка в рублях/Октябрь 2024' is clicked on

10-01-2025T04:11:30 - [MESSAGE][PASSED] - Object: 'Object Repository/Выручка в рублях/Октябрь 2024' is clicked on

10-01-2025T04:11:30 - [TEST_STEP][PASSED] - scrollToElement(findTestObject("Выручка в рублях/Ноябрь 2024" + nameOfBlock), 30): Scroll to object 'Object Repository/Выручка в рублях/Ноябрь 2024' successfully

10-01-2025T04:11:31 - [MESSAGE][PASSED] - Scroll to object 'Object Repository/Выручка в рублях/Ноябрь 2024' successfully

10-01-2025T04:11:31 - [TEST_STEP][PASSED] - click(findTestObject("Выручка в рублях/Ноябрь 2024" + nameOfBlock)): Object: 'Object Repository/Выручка в рублях/Ноябрь 2024' is clicked on

10-01-2025T04:11:31 - [MESSAGE][PASSED] - Object: 'Object Repository/Выручка в рублях/Ноябрь 2024' is clicked on

10-01-2025T04:11:31 - [TEST_STEP][PASSED] - scrollToElement(findTestObject("Выручка в рублях/Заголовок дашборда" + nameOfBlock), 30): Scroll to object 'Object Repository/Выручка в рублях/Заголовок дашборда' successfully

10-01-2025T04:11:32 - [MESSAGE][PASSED] - Scroll to object 'Object Repository/Выручка в рублях/Заголовок дашборда' successfully

10-01-2025T04:11:32 - [TEST_STEP][PASSED] - click(findTestObject("Выручка в рублях/Применить в фильтре Дата" + nameOfBlock)): Object: 'Object Repository/Выручка в рублях/Применить в фильтре Дата' is clicked on

10-01-2025T04:11:32 - [MESSAGE][PASSED] - Object: 'Object Repository/Выручка в рублях/Применить в фильтре Дата' is clicked on

10-01-2025T04:11:32 - [TEST_STEP][PASSED] - delay(55): Delayed 55 second(s)

10-01-2025T04:12:27 - [MESSAGE][PASSED] - Delayed 55 second(s)

10-01-2025T04:12:27 - [TEST_STEP][PASSED] - click(findTestObject("Выручка в рублях/Фильтр ДЗО" + nameOfBlock)): Object: 'Object Repository/Выручка в рублях/Фильтр ДЗО' is clicked on

10-01-2025T04:12:27 - [MESSAGE][PASSED] - Object: 'Object Repository/Выручка в рублях/Фильтр ДЗО' is clicked on

10-01-2025T04:12:27 - [TEST_STEP][PASSED] - click(findTestObject("Выручка в рублях/Снять выделение в фильтре ДЗО" + nameOfBlock)): Object: 'Object Repository/Выручка в рублях/Снять выделение в фильтре ДЗО' is clicked on

10-01-2025T04:12:28 - [MESSAGE][PASSED] - Object: 'Object Repository/Выручка в рублях/Снять выделение в фильтре ДЗО' is clicked on

10-01-2025T04:12:28 - [TEST_STEP][PASSED] - click(findTestObject("Выручка в рублях/Применить в фильтре ДЗО" + nameOfBlock)): Object: 'Object Repository/Выручка в рублях/Применить в фильтре ДЗО' is clicked on

10-01-2025T04:12:28 - [MESSAGE][PASSED] - Object: 'Object Repository/Выручка в рублях/Применить в фильтре ДЗО' is clicked on

10-01-2025T04:12:28 - [TEST_STEP][PASSED] - delay(50): Delayed 50 second(s)

10-01-2025T04:13:18 - [MESSAGE][PASSED] - Delayed 50 second(s)

10-01-2025T04:13:18 - [TEST_STEP][PASSED] - Script1710234207206.Tumbler(run, vir, block, nameOfBlock): null

10-01-2025T04:13:18 - [TEST_STEP][PASSED] - println("run:" + run): null

10-01-2025T04:13:18 - [TEST_STEP][PASSED] - println("vir:" + vir): null

10-01-2025T04:13:18 - [TEST_STEP][PASSED] - println("block:" + block): null

10-01-2025T04:13:18 - [TEST_STEP][PASSED] - println("nameOfBlock:" + nameOfBlock): null

10-01-2025T04:13:18 - [TEST_STEP][PASSED] - if (vir == 1): null

10-01-2025T04:13:18 - [TEST_STEP][PASSED] - else if (vir == 2): Object: 'Object Repository/Выручка в рублях/Применить в фильтре Выручка' is clicked on

10-01-2025T04:13:18 - [TEST_STEP][PASSED] - if (run == 2): Object: 'Object Repository/Выручка в рублях/Переключить отображение с млн на проценты Выручка в рублях' is clicked on

10-01-2025T04:13:18 - [TEST_STEP][PASSED] - click(findTestObject("Выручка в рублях/Переключить отображение с млн на проценты Выручка в рублях" + nameOfBlock)): Object: 'Object Repository/Выручка в рублях/Переключить отображение с млн на проценты Выручка в рублях' is clicked on

10-01-2025T04:13:19 - [MESSAGE][PASSED] - Object: 'Object Repository/Выручка в рублях/Переключить отображение с млн на проценты Выручка в рублях' is clicked on

10-01-2025T04:13:19 - [TEST_STEP][PASSED] - click(findTestObject("Выручка в рублях/Фильтр Выручка" + nameOfBlock)): Object: 'Object Repository/Выручка в рублях/Фильтр Выручка' is clicked on

10-01-2025T04:13:19 - [MESSAGE][PASSED] - Object: 'Object Repository/Выручка в рублях/Фильтр Выручка' is clicked on

10-01-2025T04:13:19 - [TEST_STEP][PASSED] - click(findTestObject("Выручка в рублях/Итого в фильтре Выручка" + nameOfBlock)): Object: 'Object Repository/Выручка в рублях/Итого в фильтре Выручка' is clicked on

10-01-2025T04:13:20 - [MESSAGE][PASSED] - Object: 'Object Repository/Выручка в рублях/Итого в фильтре Выручка' is clicked on

10-01-2025T04:13:20 - [TEST_STEP][PASSED] - click(findTestObject("Выручка в рублях/Применить в фильтре Выручка" + nameOfBlock)): Object: 'Object Repository/Выручка в рублях/Применить в фильтре Выручка' is clicked on

10-01-2025T04:13:21 - [MESSAGE][PASSED] - Object: 'Object Repository/Выручка в рублях/Применить в фильтре Выручка' is clicked on

10-01-2025T04:13:21 - [TEST_STEP][PASSED] - click(findTestObject("Выручка в рублях/Фильтр ДЗО" + nameOfBlock)): Object: 'Object Repository/Выручка в рублях/Фильтр ДЗО' is clicked on

10-01-2025T04:13:22 - [MESSAGE][PASSED] - Object: 'Object Repository/Выручка в рублях/Фильтр ДЗО' is clicked on

10-01-2025T04:13:22 - [TEST_STEP][PASSED] - Script1710234207206.Rosseti(nameOfBlock): null

10-01-2025T04:13:22 - [TEST_STEP][PASSED] - println("nameOfBlock:" + nameOfBlock): null

10-01-2025T04:13:22 - [TEST_STEP][PASSED] - click(findTestObject("Выручка в рублях/ПАО Россети" + nameOfBlock)): Object: 'Object Repository/Выручка в рублях/ПАО Россети' is clicked on

10-01-2025T04:13:23 - [MESSAGE][PASSED] - Object: 'Object Repository/Выручка в рублях/ПАО Россети' is clicked on

10-01-2025T04:13:23 - [TEST_STEP][PASSED] - click(findTestObject("Выручка в рублях/Применить в фильтре ДЗО" + nameOfBlock)): Object: 'Object Repository/Выручка в рублях/Применить в фильтре ДЗО' is clicked on

10-01-2025T04:13:24 - [MESSAGE][PASSED] - Object: 'Object Repository/Выручка в рублях/Применить в фильтре ДЗО' is clicked on

10-01-2025T04:13:24 - [TEST_STEP][PASSED] - if (run == 2): null

10-01-2025T04:13:24 - [TEST_STEP][PASSED] - perc = " Perc": null

10-01-2025T04:13:24 - [TEST_STEP][PASSED] - if (vir == 1 || vir == 2): Text of object 'Object Repository/Выручка в рублях/График План' is: '1 288 813'

10-01-2025T04:13:24 - [TEST_STEP][PASSED] - a1 = getText(findTestObject("Выручка в рублях/График План")): Text of object 'Object Repository/Выручка в рублях/График План' is: '1 288 813'

10-01-2025T04:13:25 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выручка в рублях/График План' is: '1 288 813'

10-01-2025T04:13:25 - [TEST_STEP][PASSED] - if (vir == 1 || vir == 2): Text of object 'Object Repository/Выручка в рублях/График Факт' is: '1 293 912'

10-01-2025T04:13:25 - [TEST_STEP][PASSED] - a2 = getText(findTestObject("Выручка в рублях/График Факт")): Text of object 'Object Repository/Выручка в рублях/График Факт' is: '1 293 912'

10-01-2025T04:13:25 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выручка в рублях/График Факт' is: '1 293 912'

10-01-2025T04:13:25 - [TEST_STEP][PASSED] - a30 = getText(findTestObject("Выручка в рублях/span1" + perc)): Text of object 'Object Repository/Выручка в рублях/span1 Perc' is: '-95.46 %'

10-01-2025T04:13:25 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выручка в рублях/span1 Perc' is: '-95.46 %'

10-01-2025T04:13:25 - [TEST_STEP][PASSED] - i = a30.indexOf("млн.руб."): null

10-01-2025T04:13:25 - [TEST_STEP][PASSED] - if (i > -1): null

10-01-2025T04:13:25 - [TEST_STEP][PASSED] - if (a30.contains("%")): null

10-01-2025T04:13:25 - [TEST_STEP][PASSED] - a30 = a30.replaceAll("%", ""): null

10-01-2025T04:13:25 - [TEST_STEP][PASSED] - a30 = ").trim(): null

10-01-2025T04:13:25 - [TEST_STEP][PASSED] - println("a30: " + a30): null

10-01-2025T04:13:25 - [TEST_STEP][PASSED] - if (vir == 1 || vir == 2): Text of object 'Object Repository/Выручка в рублях/span2 Perc' is: '-100 %'

10-01-2025T04:13:25 - [TEST_STEP][PASSED] - a31 = ").trim(): Text of object 'Object Repository/Выручка в рублях/span2 Perc' is: '-100 %'

10-01-2025T04:13:26 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выручка в рублях/span2 Perc' is: '-100 %'

10-01-2025T04:13:26 - [TEST_STEP][PASSED] - if (vir == 1 || vir == 2): Text of object 'Object Repository/Выручка в рублях/span3 Perc' is: '-94.89 %'

10-01-2025T04:13:26 - [TEST_STEP][PASSED] - a32 = ").trim(): Text of object 'Object Repository/Выручка в рублях/span3 Perc' is: '-94.89 %'

10-01-2025T04:13:26 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выручка в рублях/span3 Perc' is: '-94.89 %'

10-01-2025T04:13:26 - [TEST_STEP][PASSED] - if (vir == 1 || vir == 2): Text of object 'Object Repository/Выручка в рублях/span8 Perc' is: '-90.75 %'

10-01-2025T04:13:26 - [TEST_STEP][PASSED] - a33 = ").trim(): Text of object 'Object Repository/Выручка в рублях/span4 Perc' is: '-90.7 %'

10-01-2025T04:13:26 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выручка в рублях/span4 Perc' is: '-90.7 %'

10-01-2025T04:13:26 - [TEST_STEP][PASSED] - a34 = ").trim(): Text of object 'Object Repository/Выручка в рублях/span5 Perc' is: '-91.02 %'

10-01-2025T04:13:27 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выручка в рублях/span5 Perc' is: '-91.02 %'

10-01-2025T04:13:27 - [TEST_STEP][PASSED] - a35 = ").trim(): Text of object 'Object Repository/Выручка в рублях/span6 Perc' is: '-90.02 %'

10-01-2025T04:13:27 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выручка в рублях/span6 Perc' is: '-90.02 %'

10-01-2025T04:13:27 - [TEST_STEP][PASSED] - a36 = ").trim(): Text of object 'Object Repository/Выручка в рублях/span7 Perc' is: '-100 %'

10-01-2025T04:13:27 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выручка в рублях/span7 Perc' is: '-100 %'

10-01-2025T04:13:27 - [TEST_STEP][PASSED] - a37 = ").trim(): Text of object 'Object Repository/Выручка в рублях/span8 Perc' is: '-90.75 %'

10-01-2025T04:13:27 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выручка в рублях/span8 Perc' is: '-90.75 %'

10-01-2025T04:13:27 - [TEST_STEP][PASSED] - if (vir == 1 || vir == 2): Text of object 'Object Repository/Выручка в рублях/span17 Perc' is: '-91.1 %'

10-01-2025T04:13:27 - [TEST_STEP][PASSED] - a38 = ").trim(): Text of object 'Object Repository/Выручка в рублях/span9 Perc' is: '-89.48 %'

10-01-2025T04:13:28 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выручка в рублях/span9 Perc' is: '-89.48 %'

10-01-2025T04:13:28 - [TEST_STEP][PASSED] - a39 = ").trim(): Text of object 'Object Repository/Выручка в рублях/span10 Perc' is: '-100 %'

10-01-2025T04:13:28 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выручка в рублях/span10 Perc' is: '-100 %'

10-01-2025T04:13:28 - [TEST_STEP][PASSED] - a310 = ").trim(): Text of object 'Object Repository/Выручка в рублях/span11 Perc' is: '-90.63 %'

10-01-2025T04:13:28 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выручка в рублях/span11 Perc' is: '-90.63 %'

10-01-2025T04:13:28 - [TEST_STEP][PASSED] - a311 = ").trim(): Text of object 'Object Repository/Выручка в рублях/span12 Perc' is: '-92.22 %'

10-01-2025T04:13:29 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выручка в рублях/span12 Perc' is: '-92.22 %'

10-01-2025T04:13:29 - [TEST_STEP][PASSED] - a312 = ").trim(): Text of object 'Object Repository/Выручка в рублях/span13 Perc' is: '-89.69 %'

10-01-2025T04:13:29 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выручка в рублях/span13 Perc' is: '-89.69 %'

10-01-2025T04:13:29 - [TEST_STEP][PASSED] - a313 = ").trim(): Text of object 'Object Repository/Выручка в рублях/span14 Perc' is: '-100 %'

10-01-2025T04:13:29 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выручка в рублях/span14 Perc' is: '-100 %'

10-01-2025T04:13:29 - [TEST_STEP][PASSED] - a314 = ").trim(): Text of object 'Object Repository/Выручка в рублях/span15 Perc' is: '-100 %'

10-01-2025T04:13:30 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выручка в рублях/span15 Perc' is: '-100 %'

10-01-2025T04:13:30 - [TEST_STEP][PASSED] - a315 = ").trim(): Text of object 'Object Repository/Выручка в рублях/span16 Perc' is: '-93.32 %'

10-01-2025T04:13:30 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выручка в рублях/span16 Perc' is: '-93.32 %'

10-01-2025T04:13:30 - [TEST_STEP][PASSED] - a316 = ").trim(): Text of object 'Object Repository/Выручка в рублях/span17 Perc' is: '-91.1 %'

10-01-2025T04:13:30 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выручка в рублях/span17 Perc' is: '-91.1 %'

10-01-2025T04:13:30 - [TEST_STEP][PASSED] - if (vir == 1 || vir == 2): Text of object 'Object Repository/Выручка в рублях/span18 Perc' is: '-100 %'

10-01-2025T04:13:30 - [TEST_STEP][PASSED] - a317 = ").trim(): Text of object 'Object Repository/Выручка в рублях/span18 Perc' is: '-100 %'

10-01-2025T04:13:30 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выручка в рублях/span18 Perc' is: '-100 %'

10-01-2025T04:13:30 - [TEST_STEP][PASSED] - block = 2: null

10-01-2025T04:13:30 - [TEST_STEP][PASSED] - nameOfBlock = " Выручка": null

10-01-2025T04:13:30 - [TEST_STEP][PASSED] - Script1710234207206.PreSettings(run, vir, block, nameOfBlock, typeOfData, todaysDate): null

10-01-2025T04:13:30 - [TEST_STEP][PASSED] - openBrowser(""): Browser is opened with url: ''

10-01-2025T04:13:30 - [MESSAGE][WARNING] - A browser is already opened. Closing browser and opening a new one

10-01-2025T04:13:31 - [MESSAGE][INFO] - Starting 'Chrome' driver

10-01-2025T04:13:31 - [MESSAGE][INFO] - Action delay is set to 0 milliseconds

10-01-2025T04:13:32 - [MESSAGE][PASSED] - Browser is opened with url: ''

10-01-2025T04:13:32 - [TEST_STEP][PASSED] - refresh(): Refresh successfully

10-01-2025T04:13:32 - [MESSAGE][PASSED] - Refresh successfully

10-01-2025T04:13:32 - [TEST_STEP][PASSED] - delay(50): Delayed 50 second(s)

10-01-2025T04:14:22 - [MESSAGE][PASSED] - Delayed 50 second(s)

10-01-2025T04:14:22 - [TEST_STEP][PASSED] - println("run:" + run): null

10-01-2025T04:14:22 - [TEST_STEP][PASSED] - println("vir:" + vir): null

10-01-2025T04:14:22 - [TEST_STEP][PASSED] - println("block:" + block): null

10-01-2025T04:14:22 - [TEST_STEP][PASSED] - if (block == 1): null

10-01-2025T04:14:22 - [TEST_STEP][PASSED] - else: null

10-01-2025T04:14:22 - [TEST_STEP][PASSED] - nameOfBlock = " Выручка": null

10-01-2025T04:14:22 - [TEST_STEP][PASSED] - println("nameOfBlock:" + nameOfBlock): null

10-01-2025T04:14:22 - [TEST_STEP][PASSED] - println("typeOfData:" + typeOfData): null

10-01-2025T04:14:22 - [TEST_STEP][PASSED] - println("todaysDate:" + todaysDate): null

10-01-2025T04:14:22 - [TEST_STEP][PASSED] - Script1710234207206.Autorization(block, nameOfBlock): null

10-01-2025T04:14:22 - [TEST_STEP][PASSED] - i = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:14:22 - [TEST_STEP][PASSED] - ii = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:14:22 - [TEST_STEP][PASSED] - urlData = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:14:22 - [TEST_STEP][PASSED] - searchWord = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:14:22 - [TEST_STEP][PASSED] - urlText = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:14:22 - [TEST_STEP][PASSED] - println("block:" + block): null

10-01-2025T04:14:22 - [TEST_STEP][PASSED] - if (block == 1): null

10-01-2025T04:14:22 - [TEST_STEP][PASSED] - else: null

10-01-2025T04:14:22 - [TEST_STEP][PASSED] - delay(45): Delayed 45 second(s)

10-01-2025T04:15:07 - [MESSAGE][PASSED] - Delayed 45 second(s)

10-01-2025T04:15:07 - [TEST_STEP][PASSED] - nameOfBlock = " Выручка": null

10-01-2025T04:15:07 - [TEST_STEP][PASSED] - println("nameOfBlock:" + nameOfBlock): null

10-01-2025T04:15:07 - [TEST_STEP][PASSED] - if (block == 1): null

10-01-2025T04:15:07 - [TEST_STEP][PASSED] - else: Delayed 45 second(s)

10-01-2025T04:15:07 - [TEST_STEP][PASSED] - urlData = 9: null

10-01-2025T04:15:07 - [TEST_STEP][PASSED] - delay(45): Delayed 45 second(s)

10-01-2025T04:15:52 - [MESSAGE][PASSED] - Delayed 45 second(s)

10-01-2025T04:15:52 - [TEST_STEP][PASSED] - navigateToUrl(findTestData("PlanFact").getValue(10, urlData)): Navigate to 'https://bi.rosseti.digital/viewer?dashboardGuid=a1fd28b3785d443cbc4d7690a1d78e31&sheetGuid=86092a20c5984827a0c87b24cac76a50&fit=true' successfully

10-01-2025T04:15:58 - [MESSAGE][PASSED] - Navigate to 'https://bi.rosseti.digital/viewer?dashboardGuid=a1fd28b3785d443cbc4d7690a1d78e31&sheetGuid=86092a20c5984827a0c87b24cac76a50&fit=true' successfully

10-01-2025T04:15:58 - [TEST_STEP][PASSED] - urlText = getText(findTestObject("Страница авторизации/Text")): Text of object 'Object Repository/Страница авторизации/Text' is: 'Вход'

10-01-2025T04:16:00 - [MESSAGE][PASSED] - Text of object 'Object Repository/Страница авторизации/Text' is: 'Вход'

10-01-2025T04:16:00 - [TEST_STEP][PASSED] - searchWord = "Вход": null

10-01-2025T04:16:00 - [TEST_STEP][PASSED] - if (urlText == null || urlText.contains("ошибка") || urlText.contains(searchWord) == false): null

10-01-2025T04:16:00 - [TEST_STEP][PASSED] - if (verifyElementPresent(findTestObject("Страница авторизации/button_"), 30) == true): null

10-01-2025T04:16:00 - [MESSAGE][PASSED] - Object 'Object Repository/Страница авторизации/button_' is present

10-01-2025T04:16:00 - [TEST_STEP][PASSED] - setText(findTestObject("Страница авторизации/input__username"), findTestData("PlanFact").getValue(8, 1)): Text 'liazgina-di' is set on object 'Object Repository/Страница авторизации/input__username'

10-01-2025T04:16:01 - [MESSAGE][PASSED] - Text 'liazgina-di' is set on object 'Object Repository/Страница авторизации/input__username'

10-01-2025T04:16:01 - [TEST_STEP][PASSED] - setText(findTestObject("Страница авторизации/input__password"), findTestData("PlanFact").getValue(9, 1)): Text ')$%5srZ8o688Dm#q' is set on object 'Object Repository/Страница авторизации/input__password'

10-01-2025T04:16:02 - [MESSAGE][PASSED] - Text ')$%5srZ8o688Dm#q' is set on object 'Object Repository/Страница авторизации/input__password'

10-01-2025T04:16:02 - [TEST_STEP][PASSED] - click(findTestObject("Страница авторизации/button_")): Object: 'Object Repository/Страница авторизации/button_' is clicked on

10-01-2025T04:16:03 - [MESSAGE][PASSED] - Object: 'Object Repository/Страница авторизации/button_' is clicked on

10-01-2025T04:16:03 - [TEST_STEP][PASSED] - delay(45): Delayed 45 second(s)

10-01-2025T04:16:48 - [MESSAGE][PASSED] - Delayed 45 second(s)

10-01-2025T04:16:48 - [TEST_STEP][PASSED] - urlText = getText(findTestObject("Страница авторизации/Text")): Text of object 'Object Repository/Страница авторизации/Text' is: 'Период
Январь, Февраль, Март, Апрель, Май, Июнь, Июль, Август, Сентябрь, Октябрь, Ноябрь 2024 года
Выручка
Все
Выполнение плановых показателей по ПАО Россети за Январь, Февраль, Март, Апрель, Май, Июнь, Июль, Август, Сентябрь, Октябрь, Ноябрь 2024 года
План
Факт
Динамика
2024 год
0 млн.руб.
200 000 млн.руб.
400 000 млн.руб.
600 000 млн.руб.
800 000 млн.руб.
1 000 000 млн.руб.
1 200 000 млн.руб.
1 400 000 млн.руб.
1 600 000 млн.руб.
1 311 033
1 316 817
↑
ДЗО 
Все
Подписи данных
⬤Отклонение
АО «Тываэнерго»
АО «Чеченэнерго»
Россети Волга
Россети Кубань
Россети Ленэнерго (ГК)
Россети Московский регион
Россети Северный Кавказ (ГК)
Россети Северо-Запад
Россети Сибирь (ГК)
Россети Томск
Россети Тюмень
Россети Урал (ГК)
Россети ФСК ЕЭС
Россети Центр
Россети Центр и Приволжье (ГК)
Россети Юг (ГК)
Россети Янтарь
-27 500 млн.руб.
-25 000 млн.руб.
-22 500 млн.руб.
-20 000 млн.руб.
-17 500 млн.руб.
-15 000 млн.руб.
-12 500 млн.руб.
-10 000 млн.руб.
-7 500 млн.руб.
-5 000 млн.руб.
-2 500 млн.руб.
0 млн.руб.
2 500 млн.руб.
5 000 млн.руб.
7 500 млн.руб.
10 000 млн.руб.
12 500 млн.руб.
358
121
239
4 507
5 172
8 574
945
784
2 396
241
-6 052
2 027
-23 772
3 732
4 813
1 329
372
млн.
%
Выручка
Отклонение выручки по ПАО Россети за Январь, Февраль, Март, Апрель, Май, Июнь, Июль, Август, Сентябрь, Октябрь, Ноябрь 2024 года (факт/план, млн. руб)
ПАО Россети
5 783.7 млн.руб.
Статус данных
×
Просьба обратить внимание
Данные занесены не полностью
ВЫБРАННЫЕ ЗНАЧЕНИЯ ФИЛЬТРОВ
ДЗО | ПЕРИОД
ПАО Россети: [«Выбраны все филиалы по всем ДЗО по всем категориям»]
2024: [Янв, Фев, Мар, Апр, Май, Июн, Июл, Авг, Сен, Окт, Ноя]
*Внутренний оборот'

10-01-2025T04:16:49 - [MESSAGE][PASSED] - Text of object 'Object Repository/Страница авторизации/Text' is: 'Период
Январь, Февраль, Март, Апрель, Май, Июнь, Июль, Август, Сентябрь, Октябрь, Ноябрь 2024 года
Выручка
Все
Выполнение плановых показателей по ПАО Россети за Январь, Февраль, Март, Апрель, Май, Июнь, Июль, Август, Сентябрь, Октябрь, Ноябрь 2024 года
План
Факт
Динамика
2024 год
0 млн.руб.
200 000 млн.руб.
400 000 млн.руб.
600 000 млн.руб.
800 000 млн.руб.
1 000 000 млн.руб.
1 200 000 млн.руб.
1 400 000 млн.руб.
1 600 000 млн.руб.
1 311 033
1 316 817
↑
ДЗО 
Все
Подписи данных
⬤Отклонение
АО «Тываэнерго»
АО «Чеченэнерго»
Россети Волга
Россети Кубань
Россети Ленэнерго (ГК)
Россети Московский регион
Россети Северный Кавказ (ГК)
Россети Северо-Запад
Россети Сибирь (ГК)
Россети Томск
Россети Тюмень
Россети Урал (ГК)
Россети ФСК ЕЭС
Россети Центр
Россети Центр и Приволжье (ГК)
Россети Юг (ГК)
Россети Янтарь
-27 500 млн.руб.
-25 000 млн.руб.
-22 500 млн.руб.
-20 000 млн.руб.
-17 500 млн.руб.
-15 000 млн.руб.
-12 500 млн.руб.
-10 000 млн.руб.
-7 500 млн.руб.
-5 000 млн.руб.
-2 500 млн.руб.
0 млн.руб.
2 500 млн.руб.
5 000 млн.руб.
7 500 млн.руб.
10 000 млн.руб.
12 500 млн.руб.
358
121
239
4 507
5 172
8 574
945
784
2 396
241
-6 052
2 027
-23 772
3 732
4 813
1 329
372
млн.
%
Выручка
Отклонение выручки по ПАО Россети за Январь, Февраль, Март, Апрель, Май, Июнь, Июль, Август, Сентябрь, Октябрь, Ноябрь 2024 года (факт/план, млн. руб)
ПАО Россети
5 783.7 млн.руб.
Статус данных
×
Просьба обратить внимание
Данные занесены не полностью
ВЫБРАННЫЕ ЗНАЧЕНИЯ ФИЛЬТРОВ
ДЗО | ПЕРИОД
ПАО Россети: [«Выбраны все филиалы по всем ДЗО по всем категориям»]
2024: [Янв, Фев, Мар, Апр, Май, Июн, Июл, Авг, Сен, Окт, Ноя]
*Внутренний оборот'

10-01-2025T04:16:49 - [TEST_STEP][PASSED] - searchWord = "а": null

10-01-2025T04:16:49 - [TEST_STEP][PASSED] - if (urlText.contains("ошибка") || urlText.contains(searchWord) == false): null

10-01-2025T04:16:49 - [TEST_STEP][PASSED] - delay(45): Delayed 45 second(s)

10-01-2025T04:17:34 - [MESSAGE][PASSED] - Delayed 45 second(s)

10-01-2025T04:17:34 - [TEST_STEP][PASSED] - if (block == 2): Delayed 50 second(s)

10-01-2025T04:17:34 - [TEST_STEP][PASSED] - opoveshenie = getText(findTestObject("Выручка в рублях/Просьба обратить внимание")): Text of object 'Object Repository/Выручка в рублях/Просьба обратить внимание' is: 'Просьба обратить внимание'

10-01-2025T04:17:34 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выручка в рублях/Просьба обратить внимание' is: 'Просьба обратить внимание'

10-01-2025T04:17:34 - [TEST_STEP][PASSED] - if (opoveshenie == "Просьба обратить внимание"): Delayed 50 second(s)

10-01-2025T04:17:34 - [TEST_STEP][PASSED] - click(findTestObject("Выручка в рублях/Закрыть оповещение")): Object: 'Object Repository/Выручка в рублях/Закрыть оповещение' is clicked on

10-01-2025T04:17:35 - [MESSAGE][PASSED] - Object: 'Object Repository/Выручка в рублях/Закрыть оповещение' is clicked on

10-01-2025T04:17:35 - [TEST_STEP][PASSED] - delay(50): Delayed 50 second(s)

10-01-2025T04:18:25 - [MESSAGE][PASSED] - Delayed 50 second(s)

10-01-2025T04:18:25 - [TEST_STEP][PASSED] - click(findTestObject("Выручка в рублях/Фильтр Период" + nameOfBlock)): Object: 'Object Repository/Выручка в рублях/Фильтр Период Выручка' is clicked on

10-01-2025T04:18:25 - [MESSAGE][PASSED] - Object: 'Object Repository/Выручка в рублях/Фильтр Период Выручка' is clicked on

10-01-2025T04:18:25 - [TEST_STEP][PASSED] - click(findTestObject("Выручка в рублях/Снять выделение в фильтре Дата" + nameOfBlock)): Object: 'Object Repository/Выручка в рублях/Снять выделение в фильтре Дата Выручка' is clicked on

10-01-2025T04:18:26 - [MESSAGE][PASSED] - Object: 'Object Repository/Выручка в рублях/Снять выделение в фильтре Дата Выручка' is clicked on

10-01-2025T04:18:26 - [TEST_STEP][PASSED] - click(findTestObject("Выручка в рублях/Применить в фильтре Дата" + nameOfBlock)): Object: 'Object Repository/Выручка в рублях/Применить в фильтре Дата Выручка' is clicked on

10-01-2025T04:18:26 - [MESSAGE][PASSED] - Object: 'Object Repository/Выручка в рублях/Применить в фильтре Дата Выручка' is clicked on

10-01-2025T04:18:26 - [TEST_STEP][PASSED] - delay(50): Delayed 50 second(s)

10-01-2025T04:19:16 - [MESSAGE][PASSED] - Delayed 50 second(s)

10-01-2025T04:19:16 - [TEST_STEP][PASSED] - click(findTestObject("Выручка в рублях/Фильтр Период" + nameOfBlock)): Object: 'Object Repository/Выручка в рублях/Фильтр Период Выручка' is clicked on

10-01-2025T04:19:17 - [MESSAGE][PASSED] - Object: 'Object Repository/Выручка в рублях/Фильтр Период Выручка' is clicked on

10-01-2025T04:19:17 - [TEST_STEP][PASSED] - click(findTestObject("Выручка в рублях/Снять выделение в фильтре Дата" + nameOfBlock)): Object: 'Object Repository/Выручка в рублях/Снять выделение в фильтре Дата Выручка' is clicked on

10-01-2025T04:19:17 - [MESSAGE][PASSED] - Object: 'Object Repository/Выручка в рублях/Снять выделение в фильтре Дата Выручка' is clicked on

10-01-2025T04:19:17 - [TEST_STEP][PASSED] - scrollToElement(findTestObject("Выручка в рублях/2024 список" + nameOfBlock), 30): Scroll to object 'Object Repository/Выручка в рублях/2024 список Выручка' successfully

10-01-2025T04:19:17 - [MESSAGE][PASSED] - Scroll to object 'Object Repository/Выручка в рублях/2024 список Выручка' successfully

10-01-2025T04:19:17 - [TEST_STEP][PASSED] - click(findTestObject("Выручка в рублях/2024 список" + nameOfBlock)): Object: 'Object Repository/Выручка в рублях/2024 список Выручка' is clicked on

10-01-2025T04:19:18 - [MESSAGE][PASSED] - Object: 'Object Repository/Выручка в рублях/2024 список Выручка' is clicked on

10-01-2025T04:19:18 - [TEST_STEP][PASSED] - scrollToElement(findTestObject("Выручка в рублях/1 квартал 2024 выбрать" + nameOfBlock), 30): Scroll to object 'Object Repository/Выручка в рублях/1 квартал 2024 выбрать Выручка' successfully

10-01-2025T04:19:18 - [MESSAGE][PASSED] - Scroll to object 'Object Repository/Выручка в рублях/1 квартал 2024 выбрать Выручка' successfully

10-01-2025T04:19:18 - [TEST_STEP][PASSED] - click(findTestObject("Выручка в рублях/1 квартал 2024 выбрать" + nameOfBlock)): Object: 'Object Repository/Выручка в рублях/1 квартал 2024 выбрать Выручка' is clicked on

10-01-2025T04:19:19 - [MESSAGE][PASSED] - Object: 'Object Repository/Выручка в рублях/1 квартал 2024 выбрать Выручка' is clicked on

10-01-2025T04:19:19 - [TEST_STEP][PASSED] - scrollToElement(findTestObject("Выручка в рублях/2 квартал 2024 выбрать" + nameOfBlock), 30): Scroll to object 'Object Repository/Выручка в рублях/2 квартал 2024 выбрать Выручка' successfully

10-01-2025T04:19:19 - [MESSAGE][PASSED] - Scroll to object 'Object Repository/Выручка в рублях/2 квартал 2024 выбрать Выручка' successfully

10-01-2025T04:19:19 - [TEST_STEP][PASSED] - click(findTestObject("Выручка в рублях/2 квартал 2024 выбрать" + nameOfBlock)): Object: 'Object Repository/Выручка в рублях/2 квартал 2024 выбрать Выручка' is clicked on

10-01-2025T04:19:20 - [MESSAGE][PASSED] - Object: 'Object Repository/Выручка в рублях/2 квартал 2024 выбрать Выручка' is clicked on

10-01-2025T04:19:20 - [TEST_STEP][PASSED] - scrollToElement(findTestObject("Выручка в рублях/3 квартал 2024 список" + nameOfBlock), 30): Scroll to object 'Object Repository/Выручка в рублях/3 квартал 2024 список Выручка' successfully

10-01-2025T04:19:20 - [MESSAGE][PASSED] - Scroll to object 'Object Repository/Выручка в рублях/3 квартал 2024 список Выручка' successfully

10-01-2025T04:19:20 - [TEST_STEP][PASSED] - click(findTestObject("Выручка в рублях/3 квартал 2024" + nameOfBlock)): Object: 'Object Repository/Выручка в рублях/3 квартал 2024 Выручка' is clicked on

10-01-2025T04:19:20 - [MESSAGE][PASSED] - Object: 'Object Repository/Выручка в рублях/3 квартал 2024 Выручка' is clicked on

10-01-2025T04:19:20 - [TEST_STEP][PASSED] - scrollToElement(findTestObject("Выручка в рублях/4 квартал 2024 список" + nameOfBlock), 30): Scroll to object 'Object Repository/Выручка в рублях/4 квартал 2024 список Выручка' successfully

10-01-2025T04:19:21 - [MESSAGE][PASSED] - Scroll to object 'Object Repository/Выручка в рублях/4 квартал 2024 список Выручка' successfully

10-01-2025T04:19:21 - [TEST_STEP][PASSED] - click(findTestObject("Выручка в рублях/4 квартал 2024 список" + nameOfBlock)): Object: 'Object Repository/Выручка в рублях/4 квартал 2024 список Выручка' is clicked on

10-01-2025T04:19:21 - [MESSAGE][PASSED] - Object: 'Object Repository/Выручка в рублях/4 квартал 2024 список Выручка' is clicked on

10-01-2025T04:19:21 - [TEST_STEP][PASSED] - scrollToElement(findTestObject("Выручка в рублях/Октябрь 2024" + nameOfBlock), 30): Scroll to object 'Object Repository/Выручка в рублях/Октябрь 2024 Выручка' successfully

10-01-2025T04:19:22 - [MESSAGE][PASSED] - Scroll to object 'Object Repository/Выручка в рублях/Октябрь 2024 Выручка' successfully

10-01-2025T04:19:22 - [TEST_STEP][PASSED] - click(findTestObject("Выручка в рублях/Октябрь 2024" + nameOfBlock)): Object: 'Object Repository/Выручка в рублях/Октябрь 2024 Выручка' is clicked on

10-01-2025T04:19:22 - [MESSAGE][PASSED] - Object: 'Object Repository/Выручка в рублях/Октябрь 2024 Выручка' is clicked on

10-01-2025T04:19:22 - [TEST_STEP][PASSED] - scrollToElement(findTestObject("Выручка в рублях/Ноябрь 2024" + nameOfBlock), 30): Scroll to object 'Object Repository/Выручка в рублях/Ноябрь 2024 Выручка' successfully

10-01-2025T04:19:22 - [MESSAGE][PASSED] - Scroll to object 'Object Repository/Выручка в рублях/Ноябрь 2024 Выручка' successfully

10-01-2025T04:19:22 - [TEST_STEP][PASSED] - click(findTestObject("Выручка в рублях/Ноябрь 2024" + nameOfBlock)): Object: 'Object Repository/Выручка в рублях/Ноябрь 2024 Выручка' is clicked on

10-01-2025T04:19:23 - [MESSAGE][PASSED] - Object: 'Object Repository/Выручка в рублях/Ноябрь 2024 Выручка' is clicked on

10-01-2025T04:19:23 - [TEST_STEP][PASSED] - scrollToElement(findTestObject("Выручка в рублях/Заголовок дашборда" + nameOfBlock), 30): Scroll to object 'Object Repository/Выручка в рублях/Заголовок дашборда Выручка' successfully

10-01-2025T04:19:23 - [MESSAGE][PASSED] - Scroll to object 'Object Repository/Выручка в рублях/Заголовок дашборда Выручка' successfully

10-01-2025T04:19:23 - [TEST_STEP][PASSED] - click(findTestObject("Выручка в рублях/Применить в фильтре Дата" + nameOfBlock)): Object: 'Object Repository/Выручка в рублях/Применить в фильтре Дата Выручка' is clicked on

10-01-2025T04:19:24 - [MESSAGE][PASSED] - Object: 'Object Repository/Выручка в рублях/Применить в фильтре Дата Выручка' is clicked on

10-01-2025T04:19:24 - [TEST_STEP][PASSED] - delay(55): Delayed 55 second(s)

10-01-2025T04:20:19 - [MESSAGE][PASSED] - Delayed 55 second(s)

10-01-2025T04:20:19 - [TEST_STEP][PASSED] - click(findTestObject("Выручка в рублях/Фильтр ДЗО" + nameOfBlock)): Object: 'Object Repository/Выручка в рублях/Фильтр ДЗО Выручка' is clicked on

10-01-2025T04:20:19 - [MESSAGE][PASSED] - Object: 'Object Repository/Выручка в рублях/Фильтр ДЗО Выручка' is clicked on

10-01-2025T04:20:19 - [TEST_STEP][PASSED] - click(findTestObject("Выручка в рублях/Снять выделение в фильтре ДЗО" + nameOfBlock)): Object: 'Object Repository/Выручка в рублях/Снять выделение в фильтре ДЗО Выручка' is clicked on

10-01-2025T04:20:20 - [MESSAGE][PASSED] - Object: 'Object Repository/Выручка в рублях/Снять выделение в фильтре ДЗО Выручка' is clicked on

10-01-2025T04:20:20 - [TEST_STEP][PASSED] - click(findTestObject("Выручка в рублях/Применить в фильтре ДЗО" + nameOfBlock)): Object: 'Object Repository/Выручка в рублях/Применить в фильтре ДЗО Выручка' is clicked on

10-01-2025T04:20:20 - [MESSAGE][PASSED] - Object: 'Object Repository/Выручка в рублях/Применить в фильтре ДЗО Выручка' is clicked on

10-01-2025T04:20:20 - [TEST_STEP][PASSED] - delay(50): Delayed 50 second(s)

10-01-2025T04:21:10 - [MESSAGE][PASSED] - Delayed 50 second(s)

10-01-2025T04:21:10 - [TEST_STEP][PASSED] - Script1710234207206.Tumbler(run, vir, block, nameOfBlock): null

10-01-2025T04:21:10 - [TEST_STEP][PASSED] - println("run:" + run): null

10-01-2025T04:21:10 - [TEST_STEP][PASSED] - println("vir:" + vir): null

10-01-2025T04:21:10 - [TEST_STEP][PASSED] - println("block:" + block): null

10-01-2025T04:21:10 - [TEST_STEP][PASSED] - println("nameOfBlock:" + nameOfBlock): null

10-01-2025T04:21:10 - [TEST_STEP][PASSED] - if (vir == 1): null

10-01-2025T04:21:10 - [TEST_STEP][PASSED] - else if (vir == 2): Object: 'Object Repository/Выручка в рублях/Применить в фильтре Выручка Выручка' is clicked on

10-01-2025T04:21:10 - [TEST_STEP][PASSED] - if (run == 2): Object: 'Object Repository/Выручка в рублях/Переключить отображение с млн на проценты Выручка в рублях Выручка' is clicked on

10-01-2025T04:21:10 - [TEST_STEP][PASSED] - click(findTestObject("Выручка в рублях/Переключить отображение с млн на проценты Выручка в рублях" + nameOfBlock)): Object: 'Object Repository/Выручка в рублях/Переключить отображение с млн на проценты Выручка в рублях Выручка' is clicked on

10-01-2025T04:21:11 - [MESSAGE][PASSED] - Object: 'Object Repository/Выручка в рублях/Переключить отображение с млн на проценты Выручка в рублях Выручка' is clicked on

10-01-2025T04:21:11 - [TEST_STEP][PASSED] - click(findTestObject("Выручка в рублях/Фильтр Выручка" + nameOfBlock)): Object: 'Object Repository/Выручка в рублях/Фильтр Выручка Выручка' is clicked on

10-01-2025T04:21:11 - [MESSAGE][PASSED] - Object: 'Object Repository/Выручка в рублях/Фильтр Выручка Выручка' is clicked on

10-01-2025T04:21:11 - [TEST_STEP][PASSED] - click(findTestObject("Выручка в рублях/Итого в фильтре Выручка" + nameOfBlock)): Object: 'Object Repository/Выручка в рублях/Итого в фильтре Выручка Выручка' is clicked on

10-01-2025T04:21:12 - [MESSAGE][PASSED] - Object: 'Object Repository/Выручка в рублях/Итого в фильтре Выручка Выручка' is clicked on

10-01-2025T04:21:12 - [TEST_STEP][PASSED] - click(findTestObject("Выручка в рублях/Применить в фильтре Выручка" + nameOfBlock)): Object: 'Object Repository/Выручка в рублях/Применить в фильтре Выручка Выручка' is clicked on

10-01-2025T04:21:13 - [MESSAGE][PASSED] - Object: 'Object Repository/Выручка в рублях/Применить в фильтре Выручка Выручка' is clicked on

10-01-2025T04:21:13 - [TEST_STEP][PASSED] - click(findTestObject("Выручка в рублях/Фильтр ДЗО" + nameOfBlock)): Object: 'Object Repository/Выручка в рублях/Фильтр ДЗО Выручка' is clicked on

10-01-2025T04:21:14 - [MESSAGE][PASSED] - Object: 'Object Repository/Выручка в рублях/Фильтр ДЗО Выручка' is clicked on

10-01-2025T04:21:14 - [TEST_STEP][PASSED] - Script1710234207206.Rosseti(nameOfBlock): null

10-01-2025T04:21:14 - [TEST_STEP][PASSED] - println("nameOfBlock:" + nameOfBlock): null

10-01-2025T04:21:14 - [TEST_STEP][PASSED] - click(findTestObject("Выручка в рублях/ПАО Россети" + nameOfBlock)): Object: 'Object Repository/Выручка в рублях/ПАО Россети Выручка' is clicked on

10-01-2025T04:21:15 - [MESSAGE][PASSED] - Object: 'Object Repository/Выручка в рублях/ПАО Россети Выручка' is clicked on

10-01-2025T04:21:15 - [TEST_STEP][PASSED] - click(findTestObject("Выручка в рублях/Применить в фильтре ДЗО" + nameOfBlock)): Object: 'Object Repository/Выручка в рублях/Применить в фильтре ДЗО Выручка' is clicked on

10-01-2025T04:21:15 - [MESSAGE][PASSED] - Object: 'Object Repository/Выручка в рублях/Применить в фильтре ДЗО Выручка' is clicked on

10-01-2025T04:21:15 - [TEST_STEP][PASSED] - if (vir == 1 || vir == 2): Text of object 'Object Repository/Выручка в рублях/График План Выручка' is: '1 288 813'

10-01-2025T04:21:15 - [TEST_STEP][PASSED] - b1 = getText(findTestObject("Выручка в рублях/График План Выручка")): Text of object 'Object Repository/Выручка в рублях/График План Выручка' is: '1 288 813'

10-01-2025T04:21:17 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выручка в рублях/График План Выручка' is: '1 288 813'

10-01-2025T04:21:17 - [TEST_STEP][PASSED] - if (vir == 1 || vir == 2): Text of object 'Object Repository/Выручка в рублях/График Факт Выручка' is: '1 293 912'

10-01-2025T04:21:17 - [TEST_STEP][PASSED] - b2 = getText(findTestObject("Выручка в рублях/График Факт Выручка")): Text of object 'Object Repository/Выручка в рублях/График Факт Выручка' is: '1 293 912'

10-01-2025T04:21:17 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выручка в рублях/График Факт Выручка' is: '1 293 912'

10-01-2025T04:21:17 - [TEST_STEP][PASSED] - b30 = getText(findTestObject("Выручка в рублях/span1" + perc)): Text of object 'Object Repository/Выручка в рублях/span1 Perc' is: '-95.33 %'

10-01-2025T04:21:17 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выручка в рублях/span1 Perc' is: '-95.33 %'

10-01-2025T04:21:17 - [TEST_STEP][PASSED] - i = b30.indexOf("млн.руб."): null

10-01-2025T04:21:17 - [TEST_STEP][PASSED] - if (i > -1): null

10-01-2025T04:21:17 - [TEST_STEP][PASSED] - if (b30.contains("%")): null

10-01-2025T04:21:17 - [TEST_STEP][PASSED] - b30 = b30.replaceAll("%", ""): null

10-01-2025T04:21:17 - [TEST_STEP][PASSED] - b30 = ").trim(): null

10-01-2025T04:21:17 - [TEST_STEP][PASSED] - println("b30: " + b30): null

10-01-2025T04:21:17 - [TEST_STEP][PASSED] - if (vir == 1 || vir == 2): Text of object 'Object Repository/Выручка в рублях/span2 Perc' is: '-100 %'

10-01-2025T04:21:17 - [TEST_STEP][PASSED] - b31 = ").trim(): Text of object 'Object Repository/Выручка в рублях/span2 Perc' is: '-100 %'

10-01-2025T04:21:18 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выручка в рублях/span2 Perc' is: '-100 %'

10-01-2025T04:21:18 - [TEST_STEP][PASSED] - if (vir == 1 || vir == 2): Text of object 'Object Repository/Выручка в рублях/span3 Perc' is: '-94.45 %'

10-01-2025T04:21:18 - [TEST_STEP][PASSED] - b32 = ").trim(): Text of object 'Object Repository/Выручка в рублях/span3 Perc' is: '-94.45 %'

10-01-2025T04:21:18 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выручка в рублях/span3 Perc' is: '-94.45 %'

10-01-2025T04:21:18 - [TEST_STEP][PASSED] - if (vir == 1 || vir == 2): Text of object 'Object Repository/Выручка в рублях/span8 Perc' is: '-89.81 %'

10-01-2025T04:21:18 - [TEST_STEP][PASSED] - b33 = ").trim(): Text of object 'Object Repository/Выручка в рублях/span4 Perc' is: '-89.76 %'

10-01-2025T04:21:18 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выручка в рублях/span4 Perc' is: '-89.76 %'

10-01-2025T04:21:18 - [TEST_STEP][PASSED] - b34 = ").trim(): Text of object 'Object Repository/Выручка в рублях/span5 Perc' is: '-90.21 %'

10-01-2025T04:21:18 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выручка в рублях/span5 Perc' is: '-90.21 %'

10-01-2025T04:21:18 - [TEST_STEP][PASSED] - b35 = ").trim(): Text of object 'Object Repository/Выручка в рублях/span6 Perc' is: '-88.99 %'

10-01-2025T04:21:19 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выручка в рублях/span6 Perc' is: '-88.99 %'

10-01-2025T04:21:19 - [TEST_STEP][PASSED] - b36 = ").trim(): Text of object 'Object Repository/Выручка в рублях/span7 Perc' is: '-100 %'

10-01-2025T04:21:19 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выручка в рублях/span7 Perc' is: '-100 %'

10-01-2025T04:21:19 - [TEST_STEP][PASSED] - b37 = ").trim(): Text of object 'Object Repository/Выручка в рублях/span8 Perc' is: '-89.81 %'

10-01-2025T04:21:19 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выручка в рублях/span8 Perc' is: '-89.81 %'

10-01-2025T04:21:19 - [TEST_STEP][PASSED] - if (vir == 1 || vir == 2): Text of object 'Object Repository/Выручка в рублях/span17 Perc' is: '-90.23 %'

10-01-2025T04:21:19 - [TEST_STEP][PASSED] - b38 = ").trim(): Text of object 'Object Repository/Выручка в рублях/span9 Perc' is: '-89.48 %'

10-01-2025T04:21:20 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выручка в рублях/span9 Perc' is: '-89.48 %'

10-01-2025T04:21:20 - [TEST_STEP][PASSED] - b39 = ").trim(): Text of object 'Object Repository/Выручка в рублях/span10 Perc' is: '-100 %'

10-01-2025T04:21:20 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выручка в рублях/span10 Perc' is: '-100 %'

10-01-2025T04:21:20 - [TEST_STEP][PASSED] - b310 = ").trim(): Text of object 'Object Repository/Выручка в рублях/span11 Perc' is: '-89.66 %'

10-01-2025T04:21:20 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выручка в рублях/span11 Perc' is: '-89.66 %'

10-01-2025T04:21:20 - [TEST_STEP][PASSED] - b311 = ").trim(): Text of object 'Object Repository/Выручка в рублях/span12 Perc' is: '-91.46 %'

10-01-2025T04:21:20 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выручка в рублях/span12 Perc' is: '-91.46 %'

10-01-2025T04:21:20 - [TEST_STEP][PASSED] - b312 = ").trim(): Text of object 'Object Repository/Выручка в рублях/span13 Perc' is: '-89.69 %'

10-01-2025T04:21:21 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выручка в рублях/span13 Perc' is: '-89.69 %'

10-01-2025T04:21:21 - [TEST_STEP][PASSED] - b313 = ").trim(): Text of object 'Object Repository/Выручка в рублях/span14 Perc' is: '-100 %'

10-01-2025T04:21:21 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выручка в рублях/span14 Perc' is: '-100 %'

10-01-2025T04:21:21 - [TEST_STEP][PASSED] - b314 = ").trim(): Text of object 'Object Repository/Выручка в рублях/span15 Perc' is: '-100 %'

10-01-2025T04:21:21 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выручка в рублях/span15 Perc' is: '-100 %'

10-01-2025T04:21:21 - [TEST_STEP][PASSED] - b315 = ").trim(): Text of object 'Object Repository/Выручка в рублях/span16 Perc' is: '-93.32 %'

10-01-2025T04:21:22 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выручка в рублях/span16 Perc' is: '-93.32 %'

10-01-2025T04:21:22 - [TEST_STEP][PASSED] - b316 = ").trim(): Text of object 'Object Repository/Выручка в рублях/span17 Perc' is: '-90.23 %'

10-01-2025T04:21:22 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выручка в рублях/span17 Perc' is: '-90.23 %'

10-01-2025T04:21:22 - [TEST_STEP][PASSED] - if (vir == 1 || vir == 2): Text of object 'Object Repository/Выручка в рублях/span18 Perc' is: '-100 %'

10-01-2025T04:21:22 - [TEST_STEP][PASSED] - b317 = ").trim(): Text of object 'Object Repository/Выручка в рублях/span18 Perc' is: '-100 %'

10-01-2025T04:21:22 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выручка в рублях/span18 Perc' is: '-100 %'

10-01-2025T04:21:22 - [TEST_STEP][PASSED] - dZO = "ПАО Россети": null

10-01-2025T04:21:22 - [TEST_STEP][PASSED] - if (verifyEqual(a1, b1) == false): Actual object '1 288 813' and expected object '1 288 813' are equal

10-01-2025T04:21:22 - [MESSAGE][PASSED] - Actual object '1 288 813' and expected object '1 288 813' are equal

10-01-2025T04:21:22 - [TEST_STEP][PASSED] - if (verifyEqual(a2, b2) == false): Actual object '1 293 912' and expected object '1 293 912' are equal

10-01-2025T04:21:22 - [MESSAGE][PASSED] - Actual object '1 293 912' and expected object '1 293 912' are equal

10-01-2025T04:21:22 - [TEST_STEP][PASSED] - vidget = "Отклонения": null

10-01-2025T04:21:22 - [TEST_STEP][FAILED] - if (verifyEqual(a30, b30) == false): null

10-01-2025T04:21:22 - [MESSAGE][FAILED] - Unable to verify equal between actual object '-95.46' and expected object '-95.33' (Root cause: com.kms.katalon.core.exception.StepFailedException: Actual object '-95.46' and expected object '-95.33' are not equal
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.doCall(VerifyEqualKeyword.groovy:58)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.call(VerifyEqualKeyword.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:75)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.verifyEqual(VerifyEqualKeyword.groovy:63)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.execute(VerifyEqualKeyword.groovy:44)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:74)
	at com.kms.katalon.core.keyword.BuiltinKeywords.verifyEqual(BuiltinKeywords.groovy:146)
	at jdk.internal.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at Выручка в рублях сверка дашбордов ПАО Россети.Blocks(Выручка в рублях сверка дашбордов ПАО Россети:357)
	at Выручка в рублях сверка дашбордов ПАО Россети.ViruchkaChange(Выручка в рублях сверка дашбордов ПАО Россети:60)
	at Выручка в рублях сверка дашбордов ПАО Россети.run(Выручка в рублях сверка дашбордов ПАО Россети:55)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:448)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:439)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:418)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:410)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:285)
	at com.kms.katalon.core.common.CommonExecutor.accessTestCaseMainPhase(CommonExecutor.java:65)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:150)
	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:106)
	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:180)
	at TempTestSuite1736466949911.run(TempTestSuite1736466949911.groovy:35)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
)

10-01-2025T04:21:22 - [TEST_STEP][PASSED] - a = replaceAll("\s+", "").toDouble(): null

10-01-2025T04:21:22 - [TEST_STEP][PASSED] - b = replaceAll("\s+", "").toDouble(): null

10-01-2025T04:21:22 - [TEST_STEP][PASSED] - Script1710234207206.WriteToExcel(todaysDate, run, vir, block, typeOfData, viruchka, vidget, nameOfBlock, a, b, dZO): null

10-01-2025T04:21:22 - [TEST_STEP][PASSED] - println(run): null

10-01-2025T04:21:22 - [TEST_STEP][PASSED] - if (run == 1): null

10-01-2025T04:21:22 - [TEST_STEP][PASSED] - else if (run == 2): null

10-01-2025T04:21:22 - [TEST_STEP][PASSED] - typeOfData = "Проценты": null

10-01-2025T04:21:22 - [TEST_STEP][PASSED] - println("todaysDate:" + todaysDate): null

10-01-2025T04:21:22 - [TEST_STEP][PASSED] - println("typeOfData:" + typeOfData): null

10-01-2025T04:21:22 - [TEST_STEP][PASSED] - viruchka = getText(findTestObject("Выручка в рублях/Фильтр Выручка" + nameOfBlock)): Text of object 'Object Repository/Выручка в рублях/Фильтр Выручка Выручка' is: 'ПЕРЕДАЧА ЭЛЕКТРОЭНЕРГИИ (ИТОГО, по всем видам тарифа)'

10-01-2025T04:21:23 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выручка в рублях/Фильтр Выручка Выручка' is: 'ПЕРЕДАЧА ЭЛЕКТРОЭНЕРГИИ (ИТОГО, по всем видам тарифа)'

10-01-2025T04:21:23 - [TEST_STEP][PASSED] - println("viruchka" + viruchka): null

10-01-2025T04:21:23 - [TEST_STEP][PASSED] - println("vidget" + vidget): null

10-01-2025T04:21:23 - [TEST_STEP][PASSED] - println("a" + a): null

10-01-2025T04:21:23 - [TEST_STEP][PASSED] - println("b" + b): null

10-01-2025T04:21:23 - [TEST_STEP][PASSED] - sheetName = "Sheet1": null

10-01-2025T04:21:23 - [TEST_STEP][PASSED] - data = findTestData("PlanFact"): null

10-01-2025T04:21:23 - [TEST_STEP][PASSED] - n = data.getRowNumbers() + 1: null

10-01-2025T04:21:23 - [TEST_STEP][PASSED] - period = getText(findTestObject("Выручка в рублях/Фильтр Период")): Text of object 'Object Repository/Выручка в рублях/Фильтр Период' is: 'Октябрь, Ноябрь и 1, 2, 3 кв. 2024 года'

10-01-2025T04:21:23 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выручка в рублях/Фильтр Период' is: 'Октябрь, Ноябрь и 1, 2, 3 кв. 2024 года'

10-01-2025T04:21:23 - [TEST_STEP][PASSED] - println(period): null

10-01-2025T04:21:23 - [TEST_STEP][PASSED] - dashboardName = "Выручка в рублях": null

10-01-2025T04:21:23 - [TEST_STEP][PASSED] - workbook01 = getWorkbook(excelFilePath): null

10-01-2025T04:21:23 - [TEST_STEP][PASSED] - sheet01 = getExcelSheet(workbook01, sheetName): null

10-01-2025T04:21:23 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 0, dashboardName): null

10-01-2025T04:21:23 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 1, dZO): null

10-01-2025T04:21:23 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 2, vidget): null

10-01-2025T04:21:23 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 3, viruchka): null

10-01-2025T04:21:23 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 4, typeOfData): null

10-01-2025T04:21:23 - [TEST_STEP][PASSED] - if (a == null): null

10-01-2025T04:21:23 - [TEST_STEP][PASSED] - else: null

10-01-2025T04:21:23 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 5, a): null

10-01-2025T04:21:23 - [TEST_STEP][PASSED] - if (b == null): null

10-01-2025T04:21:23 - [TEST_STEP][PASSED] - else: null

10-01-2025T04:21:23 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 6, b): null

10-01-2025T04:21:23 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 7, period): null

10-01-2025T04:21:23 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 8, todaysDate): null

10-01-2025T04:21:23 - [TEST_STEP][PASSED] - n = n + 1: null

10-01-2025T04:21:23 - [TEST_STEP][PASSED] - saveWorkbook(excelFilePath, workbook01): null

10-01-2025T04:21:23 - [TEST_STEP][PASSED] - dZO = "АО «Тываэнерго»": null

10-01-2025T04:21:23 - [TEST_STEP][PASSED] - if (verifyEqual(a31, b31) == false): Actual object '-100' and expected object '-100' are equal

10-01-2025T04:21:23 - [MESSAGE][PASSED] - Actual object '-100' and expected object '-100' are equal

10-01-2025T04:21:23 - [TEST_STEP][PASSED] - dZO = "АО «Чеченэнерго»": null

10-01-2025T04:21:23 - [TEST_STEP][FAILED] - if (verifyEqual(a32, b32) == false): null

10-01-2025T04:21:23 - [MESSAGE][FAILED] - Unable to verify equal between actual object '-94.89' and expected object '-94.45' (Root cause: com.kms.katalon.core.exception.StepFailedException: Actual object '-94.89' and expected object '-94.45' are not equal
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.doCall(VerifyEqualKeyword.groovy:58)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.call(VerifyEqualKeyword.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:75)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.verifyEqual(VerifyEqualKeyword.groovy:63)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.execute(VerifyEqualKeyword.groovy:44)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:74)
	at com.kms.katalon.core.keyword.BuiltinKeywords.verifyEqual(BuiltinKeywords.groovy:146)
	at jdk.internal.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at Выручка в рублях сверка дашбордов ПАО Россети.Blocks(Выручка в рублях сверка дашбордов ПАО Россети:377)
	at Выручка в рублях сверка дашбордов ПАО Россети.ViruchkaChange(Выручка в рублях сверка дашбордов ПАО Россети:60)
	at Выручка в рублях сверка дашбордов ПАО Россети.run(Выручка в рублях сверка дашбордов ПАО Россети:55)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:448)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:439)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:418)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:410)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:285)
	at com.kms.katalon.core.common.CommonExecutor.accessTestCaseMainPhase(CommonExecutor.java:65)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:150)
	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:106)
	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:180)
	at TempTestSuite1736466949911.run(TempTestSuite1736466949911.groovy:35)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
)

10-01-2025T04:21:23 - [TEST_STEP][PASSED] - a = replaceAll("\s+", "").toDouble(): null

10-01-2025T04:21:23 - [TEST_STEP][PASSED] - b = replaceAll("\s+", "").toDouble(): null

10-01-2025T04:21:23 - [TEST_STEP][PASSED] - Script1710234207206.WriteToExcel(todaysDate, run, vir, block, typeOfData, viruchka, vidget, nameOfBlock, a, b, dZO): null

10-01-2025T04:21:23 - [TEST_STEP][PASSED] - println(run): null

10-01-2025T04:21:23 - [TEST_STEP][PASSED] - if (run == 1): null

10-01-2025T04:21:23 - [TEST_STEP][PASSED] - else if (run == 2): null

10-01-2025T04:21:23 - [TEST_STEP][PASSED] - typeOfData = "Проценты": null

10-01-2025T04:21:23 - [TEST_STEP][PASSED] - println("todaysDate:" + todaysDate): null

10-01-2025T04:21:23 - [TEST_STEP][PASSED] - println("typeOfData:" + typeOfData): null

10-01-2025T04:21:23 - [TEST_STEP][PASSED] - viruchka = getText(findTestObject("Выручка в рублях/Фильтр Выручка" + nameOfBlock)): Text of object 'Object Repository/Выручка в рублях/Фильтр Выручка Выручка' is: 'ПЕРЕДАЧА ЭЛЕКТРОЭНЕРГИИ (ИТОГО, по всем видам тарифа)'

10-01-2025T04:21:24 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выручка в рублях/Фильтр Выручка Выручка' is: 'ПЕРЕДАЧА ЭЛЕКТРОЭНЕРГИИ (ИТОГО, по всем видам тарифа)'

10-01-2025T04:21:24 - [TEST_STEP][PASSED] - println("viruchka" + viruchka): null

10-01-2025T04:21:24 - [TEST_STEP][PASSED] - println("vidget" + vidget): null

10-01-2025T04:21:24 - [TEST_STEP][PASSED] - println("a" + a): null

10-01-2025T04:21:24 - [TEST_STEP][PASSED] - println("b" + b): null

10-01-2025T04:21:24 - [TEST_STEP][PASSED] - sheetName = "Sheet1": null

10-01-2025T04:21:24 - [TEST_STEP][PASSED] - data = findTestData("PlanFact"): null

10-01-2025T04:21:24 - [TEST_STEP][PASSED] - n = data.getRowNumbers() + 1: null

10-01-2025T04:21:24 - [TEST_STEP][PASSED] - period = getText(findTestObject("Выручка в рублях/Фильтр Период")): Text of object 'Object Repository/Выручка в рублях/Фильтр Период' is: 'Октябрь, Ноябрь и 1, 2, 3 кв. 2024 года'

10-01-2025T04:21:24 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выручка в рублях/Фильтр Период' is: 'Октябрь, Ноябрь и 1, 2, 3 кв. 2024 года'

10-01-2025T04:21:24 - [TEST_STEP][PASSED] - println(period): null

10-01-2025T04:21:24 - [TEST_STEP][PASSED] - dashboardName = "Выручка в рублях": null

10-01-2025T04:21:24 - [TEST_STEP][PASSED] - workbook01 = getWorkbook(excelFilePath): null

10-01-2025T04:21:24 - [TEST_STEP][PASSED] - sheet01 = getExcelSheet(workbook01, sheetName): null

10-01-2025T04:21:24 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 0, dashboardName): null

10-01-2025T04:21:24 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 1, dZO): null

10-01-2025T04:21:24 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 2, vidget): null

10-01-2025T04:21:24 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 3, viruchka): null

10-01-2025T04:21:24 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 4, typeOfData): null

10-01-2025T04:21:24 - [TEST_STEP][PASSED] - if (a == null): null

10-01-2025T04:21:24 - [TEST_STEP][PASSED] - else: null

10-01-2025T04:21:24 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 5, a): null

10-01-2025T04:21:24 - [TEST_STEP][PASSED] - if (b == null): null

10-01-2025T04:21:24 - [TEST_STEP][PASSED] - else: null

10-01-2025T04:21:24 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 6, b): null

10-01-2025T04:21:24 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 7, period): null

10-01-2025T04:21:24 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 8, todaysDate): null

10-01-2025T04:21:24 - [TEST_STEP][PASSED] - n = n + 1: null

10-01-2025T04:21:24 - [TEST_STEP][PASSED] - saveWorkbook(excelFilePath, workbook01): null

10-01-2025T04:21:24 - [TEST_STEP][PASSED] - dZO = "Россети Волга": null

10-01-2025T04:21:24 - [TEST_STEP][FAILED] - if (verifyEqual(a33, b33) == false): null

10-01-2025T04:21:24 - [MESSAGE][FAILED] - Unable to verify equal between actual object '-90.7' and expected object '-89.76' (Root cause: com.kms.katalon.core.exception.StepFailedException: Actual object '-90.7' and expected object '-89.76' are not equal
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.doCall(VerifyEqualKeyword.groovy:58)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.call(VerifyEqualKeyword.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:75)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.verifyEqual(VerifyEqualKeyword.groovy:63)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.execute(VerifyEqualKeyword.groovy:44)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:74)
	at com.kms.katalon.core.keyword.BuiltinKeywords.verifyEqual(BuiltinKeywords.groovy:146)
	at jdk.internal.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at Выручка в рублях сверка дашбордов ПАО Россети.Blocks(Выручка в рублях сверка дашбордов ПАО Россети:387)
	at Выручка в рублях сверка дашбордов ПАО Россети.ViruchkaChange(Выручка в рублях сверка дашбордов ПАО Россети:60)
	at Выручка в рублях сверка дашбордов ПАО Россети.run(Выручка в рублях сверка дашбордов ПАО Россети:55)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:448)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:439)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:418)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:410)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:285)
	at com.kms.katalon.core.common.CommonExecutor.accessTestCaseMainPhase(CommonExecutor.java:65)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:150)
	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:106)
	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:180)
	at TempTestSuite1736466949911.run(TempTestSuite1736466949911.groovy:35)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
)

10-01-2025T04:21:24 - [TEST_STEP][PASSED] - a = replaceAll("\s+", "").toDouble(): null

10-01-2025T04:21:24 - [TEST_STEP][PASSED] - b = replaceAll("\s+", "").toDouble(): null

10-01-2025T04:21:24 - [TEST_STEP][PASSED] - Script1710234207206.WriteToExcel(todaysDate, run, vir, block, typeOfData, viruchka, vidget, nameOfBlock, a, b, dZO): null

10-01-2025T04:21:24 - [TEST_STEP][PASSED] - println(run): null

10-01-2025T04:21:24 - [TEST_STEP][PASSED] - if (run == 1): null

10-01-2025T04:21:24 - [TEST_STEP][PASSED] - else if (run == 2): null

10-01-2025T04:21:24 - [TEST_STEP][PASSED] - typeOfData = "Проценты": null

10-01-2025T04:21:24 - [TEST_STEP][PASSED] - println("todaysDate:" + todaysDate): null

10-01-2025T04:21:24 - [TEST_STEP][PASSED] - println("typeOfData:" + typeOfData): null

10-01-2025T04:21:24 - [TEST_STEP][PASSED] - viruchka = getText(findTestObject("Выручка в рублях/Фильтр Выручка" + nameOfBlock)): Text of object 'Object Repository/Выручка в рублях/Фильтр Выручка Выручка' is: 'ПЕРЕДАЧА ЭЛЕКТРОЭНЕРГИИ (ИТОГО, по всем видам тарифа)'

10-01-2025T04:21:24 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выручка в рублях/Фильтр Выручка Выручка' is: 'ПЕРЕДАЧА ЭЛЕКТРОЭНЕРГИИ (ИТОГО, по всем видам тарифа)'

10-01-2025T04:21:24 - [TEST_STEP][PASSED] - println("viruchka" + viruchka): null

10-01-2025T04:21:24 - [TEST_STEP][PASSED] - println("vidget" + vidget): null

10-01-2025T04:21:25 - [TEST_STEP][PASSED] - println("a" + a): null

10-01-2025T04:21:25 - [TEST_STEP][PASSED] - println("b" + b): null

10-01-2025T04:21:25 - [TEST_STEP][PASSED] - sheetName = "Sheet1": null

10-01-2025T04:21:25 - [TEST_STEP][PASSED] - data = findTestData("PlanFact"): null

10-01-2025T04:21:25 - [TEST_STEP][PASSED] - n = data.getRowNumbers() + 1: null

10-01-2025T04:21:25 - [TEST_STEP][PASSED] - period = getText(findTestObject("Выручка в рублях/Фильтр Период")): Text of object 'Object Repository/Выручка в рублях/Фильтр Период' is: 'Октябрь, Ноябрь и 1, 2, 3 кв. 2024 года'

10-01-2025T04:21:25 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выручка в рублях/Фильтр Период' is: 'Октябрь, Ноябрь и 1, 2, 3 кв. 2024 года'

10-01-2025T04:21:25 - [TEST_STEP][PASSED] - println(period): null

10-01-2025T04:21:25 - [TEST_STEP][PASSED] - dashboardName = "Выручка в рублях": null

10-01-2025T04:21:25 - [TEST_STEP][PASSED] - workbook01 = getWorkbook(excelFilePath): null

10-01-2025T04:21:25 - [TEST_STEP][PASSED] - sheet01 = getExcelSheet(workbook01, sheetName): null

10-01-2025T04:21:25 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 0, dashboardName): null

10-01-2025T04:21:25 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 1, dZO): null

10-01-2025T04:21:25 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 2, vidget): null

10-01-2025T04:21:25 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 3, viruchka): null

10-01-2025T04:21:25 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 4, typeOfData): null

10-01-2025T04:21:25 - [TEST_STEP][PASSED] - if (a == null): null

10-01-2025T04:21:25 - [TEST_STEP][PASSED] - else: null

10-01-2025T04:21:25 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 5, a): null

10-01-2025T04:21:25 - [TEST_STEP][PASSED] - if (b == null): null

10-01-2025T04:21:25 - [TEST_STEP][PASSED] - else: null

10-01-2025T04:21:25 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 6, b): null

10-01-2025T04:21:25 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 7, period): null

10-01-2025T04:21:25 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 8, todaysDate): null

10-01-2025T04:21:25 - [TEST_STEP][PASSED] - n = n + 1: null

10-01-2025T04:21:25 - [TEST_STEP][PASSED] - saveWorkbook(excelFilePath, workbook01): null

10-01-2025T04:21:25 - [TEST_STEP][PASSED] - dZO = "Россети Кубань": null

10-01-2025T04:21:25 - [TEST_STEP][FAILED] - if (verifyEqual(a34, b34) == false): null

10-01-2025T04:21:25 - [MESSAGE][FAILED] - Unable to verify equal between actual object '-91.02' and expected object '-90.21' (Root cause: com.kms.katalon.core.exception.StepFailedException: Actual object '-91.02' and expected object '-90.21' are not equal
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.doCall(VerifyEqualKeyword.groovy:58)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.call(VerifyEqualKeyword.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:75)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.verifyEqual(VerifyEqualKeyword.groovy:63)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.execute(VerifyEqualKeyword.groovy:44)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:74)
	at com.kms.katalon.core.keyword.BuiltinKeywords.verifyEqual(BuiltinKeywords.groovy:146)
	at jdk.internal.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at Выручка в рублях сверка дашбордов ПАО Россети.Blocks(Выручка в рублях сверка дашбордов ПАО Россети:397)
	at Выручка в рублях сверка дашбордов ПАО Россети.ViruchkaChange(Выручка в рублях сверка дашбордов ПАО Россети:60)
	at Выручка в рублях сверка дашбордов ПАО Россети.run(Выручка в рублях сверка дашбордов ПАО Россети:55)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:448)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:439)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:418)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:410)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:285)
	at com.kms.katalon.core.common.CommonExecutor.accessTestCaseMainPhase(CommonExecutor.java:65)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:150)
	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:106)
	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:180)
	at TempTestSuite1736466949911.run(TempTestSuite1736466949911.groovy:35)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
)

10-01-2025T04:21:25 - [TEST_STEP][PASSED] - a = replaceAll("\s+", "").toDouble(): null

10-01-2025T04:21:25 - [TEST_STEP][PASSED] - b = replaceAll("\s+", "").toDouble(): null

10-01-2025T04:21:25 - [TEST_STEP][PASSED] - Script1710234207206.WriteToExcel(todaysDate, run, vir, block, typeOfData, viruchka, vidget, nameOfBlock, a, b, dZO): null

10-01-2025T04:21:25 - [TEST_STEP][PASSED] - println(run): null

10-01-2025T04:21:25 - [TEST_STEP][PASSED] - if (run == 1): null

10-01-2025T04:21:25 - [TEST_STEP][PASSED] - else if (run == 2): null

10-01-2025T04:21:25 - [TEST_STEP][PASSED] - typeOfData = "Проценты": null

10-01-2025T04:21:25 - [TEST_STEP][PASSED] - println("todaysDate:" + todaysDate): null

10-01-2025T04:21:25 - [TEST_STEP][PASSED] - println("typeOfData:" + typeOfData): null

10-01-2025T04:21:25 - [TEST_STEP][PASSED] - viruchka = getText(findTestObject("Выручка в рублях/Фильтр Выручка" + nameOfBlock)): Text of object 'Object Repository/Выручка в рублях/Фильтр Выручка Выручка' is: 'ПЕРЕДАЧА ЭЛЕКТРОЭНЕРГИИ (ИТОГО, по всем видам тарифа)'

10-01-2025T04:21:26 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выручка в рублях/Фильтр Выручка Выручка' is: 'ПЕРЕДАЧА ЭЛЕКТРОЭНЕРГИИ (ИТОГО, по всем видам тарифа)'

10-01-2025T04:21:26 - [TEST_STEP][PASSED] - println("viruchka" + viruchka): null

10-01-2025T04:21:26 - [TEST_STEP][PASSED] - println("vidget" + vidget): null

10-01-2025T04:21:26 - [TEST_STEP][PASSED] - println("a" + a): null

10-01-2025T04:21:26 - [TEST_STEP][PASSED] - println("b" + b): null

10-01-2025T04:21:26 - [TEST_STEP][PASSED] - sheetName = "Sheet1": null

10-01-2025T04:21:26 - [TEST_STEP][PASSED] - data = findTestData("PlanFact"): null

10-01-2025T04:21:26 - [TEST_STEP][PASSED] - n = data.getRowNumbers() + 1: null

10-01-2025T04:21:26 - [TEST_STEP][PASSED] - period = getText(findTestObject("Выручка в рублях/Фильтр Период")): Text of object 'Object Repository/Выручка в рублях/Фильтр Период' is: 'Октябрь, Ноябрь и 1, 2, 3 кв. 2024 года'

10-01-2025T04:21:26 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выручка в рублях/Фильтр Период' is: 'Октябрь, Ноябрь и 1, 2, 3 кв. 2024 года'

10-01-2025T04:21:26 - [TEST_STEP][PASSED] - println(period): null

10-01-2025T04:21:26 - [TEST_STEP][PASSED] - dashboardName = "Выручка в рублях": null

10-01-2025T04:21:26 - [TEST_STEP][PASSED] - workbook01 = getWorkbook(excelFilePath): null

10-01-2025T04:21:26 - [TEST_STEP][PASSED] - sheet01 = getExcelSheet(workbook01, sheetName): null

10-01-2025T04:21:26 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 0, dashboardName): null

10-01-2025T04:21:26 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 1, dZO): null

10-01-2025T04:21:26 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 2, vidget): null

10-01-2025T04:21:26 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 3, viruchka): null

10-01-2025T04:21:26 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 4, typeOfData): null

10-01-2025T04:21:26 - [TEST_STEP][PASSED] - if (a == null): null

10-01-2025T04:21:26 - [TEST_STEP][PASSED] - else: null

10-01-2025T04:21:26 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 5, a): null

10-01-2025T04:21:26 - [TEST_STEP][PASSED] - if (b == null): null

10-01-2025T04:21:26 - [TEST_STEP][PASSED] - else: null

10-01-2025T04:21:26 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 6, b): null

10-01-2025T04:21:26 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 7, period): null

10-01-2025T04:21:26 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 8, todaysDate): null

10-01-2025T04:21:26 - [TEST_STEP][PASSED] - n = n + 1: null

10-01-2025T04:21:26 - [TEST_STEP][PASSED] - saveWorkbook(excelFilePath, workbook01): null

10-01-2025T04:21:26 - [TEST_STEP][PASSED] - dZO = "Россети Ленэнерго (ГК)": null

10-01-2025T04:21:26 - [TEST_STEP][FAILED] - if (verifyEqual(a35, b35) == false): null

10-01-2025T04:21:26 - [MESSAGE][FAILED] - Unable to verify equal between actual object '-90.02' and expected object '-88.99' (Root cause: com.kms.katalon.core.exception.StepFailedException: Actual object '-90.02' and expected object '-88.99' are not equal
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.doCall(VerifyEqualKeyword.groovy:58)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.call(VerifyEqualKeyword.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:75)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.verifyEqual(VerifyEqualKeyword.groovy:63)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.execute(VerifyEqualKeyword.groovy:44)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:74)
	at com.kms.katalon.core.keyword.BuiltinKeywords.verifyEqual(BuiltinKeywords.groovy:146)
	at jdk.internal.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at Выручка в рублях сверка дашбордов ПАО Россети.Blocks(Выручка в рублях сверка дашбордов ПАО Россети:407)
	at Выручка в рублях сверка дашбордов ПАО Россети.ViruchkaChange(Выручка в рублях сверка дашбордов ПАО Россети:60)
	at Выручка в рублях сверка дашбордов ПАО Россети.run(Выручка в рублях сверка дашбордов ПАО Россети:55)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:448)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:439)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:418)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:410)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:285)
	at com.kms.katalon.core.common.CommonExecutor.accessTestCaseMainPhase(CommonExecutor.java:65)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:150)
	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:106)
	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:180)
	at TempTestSuite1736466949911.run(TempTestSuite1736466949911.groovy:35)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
)

10-01-2025T04:21:26 - [TEST_STEP][PASSED] - a = replaceAll("\s+", "").toDouble(): null

10-01-2025T04:21:26 - [TEST_STEP][PASSED] - b = replaceAll("\s+", "").toDouble(): null

10-01-2025T04:21:26 - [TEST_STEP][PASSED] - Script1710234207206.WriteToExcel(todaysDate, run, vir, block, typeOfData, viruchka, vidget, nameOfBlock, a, b, dZO): null

10-01-2025T04:21:26 - [TEST_STEP][PASSED] - println(run): null

10-01-2025T04:21:26 - [TEST_STEP][PASSED] - if (run == 1): null

10-01-2025T04:21:26 - [TEST_STEP][PASSED] - else if (run == 2): null

10-01-2025T04:21:26 - [TEST_STEP][PASSED] - typeOfData = "Проценты": null

10-01-2025T04:21:26 - [TEST_STEP][PASSED] - println("todaysDate:" + todaysDate): null

10-01-2025T04:21:26 - [TEST_STEP][PASSED] - println("typeOfData:" + typeOfData): null

10-01-2025T04:21:26 - [TEST_STEP][PASSED] - viruchka = getText(findTestObject("Выручка в рублях/Фильтр Выручка" + nameOfBlock)): Text of object 'Object Repository/Выручка в рублях/Фильтр Выручка Выручка' is: 'ПЕРЕДАЧА ЭЛЕКТРОЭНЕРГИИ (ИТОГО, по всем видам тарифа)'

10-01-2025T04:21:26 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выручка в рублях/Фильтр Выручка Выручка' is: 'ПЕРЕДАЧА ЭЛЕКТРОЭНЕРГИИ (ИТОГО, по всем видам тарифа)'

10-01-2025T04:21:26 - [TEST_STEP][PASSED] - println("viruchka" + viruchka): null

10-01-2025T04:21:27 - [TEST_STEP][PASSED] - println("vidget" + vidget): null

10-01-2025T04:21:27 - [TEST_STEP][PASSED] - println("a" + a): null

10-01-2025T04:21:27 - [TEST_STEP][PASSED] - println("b" + b): null

10-01-2025T04:21:27 - [TEST_STEP][PASSED] - sheetName = "Sheet1": null

10-01-2025T04:21:27 - [TEST_STEP][PASSED] - data = findTestData("PlanFact"): null

10-01-2025T04:21:27 - [TEST_STEP][PASSED] - n = data.getRowNumbers() + 1: null

10-01-2025T04:21:27 - [TEST_STEP][PASSED] - period = getText(findTestObject("Выручка в рублях/Фильтр Период")): Text of object 'Object Repository/Выручка в рублях/Фильтр Период' is: 'Октябрь, Ноябрь и 1, 2, 3 кв. 2024 года'

10-01-2025T04:21:27 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выручка в рублях/Фильтр Период' is: 'Октябрь, Ноябрь и 1, 2, 3 кв. 2024 года'

10-01-2025T04:21:27 - [TEST_STEP][PASSED] - println(period): null

10-01-2025T04:21:27 - [TEST_STEP][PASSED] - dashboardName = "Выручка в рублях": null

10-01-2025T04:21:27 - [TEST_STEP][PASSED] - workbook01 = getWorkbook(excelFilePath): null

10-01-2025T04:21:27 - [TEST_STEP][PASSED] - sheet01 = getExcelSheet(workbook01, sheetName): null

10-01-2025T04:21:27 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 0, dashboardName): null

10-01-2025T04:21:27 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 1, dZO): null

10-01-2025T04:21:27 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 2, vidget): null

10-01-2025T04:21:27 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 3, viruchka): null

10-01-2025T04:21:27 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 4, typeOfData): null

10-01-2025T04:21:27 - [TEST_STEP][PASSED] - if (a == null): null

10-01-2025T04:21:27 - [TEST_STEP][PASSED] - else: null

10-01-2025T04:21:27 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 5, a): null

10-01-2025T04:21:27 - [TEST_STEP][PASSED] - if (b == null): null

10-01-2025T04:21:27 - [TEST_STEP][PASSED] - else: null

10-01-2025T04:21:27 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 6, b): null

10-01-2025T04:21:27 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 7, period): null

10-01-2025T04:21:27 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 8, todaysDate): null

10-01-2025T04:21:27 - [TEST_STEP][PASSED] - n = n + 1: null

10-01-2025T04:21:27 - [TEST_STEP][PASSED] - saveWorkbook(excelFilePath, workbook01): null

10-01-2025T04:21:27 - [TEST_STEP][PASSED] - dZO = "Россети Московский регион": null

10-01-2025T04:21:27 - [TEST_STEP][PASSED] - if (verifyEqual(a36, b36) == false): Actual object '-100' and expected object '-100' are equal

10-01-2025T04:21:27 - [MESSAGE][PASSED] - Actual object '-100' and expected object '-100' are equal

10-01-2025T04:21:27 - [TEST_STEP][PASSED] - dZO = "Россети Северный Кавказ (ГК)": null

10-01-2025T04:21:27 - [TEST_STEP][FAILED] - if (verifyEqual(a37, b37) == false): null

10-01-2025T04:21:27 - [MESSAGE][FAILED] - Unable to verify equal between actual object '-90.75' and expected object '-89.81' (Root cause: com.kms.katalon.core.exception.StepFailedException: Actual object '-90.75' and expected object '-89.81' are not equal
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.doCall(VerifyEqualKeyword.groovy:58)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.call(VerifyEqualKeyword.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:75)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.verifyEqual(VerifyEqualKeyword.groovy:63)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.execute(VerifyEqualKeyword.groovy:44)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:74)
	at com.kms.katalon.core.keyword.BuiltinKeywords.verifyEqual(BuiltinKeywords.groovy:146)
	at jdk.internal.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at Выручка в рублях сверка дашбордов ПАО Россети.Blocks(Выручка в рублях сверка дашбордов ПАО Россети:427)
	at Выручка в рублях сверка дашбордов ПАО Россети.ViruchkaChange(Выручка в рублях сверка дашбордов ПАО Россети:60)
	at Выручка в рублях сверка дашбордов ПАО Россети.run(Выручка в рублях сверка дашбордов ПАО Россети:55)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:448)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:439)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:418)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:410)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:285)
	at com.kms.katalon.core.common.CommonExecutor.accessTestCaseMainPhase(CommonExecutor.java:65)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:150)
	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:106)
	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:180)
	at TempTestSuite1736466949911.run(TempTestSuite1736466949911.groovy:35)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
)

10-01-2025T04:21:27 - [TEST_STEP][PASSED] - a = replaceAll("\s+", "").toDouble(): null

10-01-2025T04:21:27 - [TEST_STEP][PASSED] - b = replaceAll("\s+", "").toDouble(): null

10-01-2025T04:21:27 - [TEST_STEP][PASSED] - Script1710234207206.WriteToExcel(todaysDate, run, vir, block, typeOfData, viruchka, vidget, nameOfBlock, a, b, dZO): null

10-01-2025T04:21:27 - [TEST_STEP][PASSED] - println(run): null

10-01-2025T04:21:27 - [TEST_STEP][PASSED] - if (run == 1): null

10-01-2025T04:21:27 - [TEST_STEP][PASSED] - else if (run == 2): null

10-01-2025T04:21:27 - [TEST_STEP][PASSED] - typeOfData = "Проценты": null

10-01-2025T04:21:27 - [TEST_STEP][PASSED] - println("todaysDate:" + todaysDate): null

10-01-2025T04:21:27 - [TEST_STEP][PASSED] - println("typeOfData:" + typeOfData): null

10-01-2025T04:21:27 - [TEST_STEP][PASSED] - viruchka = getText(findTestObject("Выручка в рублях/Фильтр Выручка" + nameOfBlock)): Text of object 'Object Repository/Выручка в рублях/Фильтр Выручка Выручка' is: 'ПЕРЕДАЧА ЭЛЕКТРОЭНЕРГИИ (ИТОГО, по всем видам тарифа)'

10-01-2025T04:21:27 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выручка в рублях/Фильтр Выручка Выручка' is: 'ПЕРЕДАЧА ЭЛЕКТРОЭНЕРГИИ (ИТОГО, по всем видам тарифа)'

10-01-2025T04:21:27 - [TEST_STEP][PASSED] - println("viruchka" + viruchka): null

10-01-2025T04:21:27 - [TEST_STEP][PASSED] - println("vidget" + vidget): null

10-01-2025T04:21:27 - [TEST_STEP][PASSED] - println("a" + a): null

10-01-2025T04:21:27 - [TEST_STEP][PASSED] - println("b" + b): null

10-01-2025T04:21:27 - [TEST_STEP][PASSED] - sheetName = "Sheet1": null

10-01-2025T04:21:27 - [TEST_STEP][PASSED] - data = findTestData("PlanFact"): null

10-01-2025T04:21:28 - [TEST_STEP][PASSED] - n = data.getRowNumbers() + 1: null

10-01-2025T04:21:28 - [TEST_STEP][PASSED] - period = getText(findTestObject("Выручка в рублях/Фильтр Период")): Text of object 'Object Repository/Выручка в рублях/Фильтр Период' is: 'Октябрь, Ноябрь и 1, 2, 3 кв. 2024 года'

10-01-2025T04:21:28 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выручка в рублях/Фильтр Период' is: 'Октябрь, Ноябрь и 1, 2, 3 кв. 2024 года'

10-01-2025T04:21:28 - [TEST_STEP][PASSED] - println(period): null

10-01-2025T04:21:28 - [TEST_STEP][PASSED] - dashboardName = "Выручка в рублях": null

10-01-2025T04:21:28 - [TEST_STEP][PASSED] - workbook01 = getWorkbook(excelFilePath): null

10-01-2025T04:21:28 - [TEST_STEP][PASSED] - sheet01 = getExcelSheet(workbook01, sheetName): null

10-01-2025T04:21:28 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 0, dashboardName): null

10-01-2025T04:21:28 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 1, dZO): null

10-01-2025T04:21:28 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 2, vidget): null

10-01-2025T04:21:28 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 3, viruchka): null

10-01-2025T04:21:28 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 4, typeOfData): null

10-01-2025T04:21:28 - [TEST_STEP][PASSED] - if (a == null): null

10-01-2025T04:21:28 - [TEST_STEP][PASSED] - else: null

10-01-2025T04:21:28 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 5, a): null

10-01-2025T04:21:28 - [TEST_STEP][PASSED] - if (b == null): null

10-01-2025T04:21:28 - [TEST_STEP][PASSED] - else: null

10-01-2025T04:21:28 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 6, b): null

10-01-2025T04:21:28 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 7, period): null

10-01-2025T04:21:28 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 8, todaysDate): null

10-01-2025T04:21:28 - [TEST_STEP][PASSED] - n = n + 1: null

10-01-2025T04:21:28 - [TEST_STEP][PASSED] - saveWorkbook(excelFilePath, workbook01): null

10-01-2025T04:21:28 - [TEST_STEP][PASSED] - dZO = "Россети Северо-Запад": null

10-01-2025T04:21:28 - [TEST_STEP][PASSED] - if (verifyEqual(a38, b38) == false): Actual object '-89.48' and expected object '-89.48' are equal

10-01-2025T04:21:28 - [MESSAGE][PASSED] - Actual object '-89.48' and expected object '-89.48' are equal

10-01-2025T04:21:28 - [TEST_STEP][PASSED] - dZO = "Россети Сибирь (ГК)": null

10-01-2025T04:21:28 - [TEST_STEP][PASSED] - if (verifyEqual(a39, b39) == false): Actual object '-100' and expected object '-100' are equal

10-01-2025T04:21:28 - [MESSAGE][PASSED] - Actual object '-100' and expected object '-100' are equal

10-01-2025T04:21:28 - [TEST_STEP][PASSED] - dZO = "Россети Томск": null

10-01-2025T04:21:28 - [TEST_STEP][FAILED] - if (verifyEqual(a310, b310) == false): null

10-01-2025T04:21:28 - [MESSAGE][FAILED] - Unable to verify equal between actual object '-90.63' and expected object '-89.66' (Root cause: com.kms.katalon.core.exception.StepFailedException: Actual object '-90.63' and expected object '-89.66' are not equal
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.doCall(VerifyEqualKeyword.groovy:58)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.call(VerifyEqualKeyword.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:75)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.verifyEqual(VerifyEqualKeyword.groovy:63)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.execute(VerifyEqualKeyword.groovy:44)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:74)
	at com.kms.katalon.core.keyword.BuiltinKeywords.verifyEqual(BuiltinKeywords.groovy:146)
	at jdk.internal.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at Выручка в рублях сверка дашбордов ПАО Россети.Blocks(Выручка в рублях сверка дашбордов ПАО Россети:457)
	at Выручка в рублях сверка дашбордов ПАО Россети.ViruchkaChange(Выручка в рублях сверка дашбордов ПАО Россети:60)
	at Выручка в рублях сверка дашбордов ПАО Россети.run(Выручка в рублях сверка дашбордов ПАО Россети:55)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:448)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:439)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:418)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:410)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:285)
	at com.kms.katalon.core.common.CommonExecutor.accessTestCaseMainPhase(CommonExecutor.java:65)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:150)
	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:106)
	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:180)
	at TempTestSuite1736466949911.run(TempTestSuite1736466949911.groovy:35)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
)

10-01-2025T04:21:28 - [TEST_STEP][PASSED] - a = replaceAll("\s+", "").toDouble(): null

10-01-2025T04:21:28 - [TEST_STEP][PASSED] - b = replaceAll("\s+", "").toDouble(): null

10-01-2025T04:21:28 - [TEST_STEP][PASSED] - Script1710234207206.WriteToExcel(todaysDate, run, vir, block, typeOfData, viruchka, vidget, nameOfBlock, a, b, dZO): null

10-01-2025T04:21:28 - [TEST_STEP][PASSED] - println(run): null

10-01-2025T04:21:28 - [TEST_STEP][PASSED] - if (run == 1): null

10-01-2025T04:21:28 - [TEST_STEP][PASSED] - else if (run == 2): null

10-01-2025T04:21:28 - [TEST_STEP][PASSED] - typeOfData = "Проценты": null

10-01-2025T04:21:28 - [TEST_STEP][PASSED] - println("todaysDate:" + todaysDate): null

10-01-2025T04:21:28 - [TEST_STEP][PASSED] - println("typeOfData:" + typeOfData): null

10-01-2025T04:21:28 - [TEST_STEP][PASSED] - viruchka = getText(findTestObject("Выручка в рублях/Фильтр Выручка" + nameOfBlock)): Text of object 'Object Repository/Выручка в рублях/Фильтр Выручка Выручка' is: 'ПЕРЕДАЧА ЭЛЕКТРОЭНЕРГИИ (ИТОГО, по всем видам тарифа)'

10-01-2025T04:21:28 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выручка в рублях/Фильтр Выручка Выручка' is: 'ПЕРЕДАЧА ЭЛЕКТРОЭНЕРГИИ (ИТОГО, по всем видам тарифа)'

10-01-2025T04:21:28 - [TEST_STEP][PASSED] - println("viruchka" + viruchka): null

10-01-2025T04:21:28 - [TEST_STEP][PASSED] - println("vidget" + vidget): null

10-01-2025T04:21:28 - [TEST_STEP][PASSED] - println("a" + a): null

10-01-2025T04:21:28 - [TEST_STEP][PASSED] - println("b" + b): null

10-01-2025T04:21:28 - [TEST_STEP][PASSED] - sheetName = "Sheet1": null

10-01-2025T04:21:28 - [TEST_STEP][PASSED] - data = findTestData("PlanFact"): null

10-01-2025T04:21:28 - [TEST_STEP][PASSED] - n = data.getRowNumbers() + 1: null

10-01-2025T04:21:28 - [TEST_STEP][PASSED] - period = getText(findTestObject("Выручка в рублях/Фильтр Период")): Text of object 'Object Repository/Выручка в рублях/Фильтр Период' is: 'Октябрь, Ноябрь и 1, 2, 3 кв. 2024 года'

10-01-2025T04:21:29 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выручка в рублях/Фильтр Период' is: 'Октябрь, Ноябрь и 1, 2, 3 кв. 2024 года'

10-01-2025T04:21:29 - [TEST_STEP][PASSED] - println(period): null

10-01-2025T04:21:29 - [TEST_STEP][PASSED] - dashboardName = "Выручка в рублях": null

10-01-2025T04:21:29 - [TEST_STEP][PASSED] - workbook01 = getWorkbook(excelFilePath): null

10-01-2025T04:21:29 - [TEST_STEP][PASSED] - sheet01 = getExcelSheet(workbook01, sheetName): null

10-01-2025T04:21:29 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 0, dashboardName): null

10-01-2025T04:21:29 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 1, dZO): null

10-01-2025T04:21:29 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 2, vidget): null

10-01-2025T04:21:29 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 3, viruchka): null

10-01-2025T04:21:29 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 4, typeOfData): null

10-01-2025T04:21:29 - [TEST_STEP][PASSED] - if (a == null): null

10-01-2025T04:21:29 - [TEST_STEP][PASSED] - else: null

10-01-2025T04:21:29 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 5, a): null

10-01-2025T04:21:29 - [TEST_STEP][PASSED] - if (b == null): null

10-01-2025T04:21:29 - [TEST_STEP][PASSED] - else: null

10-01-2025T04:21:29 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 6, b): null

10-01-2025T04:21:29 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 7, period): null

10-01-2025T04:21:29 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 8, todaysDate): null

10-01-2025T04:21:29 - [TEST_STEP][PASSED] - n = n + 1: null

10-01-2025T04:21:29 - [TEST_STEP][PASSED] - saveWorkbook(excelFilePath, workbook01): null

10-01-2025T04:21:29 - [TEST_STEP][PASSED] - dZO = "Россети Тюмень": null

10-01-2025T04:21:29 - [TEST_STEP][FAILED] - if (verifyEqual(a311, b311) == false): null

10-01-2025T04:21:29 - [MESSAGE][FAILED] - Unable to verify equal between actual object '-92.22' and expected object '-91.46' (Root cause: com.kms.katalon.core.exception.StepFailedException: Actual object '-92.22' and expected object '-91.46' are not equal
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.doCall(VerifyEqualKeyword.groovy:58)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.call(VerifyEqualKeyword.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:75)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.verifyEqual(VerifyEqualKeyword.groovy:63)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.execute(VerifyEqualKeyword.groovy:44)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:74)
	at com.kms.katalon.core.keyword.BuiltinKeywords.verifyEqual(BuiltinKeywords.groovy:146)
	at jdk.internal.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at Выручка в рублях сверка дашбордов ПАО Россети.Blocks(Выручка в рублях сверка дашбордов ПАО Россети:467)
	at Выручка в рублях сверка дашбордов ПАО Россети.ViruchkaChange(Выручка в рублях сверка дашбордов ПАО Россети:60)
	at Выручка в рублях сверка дашбордов ПАО Россети.run(Выручка в рублях сверка дашбордов ПАО Россети:55)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:448)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:439)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:418)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:410)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:285)
	at com.kms.katalon.core.common.CommonExecutor.accessTestCaseMainPhase(CommonExecutor.java:65)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:150)
	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:106)
	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:180)
	at TempTestSuite1736466949911.run(TempTestSuite1736466949911.groovy:35)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
)

10-01-2025T04:21:29 - [TEST_STEP][PASSED] - a = replaceAll("\s+", "").toDouble(): null

10-01-2025T04:21:29 - [TEST_STEP][PASSED] - b = replaceAll("\s+", "").toDouble(): null

10-01-2025T04:21:29 - [TEST_STEP][PASSED] - Script1710234207206.WriteToExcel(todaysDate, run, vir, block, typeOfData, viruchka, vidget, nameOfBlock, a, b, dZO): null

10-01-2025T04:21:29 - [TEST_STEP][PASSED] - println(run): null

10-01-2025T04:21:29 - [TEST_STEP][PASSED] - if (run == 1): null

10-01-2025T04:21:29 - [TEST_STEP][PASSED] - else if (run == 2): null

10-01-2025T04:21:29 - [TEST_STEP][PASSED] - typeOfData = "Проценты": null

10-01-2025T04:21:29 - [TEST_STEP][PASSED] - println("todaysDate:" + todaysDate): null

10-01-2025T04:21:29 - [TEST_STEP][PASSED] - println("typeOfData:" + typeOfData): null

10-01-2025T04:21:29 - [TEST_STEP][PASSED] - viruchka = getText(findTestObject("Выручка в рублях/Фильтр Выручка" + nameOfBlock)): Text of object 'Object Repository/Выручка в рублях/Фильтр Выручка Выручка' is: 'ПЕРЕДАЧА ЭЛЕКТРОЭНЕРГИИ (ИТОГО, по всем видам тарифа)'

10-01-2025T04:21:29 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выручка в рублях/Фильтр Выручка Выручка' is: 'ПЕРЕДАЧА ЭЛЕКТРОЭНЕРГИИ (ИТОГО, по всем видам тарифа)'

10-01-2025T04:21:29 - [TEST_STEP][PASSED] - println("viruchka" + viruchka): null

10-01-2025T04:21:29 - [TEST_STEP][PASSED] - println("vidget" + vidget): null

10-01-2025T04:21:29 - [TEST_STEP][PASSED] - println("a" + a): null

10-01-2025T04:21:29 - [TEST_STEP][PASSED] - println("b" + b): null

10-01-2025T04:21:29 - [TEST_STEP][PASSED] - sheetName = "Sheet1": null

10-01-2025T04:21:29 - [TEST_STEP][PASSED] - data = findTestData("PlanFact"): null

10-01-2025T04:21:29 - [TEST_STEP][PASSED] - n = data.getRowNumbers() + 1: null

10-01-2025T04:21:29 - [TEST_STEP][PASSED] - period = getText(findTestObject("Выручка в рублях/Фильтр Период")): Text of object 'Object Repository/Выручка в рублях/Фильтр Период' is: 'Октябрь, Ноябрь и 1, 2, 3 кв. 2024 года'

10-01-2025T04:21:30 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выручка в рублях/Фильтр Период' is: 'Октябрь, Ноябрь и 1, 2, 3 кв. 2024 года'

10-01-2025T04:21:30 - [TEST_STEP][PASSED] - println(period): null

10-01-2025T04:21:30 - [TEST_STEP][PASSED] - dashboardName = "Выручка в рублях": null

10-01-2025T04:21:30 - [TEST_STEP][PASSED] - workbook01 = getWorkbook(excelFilePath): null

10-01-2025T04:21:30 - [TEST_STEP][PASSED] - sheet01 = getExcelSheet(workbook01, sheetName): null

10-01-2025T04:21:30 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 0, dashboardName): null

10-01-2025T04:21:30 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 1, dZO): null

10-01-2025T04:21:30 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 2, vidget): null

10-01-2025T04:21:30 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 3, viruchka): null

10-01-2025T04:21:30 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 4, typeOfData): null

10-01-2025T04:21:30 - [TEST_STEP][PASSED] - if (a == null): null

10-01-2025T04:21:30 - [TEST_STEP][PASSED] - else: null

10-01-2025T04:21:30 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 5, a): null

10-01-2025T04:21:30 - [TEST_STEP][PASSED] - if (b == null): null

10-01-2025T04:21:30 - [TEST_STEP][PASSED] - else: null

10-01-2025T04:21:30 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 6, b): null

10-01-2025T04:21:30 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 7, period): null

10-01-2025T04:21:30 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 8, todaysDate): null

10-01-2025T04:21:30 - [TEST_STEP][PASSED] - n = n + 1: null

10-01-2025T04:21:30 - [TEST_STEP][PASSED] - saveWorkbook(excelFilePath, workbook01): null

10-01-2025T04:21:30 - [TEST_STEP][PASSED] - dZO = "Россети Урал (ГК)": null

10-01-2025T04:21:30 - [TEST_STEP][PASSED] - if (verifyEqual(a312, b312) == false): Actual object '-89.69' and expected object '-89.69' are equal

10-01-2025T04:21:30 - [MESSAGE][PASSED] - Actual object '-89.69' and expected object '-89.69' are equal

10-01-2025T04:21:30 - [TEST_STEP][PASSED] - dZO = "Россети ФСК ЕЭС": null

10-01-2025T04:21:30 - [TEST_STEP][PASSED] - if (verifyEqual(a313, b313) == false): Actual object '-100' and expected object '-100' are equal

10-01-2025T04:21:30 - [MESSAGE][PASSED] - Actual object '-100' and expected object '-100' are equal

10-01-2025T04:21:30 - [TEST_STEP][PASSED] - dZO = "Россети Центр": null

10-01-2025T04:21:30 - [TEST_STEP][PASSED] - if (verifyEqual(a314, b314) == false): Actual object '-100' and expected object '-100' are equal

10-01-2025T04:21:30 - [MESSAGE][PASSED] - Actual object '-100' and expected object '-100' are equal

10-01-2025T04:21:30 - [TEST_STEP][PASSED] - dZO = "Россети Центр и Приволжье (ГК)": null

10-01-2025T04:21:30 - [TEST_STEP][PASSED] - if (verifyEqual(a315, b315) == false): Actual object '-93.32' and expected object '-93.32' are equal

10-01-2025T04:21:30 - [MESSAGE][PASSED] - Actual object '-93.32' and expected object '-93.32' are equal

10-01-2025T04:21:30 - [TEST_STEP][PASSED] - dZO = "Россети Юг (ГК)": null

10-01-2025T04:21:30 - [TEST_STEP][FAILED] - if (verifyEqual(a316, b316) == false): null

10-01-2025T04:21:30 - [MESSAGE][FAILED] - Unable to verify equal between actual object '-91.1' and expected object '-90.23' (Root cause: com.kms.katalon.core.exception.StepFailedException: Actual object '-91.1' and expected object '-90.23' are not equal
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.doCall(VerifyEqualKeyword.groovy:58)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.call(VerifyEqualKeyword.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:75)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.verifyEqual(VerifyEqualKeyword.groovy:63)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.execute(VerifyEqualKeyword.groovy:44)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:74)
	at com.kms.katalon.core.keyword.BuiltinKeywords.verifyEqual(BuiltinKeywords.groovy:146)
	at jdk.internal.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at Выручка в рублях сверка дашбордов ПАО Россети.Blocks(Выручка в рублях сверка дашбордов ПАО Россети:517)
	at Выручка в рублях сверка дашбордов ПАО Россети.ViruchkaChange(Выручка в рублях сверка дашбордов ПАО Россети:60)
	at Выручка в рублях сверка дашбордов ПАО Россети.run(Выручка в рублях сверка дашбордов ПАО Россети:55)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:448)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:439)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:418)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:410)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:285)
	at com.kms.katalon.core.common.CommonExecutor.accessTestCaseMainPhase(CommonExecutor.java:65)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:150)
	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:106)
	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:180)
	at TempTestSuite1736466949911.run(TempTestSuite1736466949911.groovy:35)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
)

10-01-2025T04:21:30 - [TEST_STEP][PASSED] - a = replaceAll("\s+", "").toDouble(): null

10-01-2025T04:21:30 - [TEST_STEP][PASSED] - b = replaceAll("\s+", "").toDouble(): null

10-01-2025T04:21:30 - [TEST_STEP][PASSED] - Script1710234207206.WriteToExcel(todaysDate, run, vir, block, typeOfData, viruchka, vidget, nameOfBlock, a, b, dZO): null

10-01-2025T04:21:30 - [TEST_STEP][PASSED] - println(run): null

10-01-2025T04:21:30 - [TEST_STEP][PASSED] - if (run == 1): null

10-01-2025T04:21:30 - [TEST_STEP][PASSED] - else if (run == 2): null

10-01-2025T04:21:30 - [TEST_STEP][PASSED] - typeOfData = "Проценты": null

10-01-2025T04:21:30 - [TEST_STEP][PASSED] - println("todaysDate:" + todaysDate): null

10-01-2025T04:21:30 - [TEST_STEP][PASSED] - println("typeOfData:" + typeOfData): null

10-01-2025T04:21:30 - [TEST_STEP][PASSED] - viruchka = getText(findTestObject("Выручка в рублях/Фильтр Выручка" + nameOfBlock)): Text of object 'Object Repository/Выручка в рублях/Фильтр Выручка Выручка' is: 'ПЕРЕДАЧА ЭЛЕКТРОЭНЕРГИИ (ИТОГО, по всем видам тарифа)'

10-01-2025T04:21:30 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выручка в рублях/Фильтр Выручка Выручка' is: 'ПЕРЕДАЧА ЭЛЕКТРОЭНЕРГИИ (ИТОГО, по всем видам тарифа)'

10-01-2025T04:21:30 - [TEST_STEP][PASSED] - println("viruchka" + viruchka): null

10-01-2025T04:21:30 - [TEST_STEP][PASSED] - println("vidget" + vidget): null

10-01-2025T04:21:30 - [TEST_STEP][PASSED] - println("a" + a): null

10-01-2025T04:21:30 - [TEST_STEP][PASSED] - println("b" + b): null

10-01-2025T04:21:30 - [TEST_STEP][PASSED] - sheetName = "Sheet1": null

10-01-2025T04:21:30 - [TEST_STEP][PASSED] - data = findTestData("PlanFact"): null

10-01-2025T04:21:30 - [TEST_STEP][PASSED] - n = data.getRowNumbers() + 1: null

10-01-2025T04:21:30 - [TEST_STEP][PASSED] - period = getText(findTestObject("Выручка в рублях/Фильтр Период")): Text of object 'Object Repository/Выручка в рублях/Фильтр Период' is: 'Октябрь, Ноябрь и 1, 2, 3 кв. 2024 года'

10-01-2025T04:21:31 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выручка в рублях/Фильтр Период' is: 'Октябрь, Ноябрь и 1, 2, 3 кв. 2024 года'

10-01-2025T04:21:31 - [TEST_STEP][PASSED] - println(period): null

10-01-2025T04:21:31 - [TEST_STEP][PASSED] - dashboardName = "Выручка в рублях": null

10-01-2025T04:21:31 - [TEST_STEP][PASSED] - workbook01 = getWorkbook(excelFilePath): null

10-01-2025T04:21:31 - [TEST_STEP][PASSED] - sheet01 = getExcelSheet(workbook01, sheetName): null

10-01-2025T04:21:31 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 0, dashboardName): null

10-01-2025T04:21:31 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 1, dZO): null

10-01-2025T04:21:31 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 2, vidget): null

10-01-2025T04:21:31 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 3, viruchka): null

10-01-2025T04:21:31 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 4, typeOfData): null

10-01-2025T04:21:31 - [TEST_STEP][PASSED] - if (a == null): null

10-01-2025T04:21:31 - [TEST_STEP][PASSED] - else: null

10-01-2025T04:21:31 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 5, a): null

10-01-2025T04:21:31 - [TEST_STEP][PASSED] - if (b == null): null

10-01-2025T04:21:31 - [TEST_STEP][PASSED] - else: null

10-01-2025T04:21:31 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 6, b): null

10-01-2025T04:21:31 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 7, period): null

10-01-2025T04:21:31 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 8, todaysDate): null

10-01-2025T04:21:31 - [TEST_STEP][PASSED] - n = n + 1: null

10-01-2025T04:21:31 - [TEST_STEP][PASSED] - saveWorkbook(excelFilePath, workbook01): null

10-01-2025T04:21:31 - [TEST_STEP][PASSED] - dZO = "Россети Янтарь": null

10-01-2025T04:21:31 - [TEST_STEP][PASSED] - if (verifyEqual(a317, b317) == false): Actual object '-100' and expected object '-100' are equal

10-01-2025T04:21:31 - [MESSAGE][PASSED] - Actual object '-100' and expected object '-100' are equal

10-01-2025T04:21:31 - [TEST_STEP][PASSED] - closeBrowser(): null

10-01-2025T04:21:31 - [MESSAGE][PASSED] - Browser is closed

10-01-2025T04:21:31 - [TEST_STEP][PASSED] - Script1710234207206.Blocks(run, vir, block, nameOfBlock, typeOfData, viruchka, vidget, todaysDate, a, b, dZO, x, y): null

10-01-2025T04:21:31 - [TEST_STEP][PASSED] - i = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:21:31 - [TEST_STEP][PASSED] - perc = "": null

10-01-2025T04:21:31 - [TEST_STEP][PASSED] - a1 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:21:31 - [TEST_STEP][PASSED] - a2 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:21:31 - [TEST_STEP][PASSED] - a30 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:21:31 - [TEST_STEP][PASSED] - a31 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:21:31 - [TEST_STEP][PASSED] - a32 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:21:31 - [TEST_STEP][PASSED] - a33 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:21:31 - [TEST_STEP][PASSED] - a34 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:21:31 - [TEST_STEP][PASSED] - a35 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:21:31 - [TEST_STEP][PASSED] - a36 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:21:31 - [TEST_STEP][PASSED] - a37 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:21:31 - [TEST_STEP][PASSED] - a38 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:21:31 - [TEST_STEP][PASSED] - a39 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:21:31 - [TEST_STEP][PASSED] - a310 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:21:31 - [TEST_STEP][PASSED] - a311 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:21:31 - [TEST_STEP][PASSED] - a312 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:21:31 - [TEST_STEP][PASSED] - a313 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:21:31 - [TEST_STEP][PASSED] - a314 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:21:31 - [TEST_STEP][PASSED] - a315 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:21:31 - [TEST_STEP][PASSED] - a316 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:21:31 - [TEST_STEP][PASSED] - a317 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:21:31 - [TEST_STEP][PASSED] - b1 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:21:31 - [TEST_STEP][PASSED] - b2 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:21:31 - [TEST_STEP][PASSED] - b30 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:21:31 - [TEST_STEP][PASSED] - b31 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:21:31 - [TEST_STEP][PASSED] - b32 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:21:31 - [TEST_STEP][PASSED] - b33 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:21:31 - [TEST_STEP][PASSED] - b34 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:21:31 - [TEST_STEP][PASSED] - b35 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:21:31 - [TEST_STEP][PASSED] - b36 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:21:31 - [TEST_STEP][PASSED] - b37 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:21:31 - [TEST_STEP][PASSED] - b38 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:21:31 - [TEST_STEP][PASSED] - b39 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:21:31 - [TEST_STEP][PASSED] - b310 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:21:31 - [TEST_STEP][PASSED] - b311 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:21:31 - [TEST_STEP][PASSED] - b312 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:21:31 - [TEST_STEP][PASSED] - b313 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:21:31 - [TEST_STEP][PASSED] - b314 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:21:31 - [TEST_STEP][PASSED] - b315 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:21:31 - [TEST_STEP][PASSED] - b316 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:21:31 - [TEST_STEP][PASSED] - b317 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:21:31 - [TEST_STEP][PASSED] - block = 1: null

10-01-2025T04:21:31 - [TEST_STEP][PASSED] - nameOfBlock = "": null

10-01-2025T04:21:31 - [TEST_STEP][PASSED] - Script1710234207206.PreSettings(run, vir, block, nameOfBlock, typeOfData, todaysDate): null

10-01-2025T04:21:31 - [TEST_STEP][PASSED] - openBrowser(""): Browser is opened with url: ''

10-01-2025T04:21:31 - [MESSAGE][INFO] - Starting 'Chrome' driver

10-01-2025T04:21:31 - [MESSAGE][INFO] - Action delay is set to 0 milliseconds

10-01-2025T04:21:32 - [MESSAGE][PASSED] - Browser is opened with url: ''

10-01-2025T04:21:32 - [TEST_STEP][PASSED] - refresh(): Refresh successfully

10-01-2025T04:21:32 - [MESSAGE][PASSED] - Refresh successfully

10-01-2025T04:21:32 - [TEST_STEP][PASSED] - delay(50): Delayed 50 second(s)

10-01-2025T04:22:22 - [MESSAGE][PASSED] - Delayed 50 second(s)

10-01-2025T04:22:22 - [TEST_STEP][PASSED] - println("run:" + run): null

10-01-2025T04:22:22 - [TEST_STEP][PASSED] - println("vir:" + vir): null

10-01-2025T04:22:22 - [TEST_STEP][PASSED] - println("block:" + block): null

10-01-2025T04:22:22 - [TEST_STEP][PASSED] - if (block == 1): null

10-01-2025T04:22:22 - [TEST_STEP][PASSED] - nameOfBlock = "": null

10-01-2025T04:22:22 - [TEST_STEP][PASSED] - println("nameOfBlock:" + nameOfBlock): null

10-01-2025T04:22:22 - [TEST_STEP][PASSED] - println("typeOfData:" + typeOfData): null

10-01-2025T04:22:22 - [TEST_STEP][PASSED] - println("todaysDate:" + todaysDate): null

10-01-2025T04:22:22 - [TEST_STEP][PASSED] - Script1710234207206.Autorization(block, nameOfBlock): null

10-01-2025T04:22:22 - [TEST_STEP][PASSED] - i = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:22:22 - [TEST_STEP][PASSED] - ii = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:22:22 - [TEST_STEP][PASSED] - urlData = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:22:22 - [TEST_STEP][PASSED] - searchWord = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:22:22 - [TEST_STEP][PASSED] - urlText = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:22:22 - [TEST_STEP][PASSED] - println("block:" + block): null

10-01-2025T04:22:22 - [TEST_STEP][PASSED] - if (block == 1): null

10-01-2025T04:22:22 - [TEST_STEP][PASSED] - nameOfBlock = "": null

10-01-2025T04:22:22 - [TEST_STEP][PASSED] - println("nameOfBlock:" + nameOfBlock): null

10-01-2025T04:22:22 - [TEST_STEP][PASSED] - if (block == 1): Delayed 45 second(s)

10-01-2025T04:22:22 - [TEST_STEP][PASSED] - urlData = 2: null

10-01-2025T04:22:22 - [TEST_STEP][PASSED] - delay(45): Delayed 45 second(s)

10-01-2025T04:23:07 - [MESSAGE][PASSED] - Delayed 45 second(s)

10-01-2025T04:23:07 - [TEST_STEP][PASSED] - navigateToUrl(findTestData("PlanFact").getValue(10, urlData)): Navigate to 'https://bi.rosseti.digital/viewer?dashboardGuid=2301950b23be4ed89c1df75f2020051e&sheetGuid=b723206f698544fb87299f3095c00435&fit=true' successfully

10-01-2025T04:23:15 - [MESSAGE][PASSED] - Navigate to 'https://bi.rosseti.digital/viewer?dashboardGuid=2301950b23be4ed89c1df75f2020051e&sheetGuid=b723206f698544fb87299f3095c00435&fit=true' successfully

10-01-2025T04:23:15 - [TEST_STEP][PASSED] - urlText = getText(findTestObject("Страница авторизации/Text")): Text of object 'Object Repository/Страница авторизации/Text' is: 'Вход'

10-01-2025T04:23:16 - [MESSAGE][PASSED] - Text of object 'Object Repository/Страница авторизации/Text' is: 'Вход'

10-01-2025T04:23:16 - [TEST_STEP][PASSED] - searchWord = "Вход": null

10-01-2025T04:23:16 - [TEST_STEP][PASSED] - if (urlText == null || urlText.contains("ошибка") || urlText.contains(searchWord) == false): null

10-01-2025T04:23:16 - [TEST_STEP][PASSED] - if (verifyElementPresent(findTestObject("Страница авторизации/button_"), 30) == true): null

10-01-2025T04:23:17 - [MESSAGE][PASSED] - Object 'Object Repository/Страница авторизации/button_' is present

10-01-2025T04:23:17 - [TEST_STEP][PASSED] - setText(findTestObject("Страница авторизации/input__username"), findTestData("PlanFact").getValue(8, 1)): Text 'liazgina-di' is set on object 'Object Repository/Страница авторизации/input__username'

10-01-2025T04:23:17 - [MESSAGE][PASSED] - Text 'liazgina-di' is set on object 'Object Repository/Страница авторизации/input__username'

10-01-2025T04:23:17 - [TEST_STEP][PASSED] - setText(findTestObject("Страница авторизации/input__password"), findTestData("PlanFact").getValue(9, 1)): Text ')$%5srZ8o688Dm#q' is set on object 'Object Repository/Страница авторизации/input__password'

10-01-2025T04:23:18 - [MESSAGE][PASSED] - Text ')$%5srZ8o688Dm#q' is set on object 'Object Repository/Страница авторизации/input__password'

10-01-2025T04:23:18 - [TEST_STEP][PASSED] - click(findTestObject("Страница авторизации/button_")): Object: 'Object Repository/Страница авторизации/button_' is clicked on

10-01-2025T04:23:19 - [MESSAGE][PASSED] - Object: 'Object Repository/Страница авторизации/button_' is clicked on

10-01-2025T04:23:19 - [TEST_STEP][PASSED] - delay(45): Delayed 45 second(s)

10-01-2025T04:24:04 - [MESSAGE][PASSED] - Delayed 45 second(s)

10-01-2025T04:24:04 - [TEST_STEP][PASSED] - urlText = getText(findTestObject("Страница авторизации/Text")): Text of object 'Object Repository/Страница авторизации/Text' is: 'Период
1, 2, 3 кв., Октябрь, Ноябрь 2024 года
Выручка
Все
Выполнение плановых показателей по ПАО Россети за 1, 2, 3 кв., Октябрь, Ноябрь 2024 года
План
Факт
Динамика
2024 год
0 млн.руб.
100 000 млн.руб.
200 000 млн.руб.
300 000 млн.руб.
400 000 млн.руб.
500 000 млн.руб.
600 000 млн.руб.
700 000 млн.руб.
800 000 млн.руб.
900 000 млн.руб.
1 000 000 млн.руб.
1 100 000 млн.руб.
1 200 000 млн.руб.
1 300 000 млн.руб.
1 400 000 млн.руб.
1 500 000 млн.руб.
1 600 000 млн.руб.
1 311 033
1 316 817
↑
ДЗО 
Все
Внутренний оборот - выручка за услуги по передаче электрической энергии, учтенная в выручке за электроэнергию для конечных потребителей, при выполнении ДЗО функций гарантирующего поставщика
Подписи данных
⬤Отклонение
АО «Тываэнерго»
АО «Чеченэнерго»
Россети Волга
Россети Кубань
Россети Ленэнерго (ГК)
Россети Московский регион
Россети Северный Кавказ (ГК)
Россети Северо-Запад
Россети Сибирь (ГК)
Россети Томск
Россети Тюмень
Россети Урал (ГК)
Россети ФСК ЕЭС
Россети Центр
Россети Центр и Приволжье (ГК)
Россети Юг (ГК)
Россети Янтарь
-25 000 млн.руб.
-20 000 млн.руб.
-15 000 млн.руб.
-10 000 млн.руб.
-5 000 млн.руб.
0 млн.руб.
5 000 млн.руб.
10 000 млн.руб.
-30 000 млн.руб.
15 000 млн.руб.
358
121
239
4 507
5 172
8 574
945
784
2 396
241
-6 052
2 027
-23 772
3 732
4 813
1 329
372
млн.
%
Выручка
Отклонение выручки по ПАО Россети за 1, 2, 3 кв., Октябрь, Ноябрь 2024 года (факт/план, млн. руб)
ПАО Россети
5 783.7 млн.руб.
 '

10-01-2025T04:24:05 - [MESSAGE][PASSED] - Text of object 'Object Repository/Страница авторизации/Text' is: 'Период
1, 2, 3 кв., Октябрь, Ноябрь 2024 года
Выручка
Все
Выполнение плановых показателей по ПАО Россети за 1, 2, 3 кв., Октябрь, Ноябрь 2024 года
План
Факт
Динамика
2024 год
0 млн.руб.
100 000 млн.руб.
200 000 млн.руб.
300 000 млн.руб.
400 000 млн.руб.
500 000 млн.руб.
600 000 млн.руб.
700 000 млн.руб.
800 000 млн.руб.
900 000 млн.руб.
1 000 000 млн.руб.
1 100 000 млн.руб.
1 200 000 млн.руб.
1 300 000 млн.руб.
1 400 000 млн.руб.
1 500 000 млн.руб.
1 600 000 млн.руб.
1 311 033
1 316 817
↑
ДЗО 
Все
Внутренний оборот - выручка за услуги по передаче электрической энергии, учтенная в выручке за электроэнергию для конечных потребителей, при выполнении ДЗО функций гарантирующего поставщика
Подписи данных
⬤Отклонение
АО «Тываэнерго»
АО «Чеченэнерго»
Россети Волга
Россети Кубань
Россети Ленэнерго (ГК)
Россети Московский регион
Россети Северный Кавказ (ГК)
Россети Северо-Запад
Россети Сибирь (ГК)
Россети Томск
Россети Тюмень
Россети Урал (ГК)
Россети ФСК ЕЭС
Россети Центр
Россети Центр и Приволжье (ГК)
Россети Юг (ГК)
Россети Янтарь
-25 000 млн.руб.
-20 000 млн.руб.
-15 000 млн.руб.
-10 000 млн.руб.
-5 000 млн.руб.
0 млн.руб.
5 000 млн.руб.
10 000 млн.руб.
-30 000 млн.руб.
15 000 млн.руб.
358
121
239
4 507
5 172
8 574
945
784
2 396
241
-6 052
2 027
-23 772
3 732
4 813
1 329
372
млн.
%
Выручка
Отклонение выручки по ПАО Россети за 1, 2, 3 кв., Октябрь, Ноябрь 2024 года (факт/план, млн. руб)
ПАО Россети
5 783.7 млн.руб.
 '

10-01-2025T04:24:05 - [TEST_STEP][PASSED] - searchWord = "а": null

10-01-2025T04:24:05 - [TEST_STEP][PASSED] - if (urlText.contains("ошибка") || urlText.contains(searchWord) == false): null

10-01-2025T04:24:05 - [TEST_STEP][PASSED] - delay(45): Delayed 45 second(s)

10-01-2025T04:24:50 - [MESSAGE][PASSED] - Delayed 45 second(s)

10-01-2025T04:24:50 - [TEST_STEP][PASSED] - if (block == 2): null

10-01-2025T04:24:50 - [TEST_STEP][PASSED] - click(findTestObject("Выручка в рублях/Фильтр Период" + nameOfBlock)): Object: 'Object Repository/Выручка в рублях/Фильтр Период' is clicked on

10-01-2025T04:24:51 - [MESSAGE][PASSED] - Object: 'Object Repository/Выручка в рублях/Фильтр Период' is clicked on

10-01-2025T04:24:51 - [TEST_STEP][PASSED] - click(findTestObject("Выручка в рублях/Снять выделение в фильтре Дата" + nameOfBlock)): Object: 'Object Repository/Выручка в рублях/Снять выделение в фильтре Дата' is clicked on

10-01-2025T04:24:51 - [MESSAGE][PASSED] - Object: 'Object Repository/Выручка в рублях/Снять выделение в фильтре Дата' is clicked on

10-01-2025T04:24:51 - [TEST_STEP][PASSED] - click(findTestObject("Выручка в рублях/Применить в фильтре Дата" + nameOfBlock)): Object: 'Object Repository/Выручка в рублях/Применить в фильтре Дата' is clicked on

10-01-2025T04:24:52 - [MESSAGE][PASSED] - Object: 'Object Repository/Выручка в рублях/Применить в фильтре Дата' is clicked on

10-01-2025T04:24:52 - [TEST_STEP][PASSED] - delay(50): Delayed 50 second(s)

10-01-2025T04:25:42 - [MESSAGE][PASSED] - Delayed 50 second(s)

10-01-2025T04:25:42 - [TEST_STEP][PASSED] - click(findTestObject("Выручка в рублях/Фильтр Период" + nameOfBlock)): Object: 'Object Repository/Выручка в рублях/Фильтр Период' is clicked on

10-01-2025T04:25:42 - [MESSAGE][PASSED] - Object: 'Object Repository/Выручка в рублях/Фильтр Период' is clicked on

10-01-2025T04:25:42 - [TEST_STEP][PASSED] - click(findTestObject("Выручка в рублях/Снять выделение в фильтре Дата" + nameOfBlock)): Object: 'Object Repository/Выручка в рублях/Снять выделение в фильтре Дата' is clicked on

10-01-2025T04:25:43 - [MESSAGE][PASSED] - Object: 'Object Repository/Выручка в рублях/Снять выделение в фильтре Дата' is clicked on

10-01-2025T04:25:43 - [TEST_STEP][PASSED] - scrollToElement(findTestObject("Выручка в рублях/2024 список" + nameOfBlock), 30): Scroll to object 'Object Repository/Выручка в рублях/2024 список' successfully

10-01-2025T04:25:43 - [MESSAGE][PASSED] - Scroll to object 'Object Repository/Выручка в рублях/2024 список' successfully

10-01-2025T04:25:43 - [TEST_STEP][PASSED] - click(findTestObject("Выручка в рублях/2024 список" + nameOfBlock)): Object: 'Object Repository/Выручка в рублях/2024 список' is clicked on

10-01-2025T04:25:43 - [MESSAGE][PASSED] - Object: 'Object Repository/Выручка в рублях/2024 список' is clicked on

10-01-2025T04:25:43 - [TEST_STEP][PASSED] - scrollToElement(findTestObject("Выручка в рублях/1 квартал 2024 выбрать" + nameOfBlock), 30): Scroll to object 'Object Repository/Выручка в рублях/1 квартал 2024 выбрать' successfully

10-01-2025T04:25:44 - [MESSAGE][PASSED] - Scroll to object 'Object Repository/Выручка в рублях/1 квартал 2024 выбрать' successfully

10-01-2025T04:25:44 - [TEST_STEP][PASSED] - click(findTestObject("Выручка в рублях/1 квартал 2024 выбрать" + nameOfBlock)): Object: 'Object Repository/Выручка в рублях/1 квартал 2024 выбрать' is clicked on

10-01-2025T04:25:44 - [MESSAGE][PASSED] - Object: 'Object Repository/Выручка в рублях/1 квартал 2024 выбрать' is clicked on

10-01-2025T04:25:44 - [TEST_STEP][PASSED] - scrollToElement(findTestObject("Выручка в рублях/2 квартал 2024 выбрать" + nameOfBlock), 30): Scroll to object 'Object Repository/Выручка в рублях/2 квартал 2024 выбрать' successfully

10-01-2025T04:25:45 - [MESSAGE][PASSED] - Scroll to object 'Object Repository/Выручка в рублях/2 квартал 2024 выбрать' successfully

10-01-2025T04:25:45 - [TEST_STEP][PASSED] - click(findTestObject("Выручка в рублях/2 квартал 2024 выбрать" + nameOfBlock)): Object: 'Object Repository/Выручка в рублях/2 квартал 2024 выбрать' is clicked on

10-01-2025T04:25:45 - [MESSAGE][PASSED] - Object: 'Object Repository/Выручка в рублях/2 квартал 2024 выбрать' is clicked on

10-01-2025T04:25:45 - [TEST_STEP][PASSED] - scrollToElement(findTestObject("Выручка в рублях/3 квартал 2024 список" + nameOfBlock), 30): Scroll to object 'Object Repository/Выручка в рублях/3 квартал 2024 список' successfully

10-01-2025T04:25:45 - [MESSAGE][PASSED] - Scroll to object 'Object Repository/Выручка в рублях/3 квартал 2024 список' successfully

10-01-2025T04:25:45 - [TEST_STEP][PASSED] - click(findTestObject("Выручка в рублях/3 квартал 2024" + nameOfBlock)): Object: 'Object Repository/Выручка в рублях/3 квартал 2024' is clicked on

10-01-2025T04:25:46 - [MESSAGE][PASSED] - Object: 'Object Repository/Выручка в рублях/3 квартал 2024' is clicked on

10-01-2025T04:25:46 - [TEST_STEP][PASSED] - scrollToElement(findTestObject("Выручка в рублях/4 квартал 2024 список" + nameOfBlock), 30): Scroll to object 'Object Repository/Выручка в рублях/4 квартал 2024 список' successfully

10-01-2025T04:25:46 - [MESSAGE][PASSED] - Scroll to object 'Object Repository/Выручка в рублях/4 квартал 2024 список' successfully

10-01-2025T04:25:46 - [TEST_STEP][PASSED] - click(findTestObject("Выручка в рублях/4 квартал 2024 список" + nameOfBlock)): Object: 'Object Repository/Выручка в рублях/4 квартал 2024 список' is clicked on

10-01-2025T04:25:47 - [MESSAGE][PASSED] - Object: 'Object Repository/Выручка в рублях/4 квартал 2024 список' is clicked on

10-01-2025T04:25:47 - [TEST_STEP][PASSED] - scrollToElement(findTestObject("Выручка в рублях/Октябрь 2024" + nameOfBlock), 30): Scroll to object 'Object Repository/Выручка в рублях/Октябрь 2024' successfully

10-01-2025T04:25:47 - [MESSAGE][PASSED] - Scroll to object 'Object Repository/Выручка в рублях/Октябрь 2024' successfully

10-01-2025T04:25:47 - [TEST_STEP][PASSED] - click(findTestObject("Выручка в рублях/Октябрь 2024" + nameOfBlock)): Object: 'Object Repository/Выручка в рублях/Октябрь 2024' is clicked on

10-01-2025T04:25:47 - [MESSAGE][PASSED] - Object: 'Object Repository/Выручка в рублях/Октябрь 2024' is clicked on

10-01-2025T04:25:47 - [TEST_STEP][PASSED] - scrollToElement(findTestObject("Выручка в рублях/Ноябрь 2024" + nameOfBlock), 30): Scroll to object 'Object Repository/Выручка в рублях/Ноябрь 2024' successfully

10-01-2025T04:25:48 - [MESSAGE][PASSED] - Scroll to object 'Object Repository/Выручка в рублях/Ноябрь 2024' successfully

10-01-2025T04:25:48 - [TEST_STEP][PASSED] - click(findTestObject("Выручка в рублях/Ноябрь 2024" + nameOfBlock)): Object: 'Object Repository/Выручка в рублях/Ноябрь 2024' is clicked on

10-01-2025T04:25:48 - [MESSAGE][PASSED] - Object: 'Object Repository/Выручка в рублях/Ноябрь 2024' is clicked on

10-01-2025T04:25:48 - [TEST_STEP][PASSED] - scrollToElement(findTestObject("Выручка в рублях/Заголовок дашборда" + nameOfBlock), 30): Scroll to object 'Object Repository/Выручка в рублях/Заголовок дашборда' successfully

10-01-2025T04:25:49 - [MESSAGE][PASSED] - Scroll to object 'Object Repository/Выручка в рублях/Заголовок дашборда' successfully

10-01-2025T04:25:49 - [TEST_STEP][PASSED] - click(findTestObject("Выручка в рублях/Применить в фильтре Дата" + nameOfBlock)): Object: 'Object Repository/Выручка в рублях/Применить в фильтре Дата' is clicked on

10-01-2025T04:25:49 - [MESSAGE][PASSED] - Object: 'Object Repository/Выручка в рублях/Применить в фильтре Дата' is clicked on

10-01-2025T04:25:49 - [TEST_STEP][PASSED] - delay(55): Delayed 55 second(s)

10-01-2025T04:26:44 - [MESSAGE][PASSED] - Delayed 55 second(s)

10-01-2025T04:26:44 - [TEST_STEP][PASSED] - click(findTestObject("Выручка в рублях/Фильтр ДЗО" + nameOfBlock)): Object: 'Object Repository/Выручка в рублях/Фильтр ДЗО' is clicked on

10-01-2025T04:26:45 - [MESSAGE][PASSED] - Object: 'Object Repository/Выручка в рублях/Фильтр ДЗО' is clicked on

10-01-2025T04:26:45 - [TEST_STEP][PASSED] - click(findTestObject("Выручка в рублях/Снять выделение в фильтре ДЗО" + nameOfBlock)): Object: 'Object Repository/Выручка в рублях/Снять выделение в фильтре ДЗО' is clicked on

10-01-2025T04:26:45 - [MESSAGE][PASSED] - Object: 'Object Repository/Выручка в рублях/Снять выделение в фильтре ДЗО' is clicked on

10-01-2025T04:26:45 - [TEST_STEP][PASSED] - click(findTestObject("Выручка в рублях/Применить в фильтре ДЗО" + nameOfBlock)): Object: 'Object Repository/Выручка в рублях/Применить в фильтре ДЗО' is clicked on

10-01-2025T04:26:46 - [MESSAGE][PASSED] - Object: 'Object Repository/Выручка в рублях/Применить в фильтре ДЗО' is clicked on

10-01-2025T04:26:46 - [TEST_STEP][PASSED] - delay(50): Delayed 50 second(s)

10-01-2025T04:27:36 - [MESSAGE][PASSED] - Delayed 50 second(s)

10-01-2025T04:27:36 - [TEST_STEP][PASSED] - Script1710234207206.Tumbler(run, vir, block, nameOfBlock): null

10-01-2025T04:27:36 - [TEST_STEP][PASSED] - println("run:" + run): null

10-01-2025T04:27:36 - [TEST_STEP][PASSED] - println("vir:" + vir): null

10-01-2025T04:27:36 - [TEST_STEP][PASSED] - println("block:" + block): null

10-01-2025T04:27:36 - [TEST_STEP][PASSED] - println("nameOfBlock:" + nameOfBlock): null

10-01-2025T04:27:36 - [TEST_STEP][PASSED] - if (vir == 1): null

10-01-2025T04:27:36 - [TEST_STEP][PASSED] - else if (vir == 2): null

10-01-2025T04:27:36 - [TEST_STEP][PASSED] - else if (vir == 3): Object: 'Object Repository/Выручка в рублях/Применить в фильтре Выручка' is clicked on

10-01-2025T04:27:36 - [TEST_STEP][PASSED] - if (run == 2): Object: 'Object Repository/Выручка в рублях/Переключить отображение с млн на проценты Выручка в рублях' is clicked on

10-01-2025T04:27:36 - [TEST_STEP][PASSED] - click(findTestObject("Выручка в рублях/Переключить отображение с млн на проценты Выручка в рублях" + nameOfBlock)): Object: 'Object Repository/Выручка в рублях/Переключить отображение с млн на проценты Выручка в рублях' is clicked on

10-01-2025T04:27:36 - [MESSAGE][PASSED] - Object: 'Object Repository/Выручка в рублях/Переключить отображение с млн на проценты Выручка в рублях' is clicked on

10-01-2025T04:27:36 - [TEST_STEP][PASSED] - click(findTestObject("Выручка в рублях/Фильтр Выручка" + nameOfBlock)): Object: 'Object Repository/Выручка в рублях/Фильтр Выручка' is clicked on

10-01-2025T04:27:36 - [MESSAGE][PASSED] - Object: 'Object Repository/Выручка в рублях/Фильтр Выручка' is clicked on

10-01-2025T04:27:36 - [TEST_STEP][PASSED] - click(findTestObject("Выручка в рублях/Внутренний оборот в фильтре Выручка" + nameOfBlock)): Object: 'Object Repository/Выручка в рублях/Внутренний оборот в фильтре Выручка' is clicked on

10-01-2025T04:27:37 - [MESSAGE][PASSED] - Object: 'Object Repository/Выручка в рублях/Внутренний оборот в фильтре Выручка' is clicked on

10-01-2025T04:27:37 - [TEST_STEP][PASSED] - click(findTestObject("Выручка в рублях/Применить в фильтре Выручка" + nameOfBlock)): Object: 'Object Repository/Выручка в рублях/Применить в фильтре Выручка' is clicked on

10-01-2025T04:27:38 - [MESSAGE][PASSED] - Object: 'Object Repository/Выручка в рублях/Применить в фильтре Выручка' is clicked on

10-01-2025T04:27:38 - [TEST_STEP][PASSED] - click(findTestObject("Выручка в рублях/Фильтр ДЗО" + nameOfBlock)): Object: 'Object Repository/Выручка в рублях/Фильтр ДЗО' is clicked on

10-01-2025T04:27:39 - [MESSAGE][PASSED] - Object: 'Object Repository/Выручка в рублях/Фильтр ДЗО' is clicked on

10-01-2025T04:27:39 - [TEST_STEP][PASSED] - Script1710234207206.Rosseti(nameOfBlock): null

10-01-2025T04:27:39 - [TEST_STEP][PASSED] - println("nameOfBlock:" + nameOfBlock): null

10-01-2025T04:27:39 - [TEST_STEP][PASSED] - click(findTestObject("Выручка в рублях/ПАО Россети" + nameOfBlock)): Object: 'Object Repository/Выручка в рублях/ПАО Россети' is clicked on

10-01-2025T04:27:40 - [MESSAGE][PASSED] - Object: 'Object Repository/Выручка в рублях/ПАО Россети' is clicked on

10-01-2025T04:27:40 - [TEST_STEP][PASSED] - click(findTestObject("Выручка в рублях/Применить в фильтре ДЗО" + nameOfBlock)): Object: 'Object Repository/Выручка в рублях/Применить в фильтре ДЗО' is clicked on

10-01-2025T04:27:41 - [MESSAGE][PASSED] - Object: 'Object Repository/Выручка в рублях/Применить в фильтре ДЗО' is clicked on

10-01-2025T04:27:41 - [TEST_STEP][PASSED] - if (run == 2): null

10-01-2025T04:27:41 - [TEST_STEP][PASSED] - perc = " Perc": null

10-01-2025T04:27:41 - [TEST_STEP][PASSED] - if (vir == 1 || vir == 2): null

10-01-2025T04:27:41 - [TEST_STEP][PASSED] - else: Text of object 'Object Repository/Выручка в рублях/vir3Plan' is: '22 220'

10-01-2025T04:27:41 - [TEST_STEP][PASSED] - a1 = getText(findTestObject("Выручка в рублях/vir3Plan")): Text of object 'Object Repository/Выручка в рублях/vir3Plan' is: '22 220'

10-01-2025T04:27:42 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выручка в рублях/vir3Plan' is: '22 220'

10-01-2025T04:27:42 - [TEST_STEP][PASSED] - if (vir == 1 || vir == 2): null

10-01-2025T04:27:42 - [TEST_STEP][PASSED] - else: Text of object 'Object Repository/Выручка в рублях/vir3Fact' is: '22 905'

10-01-2025T04:27:42 - [TEST_STEP][PASSED] - a2 = getText(findTestObject("Выручка в рублях/vir3Fact")): Text of object 'Object Repository/Выручка в рублях/vir3Fact' is: '22 905'

10-01-2025T04:27:42 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выручка в рублях/vir3Fact' is: '22 905'

10-01-2025T04:27:42 - [TEST_STEP][PASSED] - a30 = getText(findTestObject("Выручка в рублях/span1" + perc)): Text of object 'Object Repository/Выручка в рублях/span1 Perc' is: '-91.3 %'

10-01-2025T04:27:42 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выручка в рублях/span1 Perc' is: '-91.3 %'

10-01-2025T04:27:42 - [TEST_STEP][PASSED] - i = a30.indexOf("млн.руб."): null

10-01-2025T04:27:42 - [TEST_STEP][PASSED] - if (i > -1): null

10-01-2025T04:27:42 - [TEST_STEP][PASSED] - if (a30.contains("%")): null

10-01-2025T04:27:42 - [TEST_STEP][PASSED] - a30 = a30.replaceAll("%", ""): null

10-01-2025T04:27:42 - [TEST_STEP][PASSED] - a30 = ").trim(): null

10-01-2025T04:27:42 - [TEST_STEP][PASSED] - println("a30: " + a30): null

10-01-2025T04:27:42 - [TEST_STEP][PASSED] - if (vir == 1 || vir == 2): null

10-01-2025T04:27:42 - [TEST_STEP][PASSED] - else: Text of object 'Object Repository/Выручка в рублях/span15 Perc' is: '-100 %'

10-01-2025T04:27:42 - [TEST_STEP][PASSED] - a31 = ").trim(): Text of object 'Object Repository/Выручка в рублях/span15 Perc' is: '-100 %'

10-01-2025T04:27:43 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выручка в рублях/span15 Perc' is: '-100 %'

10-01-2025T04:27:43 - [TEST_STEP][PASSED] - if (vir == 1 || vir == 2): null

10-01-2025T04:27:43 - [TEST_STEP][PASSED] - else: Text of object 'Object Repository/Выручка в рублях/span16 Perc' is: '-90.96 %'

10-01-2025T04:27:43 - [TEST_STEP][PASSED] - a32 = ").trim(): Text of object 'Object Repository/Выручка в рублях/span16 Perc' is: '-90.96 %'

10-01-2025T04:27:43 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выручка в рублях/span16 Perc' is: '-90.96 %'

10-01-2025T04:27:43 - [TEST_STEP][PASSED] - if (vir == 1 || vir == 2): null

10-01-2025T04:27:43 - [TEST_STEP][PASSED] - else: Text of object 'Object Repository/Выручка в рублях/span17 Perc' is: '-90.61 %'

10-01-2025T04:27:43 - [TEST_STEP][PASSED] - a37 = ").trim(): Text of object 'Object Repository/Выручка в рублях/span17 Perc' is: '-90.61 %'

10-01-2025T04:27:43 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выручка в рублях/span17 Perc' is: '-90.61 %'

10-01-2025T04:27:43 - [TEST_STEP][PASSED] - if (vir == 1 || vir == 2): null

10-01-2025T04:27:43 - [TEST_STEP][PASSED] - else: Text of object 'Object Repository/Выручка в рублях/span18 Perc' is: '-91.02 %'

10-01-2025T04:27:43 - [TEST_STEP][PASSED] - a316 = ").trim(): Text of object 'Object Repository/Выручка в рублях/span18 Perc' is: '-91.02 %'

10-01-2025T04:27:44 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выручка в рублях/span18 Perc' is: '-91.02 %'

10-01-2025T04:27:44 - [TEST_STEP][PASSED] - if (vir == 1 || vir == 2): null

10-01-2025T04:27:44 - [TEST_STEP][PASSED] - block = 2: null

10-01-2025T04:27:44 - [TEST_STEP][PASSED] - nameOfBlock = " Выручка": null

10-01-2025T04:27:44 - [TEST_STEP][PASSED] - Script1710234207206.PreSettings(run, vir, block, nameOfBlock, typeOfData, todaysDate): null

10-01-2025T04:27:44 - [TEST_STEP][PASSED] - openBrowser(""): Browser is opened with url: ''

10-01-2025T04:27:44 - [MESSAGE][WARNING] - A browser is already opened. Closing browser and opening a new one

10-01-2025T04:27:44 - [MESSAGE][INFO] - Starting 'Chrome' driver

10-01-2025T04:27:44 - [MESSAGE][INFO] - Action delay is set to 0 milliseconds

10-01-2025T04:27:45 - [MESSAGE][PASSED] - Browser is opened with url: ''

10-01-2025T04:27:45 - [TEST_STEP][PASSED] - refresh(): Refresh successfully

10-01-2025T04:27:45 - [MESSAGE][PASSED] - Refresh successfully

10-01-2025T04:27:45 - [TEST_STEP][PASSED] - delay(50): Delayed 50 second(s)

10-01-2025T04:28:35 - [MESSAGE][PASSED] - Delayed 50 second(s)

10-01-2025T04:28:35 - [TEST_STEP][PASSED] - println("run:" + run): null

10-01-2025T04:28:35 - [TEST_STEP][PASSED] - println("vir:" + vir): null

10-01-2025T04:28:35 - [TEST_STEP][PASSED] - println("block:" + block): null

10-01-2025T04:28:35 - [TEST_STEP][PASSED] - if (block == 1): null

10-01-2025T04:28:35 - [TEST_STEP][PASSED] - else: null

10-01-2025T04:28:35 - [TEST_STEP][PASSED] - nameOfBlock = " Выручка": null

10-01-2025T04:28:35 - [TEST_STEP][PASSED] - println("nameOfBlock:" + nameOfBlock): null

10-01-2025T04:28:35 - [TEST_STEP][PASSED] - println("typeOfData:" + typeOfData): null

10-01-2025T04:28:35 - [TEST_STEP][PASSED] - println("todaysDate:" + todaysDate): null

10-01-2025T04:28:35 - [TEST_STEP][PASSED] - Script1710234207206.Autorization(block, nameOfBlock): null

10-01-2025T04:28:35 - [TEST_STEP][PASSED] - i = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:28:35 - [TEST_STEP][PASSED] - ii = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:28:35 - [TEST_STEP][PASSED] - urlData = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:28:35 - [TEST_STEP][PASSED] - searchWord = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:28:35 - [TEST_STEP][PASSED] - urlText = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:28:35 - [TEST_STEP][PASSED] - println("block:" + block): null

10-01-2025T04:28:35 - [TEST_STEP][PASSED] - if (block == 1): null

10-01-2025T04:28:35 - [TEST_STEP][PASSED] - else: null

10-01-2025T04:28:35 - [TEST_STEP][PASSED] - delay(45): Delayed 45 second(s)

10-01-2025T04:29:20 - [MESSAGE][PASSED] - Delayed 45 second(s)

10-01-2025T04:29:20 - [TEST_STEP][PASSED] - nameOfBlock = " Выручка": null

10-01-2025T04:29:20 - [TEST_STEP][PASSED] - println("nameOfBlock:" + nameOfBlock): null

10-01-2025T04:29:20 - [TEST_STEP][PASSED] - if (block == 1): null

10-01-2025T04:29:20 - [TEST_STEP][PASSED] - else: Delayed 45 second(s)

10-01-2025T04:29:20 - [TEST_STEP][PASSED] - urlData = 9: null

10-01-2025T04:29:20 - [TEST_STEP][PASSED] - delay(45): Delayed 45 second(s)

10-01-2025T04:30:05 - [MESSAGE][PASSED] - Delayed 45 second(s)

10-01-2025T04:30:05 - [TEST_STEP][PASSED] - navigateToUrl(findTestData("PlanFact").getValue(10, urlData)): Navigate to 'https://bi.rosseti.digital/viewer?dashboardGuid=a1fd28b3785d443cbc4d7690a1d78e31&sheetGuid=86092a20c5984827a0c87b24cac76a50&fit=true' successfully

10-01-2025T04:30:12 - [MESSAGE][PASSED] - Navigate to 'https://bi.rosseti.digital/viewer?dashboardGuid=a1fd28b3785d443cbc4d7690a1d78e31&sheetGuid=86092a20c5984827a0c87b24cac76a50&fit=true' successfully

10-01-2025T04:30:12 - [TEST_STEP][PASSED] - urlText = getText(findTestObject("Страница авторизации/Text")): Text of object 'Object Repository/Страница авторизации/Text' is: 'Вход'

10-01-2025T04:30:13 - [MESSAGE][PASSED] - Text of object 'Object Repository/Страница авторизации/Text' is: 'Вход'

10-01-2025T04:30:13 - [TEST_STEP][PASSED] - searchWord = "Вход": null

10-01-2025T04:30:13 - [TEST_STEP][PASSED] - if (urlText == null || urlText.contains("ошибка") || urlText.contains(searchWord) == false): null

10-01-2025T04:30:13 - [TEST_STEP][PASSED] - if (verifyElementPresent(findTestObject("Страница авторизации/button_"), 30) == true): null

10-01-2025T04:30:14 - [MESSAGE][PASSED] - Object 'Object Repository/Страница авторизации/button_' is present

10-01-2025T04:30:14 - [TEST_STEP][PASSED] - setText(findTestObject("Страница авторизации/input__username"), findTestData("PlanFact").getValue(8, 1)): Text 'liazgina-di' is set on object 'Object Repository/Страница авторизации/input__username'

10-01-2025T04:30:14 - [MESSAGE][PASSED] - Text 'liazgina-di' is set on object 'Object Repository/Страница авторизации/input__username'

10-01-2025T04:30:14 - [TEST_STEP][PASSED] - setText(findTestObject("Страница авторизации/input__password"), findTestData("PlanFact").getValue(9, 1)): Text ')$%5srZ8o688Dm#q' is set on object 'Object Repository/Страница авторизации/input__password'

10-01-2025T04:30:15 - [MESSAGE][PASSED] - Text ')$%5srZ8o688Dm#q' is set on object 'Object Repository/Страница авторизации/input__password'

10-01-2025T04:30:15 - [TEST_STEP][PASSED] - click(findTestObject("Страница авторизации/button_")): Object: 'Object Repository/Страница авторизации/button_' is clicked on

10-01-2025T04:30:17 - [MESSAGE][PASSED] - Object: 'Object Repository/Страница авторизации/button_' is clicked on

10-01-2025T04:30:17 - [TEST_STEP][PASSED] - delay(45): Delayed 45 second(s)

10-01-2025T04:31:02 - [MESSAGE][PASSED] - Delayed 45 second(s)

10-01-2025T04:31:02 - [TEST_STEP][PASSED] - urlText = getText(findTestObject("Страница авторизации/Text")): Text of object 'Object Repository/Страница авторизации/Text' is: 'Период
Январь, Февраль, Март, Апрель, Май, Июнь, Июль, Август, Сентябрь, Октябрь, Ноябрь 2024 года
Выручка
Все
Выполнение плановых показателей по ПАО Россети за Январь, Февраль, Март, Апрель, Май, Июнь, Июль, Август, Сентябрь, Октябрь, Ноябрь 2024 года
План
Факт
Динамика
2024 год
0 млн.руб.
200 000 млн.руб.
400 000 млн.руб.
600 000 млн.руб.
800 000 млн.руб.
1 000 000 млн.руб.
1 200 000 млн.руб.
1 400 000 млн.руб.
1 600 000 млн.руб.
1 311 033
1 316 817
↑
ДЗО 
Все
Подписи данных
⬤Отклонение
АО «Тываэнерго»
АО «Чеченэнерго»
Россети Волга
Россети Кубань
Россети Ленэнерго (ГК)
Россети Московский регион
Россети Северный Кавказ (ГК)
Россети Северо-Запад
Россети Сибирь (ГК)
Россети Томск
Россети Тюмень
Россети Урал (ГК)
Россети ФСК ЕЭС
Россети Центр
Россети Центр и Приволжье (ГК)
Россети Юг (ГК)
Россети Янтарь
-27 500 млн.руб.
-25 000 млн.руб.
-22 500 млн.руб.
-20 000 млн.руб.
-17 500 млн.руб.
-15 000 млн.руб.
-12 500 млн.руб.
-10 000 млн.руб.
-7 500 млн.руб.
-5 000 млн.руб.
-2 500 млн.руб.
0 млн.руб.
2 500 млн.руб.
5 000 млн.руб.
7 500 млн.руб.
10 000 млн.руб.
12 500 млн.руб.
358
121
239
4 507
5 172
8 574
945
784
2 396
241
-6 052
2 027
-23 772
3 732
4 813
1 329
372
млн.
%
Выручка
Отклонение выручки по ПАО Россети за Январь, Февраль, Март, Апрель, Май, Июнь, Июль, Август, Сентябрь, Октябрь, Ноябрь 2024 года (факт/план, млн. руб)
ПАО Россети
5 783.7 млн.руб.
Статус данных
×
Просьба обратить внимание
Данные занесены не полностью
ВЫБРАННЫЕ ЗНАЧЕНИЯ ФИЛЬТРОВ
ДЗО | ПЕРИОД
ПАО Россети: [«Выбраны все филиалы по всем ДЗО по всем категориям»]
2024: [Янв, Фев, Мар, Апр, Май, Июн, Июл, Авг, Сен, Окт, Ноя]
*Внутренний оборот'

10-01-2025T04:31:02 - [MESSAGE][PASSED] - Text of object 'Object Repository/Страница авторизации/Text' is: 'Период
Январь, Февраль, Март, Апрель, Май, Июнь, Июль, Август, Сентябрь, Октябрь, Ноябрь 2024 года
Выручка
Все
Выполнение плановых показателей по ПАО Россети за Январь, Февраль, Март, Апрель, Май, Июнь, Июль, Август, Сентябрь, Октябрь, Ноябрь 2024 года
План
Факт
Динамика
2024 год
0 млн.руб.
200 000 млн.руб.
400 000 млн.руб.
600 000 млн.руб.
800 000 млн.руб.
1 000 000 млн.руб.
1 200 000 млн.руб.
1 400 000 млн.руб.
1 600 000 млн.руб.
1 311 033
1 316 817
↑
ДЗО 
Все
Подписи данных
⬤Отклонение
АО «Тываэнерго»
АО «Чеченэнерго»
Россети Волга
Россети Кубань
Россети Ленэнерго (ГК)
Россети Московский регион
Россети Северный Кавказ (ГК)
Россети Северо-Запад
Россети Сибирь (ГК)
Россети Томск
Россети Тюмень
Россети Урал (ГК)
Россети ФСК ЕЭС
Россети Центр
Россети Центр и Приволжье (ГК)
Россети Юг (ГК)
Россети Янтарь
-27 500 млн.руб.
-25 000 млн.руб.
-22 500 млн.руб.
-20 000 млн.руб.
-17 500 млн.руб.
-15 000 млн.руб.
-12 500 млн.руб.
-10 000 млн.руб.
-7 500 млн.руб.
-5 000 млн.руб.
-2 500 млн.руб.
0 млн.руб.
2 500 млн.руб.
5 000 млн.руб.
7 500 млн.руб.
10 000 млн.руб.
12 500 млн.руб.
358
121
239
4 507
5 172
8 574
945
784
2 396
241
-6 052
2 027
-23 772
3 732
4 813
1 329
372
млн.
%
Выручка
Отклонение выручки по ПАО Россети за Январь, Февраль, Март, Апрель, Май, Июнь, Июль, Август, Сентябрь, Октябрь, Ноябрь 2024 года (факт/план, млн. руб)
ПАО Россети
5 783.7 млн.руб.
Статус данных
×
Просьба обратить внимание
Данные занесены не полностью
ВЫБРАННЫЕ ЗНАЧЕНИЯ ФИЛЬТРОВ
ДЗО | ПЕРИОД
ПАО Россети: [«Выбраны все филиалы по всем ДЗО по всем категориям»]
2024: [Янв, Фев, Мар, Апр, Май, Июн, Июл, Авг, Сен, Окт, Ноя]
*Внутренний оборот'

10-01-2025T04:31:02 - [TEST_STEP][PASSED] - searchWord = "а": null

10-01-2025T04:31:02 - [TEST_STEP][PASSED] - if (urlText.contains("ошибка") || urlText.contains(searchWord) == false): null

10-01-2025T04:31:02 - [TEST_STEP][PASSED] - delay(45): Delayed 45 second(s)

10-01-2025T04:31:47 - [MESSAGE][PASSED] - Delayed 45 second(s)

10-01-2025T04:31:47 - [TEST_STEP][PASSED] - if (block == 2): Delayed 50 second(s)

10-01-2025T04:31:47 - [TEST_STEP][PASSED] - opoveshenie = getText(findTestObject("Выручка в рублях/Просьба обратить внимание")): Text of object 'Object Repository/Выручка в рублях/Просьба обратить внимание' is: 'Просьба обратить внимание'

10-01-2025T04:31:48 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выручка в рублях/Просьба обратить внимание' is: 'Просьба обратить внимание'

10-01-2025T04:31:48 - [TEST_STEP][PASSED] - if (opoveshenie == "Просьба обратить внимание"): Delayed 50 second(s)

10-01-2025T04:31:48 - [TEST_STEP][PASSED] - click(findTestObject("Выручка в рублях/Закрыть оповещение")): Object: 'Object Repository/Выручка в рублях/Закрыть оповещение' is clicked on

10-01-2025T04:31:48 - [MESSAGE][PASSED] - Object: 'Object Repository/Выручка в рублях/Закрыть оповещение' is clicked on

10-01-2025T04:31:48 - [TEST_STEP][PASSED] - delay(50): Delayed 50 second(s)

10-01-2025T04:32:38 - [MESSAGE][PASSED] - Delayed 50 second(s)

10-01-2025T04:32:38 - [TEST_STEP][PASSED] - click(findTestObject("Выручка в рублях/Фильтр Период" + nameOfBlock)): Object: 'Object Repository/Выручка в рублях/Фильтр Период Выручка' is clicked on

10-01-2025T04:32:38 - [MESSAGE][PASSED] - Object: 'Object Repository/Выручка в рублях/Фильтр Период Выручка' is clicked on

10-01-2025T04:32:38 - [TEST_STEP][PASSED] - click(findTestObject("Выручка в рублях/Снять выделение в фильтре Дата" + nameOfBlock)): Object: 'Object Repository/Выручка в рублях/Снять выделение в фильтре Дата Выручка' is clicked on

10-01-2025T04:32:39 - [MESSAGE][PASSED] - Object: 'Object Repository/Выручка в рублях/Снять выделение в фильтре Дата Выручка' is clicked on

10-01-2025T04:32:39 - [TEST_STEP][PASSED] - click(findTestObject("Выручка в рублях/Применить в фильтре Дата" + nameOfBlock)): Object: 'Object Repository/Выручка в рублях/Применить в фильтре Дата Выручка' is clicked on

10-01-2025T04:32:40 - [MESSAGE][PASSED] - Object: 'Object Repository/Выручка в рублях/Применить в фильтре Дата Выручка' is clicked on

10-01-2025T04:32:40 - [TEST_STEP][PASSED] - delay(50): Delayed 50 second(s)

10-01-2025T04:33:30 - [MESSAGE][PASSED] - Delayed 50 second(s)

10-01-2025T04:33:30 - [TEST_STEP][PASSED] - click(findTestObject("Выручка в рублях/Фильтр Период" + nameOfBlock)): Object: 'Object Repository/Выручка в рублях/Фильтр Период Выручка' is clicked on

10-01-2025T04:33:30 - [MESSAGE][PASSED] - Object: 'Object Repository/Выручка в рублях/Фильтр Период Выручка' is clicked on

10-01-2025T04:33:30 - [TEST_STEP][PASSED] - click(findTestObject("Выручка в рублях/Снять выделение в фильтре Дата" + nameOfBlock)): Object: 'Object Repository/Выручка в рублях/Снять выделение в фильтре Дата Выручка' is clicked on

10-01-2025T04:33:31 - [MESSAGE][PASSED] - Object: 'Object Repository/Выручка в рублях/Снять выделение в фильтре Дата Выручка' is clicked on

10-01-2025T04:33:31 - [TEST_STEP][PASSED] - scrollToElement(findTestObject("Выручка в рублях/2024 список" + nameOfBlock), 30): Scroll to object 'Object Repository/Выручка в рублях/2024 список Выручка' successfully

10-01-2025T04:33:31 - [MESSAGE][PASSED] - Scroll to object 'Object Repository/Выручка в рублях/2024 список Выручка' successfully

10-01-2025T04:33:31 - [TEST_STEP][PASSED] - click(findTestObject("Выручка в рублях/2024 список" + nameOfBlock)): Object: 'Object Repository/Выручка в рублях/2024 список Выручка' is clicked on

10-01-2025T04:33:31 - [MESSAGE][PASSED] - Object: 'Object Repository/Выручка в рублях/2024 список Выручка' is clicked on

10-01-2025T04:33:31 - [TEST_STEP][PASSED] - scrollToElement(findTestObject("Выручка в рублях/1 квартал 2024 выбрать" + nameOfBlock), 30): Scroll to object 'Object Repository/Выручка в рублях/1 квартал 2024 выбрать Выручка' successfully

10-01-2025T04:33:32 - [MESSAGE][PASSED] - Scroll to object 'Object Repository/Выручка в рублях/1 квартал 2024 выбрать Выручка' successfully

10-01-2025T04:33:32 - [TEST_STEP][PASSED] - click(findTestObject("Выручка в рублях/1 квартал 2024 выбрать" + nameOfBlock)): Object: 'Object Repository/Выручка в рублях/1 квартал 2024 выбрать Выручка' is clicked on

10-01-2025T04:33:32 - [MESSAGE][PASSED] - Object: 'Object Repository/Выручка в рублях/1 квартал 2024 выбрать Выручка' is clicked on

10-01-2025T04:33:32 - [TEST_STEP][PASSED] - scrollToElement(findTestObject("Выручка в рублях/2 квартал 2024 выбрать" + nameOfBlock), 30): Scroll to object 'Object Repository/Выручка в рублях/2 квартал 2024 выбрать Выручка' successfully

10-01-2025T04:33:33 - [MESSAGE][PASSED] - Scroll to object 'Object Repository/Выручка в рублях/2 квартал 2024 выбрать Выручка' successfully

10-01-2025T04:33:33 - [TEST_STEP][PASSED] - click(findTestObject("Выручка в рублях/2 квартал 2024 выбрать" + nameOfBlock)): Object: 'Object Repository/Выручка в рублях/2 квартал 2024 выбрать Выручка' is clicked on

10-01-2025T04:33:33 - [MESSAGE][PASSED] - Object: 'Object Repository/Выручка в рублях/2 квартал 2024 выбрать Выручка' is clicked on

10-01-2025T04:33:33 - [TEST_STEP][PASSED] - scrollToElement(findTestObject("Выручка в рублях/3 квартал 2024 список" + nameOfBlock), 30): Scroll to object 'Object Repository/Выручка в рублях/3 квартал 2024 список Выручка' successfully

10-01-2025T04:33:34 - [MESSAGE][PASSED] - Scroll to object 'Object Repository/Выручка в рублях/3 квартал 2024 список Выручка' successfully

10-01-2025T04:33:34 - [TEST_STEP][PASSED] - click(findTestObject("Выручка в рублях/3 квартал 2024" + nameOfBlock)): Object: 'Object Repository/Выручка в рублях/3 квартал 2024 Выручка' is clicked on

10-01-2025T04:33:34 - [MESSAGE][PASSED] - Object: 'Object Repository/Выручка в рублях/3 квартал 2024 Выручка' is clicked on

10-01-2025T04:33:34 - [TEST_STEP][PASSED] - scrollToElement(findTestObject("Выручка в рублях/4 квартал 2024 список" + nameOfBlock), 30): Scroll to object 'Object Repository/Выручка в рублях/4 квартал 2024 список Выручка' successfully

10-01-2025T04:33:34 - [MESSAGE][PASSED] - Scroll to object 'Object Repository/Выручка в рублях/4 квартал 2024 список Выручка' successfully

10-01-2025T04:33:34 - [TEST_STEP][PASSED] - click(findTestObject("Выручка в рублях/4 квартал 2024 список" + nameOfBlock)): Object: 'Object Repository/Выручка в рублях/4 квартал 2024 список Выручка' is clicked on

10-01-2025T04:33:35 - [MESSAGE][PASSED] - Object: 'Object Repository/Выручка в рублях/4 квартал 2024 список Выручка' is clicked on

10-01-2025T04:33:35 - [TEST_STEP][PASSED] - scrollToElement(findTestObject("Выручка в рублях/Октябрь 2024" + nameOfBlock), 30): Scroll to object 'Object Repository/Выручка в рублях/Октябрь 2024 Выручка' successfully

10-01-2025T04:33:35 - [MESSAGE][PASSED] - Scroll to object 'Object Repository/Выручка в рублях/Октябрь 2024 Выручка' successfully

10-01-2025T04:33:35 - [TEST_STEP][PASSED] - click(findTestObject("Выручка в рублях/Октябрь 2024" + nameOfBlock)): Object: 'Object Repository/Выручка в рублях/Октябрь 2024 Выручка' is clicked on

10-01-2025T04:33:35 - [MESSAGE][PASSED] - Object: 'Object Repository/Выручка в рублях/Октябрь 2024 Выручка' is clicked on

10-01-2025T04:33:35 - [TEST_STEP][PASSED] - scrollToElement(findTestObject("Выручка в рублях/Ноябрь 2024" + nameOfBlock), 30): Scroll to object 'Object Repository/Выручка в рублях/Ноябрь 2024 Выручка' successfully

10-01-2025T04:33:36 - [MESSAGE][PASSED] - Scroll to object 'Object Repository/Выручка в рублях/Ноябрь 2024 Выручка' successfully

10-01-2025T04:33:36 - [TEST_STEP][PASSED] - click(findTestObject("Выручка в рублях/Ноябрь 2024" + nameOfBlock)): Object: 'Object Repository/Выручка в рублях/Ноябрь 2024 Выручка' is clicked on

10-01-2025T04:33:36 - [MESSAGE][PASSED] - Object: 'Object Repository/Выручка в рублях/Ноябрь 2024 Выручка' is clicked on

10-01-2025T04:33:36 - [TEST_STEP][PASSED] - scrollToElement(findTestObject("Выручка в рублях/Заголовок дашборда" + nameOfBlock), 30): Scroll to object 'Object Repository/Выручка в рублях/Заголовок дашборда Выручка' successfully

10-01-2025T04:33:37 - [MESSAGE][PASSED] - Scroll to object 'Object Repository/Выручка в рублях/Заголовок дашборда Выручка' successfully

10-01-2025T04:33:37 - [TEST_STEP][PASSED] - click(findTestObject("Выручка в рублях/Применить в фильтре Дата" + nameOfBlock)): Object: 'Object Repository/Выручка в рублях/Применить в фильтре Дата Выручка' is clicked on

10-01-2025T04:33:37 - [MESSAGE][PASSED] - Object: 'Object Repository/Выручка в рублях/Применить в фильтре Дата Выручка' is clicked on

10-01-2025T04:33:37 - [TEST_STEP][PASSED] - delay(55): Delayed 55 second(s)

10-01-2025T04:34:32 - [MESSAGE][PASSED] - Delayed 55 second(s)

10-01-2025T04:34:32 - [TEST_STEP][PASSED] - click(findTestObject("Выручка в рублях/Фильтр ДЗО" + nameOfBlock)): Object: 'Object Repository/Выручка в рублях/Фильтр ДЗО Выручка' is clicked on

10-01-2025T04:34:33 - [MESSAGE][PASSED] - Object: 'Object Repository/Выручка в рублях/Фильтр ДЗО Выручка' is clicked on

10-01-2025T04:34:33 - [TEST_STEP][PASSED] - click(findTestObject("Выручка в рублях/Снять выделение в фильтре ДЗО" + nameOfBlock)): Object: 'Object Repository/Выручка в рублях/Снять выделение в фильтре ДЗО Выручка' is clicked on

10-01-2025T04:34:33 - [MESSAGE][PASSED] - Object: 'Object Repository/Выручка в рублях/Снять выделение в фильтре ДЗО Выручка' is clicked on

10-01-2025T04:34:33 - [TEST_STEP][PASSED] - click(findTestObject("Выручка в рублях/Применить в фильтре ДЗО" + nameOfBlock)): Object: 'Object Repository/Выручка в рублях/Применить в фильтре ДЗО Выручка' is clicked on

10-01-2025T04:34:34 - [MESSAGE][PASSED] - Object: 'Object Repository/Выручка в рублях/Применить в фильтре ДЗО Выручка' is clicked on

10-01-2025T04:34:34 - [TEST_STEP][PASSED] - delay(50): Delayed 50 second(s)

10-01-2025T04:35:24 - [MESSAGE][PASSED] - Delayed 50 second(s)

10-01-2025T04:35:24 - [TEST_STEP][PASSED] - Script1710234207206.Tumbler(run, vir, block, nameOfBlock): null

10-01-2025T04:35:24 - [TEST_STEP][PASSED] - println("run:" + run): null

10-01-2025T04:35:24 - [TEST_STEP][PASSED] - println("vir:" + vir): null

10-01-2025T04:35:24 - [TEST_STEP][PASSED] - println("block:" + block): null

10-01-2025T04:35:24 - [TEST_STEP][PASSED] - println("nameOfBlock:" + nameOfBlock): null

10-01-2025T04:35:24 - [TEST_STEP][PASSED] - if (vir == 1): null

10-01-2025T04:35:24 - [TEST_STEP][PASSED] - else if (vir == 2): null

10-01-2025T04:35:24 - [TEST_STEP][PASSED] - else if (vir == 3): Object: 'Object Repository/Выручка в рублях/Применить в фильтре Выручка Выручка' is clicked on

10-01-2025T04:35:24 - [TEST_STEP][PASSED] - if (run == 2): Object: 'Object Repository/Выручка в рублях/Переключить отображение с млн на проценты Выручка в рублях Выручка' is clicked on

10-01-2025T04:35:24 - [TEST_STEP][PASSED] - click(findTestObject("Выручка в рублях/Переключить отображение с млн на проценты Выручка в рублях" + nameOfBlock)): Object: 'Object Repository/Выручка в рублях/Переключить отображение с млн на проценты Выручка в рублях Выручка' is clicked on

10-01-2025T04:35:24 - [MESSAGE][PASSED] - Object: 'Object Repository/Выручка в рублях/Переключить отображение с млн на проценты Выручка в рублях Выручка' is clicked on

10-01-2025T04:35:24 - [TEST_STEP][PASSED] - click(findTestObject("Выручка в рублях/Фильтр Выручка" + nameOfBlock)): Object: 'Object Repository/Выручка в рублях/Фильтр Выручка Выручка' is clicked on

10-01-2025T04:35:25 - [MESSAGE][PASSED] - Object: 'Object Repository/Выручка в рублях/Фильтр Выручка Выручка' is clicked on

10-01-2025T04:35:25 - [TEST_STEP][PASSED] - click(findTestObject("Выручка в рублях/Внутренний оборот в фильтре Выручка" + nameOfBlock)): Object: 'Object Repository/Выручка в рублях/Внутренний оборот в фильтре Выручка Выручка' is clicked on

10-01-2025T04:35:25 - [MESSAGE][PASSED] - Object: 'Object Repository/Выручка в рублях/Внутренний оборот в фильтре Выручка Выручка' is clicked on

10-01-2025T04:35:25 - [TEST_STEP][PASSED] - click(findTestObject("Выручка в рублях/Применить в фильтре Выручка" + nameOfBlock)): Object: 'Object Repository/Выручка в рублях/Применить в фильтре Выручка Выручка' is clicked on

10-01-2025T04:35:26 - [MESSAGE][PASSED] - Object: 'Object Repository/Выручка в рублях/Применить в фильтре Выручка Выручка' is clicked on

10-01-2025T04:35:26 - [TEST_STEP][PASSED] - click(findTestObject("Выручка в рублях/Фильтр ДЗО" + nameOfBlock)): Object: 'Object Repository/Выручка в рублях/Фильтр ДЗО Выручка' is clicked on

10-01-2025T04:35:28 - [MESSAGE][PASSED] - Object: 'Object Repository/Выручка в рублях/Фильтр ДЗО Выручка' is clicked on

10-01-2025T04:35:28 - [TEST_STEP][PASSED] - Script1710234207206.Rosseti(nameOfBlock): null

10-01-2025T04:35:28 - [TEST_STEP][PASSED] - println("nameOfBlock:" + nameOfBlock): null

10-01-2025T04:35:28 - [TEST_STEP][PASSED] - click(findTestObject("Выручка в рублях/ПАО Россети" + nameOfBlock)): Object: 'Object Repository/Выручка в рублях/ПАО Россети Выручка' is clicked on

10-01-2025T04:35:28 - [MESSAGE][PASSED] - Object: 'Object Repository/Выручка в рублях/ПАО Россети Выручка' is clicked on

10-01-2025T04:35:28 - [TEST_STEP][PASSED] - click(findTestObject("Выручка в рублях/Применить в фильтре ДЗО" + nameOfBlock)): Object: 'Object Repository/Выручка в рублях/Применить в фильтре ДЗО Выручка' is clicked on

10-01-2025T04:35:29 - [MESSAGE][PASSED] - Object: 'Object Repository/Выручка в рублях/Применить в фильтре ДЗО Выручка' is clicked on

10-01-2025T04:35:29 - [TEST_STEP][PASSED] - if (vir == 1 || vir == 2): null

10-01-2025T04:35:29 - [TEST_STEP][PASSED] - else: Text of object 'Object Repository/Выручка в рублях/vir3Plan Выручка' is: '22 220'

10-01-2025T04:35:29 - [TEST_STEP][PASSED] - b1 = getText(findTestObject("Выручка в рублях/vir3Plan Выручка")): Text of object 'Object Repository/Выручка в рублях/vir3Plan Выручка' is: '22 220'

10-01-2025T04:35:30 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выручка в рублях/vir3Plan Выручка' is: '22 220'

10-01-2025T04:35:30 - [TEST_STEP][PASSED] - if (vir == 1 || vir == 2): null

10-01-2025T04:35:30 - [TEST_STEP][PASSED] - else: Text of object 'Object Repository/Выручка в рублях/vir3Fact Выручка' is: '22 905'

10-01-2025T04:35:30 - [TEST_STEP][PASSED] - b2 = getText(findTestObject("Выручка в рублях/vir3Fact Выручка")): Text of object 'Object Repository/Выручка в рублях/vir3Fact Выручка' is: '22 905'

10-01-2025T04:35:31 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выручка в рублях/vir3Fact Выручка' is: '22 905'

10-01-2025T04:35:31 - [TEST_STEP][PASSED] - b30 = getText(findTestObject("Выручка в рублях/span1" + perc)): Text of object 'Object Repository/Выручка в рублях/span1 Perc' is: '-90.48 %'

10-01-2025T04:35:31 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выручка в рублях/span1 Perc' is: '-90.48 %'

10-01-2025T04:35:31 - [TEST_STEP][PASSED] - i = b30.indexOf("млн.руб."): null

10-01-2025T04:35:31 - [TEST_STEP][PASSED] - if (i > -1): null

10-01-2025T04:35:31 - [TEST_STEP][PASSED] - if (b30.contains("%")): null

10-01-2025T04:35:31 - [TEST_STEP][PASSED] - b30 = b30.replaceAll("%", ""): null

10-01-2025T04:35:31 - [TEST_STEP][PASSED] - b30 = ").trim(): null

10-01-2025T04:35:31 - [TEST_STEP][PASSED] - println("b30: " + b30): null

10-01-2025T04:35:31 - [TEST_STEP][PASSED] - if (vir == 1 || vir == 2): null

10-01-2025T04:35:31 - [TEST_STEP][PASSED] - else: Text of object 'Object Repository/Выручка в рублях/span15 Perc' is: '-100 %'

10-01-2025T04:35:31 - [TEST_STEP][PASSED] - b31 = ").trim(): Text of object 'Object Repository/Выручка в рублях/span15 Perc' is: '-100 %'

10-01-2025T04:35:31 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выручка в рублях/span15 Perc' is: '-100 %'

10-01-2025T04:35:31 - [TEST_STEP][PASSED] - if (vir == 1 || vir == 2): null

10-01-2025T04:35:31 - [TEST_STEP][PASSED] - else: Text of object 'Object Repository/Выручка в рублях/span16 Perc' is: '-90.11 %'

10-01-2025T04:35:31 - [TEST_STEP][PASSED] - b32 = ").trim(): Text of object 'Object Repository/Выручка в рублях/span16 Perc' is: '-90.11 %'

10-01-2025T04:35:32 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выручка в рублях/span16 Perc' is: '-90.11 %'

10-01-2025T04:35:32 - [TEST_STEP][PASSED] - if (vir == 1 || vir == 2): null

10-01-2025T04:35:32 - [TEST_STEP][PASSED] - else: Text of object 'Object Repository/Выручка в рублях/span17 Perc' is: '-89.64 %'

10-01-2025T04:35:32 - [TEST_STEP][PASSED] - b37 = ").trim(): Text of object 'Object Repository/Выручка в рублях/span17 Perc' is: '-89.64 %'

10-01-2025T04:35:32 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выручка в рублях/span17 Perc' is: '-89.64 %'

10-01-2025T04:35:32 - [TEST_STEP][PASSED] - if (vir == 1 || vir == 2): null

10-01-2025T04:35:32 - [TEST_STEP][PASSED] - else: Text of object 'Object Repository/Выручка в рублях/span18 Perc' is: '-90.2 %'

10-01-2025T04:35:32 - [TEST_STEP][PASSED] - b316 = ").trim(): Text of object 'Object Repository/Выручка в рублях/span18 Perc' is: '-90.2 %'

10-01-2025T04:35:32 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выручка в рублях/span18 Perc' is: '-90.2 %'

10-01-2025T04:35:32 - [TEST_STEP][PASSED] - if (vir == 1 || vir == 2): null

10-01-2025T04:35:32 - [TEST_STEP][PASSED] - dZO = "ПАО Россети": null

10-01-2025T04:35:32 - [TEST_STEP][PASSED] - if (verifyEqual(a1, b1) == false): Actual object '22 220' and expected object '22 220' are equal

10-01-2025T04:35:32 - [MESSAGE][PASSED] - Actual object '22 220' and expected object '22 220' are equal

10-01-2025T04:35:32 - [TEST_STEP][PASSED] - if (verifyEqual(a2, b2) == false): Actual object '22 905' and expected object '22 905' are equal

10-01-2025T04:35:32 - [MESSAGE][PASSED] - Actual object '22 905' and expected object '22 905' are equal

10-01-2025T04:35:32 - [TEST_STEP][PASSED] - vidget = "Отклонения": null

10-01-2025T04:35:32 - [TEST_STEP][FAILED] - if (verifyEqual(a30, b30) == false): null

10-01-2025T04:35:32 - [MESSAGE][FAILED] - Unable to verify equal between actual object '-91.3' and expected object '-90.48' (Root cause: com.kms.katalon.core.exception.StepFailedException: Actual object '-91.3' and expected object '-90.48' are not equal
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.doCall(VerifyEqualKeyword.groovy:58)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.call(VerifyEqualKeyword.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:75)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.verifyEqual(VerifyEqualKeyword.groovy:63)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.execute(VerifyEqualKeyword.groovy:44)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:74)
	at com.kms.katalon.core.keyword.BuiltinKeywords.verifyEqual(BuiltinKeywords.groovy:146)
	at jdk.internal.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at Выручка в рублях сверка дашбордов ПАО Россети.Blocks(Выручка в рублях сверка дашбордов ПАО Россети:357)
	at Выручка в рублях сверка дашбордов ПАО Россети.ViruchkaChange(Выручка в рублях сверка дашбордов ПАО Россети:60)
	at Выручка в рублях сверка дашбордов ПАО Россети.run(Выручка в рублях сверка дашбордов ПАО Россети:55)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:448)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:439)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:418)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:410)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:285)
	at com.kms.katalon.core.common.CommonExecutor.accessTestCaseMainPhase(CommonExecutor.java:65)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:150)
	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:106)
	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:180)
	at TempTestSuite1736466949911.run(TempTestSuite1736466949911.groovy:35)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
)

10-01-2025T04:35:32 - [TEST_STEP][PASSED] - a = replaceAll("\s+", "").toDouble(): null

10-01-2025T04:35:32 - [TEST_STEP][PASSED] - b = replaceAll("\s+", "").toDouble(): null

10-01-2025T04:35:32 - [TEST_STEP][PASSED] - Script1710234207206.WriteToExcel(todaysDate, run, vir, block, typeOfData, viruchka, vidget, nameOfBlock, a, b, dZO): null

10-01-2025T04:35:32 - [TEST_STEP][PASSED] - println(run): null

10-01-2025T04:35:32 - [TEST_STEP][PASSED] - if (run == 1): null

10-01-2025T04:35:32 - [TEST_STEP][PASSED] - else if (run == 2): null

10-01-2025T04:35:32 - [TEST_STEP][PASSED] - typeOfData = "Проценты": null

10-01-2025T04:35:32 - [TEST_STEP][PASSED] - println("todaysDate:" + todaysDate): null

10-01-2025T04:35:32 - [TEST_STEP][PASSED] - println("typeOfData:" + typeOfData): null

10-01-2025T04:35:32 - [TEST_STEP][PASSED] - viruchka = getText(findTestObject("Выручка в рублях/Фильтр Выручка" + nameOfBlock)): Text of object 'Object Repository/Выручка в рублях/Фильтр Выручка Выручка' is: 'ПЕРЕДАЧА ЭЛЕКТРОЭНЕРГИИ, внутренний оборот'

10-01-2025T04:35:33 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выручка в рублях/Фильтр Выручка Выручка' is: 'ПЕРЕДАЧА ЭЛЕКТРОЭНЕРГИИ, внутренний оборот'

10-01-2025T04:35:33 - [TEST_STEP][PASSED] - println("viruchka" + viruchka): null

10-01-2025T04:35:33 - [TEST_STEP][PASSED] - println("vidget" + vidget): null

10-01-2025T04:35:33 - [TEST_STEP][PASSED] - println("a" + a): null

10-01-2025T04:35:33 - [TEST_STEP][PASSED] - println("b" + b): null

10-01-2025T04:35:33 - [TEST_STEP][PASSED] - sheetName = "Sheet1": null

10-01-2025T04:35:33 - [TEST_STEP][PASSED] - data = findTestData("PlanFact"): null

10-01-2025T04:35:33 - [TEST_STEP][PASSED] - n = data.getRowNumbers() + 1: null

10-01-2025T04:35:33 - [TEST_STEP][PASSED] - period = getText(findTestObject("Выручка в рублях/Фильтр Период")): Text of object 'Object Repository/Выручка в рублях/Фильтр Период' is: 'Октябрь, Ноябрь и 1, 2, 3 кв. 2024 года'

10-01-2025T04:35:33 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выручка в рублях/Фильтр Период' is: 'Октябрь, Ноябрь и 1, 2, 3 кв. 2024 года'

10-01-2025T04:35:33 - [TEST_STEP][PASSED] - println(period): null

10-01-2025T04:35:33 - [TEST_STEP][PASSED] - dashboardName = "Выручка в рублях": null

10-01-2025T04:35:33 - [TEST_STEP][PASSED] - workbook01 = getWorkbook(excelFilePath): null

10-01-2025T04:35:33 - [TEST_STEP][PASSED] - sheet01 = getExcelSheet(workbook01, sheetName): null

10-01-2025T04:35:33 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 0, dashboardName): null

10-01-2025T04:35:33 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 1, dZO): null

10-01-2025T04:35:33 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 2, vidget): null

10-01-2025T04:35:33 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 3, viruchka): null

10-01-2025T04:35:33 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 4, typeOfData): null

10-01-2025T04:35:33 - [TEST_STEP][PASSED] - if (a == null): null

10-01-2025T04:35:33 - [TEST_STEP][PASSED] - else: null

10-01-2025T04:35:33 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 5, a): null

10-01-2025T04:35:33 - [TEST_STEP][PASSED] - if (b == null): null

10-01-2025T04:35:33 - [TEST_STEP][PASSED] - else: null

10-01-2025T04:35:33 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 6, b): null

10-01-2025T04:35:33 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 7, period): null

10-01-2025T04:35:33 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 8, todaysDate): null

10-01-2025T04:35:33 - [TEST_STEP][PASSED] - n = n + 1: null

10-01-2025T04:35:33 - [TEST_STEP][PASSED] - saveWorkbook(excelFilePath, workbook01): null

10-01-2025T04:35:33 - [TEST_STEP][PASSED] - dZO = "АО «Тываэнерго»": null

10-01-2025T04:35:33 - [TEST_STEP][PASSED] - if (verifyEqual(a31, b31) == false): Actual object '-100' and expected object '-100' are equal

10-01-2025T04:35:33 - [MESSAGE][PASSED] - Actual object '-100' and expected object '-100' are equal

10-01-2025T04:35:33 - [TEST_STEP][PASSED] - dZO = "АО «Чеченэнерго»": null

10-01-2025T04:35:33 - [TEST_STEP][FAILED] - if (verifyEqual(a32, b32) == false): null

10-01-2025T04:35:33 - [MESSAGE][FAILED] - Unable to verify equal between actual object '-90.96' and expected object '-90.11' (Root cause: com.kms.katalon.core.exception.StepFailedException: Actual object '-90.96' and expected object '-90.11' are not equal
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.doCall(VerifyEqualKeyword.groovy:58)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.call(VerifyEqualKeyword.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:75)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.verifyEqual(VerifyEqualKeyword.groovy:63)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.execute(VerifyEqualKeyword.groovy:44)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:74)
	at com.kms.katalon.core.keyword.BuiltinKeywords.verifyEqual(BuiltinKeywords.groovy:146)
	at jdk.internal.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at Выручка в рублях сверка дашбордов ПАО Россети.Blocks(Выручка в рублях сверка дашбордов ПАО Россети:377)
	at Выручка в рублях сверка дашбордов ПАО Россети.ViruchkaChange(Выручка в рублях сверка дашбордов ПАО Россети:60)
	at Выручка в рублях сверка дашбордов ПАО Россети.run(Выручка в рублях сверка дашбордов ПАО Россети:55)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:448)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:439)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:418)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:410)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:285)
	at com.kms.katalon.core.common.CommonExecutor.accessTestCaseMainPhase(CommonExecutor.java:65)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:150)
	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:106)
	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:180)
	at TempTestSuite1736466949911.run(TempTestSuite1736466949911.groovy:35)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
)

10-01-2025T04:35:33 - [TEST_STEP][PASSED] - a = replaceAll("\s+", "").toDouble(): null

10-01-2025T04:35:33 - [TEST_STEP][PASSED] - b = replaceAll("\s+", "").toDouble(): null

10-01-2025T04:35:33 - [TEST_STEP][PASSED] - Script1710234207206.WriteToExcel(todaysDate, run, vir, block, typeOfData, viruchka, vidget, nameOfBlock, a, b, dZO): null

10-01-2025T04:35:33 - [TEST_STEP][PASSED] - println(run): null

10-01-2025T04:35:33 - [TEST_STEP][PASSED] - if (run == 1): null

10-01-2025T04:35:33 - [TEST_STEP][PASSED] - else if (run == 2): null

10-01-2025T04:35:33 - [TEST_STEP][PASSED] - typeOfData = "Проценты": null

10-01-2025T04:35:33 - [TEST_STEP][PASSED] - println("todaysDate:" + todaysDate): null

10-01-2025T04:35:33 - [TEST_STEP][PASSED] - println("typeOfData:" + typeOfData): null

10-01-2025T04:35:33 - [TEST_STEP][PASSED] - viruchka = getText(findTestObject("Выручка в рублях/Фильтр Выручка" + nameOfBlock)): Text of object 'Object Repository/Выручка в рублях/Фильтр Выручка Выручка' is: 'ПЕРЕДАЧА ЭЛЕКТРОЭНЕРГИИ, внутренний оборот'

10-01-2025T04:35:33 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выручка в рублях/Фильтр Выручка Выручка' is: 'ПЕРЕДАЧА ЭЛЕКТРОЭНЕРГИИ, внутренний оборот'

10-01-2025T04:35:33 - [TEST_STEP][PASSED] - println("viruchka" + viruchka): null

10-01-2025T04:35:33 - [TEST_STEP][PASSED] - println("vidget" + vidget): null

10-01-2025T04:35:33 - [TEST_STEP][PASSED] - println("a" + a): null

10-01-2025T04:35:33 - [TEST_STEP][PASSED] - println("b" + b): null

10-01-2025T04:35:33 - [TEST_STEP][PASSED] - sheetName = "Sheet1": null

10-01-2025T04:35:33 - [TEST_STEP][PASSED] - data = findTestData("PlanFact"): null

10-01-2025T04:35:34 - [TEST_STEP][PASSED] - n = data.getRowNumbers() + 1: null

10-01-2025T04:35:34 - [TEST_STEP][PASSED] - period = getText(findTestObject("Выручка в рублях/Фильтр Период")): Text of object 'Object Repository/Выручка в рублях/Фильтр Период' is: 'Октябрь, Ноябрь и 1, 2, 3 кв. 2024 года'

10-01-2025T04:35:34 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выручка в рублях/Фильтр Период' is: 'Октябрь, Ноябрь и 1, 2, 3 кв. 2024 года'

10-01-2025T04:35:34 - [TEST_STEP][PASSED] - println(period): null

10-01-2025T04:35:34 - [TEST_STEP][PASSED] - dashboardName = "Выручка в рублях": null

10-01-2025T04:35:34 - [TEST_STEP][PASSED] - workbook01 = getWorkbook(excelFilePath): null

10-01-2025T04:35:34 - [TEST_STEP][PASSED] - sheet01 = getExcelSheet(workbook01, sheetName): null

10-01-2025T04:35:34 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 0, dashboardName): null

10-01-2025T04:35:34 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 1, dZO): null

10-01-2025T04:35:34 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 2, vidget): null

10-01-2025T04:35:34 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 3, viruchka): null

10-01-2025T04:35:34 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 4, typeOfData): null

10-01-2025T04:35:34 - [TEST_STEP][PASSED] - if (a == null): null

10-01-2025T04:35:34 - [TEST_STEP][PASSED] - else: null

10-01-2025T04:35:34 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 5, a): null

10-01-2025T04:35:34 - [TEST_STEP][PASSED] - if (b == null): null

10-01-2025T04:35:34 - [TEST_STEP][PASSED] - else: null

10-01-2025T04:35:34 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 6, b): null

10-01-2025T04:35:34 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 7, period): null

10-01-2025T04:35:34 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 8, todaysDate): null

10-01-2025T04:35:34 - [TEST_STEP][PASSED] - n = n + 1: null

10-01-2025T04:35:34 - [TEST_STEP][PASSED] - saveWorkbook(excelFilePath, workbook01): null

10-01-2025T04:35:34 - [TEST_STEP][PASSED] - dZO = "Россети Волга": null

10-01-2025T04:35:34 - [TEST_STEP][PASSED] - if (verifyEqual(a33, b33) == false): Actual object 'null' and expected object 'null' are equal

10-01-2025T04:35:34 - [MESSAGE][PASSED] - Actual object 'null' and expected object 'null' are equal

10-01-2025T04:35:34 - [TEST_STEP][PASSED] - dZO = "Россети Кубань": null

10-01-2025T04:35:34 - [TEST_STEP][PASSED] - if (verifyEqual(a34, b34) == false): Actual object 'null' and expected object 'null' are equal

10-01-2025T04:35:34 - [MESSAGE][PASSED] - Actual object 'null' and expected object 'null' are equal

10-01-2025T04:35:34 - [TEST_STEP][PASSED] - dZO = "Россети Ленэнерго (ГК)": null

10-01-2025T04:35:34 - [TEST_STEP][PASSED] - if (verifyEqual(a35, b35) == false): Actual object 'null' and expected object 'null' are equal

10-01-2025T04:35:34 - [MESSAGE][PASSED] - Actual object 'null' and expected object 'null' are equal

10-01-2025T04:35:34 - [TEST_STEP][PASSED] - dZO = "Россети Московский регион": null

10-01-2025T04:35:34 - [TEST_STEP][PASSED] - if (verifyEqual(a36, b36) == false): Actual object 'null' and expected object 'null' are equal

10-01-2025T04:35:34 - [MESSAGE][PASSED] - Actual object 'null' and expected object 'null' are equal

10-01-2025T04:35:34 - [TEST_STEP][PASSED] - dZO = "Россети Северный Кавказ (ГК)": null

10-01-2025T04:35:34 - [TEST_STEP][FAILED] - if (verifyEqual(a37, b37) == false): null

10-01-2025T04:35:34 - [MESSAGE][FAILED] - Unable to verify equal between actual object '-90.61' and expected object '-89.64' (Root cause: com.kms.katalon.core.exception.StepFailedException: Actual object '-90.61' and expected object '-89.64' are not equal
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.doCall(VerifyEqualKeyword.groovy:58)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.call(VerifyEqualKeyword.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:75)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.verifyEqual(VerifyEqualKeyword.groovy:63)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.execute(VerifyEqualKeyword.groovy:44)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:74)
	at com.kms.katalon.core.keyword.BuiltinKeywords.verifyEqual(BuiltinKeywords.groovy:146)
	at jdk.internal.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at Выручка в рублях сверка дашбордов ПАО Россети.Blocks(Выручка в рублях сверка дашбордов ПАО Россети:427)
	at Выручка в рублях сверка дашбордов ПАО Россети.ViruchkaChange(Выручка в рублях сверка дашбордов ПАО Россети:60)
	at Выручка в рублях сверка дашбордов ПАО Россети.run(Выручка в рублях сверка дашбордов ПАО Россети:55)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:448)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:439)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:418)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:410)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:285)
	at com.kms.katalon.core.common.CommonExecutor.accessTestCaseMainPhase(CommonExecutor.java:65)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:150)
	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:106)
	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:180)
	at TempTestSuite1736466949911.run(TempTestSuite1736466949911.groovy:35)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
)

10-01-2025T04:35:34 - [TEST_STEP][PASSED] - a = replaceAll("\s+", "").toDouble(): null

10-01-2025T04:35:34 - [TEST_STEP][PASSED] - b = replaceAll("\s+", "").toDouble(): null

10-01-2025T04:35:34 - [TEST_STEP][PASSED] - Script1710234207206.WriteToExcel(todaysDate, run, vir, block, typeOfData, viruchka, vidget, nameOfBlock, a, b, dZO): null

10-01-2025T04:35:34 - [TEST_STEP][PASSED] - println(run): null

10-01-2025T04:35:34 - [TEST_STEP][PASSED] - if (run == 1): null

10-01-2025T04:35:34 - [TEST_STEP][PASSED] - else if (run == 2): null

10-01-2025T04:35:34 - [TEST_STEP][PASSED] - typeOfData = "Проценты": null

10-01-2025T04:35:34 - [TEST_STEP][PASSED] - println("todaysDate:" + todaysDate): null

10-01-2025T04:35:34 - [TEST_STEP][PASSED] - println("typeOfData:" + typeOfData): null

10-01-2025T04:35:34 - [TEST_STEP][PASSED] - viruchka = getText(findTestObject("Выручка в рублях/Фильтр Выручка" + nameOfBlock)): Text of object 'Object Repository/Выручка в рублях/Фильтр Выручка Выручка' is: 'ПЕРЕДАЧА ЭЛЕКТРОЭНЕРГИИ, внутренний оборот'

10-01-2025T04:35:34 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выручка в рублях/Фильтр Выручка Выручка' is: 'ПЕРЕДАЧА ЭЛЕКТРОЭНЕРГИИ, внутренний оборот'

10-01-2025T04:35:34 - [TEST_STEP][PASSED] - println("viruchka" + viruchka): null

10-01-2025T04:35:34 - [TEST_STEP][PASSED] - println("vidget" + vidget): null

10-01-2025T04:35:34 - [TEST_STEP][PASSED] - println("a" + a): null

10-01-2025T04:35:34 - [TEST_STEP][PASSED] - println("b" + b): null

10-01-2025T04:35:34 - [TEST_STEP][PASSED] - sheetName = "Sheet1": null

10-01-2025T04:35:34 - [TEST_STEP][PASSED] - data = findTestData("PlanFact"): null

10-01-2025T04:35:35 - [TEST_STEP][PASSED] - n = data.getRowNumbers() + 1: null

10-01-2025T04:35:35 - [TEST_STEP][PASSED] - period = getText(findTestObject("Выручка в рублях/Фильтр Период")): Text of object 'Object Repository/Выручка в рублях/Фильтр Период' is: 'Октябрь, Ноябрь и 1, 2, 3 кв. 2024 года'

10-01-2025T04:35:35 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выручка в рублях/Фильтр Период' is: 'Октябрь, Ноябрь и 1, 2, 3 кв. 2024 года'

10-01-2025T04:35:35 - [TEST_STEP][PASSED] - println(period): null

10-01-2025T04:35:35 - [TEST_STEP][PASSED] - dashboardName = "Выручка в рублях": null

10-01-2025T04:35:35 - [TEST_STEP][PASSED] - workbook01 = getWorkbook(excelFilePath): null

10-01-2025T04:35:35 - [TEST_STEP][PASSED] - sheet01 = getExcelSheet(workbook01, sheetName): null

10-01-2025T04:35:35 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 0, dashboardName): null

10-01-2025T04:35:35 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 1, dZO): null

10-01-2025T04:35:35 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 2, vidget): null

10-01-2025T04:35:35 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 3, viruchka): null

10-01-2025T04:35:35 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 4, typeOfData): null

10-01-2025T04:35:35 - [TEST_STEP][PASSED] - if (a == null): null

10-01-2025T04:35:35 - [TEST_STEP][PASSED] - else: null

10-01-2025T04:35:35 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 5, a): null

10-01-2025T04:35:35 - [TEST_STEP][PASSED] - if (b == null): null

10-01-2025T04:35:35 - [TEST_STEP][PASSED] - else: null

10-01-2025T04:35:35 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 6, b): null

10-01-2025T04:35:35 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 7, period): null

10-01-2025T04:35:35 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 8, todaysDate): null

10-01-2025T04:35:35 - [TEST_STEP][PASSED] - n = n + 1: null

10-01-2025T04:35:35 - [TEST_STEP][PASSED] - saveWorkbook(excelFilePath, workbook01): null

10-01-2025T04:35:35 - [TEST_STEP][PASSED] - dZO = "Россети Северо-Запад": null

10-01-2025T04:35:35 - [TEST_STEP][PASSED] - if (verifyEqual(a38, b38) == false): Actual object 'null' and expected object 'null' are equal

10-01-2025T04:35:35 - [MESSAGE][PASSED] - Actual object 'null' and expected object 'null' are equal

10-01-2025T04:35:35 - [TEST_STEP][PASSED] - dZO = "Россети Сибирь (ГК)": null

10-01-2025T04:35:35 - [TEST_STEP][PASSED] - if (verifyEqual(a39, b39) == false): Actual object 'null' and expected object 'null' are equal

10-01-2025T04:35:35 - [MESSAGE][PASSED] - Actual object 'null' and expected object 'null' are equal

10-01-2025T04:35:35 - [TEST_STEP][PASSED] - dZO = "Россети Томск": null

10-01-2025T04:35:35 - [TEST_STEP][PASSED] - if (verifyEqual(a310, b310) == false): Actual object 'null' and expected object 'null' are equal

10-01-2025T04:35:35 - [MESSAGE][PASSED] - Actual object 'null' and expected object 'null' are equal

10-01-2025T04:35:35 - [TEST_STEP][PASSED] - dZO = "Россети Тюмень": null

10-01-2025T04:35:35 - [TEST_STEP][PASSED] - if (verifyEqual(a311, b311) == false): Actual object 'null' and expected object 'null' are equal

10-01-2025T04:35:35 - [MESSAGE][PASSED] - Actual object 'null' and expected object 'null' are equal

10-01-2025T04:35:35 - [TEST_STEP][PASSED] - dZO = "Россети Урал (ГК)": null

10-01-2025T04:35:35 - [TEST_STEP][PASSED] - if (verifyEqual(a312, b312) == false): Actual object 'null' and expected object 'null' are equal

10-01-2025T04:35:35 - [MESSAGE][PASSED] - Actual object 'null' and expected object 'null' are equal

10-01-2025T04:35:35 - [TEST_STEP][PASSED] - dZO = "Россети ФСК ЕЭС": null

10-01-2025T04:35:35 - [TEST_STEP][PASSED] - if (verifyEqual(a313, b313) == false): Actual object 'null' and expected object 'null' are equal

10-01-2025T04:35:35 - [MESSAGE][PASSED] - Actual object 'null' and expected object 'null' are equal

10-01-2025T04:35:35 - [TEST_STEP][PASSED] - dZO = "Россети Центр": null

10-01-2025T04:35:35 - [TEST_STEP][PASSED] - if (verifyEqual(a314, b314) == false): Actual object 'null' and expected object 'null' are equal

10-01-2025T04:35:35 - [MESSAGE][PASSED] - Actual object 'null' and expected object 'null' are equal

10-01-2025T04:35:35 - [TEST_STEP][PASSED] - dZO = "Россети Центр и Приволжье (ГК)": null

10-01-2025T04:35:35 - [TEST_STEP][PASSED] - if (verifyEqual(a315, b315) == false): Actual object 'null' and expected object 'null' are equal

10-01-2025T04:35:35 - [MESSAGE][PASSED] - Actual object 'null' and expected object 'null' are equal

10-01-2025T04:35:35 - [TEST_STEP][PASSED] - dZO = "Россети Юг (ГК)": null

10-01-2025T04:35:35 - [TEST_STEP][FAILED] - if (verifyEqual(a316, b316) == false): null

10-01-2025T04:35:35 - [MESSAGE][FAILED] - Unable to verify equal between actual object '-91.02' and expected object '-90.2' (Root cause: com.kms.katalon.core.exception.StepFailedException: Actual object '-91.02' and expected object '-90.2' are not equal
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.doCall(VerifyEqualKeyword.groovy:58)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.call(VerifyEqualKeyword.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:75)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.verifyEqual(VerifyEqualKeyword.groovy:63)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.execute(VerifyEqualKeyword.groovy:44)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:74)
	at com.kms.katalon.core.keyword.BuiltinKeywords.verifyEqual(BuiltinKeywords.groovy:146)
	at jdk.internal.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at Выручка в рублях сверка дашбордов ПАО Россети.Blocks(Выручка в рублях сверка дашбордов ПАО Россети:517)
	at Выручка в рублях сверка дашбордов ПАО Россети.ViruchkaChange(Выручка в рублях сверка дашбордов ПАО Россети:60)
	at Выручка в рублях сверка дашбордов ПАО Россети.run(Выручка в рублях сверка дашбордов ПАО Россети:55)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:448)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:439)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:418)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:410)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:285)
	at com.kms.katalon.core.common.CommonExecutor.accessTestCaseMainPhase(CommonExecutor.java:65)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:150)
	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:106)
	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:180)
	at TempTestSuite1736466949911.run(TempTestSuite1736466949911.groovy:35)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
)

10-01-2025T04:35:35 - [TEST_STEP][PASSED] - a = replaceAll("\s+", "").toDouble(): null

10-01-2025T04:35:35 - [TEST_STEP][PASSED] - b = replaceAll("\s+", "").toDouble(): null

10-01-2025T04:35:35 - [TEST_STEP][PASSED] - Script1710234207206.WriteToExcel(todaysDate, run, vir, block, typeOfData, viruchka, vidget, nameOfBlock, a, b, dZO): null

10-01-2025T04:35:35 - [TEST_STEP][PASSED] - println(run): null

10-01-2025T04:35:35 - [TEST_STEP][PASSED] - if (run == 1): null

10-01-2025T04:35:35 - [TEST_STEP][PASSED] - else if (run == 2): null

10-01-2025T04:35:35 - [TEST_STEP][PASSED] - typeOfData = "Проценты": null

10-01-2025T04:35:35 - [TEST_STEP][PASSED] - println("todaysDate:" + todaysDate): null

10-01-2025T04:35:35 - [TEST_STEP][PASSED] - println("typeOfData:" + typeOfData): null

10-01-2025T04:35:35 - [TEST_STEP][PASSED] - viruchka = getText(findTestObject("Выручка в рублях/Фильтр Выручка" + nameOfBlock)): Text of object 'Object Repository/Выручка в рублях/Фильтр Выручка Выручка' is: 'ПЕРЕДАЧА ЭЛЕКТРОЭНЕРГИИ, внутренний оборот'

10-01-2025T04:35:35 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выручка в рублях/Фильтр Выручка Выручка' is: 'ПЕРЕДАЧА ЭЛЕКТРОЭНЕРГИИ, внутренний оборот'

10-01-2025T04:35:35 - [TEST_STEP][PASSED] - println("viruchka" + viruchka): null

10-01-2025T04:35:35 - [TEST_STEP][PASSED] - println("vidget" + vidget): null

10-01-2025T04:35:35 - [TEST_STEP][PASSED] - println("a" + a): null

10-01-2025T04:35:35 - [TEST_STEP][PASSED] - println("b" + b): null

10-01-2025T04:35:35 - [TEST_STEP][PASSED] - sheetName = "Sheet1": null

10-01-2025T04:35:35 - [TEST_STEP][PASSED] - data = findTestData("PlanFact"): null

10-01-2025T04:35:36 - [TEST_STEP][PASSED] - n = data.getRowNumbers() + 1: null

10-01-2025T04:35:36 - [TEST_STEP][PASSED] - period = getText(findTestObject("Выручка в рублях/Фильтр Период")): Text of object 'Object Repository/Выручка в рублях/Фильтр Период' is: 'Октябрь, Ноябрь и 1, 2, 3 кв. 2024 года'

10-01-2025T04:35:36 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выручка в рублях/Фильтр Период' is: 'Октябрь, Ноябрь и 1, 2, 3 кв. 2024 года'

10-01-2025T04:35:36 - [TEST_STEP][PASSED] - println(period): null

10-01-2025T04:35:36 - [TEST_STEP][PASSED] - dashboardName = "Выручка в рублях": null

10-01-2025T04:35:36 - [TEST_STEP][PASSED] - workbook01 = getWorkbook(excelFilePath): null

10-01-2025T04:35:36 - [TEST_STEP][PASSED] - sheet01 = getExcelSheet(workbook01, sheetName): null

10-01-2025T04:35:36 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 0, dashboardName): null

10-01-2025T04:35:36 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 1, dZO): null

10-01-2025T04:35:36 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 2, vidget): null

10-01-2025T04:35:36 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 3, viruchka): null

10-01-2025T04:35:36 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 4, typeOfData): null

10-01-2025T04:35:36 - [TEST_STEP][PASSED] - if (a == null): null

10-01-2025T04:35:36 - [TEST_STEP][PASSED] - else: null

10-01-2025T04:35:36 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 5, a): null

10-01-2025T04:35:36 - [TEST_STEP][PASSED] - if (b == null): null

10-01-2025T04:35:36 - [TEST_STEP][PASSED] - else: null

10-01-2025T04:35:36 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 6, b): null

10-01-2025T04:35:36 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 7, period): null

10-01-2025T04:35:36 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 8, todaysDate): null

10-01-2025T04:35:36 - [TEST_STEP][PASSED] - n = n + 1: null

10-01-2025T04:35:36 - [TEST_STEP][PASSED] - saveWorkbook(excelFilePath, workbook01): null

10-01-2025T04:35:36 - [TEST_STEP][PASSED] - dZO = "Россети Янтарь": null

10-01-2025T04:35:36 - [TEST_STEP][PASSED] - if (verifyEqual(a317, b317) == false): Actual object 'null' and expected object 'null' are equal

10-01-2025T04:35:36 - [MESSAGE][PASSED] - Actual object 'null' and expected object 'null' are equal

10-01-2025T04:35:36 - [TEST_STEP][PASSED] - closeBrowser(): Browser is closed

10-01-2025T04:35:36 - [MESSAGE][PASSED] - Browser is closed]]></system-out>
         <system-err><![CDATA[10-01-2025T03:10:59 - [TEST_CASE][FAILED] - Test Cases/Сверки дашбордов/Выручка в рублях сверка дашбордов ПАО Россети: Test Cases/Сверки дашбордов/Выручка в рублях сверка дашбордов ПАО Россети FAILED.
Reason:
com.kms.katalon.core.exception.StepFailedException: Unable to verify equal between actual object '-95.38' and expected object '-95.24' (Root cause: com.kms.katalon.core.exception.StepFailedException: Actual object '-95.38' and expected object '-95.24' are not equal
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.doCall(VerifyEqualKeyword.groovy:58)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.call(VerifyEqualKeyword.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:75)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.verifyEqual(VerifyEqualKeyword.groovy:63)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.execute(VerifyEqualKeyword.groovy:44)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:74)
	at com.kms.katalon.core.keyword.BuiltinKeywords.verifyEqual(BuiltinKeywords.groovy:146)
	at jdk.internal.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at Выручка в рублях сверка дашбордов ПАО Россети.Blocks(Выручка в рублях сверка дашбордов ПАО Россети:357)
	at Выручка в рублях сверка дашбордов ПАО Россети.ViruchkaChange(Выручка в рублях сверка дашбордов ПАО Россети:60)
	at Выручка в рублях сверка дашбордов ПАО Россети.run(Выручка в рублях сверка дашбордов ПАО Россети:55)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:448)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:439)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:418)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:410)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:285)
	at com.kms.katalon.core.common.CommonExecutor.accessTestCaseMainPhase(CommonExecutor.java:65)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:150)
	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:106)
	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:180)
	at TempTestSuite1736466949911.run(TempTestSuite1736466949911.groovy:35)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
)
	at com.kms.katalon.core.keyword.internal.KeywordMain.stepFailed(KeywordMain.groovy:39)
	at com.kms.katalon.core.keyword.internal.KeywordMain.stepFailed(KeywordMain.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:77)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.verifyEqual(VerifyEqualKeyword.groovy:63)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.execute(VerifyEqualKeyword.groovy:44)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:74)
	at com.kms.katalon.core.keyword.BuiltinKeywords.verifyEqual(BuiltinKeywords.groovy:146)
	at jdk.internal.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at Выручка в рублях сверка дашбордов ПАО Россети.Blocks(Выручка в рублях сверка дашбордов ПАО Россети:357)
	at Выручка в рублях сверка дашбордов ПАО Россети.ViruchkaChange(Выручка в рублях сверка дашбордов ПАО Россети:60)
	at Выручка в рублях сверка дашбордов ПАО Россети.run(Выручка в рублях сверка дашбордов ПАО Россети:55)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:448)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:439)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:418)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:410)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:285)
	at com.kms.katalon.core.common.CommonExecutor.accessTestCaseMainPhase(CommonExecutor.java:65)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:150)
	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:106)
	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:180)
	at TempTestSuite1736466949911.run(TempTestSuite1736466949911.groovy:35)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
Caused by: com.kms.katalon.core.exception.StepFailedException: Actual object '-95.38' and expected object '-95.24' are not equal
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.doCall(VerifyEqualKeyword.groovy:58)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.call(VerifyEqualKeyword.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:75)
	... 24 more]]></system-err>
      </testcase>
      <testcase name="Test Cases/Сверки дашбордов/Выручка по ДЗО сверка дашбордов" time="96.251" classname="Test Cases/Сверки дашбордов/Выручка по ДЗО сверка дашбордов" status="FAILED">
         <failure type="FAILED" message="Test Cases/Сверки дашбордов/Выручка по ДЗО сверка дашбордов FAILED.&#xa;Reason:&#xa;com.kms.katalon.core.exception.StepFailedException: Unable to verify equal between actual object '0%0%&#xa;0,66%0,66%&#xa;11,88%11,88%&#xa;10,78%10,78%&#xa;16,29%16,29%&#xa;0%0%&#xa;4,76%4,76%&#xa;8,24%8,24%&#xa;0%0%&#xa;1,44%1,44%&#xa;10,49%10,49%&#xa;15,84%15,84%&#xa;0%0%&#xa;0%0%&#xa;12,17%12,17%&#xa;7,45%7,45%&#xa;0%0%&#xa;' and expected object '0,16%0,16%&#xa;0,32%0,32%&#xa;5,52%5,52%&#xa;5,56%5,56%&#xa;7,41%7,41%&#xa;15,08%15,08%&#xa;2,26%2,26%&#xa;3,77%3,77%&#xa;5,03%5,03%&#xa;0,68%0,68%&#xa;5,36%5,36%&#xa;7,43%7,43%&#xa;19,67%19,67%&#xa;8,34%8,34%&#xa;9%9%&#xa;3,71%3,71%&#xa;0,69%0,69%&#xa;' (Root cause: com.kms.katalon.core.exception.StepFailedException: Actual object '0%0%&#xa;0,66%0,66%&#xa;11,88%11,88%&#xa;10,78%10,78%&#xa;16,29%16,29%&#xa;0%0%&#xa;4,76%4,76%&#xa;8,24%8,24%&#xa;0%0%&#xa;1,44%1,44%&#xa;10,49%10,49%&#xa;15,84%15,84%&#xa;0%0%&#xa;0%0%&#xa;12,17%12,17%&#xa;7,45%7,45%&#xa;0%0%&#xa;' and expected object '0,16%0,16%&#xa;0,32%0,32%&#xa;5,52%5,52%&#xa;5,56%5,56%&#xa;7,41%7,41%&#xa;15,08%15,08%&#xa;2,26%2,26%&#xa;3,77%3,77%&#xa;5,03%5,03%&#xa;0,68%0,68%&#xa;5,36%5,36%&#xa;7,43%7,43%&#xa;19,67%19,67%&#xa;8,34%8,34%&#xa;9%9%&#xa;3,71%3,71%&#xa;0,69%0,69%&#xa;' are not equal&#xa;	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.doCall(VerifyEqualKeyword.groovy:58)&#xa;	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.call(VerifyEqualKeyword.groovy)&#xa;	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:75)&#xa;	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.verifyEqual(VerifyEqualKeyword.groovy:63)&#xa;	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.execute(VerifyEqualKeyword.groovy:44)&#xa;	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:74)&#xa;	at com.kms.katalon.core.keyword.BuiltinKeywords.verifyEqual(BuiltinKeywords.groovy:146)&#xa;	at jdk.internal.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)&#xa;	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#xa;	at Выручка по ДЗО сверка дашбордов.run(Выручка по ДЗО сверка дашбордов:180)&#xa;	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)&#xa;	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)&#xa;	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:448)&#xa;	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:439)&#xa;	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:418)&#xa;	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:410)&#xa;	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:285)&#xa;	at com.kms.katalon.core.common.CommonExecutor.accessTestCaseMainPhase(CommonExecutor.java:65)&#xa;	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:150)&#xa;	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:106)&#xa;	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:180)&#xa;	at TempTestSuite1736466949911.run(TempTestSuite1736466949911.groovy:35)&#xa;	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#xa;	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)&#xa;	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#xa;)&#xa;	at com.kms.katalon.core.keyword.internal.KeywordMain.stepFailed(KeywordMain.groovy:39)&#xa;	at com.kms.katalon.core.keyword.internal.KeywordMain.stepFailed(KeywordMain.groovy)&#xa;	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:77)&#xa;	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.verifyEqual(VerifyEqualKeyword.groovy:63)&#xa;	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.execute(VerifyEqualKeyword.groovy:44)&#xa;	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:74)&#xa;	at com.kms.katalon.core.keyword.BuiltinKeywords.verifyEqual(BuiltinKeywords.groovy:146)&#xa;	at jdk.internal.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)&#xa;	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#xa;	at Выручка по ДЗО сверка дашбордов.run(Выручка по ДЗО сверка дашбордов:180)&#xa;	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)&#xa;	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)&#xa;	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:448)&#xa;	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:439)&#xa;	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:418)&#xa;	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:410)&#xa;	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:285)&#xa;	at com.kms.katalon.core.common.CommonExecutor.accessTestCaseMainPhase(CommonExecutor.java:65)&#xa;	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:150)&#xa;	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:106)&#xa;	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:180)&#xa;	at TempTestSuite1736466949911.run(TempTestSuite1736466949911.groovy:35)&#xa;	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#xa;	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)&#xa;	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#xa;Caused by: com.kms.katalon.core.exception.StepFailedException: Actual object '0%0%&#xa;0,66%0,66%&#xa;11,88%11,88%&#xa;10,78%10,78%&#xa;16,29%16,29%&#xa;0%0%&#xa;4,76%4,76%&#xa;8,24%8,24%&#xa;0%0%&#xa;1,44%1,44%&#xa;10,49%10,49%&#xa;15,84%15,84%&#xa;0%0%&#xa;0%0%&#xa;12,17%12,17%&#xa;7,45%7,45%&#xa;0%0%&#xa;' and expected object '0,16%0,16%&#xa;0,32%0,32%&#xa;5,52%5,52%&#xa;5,56%5,56%&#xa;7,41%7,41%&#xa;15,08%15,08%&#xa;2,26%2,26%&#xa;3,77%3,77%&#xa;5,03%5,03%&#xa;0,68%0,68%&#xa;5,36%5,36%&#xa;7,43%7,43%&#xa;19,67%19,67%&#xa;8,34%8,34%&#xa;9%9%&#xa;3,71%3,71%&#xa;0,69%0,69%&#xa;' are not equal&#xa;	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.doCall(VerifyEqualKeyword.groovy:58)&#xa;	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.call(VerifyEqualKeyword.groovy)&#xa;	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:75)&#xa;	... 22 more&#xa;"/>
         <system-out><![CDATA[10-01-2025T04:35:36 - [TEST_CASE][FAILED] - Test Cases/Сверки дашбордов/Выручка по ДЗО сверка дашбордов: Test Cases/Сверки дашбордов/Выручка по ДЗО сверка дашбордов FAILED.
Reason:
com.kms.katalon.core.exception.StepFailedException: Unable to verify equal between actual object '0%0%
0,66%0,66%
11,88%11,88%
10,78%10,78%
16,29%16,29%
0%0%
4,76%4,76%
8,24%8,24%
0%0%
1,44%1,44%
10,49%10,49%
15,84%15,84%
0%0%
0%0%
12,17%12,17%
7,45%7,45%
0%0%
' and expected object '0,16%0,16%
0,32%0,32%
5,52%5,52%
5,56%5,56%
7,41%7,41%
15,08%15,08%
2,26%2,26%
3,77%3,77%
5,03%5,03%
0,68%0,68%
5,36%5,36%
7,43%7,43%
19,67%19,67%
8,34%8,34%
9%9%
3,71%3,71%
0,69%0,69%
' (Root cause: com.kms.katalon.core.exception.StepFailedException: Actual object '0%0%
0,66%0,66%
11,88%11,88%
10,78%10,78%
16,29%16,29%
0%0%
4,76%4,76%
8,24%8,24%
0%0%
1,44%1,44%
10,49%10,49%
15,84%15,84%
0%0%
0%0%
12,17%12,17%
7,45%7,45%
0%0%
' and expected object '0,16%0,16%
0,32%0,32%
5,52%5,52%
5,56%5,56%
7,41%7,41%
15,08%15,08%
2,26%2,26%
3,77%3,77%
5,03%5,03%
0,68%0,68%
5,36%5,36%
7,43%7,43%
19,67%19,67%
8,34%8,34%
9%9%
3,71%3,71%
0,69%0,69%
' are not equal
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.doCall(VerifyEqualKeyword.groovy:58)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.call(VerifyEqualKeyword.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:75)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.verifyEqual(VerifyEqualKeyword.groovy:63)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.execute(VerifyEqualKeyword.groovy:44)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:74)
	at com.kms.katalon.core.keyword.BuiltinKeywords.verifyEqual(BuiltinKeywords.groovy:146)
	at jdk.internal.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at Выручка по ДЗО сверка дашбордов.run(Выручка по ДЗО сверка дашбордов:180)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:448)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:439)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:418)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:410)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:285)
	at com.kms.katalon.core.common.CommonExecutor.accessTestCaseMainPhase(CommonExecutor.java:65)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:150)
	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:106)
	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:180)
	at TempTestSuite1736466949911.run(TempTestSuite1736466949911.groovy:35)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
)
	at com.kms.katalon.core.keyword.internal.KeywordMain.stepFailed(KeywordMain.groovy:39)
	at com.kms.katalon.core.keyword.internal.KeywordMain.stepFailed(KeywordMain.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:77)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.verifyEqual(VerifyEqualKeyword.groovy:63)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.execute(VerifyEqualKeyword.groovy:44)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:74)
	at com.kms.katalon.core.keyword.BuiltinKeywords.verifyEqual(BuiltinKeywords.groovy:146)
	at jdk.internal.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at Выручка по ДЗО сверка дашбордов.run(Выручка по ДЗО сверка дашбордов:180)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:448)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:439)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:418)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:410)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:285)
	at com.kms.katalon.core.common.CommonExecutor.accessTestCaseMainPhase(CommonExecutor.java:65)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:150)
	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:106)
	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:180)
	at TempTestSuite1736466949911.run(TempTestSuite1736466949911.groovy:35)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
Caused by: com.kms.katalon.core.exception.StepFailedException: Actual object '0%0%
0,66%0,66%
11,88%11,88%
10,78%10,78%
16,29%16,29%
0%0%
4,76%4,76%
8,24%8,24%
0%0%
1,44%1,44%
10,49%10,49%
15,84%15,84%
0%0%
0%0%
12,17%12,17%
7,45%7,45%
0%0%
' and expected object '0,16%0,16%
0,32%0,32%
5,52%5,52%
5,56%5,56%
7,41%7,41%
15,08%15,08%
2,26%2,26%
3,77%3,77%
5,03%5,03%
0,68%0,68%
5,36%5,36%
7,43%7,43%
19,67%19,67%
8,34%8,34%
9%9%
3,71%3,71%
0,69%0,69%
' are not equal
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.doCall(VerifyEqualKeyword.groovy:58)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.call(VerifyEqualKeyword.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:75)
	... 22 more


10-01-2025T04:35:37 - [TEST_STEP][PASSED] - date = new java.util.Date(): null

10-01-2025T04:35:37 - [TEST_STEP][PASSED] - todaysDate = date.format("dd.MM.yyyy"): null

10-01-2025T04:35:37 - [TEST_STEP][PASSED] - println(todaysDate): null

10-01-2025T04:35:37 - [TEST_STEP][PASSED] - openBrowser(""): Browser is opened with url: ''

10-01-2025T04:35:37 - [MESSAGE][INFO] - Starting 'Chrome' driver

10-01-2025T04:35:37 - [MESSAGE][INFO] - Action delay is set to 0 milliseconds

10-01-2025T04:35:38 - [MESSAGE][PASSED] - Browser is opened with url: ''

10-01-2025T04:35:38 - [TEST_STEP][PASSED] - navigateToUrl(findTestData("PlanFact").getValue(10, 5)): Navigate to 'https://bi.rosseti.digital/viewer?dashboardGuid=2301950b23be4ed89c1df75f2020051e&sheetGuid=31530aa0b6664c09b016b7f2ab9d853e&fit=true' successfully

10-01-2025T04:35:46 - [MESSAGE][PASSED] - Navigate to 'https://bi.rosseti.digital/viewer?dashboardGuid=2301950b23be4ed89c1df75f2020051e&sheetGuid=31530aa0b6664c09b016b7f2ab9d853e&fit=true' successfully

10-01-2025T04:35:46 - [TEST_STEP][PASSED] - setText(findTestObject("Страница авторизации/input__username"), findTestData("PlanFact").getValue(8, 1)): Text 'liazgina-di' is set on object 'Object Repository/Страница авторизации/input__username'

10-01-2025T04:35:47 - [MESSAGE][PASSED] - Text 'liazgina-di' is set on object 'Object Repository/Страница авторизации/input__username'

10-01-2025T04:35:47 - [TEST_STEP][PASSED] - setText(findTestObject("Страница авторизации/input__password"), findTestData("PlanFact").getValue(9, 1)): Text ')$%5srZ8o688Dm#q' is set on object 'Object Repository/Страница авторизации/input__password'

10-01-2025T04:35:48 - [MESSAGE][PASSED] - Text ')$%5srZ8o688Dm#q' is set on object 'Object Repository/Страница авторизации/input__password'

10-01-2025T04:35:48 - [TEST_STEP][PASSED] - click(findTestObject("Страница авторизации/button_")): Object: 'Object Repository/Страница авторизации/button_' is clicked on

10-01-2025T04:35:49 - [MESSAGE][PASSED] - Object: 'Object Repository/Страница авторизации/button_' is clicked on

10-01-2025T04:35:49 - [TEST_STEP][PASSED] - delay(30): Delayed 30 second(s)

10-01-2025T04:36:19 - [MESSAGE][PASSED] - Delayed 30 second(s)

10-01-2025T04:36:19 - [TEST_STEP][PASSED] - click(findTestObject("Выручка по ДЗО/Фильтр Дата")): Object: 'Object Repository/Выручка по ДЗО/Фильтр Дата' is clicked on

10-01-2025T04:36:20 - [MESSAGE][PASSED] - Object: 'Object Repository/Выручка по ДЗО/Фильтр Дата' is clicked on

10-01-2025T04:36:20 - [TEST_STEP][PASSED] - click(findTestObject("Выручка по ДЗО/Снять выделение в фильтре Дата")): Object: 'Object Repository/Выручка по ДЗО/Снять выделение в фильтре Дата' is clicked on

10-01-2025T04:36:20 - [MESSAGE][PASSED] - Object: 'Object Repository/Выручка по ДЗО/Снять выделение в фильтре Дата' is clicked on

10-01-2025T04:36:20 - [TEST_STEP][PASSED] - click(findTestObject("Выручка по ДЗО/Применить в фильтре Дата")): Object: 'Object Repository/Выручка по ДЗО/Применить в фильтре Дата' is clicked on

10-01-2025T04:36:21 - [MESSAGE][PASSED] - Object: 'Object Repository/Выручка по ДЗО/Применить в фильтре Дата' is clicked on

10-01-2025T04:36:21 - [TEST_STEP][PASSED] - click(findTestObject("Выручка по ДЗО/Фильтр Дата")): Object: 'Object Repository/Выручка по ДЗО/Фильтр Дата' is clicked on

10-01-2025T04:36:22 - [MESSAGE][PASSED] - Object: 'Object Repository/Выручка по ДЗО/Фильтр Дата' is clicked on

10-01-2025T04:36:22 - [TEST_STEP][PASSED] - click(findTestObject("Выручка по ДЗО/Снять выделение в фильтре Дата")): Object: 'Object Repository/Выручка по ДЗО/Снять выделение в фильтре Дата' is clicked on

10-01-2025T04:36:22 - [MESSAGE][PASSED] - Object: 'Object Repository/Выручка по ДЗО/Снять выделение в фильтре Дата' is clicked on

10-01-2025T04:36:22 - [TEST_STEP][PASSED] - scrollToElement(findTestObject("Выручка по ДЗО/2024 список"), 30): Scroll to object 'Object Repository/Выручка по ДЗО/2024 список' successfully

10-01-2025T04:36:23 - [MESSAGE][PASSED] - Scroll to object 'Object Repository/Выручка по ДЗО/2024 список' successfully

10-01-2025T04:36:23 - [TEST_STEP][PASSED] - click(findTestObject("Выручка по ДЗО/2024 список")): Object: 'Object Repository/Выручка по ДЗО/2024 список' is clicked on

10-01-2025T04:36:23 - [MESSAGE][PASSED] - Object: 'Object Repository/Выручка по ДЗО/2024 список' is clicked on

10-01-2025T04:36:23 - [TEST_STEP][PASSED] - scrollToElement(findTestObject("Выручка по ДЗО/1 квартал 2024 выбрать"), 30): Scroll to object 'Object Repository/Выручка по ДЗО/1 квартал 2024 выбрать' successfully

10-01-2025T04:36:24 - [MESSAGE][PASSED] - Scroll to object 'Object Repository/Выручка по ДЗО/1 квартал 2024 выбрать' successfully

10-01-2025T04:36:24 - [TEST_STEP][PASSED] - click(findTestObject("Выручка по ДЗО/1 квартал 2024 выбрать")): Object: 'Object Repository/Выручка по ДЗО/1 квартал 2024 выбрать' is clicked on

10-01-2025T04:36:24 - [MESSAGE][PASSED] - Object: 'Object Repository/Выручка по ДЗО/1 квартал 2024 выбрать' is clicked on

10-01-2025T04:36:24 - [TEST_STEP][PASSED] - scrollToElement(findTestObject("Выручка по ДЗО/2 квартал 2024 выбрать"), 30): Scroll to object 'Object Repository/Выручка по ДЗО/2 квартал 2024 выбрать' successfully

10-01-2025T04:36:24 - [MESSAGE][PASSED] - Scroll to object 'Object Repository/Выручка по ДЗО/2 квартал 2024 выбрать' successfully

10-01-2025T04:36:24 - [TEST_STEP][PASSED] - click(findTestObject("Выручка по ДЗО/2 квартал 2024 выбрать"), CONTINUE_ON_FAILURE): Object: 'Object Repository/Выручка по ДЗО/2 квартал 2024 выбрать' is clicked on

10-01-2025T04:36:25 - [MESSAGE][PASSED] - Object: 'Object Repository/Выручка по ДЗО/2 квартал 2024 выбрать' is clicked on

10-01-2025T04:36:25 - [TEST_STEP][PASSED] - scrollToElement(findTestObject("Выручка по ДЗО/Заголовок дашборда"), 30): Scroll to object 'Object Repository/Выручка по ДЗО/Заголовок дашборда' successfully

10-01-2025T04:36:25 - [MESSAGE][PASSED] - Scroll to object 'Object Repository/Выручка по ДЗО/Заголовок дашборда' successfully

10-01-2025T04:36:25 - [TEST_STEP][PASSED] - click(findTestObject("Выручка по ДЗО/3 квартал 2024 выбрать"), CONTINUE_ON_FAILURE): Object: 'Object Repository/Выручка по ДЗО/3 квартал 2024 выбрать' is clicked on

10-01-2025T04:36:26 - [MESSAGE][PASSED] - Object: 'Object Repository/Выручка по ДЗО/3 квартал 2024 выбрать' is clicked on

10-01-2025T04:36:26 - [TEST_STEP][PASSED] - scrollToElement(findTestObject("Выручка по ДЗО/4 квартал 2024 список"), 30): Scroll to object 'Object Repository/Выручка по ДЗО/4 квартал 2024 список' successfully

10-01-2025T04:36:26 - [MESSAGE][PASSED] - Scroll to object 'Object Repository/Выручка по ДЗО/4 квартал 2024 список' successfully

10-01-2025T04:36:26 - [TEST_STEP][PASSED] - click(findTestObject("Выручка по ДЗО/4 квартал 2024 список"), CONTINUE_ON_FAILURE): Object: 'Object Repository/Выручка по ДЗО/4 квартал 2024 список' is clicked on

10-01-2025T04:36:26 - [MESSAGE][PASSED] - Object: 'Object Repository/Выручка по ДЗО/4 квартал 2024 список' is clicked on

10-01-2025T04:36:26 - [TEST_STEP][PASSED] - scrollToElement(findTestObject("Выручка по ДЗО/Октябрь 2024"), 30): Scroll to object 'Object Repository/Выручка по ДЗО/Октябрь 2024' successfully

10-01-2025T04:36:27 - [MESSAGE][PASSED] - Scroll to object 'Object Repository/Выручка по ДЗО/Октябрь 2024' successfully

10-01-2025T04:36:27 - [TEST_STEP][PASSED] - click(findTestObject("Выручка по ДЗО/Октябрь 2024"), CONTINUE_ON_FAILURE): Object: 'Object Repository/Выручка по ДЗО/Октябрь 2024' is clicked on

10-01-2025T04:36:27 - [MESSAGE][PASSED] - Object: 'Object Repository/Выручка по ДЗО/Октябрь 2024' is clicked on

10-01-2025T04:36:27 - [TEST_STEP][PASSED] - scrollToElement(findTestObject("Выручка по ДЗО/Ноябрь 2024"), 30): Scroll to object 'Object Repository/Выручка по ДЗО/Ноябрь 2024' successfully

10-01-2025T04:36:28 - [MESSAGE][PASSED] - Scroll to object 'Object Repository/Выручка по ДЗО/Ноябрь 2024' successfully

10-01-2025T04:36:28 - [TEST_STEP][PASSED] - click(findTestObject("Выручка по ДЗО/Ноябрь 2024"), CONTINUE_ON_FAILURE): Object: 'Object Repository/Выручка по ДЗО/Ноябрь 2024' is clicked on

10-01-2025T04:36:28 - [MESSAGE][PASSED] - Object: 'Object Repository/Выручка по ДЗО/Ноябрь 2024' is clicked on

10-01-2025T04:36:28 - [TEST_STEP][PASSED] - click(findTestObject("Выручка по ДЗО/Применить в фильтре Дата")): Object: 'Object Repository/Выручка по ДЗО/Применить в фильтре Дата' is clicked on

10-01-2025T04:36:29 - [MESSAGE][PASSED] - Object: 'Object Repository/Выручка по ДЗО/Применить в фильтре Дата' is clicked on

10-01-2025T04:36:29 - [TEST_STEP][PASSED] - a1 = getText(findTestObject("Выручка по ДЗО/График1 Выполнение плановых показателей Блок руководителя")): Text of object 'Object Repository/Выручка по ДЗО/График1 Выполнение плановых показателей Блок руководителя' is: '1 730 1 730
4 153 4 153
72 388 72 388
68 677 68 677
92 345 92 345
189 943 189 943
28 867 28 867
48 866 48 866
63 904 63 904
8 686 8 686
76 612 76 612
95 829 95 829
282 813 282 813
106 151 106 151
113 750 113 750
47 546 47 546
8 773 8 773
2 089 2 089
4 274 4 274
72 627 72 627
73 184 73 184
97 517 97 517
198 517 198 517
29 812 29 812
49 650 49 650
66 300 66 300
8 926 8 926
70 559 70 559
97 856 97 856
259 041 259 041
109 883 109 883
118 563 118 563
48 875 48 875
9 145 9 145
План
Факт
АО «Тываэнерго»
АО «Чеченэнерго»
Россети Волга
Россети Кубань
Россети Ленэнерго (ГК)
Россети Московский регион
Россети Северный Кавказ (ГК)
Россети Северо-Запад
Россети Сибирь (ГК)
Россети Томск
Россети Тюмень
Россети Урал (ГК)
Россети ФСК ЕЭС
Россети Центр
Россети Центр и Приволжье (ГК)
Россети Юг (ГК)
Россети Янтарь
0 млн. руб.
25 000 млн. руб.
50 000 млн. руб.
75 000 млн. руб.
100 000 млн. руб.
125 000 млн. руб.
150 000 млн. руб.
175 000 млн. руб.
200 000 млн. руб.
225 000 млн. руб.
250 000 млн. руб.
275 000 млн. руб.
300 000 млн. руб.'

10-01-2025T04:36:29 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выручка по ДЗО/График1 Выполнение плановых показателей Блок руководителя' is: '1 730 1 730
4 153 4 153
72 388 72 388
68 677 68 677
92 345 92 345
189 943 189 943
28 867 28 867
48 866 48 866
63 904 63 904
8 686 8 686
76 612 76 612
95 829 95 829
282 813 282 813
106 151 106 151
113 750 113 750
47 546 47 546
8 773 8 773
2 089 2 089
4 274 4 274
72 627 72 627
73 184 73 184
97 517 97 517
198 517 198 517
29 812 29 812
49 650 49 650
66 300 66 300
8 926 8 926
70 559 70 559
97 856 97 856
259 041 259 041
109 883 109 883
118 563 118 563
48 875 48 875
9 145 9 145
План
Факт
АО «Тываэнерго»
АО «Чеченэнерго»
Россети Волга
Россети Кубань
Россети Ленэнерго (ГК)
Россети Московский регион
Россети Северный Кавказ (ГК)
Россети Северо-Запад
Россети Сибирь (ГК)
Россети Томск
Россети Тюмень
Россети Урал (ГК)
Россети ФСК ЕЭС
Россети Центр
Россети Центр и Приволжье (ГК)
Россети Юг (ГК)
Россети Янтарь
0 млн. руб.
25 000 млн. руб.
50 000 млн. руб.
75 000 млн. руб.
100 000 млн. руб.
125 000 млн. руб.
150 000 млн. руб.
175 000 млн. руб.
200 000 млн. руб.
225 000 млн. руб.
250 000 млн. руб.
275 000 млн. руб.
300 000 млн. руб.'

10-01-2025T04:36:29 - [TEST_STEP][PASSED] - println("a1: " + a1): null

10-01-2025T04:36:29 - [TEST_STEP][PASSED] - i = a1.indexOf("План"): null

10-01-2025T04:36:29 - [TEST_STEP][PASSED] - a1 = a1.substring(0, i): null

10-01-2025T04:36:29 - [TEST_STEP][PASSED] - println("a1: " + a1): null

10-01-2025T04:36:29 - [TEST_STEP][PASSED] - a2 = getText(findTestObject("Выручка по ДЗО/График2 Выполнение плановых показателей Блок руководителя")): Text of object 'Object Repository/Выручка по ДЗО/График2 Выполнение плановых показателей Блок руководителя' is: '0%0%
0,66%0,66%
11,88%11,88%
10,78%10,78%
16,29%16,29%
0%0%
4,76%4,76%
8,24%8,24%
0%0%
1,44%1,44%
10,49%10,49%
15,84%15,84%
0%0%
0%0%
12,17%12,17%
7,45%7,45%
0%0%
АО «Тываэнерго»
АО «Чеченэнерго»
Россети Волга
Россети Кубань
Россети Ленэнерго (ГК)
Россети Московский регион
Россети Северный Кавказ (ГК)
Россети Северо-Запад
Россети Сибирь (ГК)
Россети Томск
Россети Тюмень
Россети Урал (ГК)
Россети ФСК ЕЭС
Россети Центр
Россети Центр и Приволжье (ГК)
Россети Юг (ГК)
Россети Янтарь
Россети Центр и Приволжье (ГК): 7 593 144,03'

10-01-2025T04:36:30 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выручка по ДЗО/График2 Выполнение плановых показателей Блок руководителя' is: '0%0%
0,66%0,66%
11,88%11,88%
10,78%10,78%
16,29%16,29%
0%0%
4,76%4,76%
8,24%8,24%
0%0%
1,44%1,44%
10,49%10,49%
15,84%15,84%
0%0%
0%0%
12,17%12,17%
7,45%7,45%
0%0%
АО «Тываэнерго»
АО «Чеченэнерго»
Россети Волга
Россети Кубань
Россети Ленэнерго (ГК)
Россети Московский регион
Россети Северный Кавказ (ГК)
Россети Северо-Запад
Россети Сибирь (ГК)
Россети Томск
Россети Тюмень
Россети Урал (ГК)
Россети ФСК ЕЭС
Россети Центр
Россети Центр и Приволжье (ГК)
Россети Юг (ГК)
Россети Янтарь
Россети Центр и Приволжье (ГК): 7 593 144,03'

10-01-2025T04:36:30 - [TEST_STEP][PASSED] - println("a2: " + a2): null

10-01-2025T04:36:30 - [TEST_STEP][PASSED] - i = a2.indexOf("АО «Тываэнерго»"): null

10-01-2025T04:36:30 - [TEST_STEP][PASSED] - a2 = a2.substring(0, i): null

10-01-2025T04:36:30 - [TEST_STEP][PASSED] - navigateToUrl(findTestData("PlanFact").getValue(10, 10)): Navigate to 'https://bi.rosseti.digital/viewer?dashboardGuid=a1fd28b3785d443cbc4d7690a1d78e31&sheetGuid=4a2f47326819444da0508dec5c59e502&fit=true' successfully

10-01-2025T04:36:30 - [MESSAGE][PASSED] - Navigate to 'https://bi.rosseti.digital/viewer?dashboardGuid=a1fd28b3785d443cbc4d7690a1d78e31&sheetGuid=4a2f47326819444da0508dec5c59e502&fit=true' successfully

10-01-2025T04:36:30 - [TEST_STEP][PASSED] - delay(30): Delayed 30 second(s)

10-01-2025T04:37:00 - [MESSAGE][PASSED] - Delayed 30 second(s)

10-01-2025T04:37:00 - [TEST_STEP][PASSED] - click(findTestObject("Выручка по ДЗО/Фильтр Дата Выручка")): Object: 'Object Repository/Выручка по ДЗО/Фильтр Дата Выручка' is clicked on

10-01-2025T04:37:01 - [MESSAGE][PASSED] - Object: 'Object Repository/Выручка по ДЗО/Фильтр Дата Выручка' is clicked on

10-01-2025T04:37:01 - [TEST_STEP][PASSED] - click(findTestObject("Выручка по ДЗО/Снять выделение в фильтре Дата Выручка")): Object: 'Object Repository/Выручка по ДЗО/Снять выделение в фильтре Дата Выручка' is clicked on

10-01-2025T04:37:01 - [MESSAGE][PASSED] - Object: 'Object Repository/Выручка по ДЗО/Снять выделение в фильтре Дата Выручка' is clicked on

10-01-2025T04:37:01 - [TEST_STEP][PASSED] - click(findTestObject("Выручка по ДЗО/Применить в фильтре Дата Выручка")): Object: 'Object Repository/Выручка по ДЗО/Применить в фильтре Дата Выручка' is clicked on

10-01-2025T04:37:02 - [MESSAGE][PASSED] - Object: 'Object Repository/Выручка по ДЗО/Применить в фильтре Дата Выручка' is clicked on

10-01-2025T04:37:02 - [TEST_STEP][PASSED] - click(findTestObject("Выручка по ДЗО/Фильтр Дата Выручка")): Object: 'Object Repository/Выручка по ДЗО/Фильтр Дата Выручка' is clicked on

10-01-2025T04:37:03 - [MESSAGE][PASSED] - Object: 'Object Repository/Выручка по ДЗО/Фильтр Дата Выручка' is clicked on

10-01-2025T04:37:03 - [TEST_STEP][PASSED] - click(findTestObject("Выручка по ДЗО/Снять выделение в фильтре Дата Выручка")): Object: 'Object Repository/Выручка по ДЗО/Снять выделение в фильтре Дата Выручка' is clicked on

10-01-2025T04:37:04 - [MESSAGE][PASSED] - Object: 'Object Repository/Выручка по ДЗО/Снять выделение в фильтре Дата Выручка' is clicked on

10-01-2025T04:37:04 - [TEST_STEP][PASSED] - scrollToElement(findTestObject("Выручка по ДЗО/2024 список Выручка"), 30): Scroll to object 'Object Repository/Выручка по ДЗО/2024 список Выручка' successfully

10-01-2025T04:37:04 - [MESSAGE][PASSED] - Scroll to object 'Object Repository/Выручка по ДЗО/2024 список Выручка' successfully

10-01-2025T04:37:04 - [TEST_STEP][PASSED] - click(findTestObject("Выручка по ДЗО/2024 список Выручка")): Object: 'Object Repository/Выручка по ДЗО/2024 список Выручка' is clicked on

10-01-2025T04:37:05 - [MESSAGE][PASSED] - Object: 'Object Repository/Выручка по ДЗО/2024 список Выручка' is clicked on

10-01-2025T04:37:05 - [TEST_STEP][PASSED] - scrollToElement(findTestObject("Выручка по ДЗО/1 квартал 2024 выбрать Выручка"), 30): Scroll to object 'Object Repository/Выручка по ДЗО/1 квартал 2024 выбрать Выручка' successfully

10-01-2025T04:37:05 - [MESSAGE][PASSED] - Scroll to object 'Object Repository/Выручка по ДЗО/1 квартал 2024 выбрать Выручка' successfully

10-01-2025T04:37:05 - [TEST_STEP][PASSED] - click(findTestObject("Выручка по ДЗО/1 квартал 2024 выбрать Выручка")): Object: 'Object Repository/Выручка по ДЗО/1 квартал 2024 выбрать Выручка' is clicked on

10-01-2025T04:37:05 - [MESSAGE][PASSED] - Object: 'Object Repository/Выручка по ДЗО/1 квартал 2024 выбрать Выручка' is clicked on

10-01-2025T04:37:05 - [TEST_STEP][PASSED] - scrollToElement(findTestObject("Выручка по ДЗО/2 квартал 2024 выбрать Выручка"), 30): Scroll to object 'Object Repository/Выручка по ДЗО/2 квартал 2024 выбрать Выручка' successfully

10-01-2025T04:37:06 - [MESSAGE][PASSED] - Scroll to object 'Object Repository/Выручка по ДЗО/2 квартал 2024 выбрать Выручка' successfully

10-01-2025T04:37:06 - [TEST_STEP][PASSED] - click(findTestObject("Выручка по ДЗО/2 квартал 2024 выбрать Выручка"), CONTINUE_ON_FAILURE): Object: 'Object Repository/Выручка по ДЗО/2 квартал 2024 выбрать Выручка' is clicked on

10-01-2025T04:37:06 - [MESSAGE][PASSED] - Object: 'Object Repository/Выручка по ДЗО/2 квартал 2024 выбрать Выручка' is clicked on

10-01-2025T04:37:06 - [TEST_STEP][PASSED] - click(findTestObject("Выручка по ДЗО/3 квартал 2024 выбрать Выручка"), CONTINUE_ON_FAILURE): Object: 'Object Repository/Выручка по ДЗО/3 квартал 2024 выбрать Выручка' is clicked on

10-01-2025T04:37:07 - [MESSAGE][PASSED] - Object: 'Object Repository/Выручка по ДЗО/3 квартал 2024 выбрать Выручка' is clicked on

10-01-2025T04:37:07 - [TEST_STEP][PASSED] - scrollToElement(findTestObject("Выручка по ДЗО/4 квартал 2024 список Выручка"), 30): Scroll to object 'Object Repository/Выручка по ДЗО/4 квартал 2024 список Выручка' successfully

10-01-2025T04:37:07 - [MESSAGE][PASSED] - Scroll to object 'Object Repository/Выручка по ДЗО/4 квартал 2024 список Выручка' successfully

10-01-2025T04:37:07 - [TEST_STEP][PASSED] - click(findTestObject("Выручка по ДЗО/4 квартал 2024 список Выручка"), CONTINUE_ON_FAILURE): Object: 'Object Repository/Выручка по ДЗО/4 квартал 2024 список Выручка' is clicked on

10-01-2025T04:37:08 - [MESSAGE][PASSED] - Object: 'Object Repository/Выручка по ДЗО/4 квартал 2024 список Выручка' is clicked on

10-01-2025T04:37:08 - [TEST_STEP][PASSED] - scrollToElement(findTestObject("Выручка по ДЗО/Октябрь 2024 Выручка"), 30): Scroll to object 'Object Repository/Выручка по ДЗО/Октябрь 2024 Выручка' successfully

10-01-2025T04:37:08 - [MESSAGE][PASSED] - Scroll to object 'Object Repository/Выручка по ДЗО/Октябрь 2024 Выручка' successfully

10-01-2025T04:37:08 - [TEST_STEP][PASSED] - click(findTestObject("Выручка по ДЗО/Октябрь 2024 Выручка"), CONTINUE_ON_FAILURE): Object: 'Object Repository/Выручка по ДЗО/Октябрь 2024 Выручка' is clicked on

10-01-2025T04:37:08 - [MESSAGE][PASSED] - Object: 'Object Repository/Выручка по ДЗО/Октябрь 2024 Выручка' is clicked on

10-01-2025T04:37:08 - [TEST_STEP][PASSED] - scrollToElement(findTestObject("Выручка по ДЗО/Ноябрь 2024 Выручка"), 30): Scroll to object 'Object Repository/Выручка по ДЗО/Ноябрь 2024 Выручка' successfully

10-01-2025T04:37:09 - [MESSAGE][PASSED] - Scroll to object 'Object Repository/Выручка по ДЗО/Ноябрь 2024 Выручка' successfully

10-01-2025T04:37:09 - [TEST_STEP][PASSED] - click(findTestObject("Выручка по ДЗО/Ноябрь 2024 Выручка"), CONTINUE_ON_FAILURE): Object: 'Object Repository/Выручка по ДЗО/Ноябрь 2024 Выручка' is clicked on

10-01-2025T04:37:09 - [MESSAGE][PASSED] - Object: 'Object Repository/Выручка по ДЗО/Ноябрь 2024 Выручка' is clicked on

10-01-2025T04:37:09 - [TEST_STEP][PASSED] - scrollToElement(findTestObject("Выручка по ДЗО/Заголовок дашборда Выручка"), 30): Scroll to object 'Object Repository/Выручка по ДЗО/Заголовок дашборда Выручка' successfully

10-01-2025T04:37:10 - [MESSAGE][PASSED] - Scroll to object 'Object Repository/Выручка по ДЗО/Заголовок дашборда Выручка' successfully

10-01-2025T04:37:10 - [TEST_STEP][PASSED] - click(findTestObject("Выручка по ДЗО/Применить в фильтре Дата Выручка")): Object: 'Object Repository/Выручка по ДЗО/Применить в фильтре Дата Выручка' is clicked on

10-01-2025T04:37:10 - [MESSAGE][PASSED] - Object: 'Object Repository/Выручка по ДЗО/Применить в фильтре Дата Выручка' is clicked on

10-01-2025T04:37:10 - [TEST_STEP][PASSED] - b1 = getText(findTestObject("Выручка по ДЗО/График1 Выполнение плановых показателей Выручка")): Text of object 'Object Repository/Выручка по ДЗО/График1 Выполнение плановых показателей Выручка' is: '1 730 1 730
4 153 4 153
72 388 72 388
68 677 68 677
92 345 92 345
189 943 189 943
28 867 28 867
48 866 48 866
63 904 63 904
8 686 8 686
76 612 76 612
95 829 95 829
282 813 282 813
106 151 106 151
113 750 113 750
47 546 47 546
8 773 8 773
2 089 2 089
4 274 4 274
72 627 72 627
73 184 73 184
97 517 97 517
198 517 198 517
29 812 29 812
49 650 49 650
66 300 66 300
8 926 8 926
70 559 70 559
97 856 97 856
259 041 259 041
109 883 109 883
118 563 118 563
48 875 48 875
9 145 9 145
План
Факт
АО «Тываэнерго»
АО «Чеченэнерго»
Россети Волга
Россети Кубань
Россети Ленэнерго (ГК)
Россети Московский регион
Россети Северный Кавказ (ГК)
Россети Северо-Запад
Россети Сибирь (ГК)
Россети Томск
Россети Тюмень
Россети Урал (ГК)
Россети ФСК ЕЭС
Россети Центр
Россети Центр и Приволжье (ГК)
Россети Юг (ГК)
Россети Янтарь
0 млн. руб.
50 000 млн. руб.
100 000 млн. руб.
150 000 млн. руб.
200 000 млн. руб.
250 000 млн. руб.
300 000 млн. руб.
Россети Московский регион: 198 516 744,04'

10-01-2025T04:37:11 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выручка по ДЗО/График1 Выполнение плановых показателей Выручка' is: '1 730 1 730
4 153 4 153
72 388 72 388
68 677 68 677
92 345 92 345
189 943 189 943
28 867 28 867
48 866 48 866
63 904 63 904
8 686 8 686
76 612 76 612
95 829 95 829
282 813 282 813
106 151 106 151
113 750 113 750
47 546 47 546
8 773 8 773
2 089 2 089
4 274 4 274
72 627 72 627
73 184 73 184
97 517 97 517
198 517 198 517
29 812 29 812
49 650 49 650
66 300 66 300
8 926 8 926
70 559 70 559
97 856 97 856
259 041 259 041
109 883 109 883
118 563 118 563
48 875 48 875
9 145 9 145
План
Факт
АО «Тываэнерго»
АО «Чеченэнерго»
Россети Волга
Россети Кубань
Россети Ленэнерго (ГК)
Россети Московский регион
Россети Северный Кавказ (ГК)
Россети Северо-Запад
Россети Сибирь (ГК)
Россети Томск
Россети Тюмень
Россети Урал (ГК)
Россети ФСК ЕЭС
Россети Центр
Россети Центр и Приволжье (ГК)
Россети Юг (ГК)
Россети Янтарь
0 млн. руб.
50 000 млн. руб.
100 000 млн. руб.
150 000 млн. руб.
200 000 млн. руб.
250 000 млн. руб.
300 000 млн. руб.
Россети Московский регион: 198 516 744,04'

10-01-2025T04:37:11 - [TEST_STEP][PASSED] - println("b1: " + b1): null

10-01-2025T04:37:11 - [TEST_STEP][PASSED] - i = b1.indexOf("План"): null

10-01-2025T04:37:11 - [TEST_STEP][PASSED] - b1 = b1.substring(0, i): null

10-01-2025T04:37:11 - [TEST_STEP][PASSED] - println("b1: " + b1): null

10-01-2025T04:37:11 - [TEST_STEP][PASSED] - b2 = getText(findTestObject("Выручка по ДЗО/График2 Выполнение плановых показателей Выручка")): Text of object 'Object Repository/Выручка по ДЗО/График2 Выполнение плановых показателей Выручка' is: '0,16%0,16%
0,32%0,32%
5,52%5,52%
5,56%5,56%
7,41%7,41%
15,08%15,08%
2,26%2,26%
3,77%3,77%
5,03%5,03%
0,68%0,68%
5,36%5,36%
7,43%7,43%
19,67%19,67%
8,34%8,34%
9%9%
3,71%3,71%
0,69%0,69%
АО «Тываэнерго»
АО «Чеченэнерго»
Россети Волга
Россети Кубань
Россети Ленэнерго (ГК)
Россети Московский регион
Россети Северный Кавказ (ГК)
Россети Северо-Запад
Россети Сибирь (ГК)
Россети Томск
Россети Тюмень
Россети Урал (ГК)
Россети ФСК ЕЭС
Россети Центр
Россети Центр и Приволжье (ГК)
Россети Юг (ГК)
Россети Янтарь'

10-01-2025T04:37:12 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выручка по ДЗО/График2 Выполнение плановых показателей Выручка' is: '0,16%0,16%
0,32%0,32%
5,52%5,52%
5,56%5,56%
7,41%7,41%
15,08%15,08%
2,26%2,26%
3,77%3,77%
5,03%5,03%
0,68%0,68%
5,36%5,36%
7,43%7,43%
19,67%19,67%
8,34%8,34%
9%9%
3,71%3,71%
0,69%0,69%
АО «Тываэнерго»
АО «Чеченэнерго»
Россети Волга
Россети Кубань
Россети Ленэнерго (ГК)
Россети Московский регион
Россети Северный Кавказ (ГК)
Россети Северо-Запад
Россети Сибирь (ГК)
Россети Томск
Россети Тюмень
Россети Урал (ГК)
Россети ФСК ЕЭС
Россети Центр
Россети Центр и Приволжье (ГК)
Россети Юг (ГК)
Россети Янтарь'

10-01-2025T04:37:12 - [TEST_STEP][PASSED] - i = b2.indexOf("АО «Тываэнерго»"): null

10-01-2025T04:37:12 - [TEST_STEP][PASSED] - b2 = b2.substring(0, i): null

10-01-2025T04:37:12 - [TEST_STEP][PASSED] - println(b2): null

10-01-2025T04:37:12 - [TEST_STEP][PASSED] - verifyEqual(a1, b1): Actual object '1 730 1 730
4 153 4 153
72 388 72 388
68 677 68 677
92 345 92 345
189 943 189 943
28 867 28 867
48 866 48 866
63 904 63 904
8 686 8 686
76 612 76 612
95 829 95 829
282 813 282 813
106 151 106 151
113 750 113 750
47 546 47 546
8 773 8 773
2 089 2 089
4 274 4 274
72 627 72 627
73 184 73 184
97 517 97 517
198 517 198 517
29 812 29 812
49 650 49 650
66 300 66 300
8 926 8 926
70 559 70 559
97 856 97 856
259 041 259 041
109 883 109 883
118 563 118 563
48 875 48 875
9 145 9 145
' and expected object '1 730 1 730
4 153 4 153
72 388 72 388
68 677 68 677
92 345 92 345
189 943 189 943
28 867 28 867
48 866 48 866
63 904 63 904
8 686 8 686
76 612 76 612
95 829 95 829
282 813 282 813
106 151 106 151
113 750 113 750
47 546 47 546
8 773 8 773
2 089 2 089
4 274 4 274
72 627 72 627
73 184 73 184
97 517 97 517
198 517 198 517
29 812 29 812
49 650 49 650
66 300 66 300
8 926 8 926
70 559 70 559
97 856 97 856
259 041 259 041
109 883 109 883
118 563 118 563
48 875 48 875
9 145 9 145
' are equal

10-01-2025T04:37:12 - [MESSAGE][PASSED] - Actual object '1 730 1 730
4 153 4 153
72 388 72 388
68 677 68 677
92 345 92 345
189 943 189 943
28 867 28 867
48 866 48 866
63 904 63 904
8 686 8 686
76 612 76 612
95 829 95 829
282 813 282 813
106 151 106 151
113 750 113 750
47 546 47 546
8 773 8 773
2 089 2 089
4 274 4 274
72 627 72 627
73 184 73 184
97 517 97 517
198 517 198 517
29 812 29 812
49 650 49 650
66 300 66 300
8 926 8 926
70 559 70 559
97 856 97 856
259 041 259 041
109 883 109 883
118 563 118 563
48 875 48 875
9 145 9 145
' and expected object '1 730 1 730
4 153 4 153
72 388 72 388
68 677 68 677
92 345 92 345
189 943 189 943
28 867 28 867
48 866 48 866
63 904 63 904
8 686 8 686
76 612 76 612
95 829 95 829
282 813 282 813
106 151 106 151
113 750 113 750
47 546 47 546
8 773 8 773
2 089 2 089
4 274 4 274
72 627 72 627
73 184 73 184
97 517 97 517
198 517 198 517
29 812 29 812
49 650 49 650
66 300 66 300
8 926 8 926
70 559 70 559
97 856 97 856
259 041 259 041
109 883 109 883
118 563 118 563
48 875 48 875
9 145 9 145
' are equal

10-01-2025T04:37:12 - [TEST_STEP][PASSED] - if (verifyEqual(a1, b1) == true): Actual object '1 730 1 730
4 153 4 153
72 388 72 388
68 677 68 677
92 345 92 345
189 943 189 943
28 867 28 867
48 866 48 866
63 904 63 904
8 686 8 686
76 612 76 612
95 829 95 829
282 813 282 813
106 151 106 151
113 750 113 750
47 546 47 546
8 773 8 773
2 089 2 089
4 274 4 274
72 627 72 627
73 184 73 184
97 517 97 517
198 517 198 517
29 812 29 812
49 650 49 650
66 300 66 300
8 926 8 926
70 559 70 559
97 856 97 856
259 041 259 041
109 883 109 883
118 563 118 563
48 875 48 875
9 145 9 145
' and expected object '1 730 1 730
4 153 4 153
72 388 72 388
68 677 68 677
92 345 92 345
189 943 189 943
28 867 28 867
48 866 48 866
63 904 63 904
8 686 8 686
76 612 76 612
95 829 95 829
282 813 282 813
106 151 106 151
113 750 113 750
47 546 47 546
8 773 8 773
2 089 2 089
4 274 4 274
72 627 72 627
73 184 73 184
97 517 97 517
198 517 198 517
29 812 29 812
49 650 49 650
66 300 66 300
8 926 8 926
70 559 70 559
97 856 97 856
259 041 259 041
109 883 109 883
118 563 118 563
48 875 48 875
9 145 9 145
' are equal

10-01-2025T04:37:12 - [MESSAGE][PASSED] - Actual object '1 730 1 730
4 153 4 153
72 388 72 388
68 677 68 677
92 345 92 345
189 943 189 943
28 867 28 867
48 866 48 866
63 904 63 904
8 686 8 686
76 612 76 612
95 829 95 829
282 813 282 813
106 151 106 151
113 750 113 750
47 546 47 546
8 773 8 773
2 089 2 089
4 274 4 274
72 627 72 627
73 184 73 184
97 517 97 517
198 517 198 517
29 812 29 812
49 650 49 650
66 300 66 300
8 926 8 926
70 559 70 559
97 856 97 856
259 041 259 041
109 883 109 883
118 563 118 563
48 875 48 875
9 145 9 145
' and expected object '1 730 1 730
4 153 4 153
72 388 72 388
68 677 68 677
92 345 92 345
189 943 189 943
28 867 28 867
48 866 48 866
63 904 63 904
8 686 8 686
76 612 76 612
95 829 95 829
282 813 282 813
106 151 106 151
113 750 113 750
47 546 47 546
8 773 8 773
2 089 2 089
4 274 4 274
72 627 72 627
73 184 73 184
97 517 97 517
198 517 198 517
29 812 29 812
49 650 49 650
66 300 66 300
8 926 8 926
70 559 70 559
97 856 97 856
259 041 259 041
109 883 109 883
118 563 118 563
48 875 48 875
9 145 9 145
' are equal

10-01-2025T04:37:12 - [TEST_STEP][FAILED] - verifyEqual(a2, b2): Unable to verify equal between actual object '0%0%
0,66%0,66%
11,88%11,88%
10,78%10,78%
16,29%16,29%
0%0%
4,76%4,76%
8,24%8,24%
0%0%
1,44%1,44%
10,49%10,49%
15,84%15,84%
0%0%
0%0%
12,17%12,17%
7,45%7,45%
0%0%
' and expected object '0,16%0,16%
0,32%0,32%
5,52%5,52%
5,56%5,56%
7,41%7,41%
15,08%15,08%
2,26%2,26%
3,77%3,77%
5,03%5,03%
0,68%0,68%
5,36%5,36%
7,43%7,43%
19,67%19,67%
8,34%8,34%
9%9%
3,71%3,71%
0,69%0,69%
' (Root cause: com.kms.katalon.core.exception.StepFailedException: Actual object '0%0%
0,66%0,66%
11,88%11,88%
10,78%10,78%
16,29%16,29%
0%0%
4,76%4,76%
8,24%8,24%
0%0%
1,44%1,44%
10,49%10,49%
15,84%15,84%
0%0%
0%0%
12,17%12,17%
7,45%7,45%
0%0%
' and expected object '0,16%0,16%
0,32%0,32%
5,52%5,52%
5,56%5,56%
7,41%7,41%
15,08%15,08%
2,26%2,26%
3,77%3,77%
5,03%5,03%
0,68%0,68%
5,36%5,36%
7,43%7,43%
19,67%19,67%
8,34%8,34%
9%9%
3,71%3,71%
0,69%0,69%
' are not equal
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.doCall(VerifyEqualKeyword.groovy:58)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.call(VerifyEqualKeyword.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:75)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.verifyEqual(VerifyEqualKeyword.groovy:63)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.execute(VerifyEqualKeyword.groovy:44)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:74)
	at com.kms.katalon.core.keyword.BuiltinKeywords.verifyEqual(BuiltinKeywords.groovy:146)
	at jdk.internal.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at Выручка по ДЗО сверка дашбордов.run(Выручка по ДЗО сверка дашбордов:180)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:448)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:439)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:418)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:410)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:285)
	at com.kms.katalon.core.common.CommonExecutor.accessTestCaseMainPhase(CommonExecutor.java:65)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:150)
	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:106)
	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:180)
	at TempTestSuite1736466949911.run(TempTestSuite1736466949911.groovy:35)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
)

10-01-2025T04:37:12 - [MESSAGE][FAILED] - Unable to verify equal between actual object '0%0%
0,66%0,66%
11,88%11,88%
10,78%10,78%
16,29%16,29%
0%0%
4,76%4,76%
8,24%8,24%
0%0%
1,44%1,44%
10,49%10,49%
15,84%15,84%
0%0%
0%0%
12,17%12,17%
7,45%7,45%
0%0%
' and expected object '0,16%0,16%
0,32%0,32%
5,52%5,52%
5,56%5,56%
7,41%7,41%
15,08%15,08%
2,26%2,26%
3,77%3,77%
5,03%5,03%
0,68%0,68%
5,36%5,36%
7,43%7,43%
19,67%19,67%
8,34%8,34%
9%9%
3,71%3,71%
0,69%0,69%
' (Root cause: com.kms.katalon.core.exception.StepFailedException: Actual object '0%0%
0,66%0,66%
11,88%11,88%
10,78%10,78%
16,29%16,29%
0%0%
4,76%4,76%
8,24%8,24%
0%0%
1,44%1,44%
10,49%10,49%
15,84%15,84%
0%0%
0%0%
12,17%12,17%
7,45%7,45%
0%0%
' and expected object '0,16%0,16%
0,32%0,32%
5,52%5,52%
5,56%5,56%
7,41%7,41%
15,08%15,08%
2,26%2,26%
3,77%3,77%
5,03%5,03%
0,68%0,68%
5,36%5,36%
7,43%7,43%
19,67%19,67%
8,34%8,34%
9%9%
3,71%3,71%
0,69%0,69%
' are not equal
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.doCall(VerifyEqualKeyword.groovy:58)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.call(VerifyEqualKeyword.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:75)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.verifyEqual(VerifyEqualKeyword.groovy:63)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.execute(VerifyEqualKeyword.groovy:44)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:74)
	at com.kms.katalon.core.keyword.BuiltinKeywords.verifyEqual(BuiltinKeywords.groovy:146)
	at jdk.internal.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at Выручка по ДЗО сверка дашбордов.run(Выручка по ДЗО сверка дашбордов:180)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:448)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:439)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:418)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:410)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:285)
	at com.kms.katalon.core.common.CommonExecutor.accessTestCaseMainPhase(CommonExecutor.java:65)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:150)
	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:106)
	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:180)
	at TempTestSuite1736466949911.run(TempTestSuite1736466949911.groovy:35)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
)

10-01-2025T04:37:12 - [TEST_STEP][FAILED] - if (verifyEqual(a2, b2) == true): Unable to verify equal between actual object '0%0%
0,66%0,66%
11,88%11,88%
10,78%10,78%
16,29%16,29%
0%0%
4,76%4,76%
8,24%8,24%
0%0%
1,44%1,44%
10,49%10,49%
15,84%15,84%
0%0%
0%0%
12,17%12,17%
7,45%7,45%
0%0%
' and expected object '0,16%0,16%
0,32%0,32%
5,52%5,52%
5,56%5,56%
7,41%7,41%
15,08%15,08%
2,26%2,26%
3,77%3,77%
5,03%5,03%
0,68%0,68%
5,36%5,36%
7,43%7,43%
19,67%19,67%
8,34%8,34%
9%9%
3,71%3,71%
0,69%0,69%
' (Root cause: com.kms.katalon.core.exception.StepFailedException: Actual object '0%0%
0,66%0,66%
11,88%11,88%
10,78%10,78%
16,29%16,29%
0%0%
4,76%4,76%
8,24%8,24%
0%0%
1,44%1,44%
10,49%10,49%
15,84%15,84%
0%0%
0%0%
12,17%12,17%
7,45%7,45%
0%0%
' and expected object '0,16%0,16%
0,32%0,32%
5,52%5,52%
5,56%5,56%
7,41%7,41%
15,08%15,08%
2,26%2,26%
3,77%3,77%
5,03%5,03%
0,68%0,68%
5,36%5,36%
7,43%7,43%
19,67%19,67%
8,34%8,34%
9%9%
3,71%3,71%
0,69%0,69%
' are not equal
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.doCall(VerifyEqualKeyword.groovy:58)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.call(VerifyEqualKeyword.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:75)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.verifyEqual(VerifyEqualKeyword.groovy:63)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.execute(VerifyEqualKeyword.groovy:44)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:74)
	at com.kms.katalon.core.keyword.BuiltinKeywords.verifyEqual(BuiltinKeywords.groovy:146)
	at jdk.internal.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at Выручка по ДЗО сверка дашбордов.run(Выручка по ДЗО сверка дашбордов:182)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:448)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:439)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:418)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:410)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:285)
	at com.kms.katalon.core.common.CommonExecutor.accessTestCaseMainPhase(CommonExecutor.java:65)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:150)
	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:106)
	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:180)
	at TempTestSuite1736466949911.run(TempTestSuite1736466949911.groovy:35)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
)

10-01-2025T04:37:12 - [MESSAGE][FAILED] - Unable to verify equal between actual object '0%0%
0,66%0,66%
11,88%11,88%
10,78%10,78%
16,29%16,29%
0%0%
4,76%4,76%
8,24%8,24%
0%0%
1,44%1,44%
10,49%10,49%
15,84%15,84%
0%0%
0%0%
12,17%12,17%
7,45%7,45%
0%0%
' and expected object '0,16%0,16%
0,32%0,32%
5,52%5,52%
5,56%5,56%
7,41%7,41%
15,08%15,08%
2,26%2,26%
3,77%3,77%
5,03%5,03%
0,68%0,68%
5,36%5,36%
7,43%7,43%
19,67%19,67%
8,34%8,34%
9%9%
3,71%3,71%
0,69%0,69%
' (Root cause: com.kms.katalon.core.exception.StepFailedException: Actual object '0%0%
0,66%0,66%
11,88%11,88%
10,78%10,78%
16,29%16,29%
0%0%
4,76%4,76%
8,24%8,24%
0%0%
1,44%1,44%
10,49%10,49%
15,84%15,84%
0%0%
0%0%
12,17%12,17%
7,45%7,45%
0%0%
' and expected object '0,16%0,16%
0,32%0,32%
5,52%5,52%
5,56%5,56%
7,41%7,41%
15,08%15,08%
2,26%2,26%
3,77%3,77%
5,03%5,03%
0,68%0,68%
5,36%5,36%
7,43%7,43%
19,67%19,67%
8,34%8,34%
9%9%
3,71%3,71%
0,69%0,69%
' are not equal
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.doCall(VerifyEqualKeyword.groovy:58)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.call(VerifyEqualKeyword.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:75)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.verifyEqual(VerifyEqualKeyword.groovy:63)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.execute(VerifyEqualKeyword.groovy:44)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:74)
	at com.kms.katalon.core.keyword.BuiltinKeywords.verifyEqual(BuiltinKeywords.groovy:146)
	at jdk.internal.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at Выручка по ДЗО сверка дашбордов.run(Выручка по ДЗО сверка дашбордов:182)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:448)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:439)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:418)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:410)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:285)
	at com.kms.katalon.core.common.CommonExecutor.accessTestCaseMainPhase(CommonExecutor.java:65)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:150)
	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:106)
	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:180)
	at TempTestSuite1736466949911.run(TempTestSuite1736466949911.groovy:35)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
)

10-01-2025T04:37:12 - [TEST_STEP][PASSED] - else: null

10-01-2025T04:37:12 - [TEST_STEP][PASSED] - Script1679562813597.WriteToExcel(todaysDate): null

10-01-2025T04:37:12 - [TEST_STEP][PASSED] - sheetName = "Sheet1": null

10-01-2025T04:37:12 - [TEST_STEP][PASSED] - data = findTestData("PlanFact"): null

10-01-2025T04:37:12 - [TEST_STEP][PASSED] - n = data.getRowNumbers() + 1: null

10-01-2025T04:37:12 - [TEST_STEP][PASSED] - dZO = getText(findTestObject("Выручка по ДЗО/Фильтр ДЗО")): Text of object 'Object Repository/Выручка по ДЗО/Фильтр ДЗО' is: 'Все'

10-01-2025T04:37:12 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выручка по ДЗО/Фильтр ДЗО' is: 'Все'

10-01-2025T04:37:12 - [TEST_STEP][PASSED] - period = getText(findTestObject("Выручка по ДЗО/Фильтр Дата")): Text of object 'Object Repository/Выручка по ДЗО/Фильтр Дата' is: '1, 2, 3 кв., Октябрь, Ноябрь 2024 года'

10-01-2025T04:37:12 - [MESSAGE][PASSED] - Text of object 'Object Repository/Выручка по ДЗО/Фильтр Дата' is: '1, 2, 3 кв., Октябрь, Ноябрь 2024 года'

10-01-2025T04:37:12 - [TEST_STEP][PASSED] - println(period): null

10-01-2025T04:37:12 - [TEST_STEP][PASSED] - dashboardName = "Выручка по ДЗО": null

10-01-2025T04:37:12 - [TEST_STEP][PASSED] - workbook01 = getWorkbook(excelFilePath): null

10-01-2025T04:37:12 - [TEST_STEP][PASSED] - sheet01 = getExcelSheet(workbook01, sheetName): null

10-01-2025T04:37:12 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 0, dashboardName): null

10-01-2025T04:37:12 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 1, dZO): null

10-01-2025T04:37:12 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 2, period): null

10-01-2025T04:37:12 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 3, todaysDate): null

10-01-2025T04:37:12 - [TEST_STEP][PASSED] - n = n + 1: null

10-01-2025T04:37:12 - [TEST_STEP][PASSED] - saveWorkbook(excelFilePath, workbook01): null

10-01-2025T04:37:12 - [TEST_STEP][PASSED] - closeBrowser(): Browser is closed

10-01-2025T04:37:13 - [MESSAGE][PASSED] - Browser is closed]]></system-out>
         <system-err><![CDATA[10-01-2025T04:35:36 - [TEST_CASE][FAILED] - Test Cases/Сверки дашбордов/Выручка по ДЗО сверка дашбордов: Test Cases/Сверки дашбордов/Выручка по ДЗО сверка дашбордов FAILED.
Reason:
com.kms.katalon.core.exception.StepFailedException: Unable to verify equal between actual object '0%0%
0,66%0,66%
11,88%11,88%
10,78%10,78%
16,29%16,29%
0%0%
4,76%4,76%
8,24%8,24%
0%0%
1,44%1,44%
10,49%10,49%
15,84%15,84%
0%0%
0%0%
12,17%12,17%
7,45%7,45%
0%0%
' and expected object '0,16%0,16%
0,32%0,32%
5,52%5,52%
5,56%5,56%
7,41%7,41%
15,08%15,08%
2,26%2,26%
3,77%3,77%
5,03%5,03%
0,68%0,68%
5,36%5,36%
7,43%7,43%
19,67%19,67%
8,34%8,34%
9%9%
3,71%3,71%
0,69%0,69%
' (Root cause: com.kms.katalon.core.exception.StepFailedException: Actual object '0%0%
0,66%0,66%
11,88%11,88%
10,78%10,78%
16,29%16,29%
0%0%
4,76%4,76%
8,24%8,24%
0%0%
1,44%1,44%
10,49%10,49%
15,84%15,84%
0%0%
0%0%
12,17%12,17%
7,45%7,45%
0%0%
' and expected object '0,16%0,16%
0,32%0,32%
5,52%5,52%
5,56%5,56%
7,41%7,41%
15,08%15,08%
2,26%2,26%
3,77%3,77%
5,03%5,03%
0,68%0,68%
5,36%5,36%
7,43%7,43%
19,67%19,67%
8,34%8,34%
9%9%
3,71%3,71%
0,69%0,69%
' are not equal
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.doCall(VerifyEqualKeyword.groovy:58)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.call(VerifyEqualKeyword.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:75)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.verifyEqual(VerifyEqualKeyword.groovy:63)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.execute(VerifyEqualKeyword.groovy:44)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:74)
	at com.kms.katalon.core.keyword.BuiltinKeywords.verifyEqual(BuiltinKeywords.groovy:146)
	at jdk.internal.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at Выручка по ДЗО сверка дашбордов.run(Выручка по ДЗО сверка дашбордов:180)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:448)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:439)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:418)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:410)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:285)
	at com.kms.katalon.core.common.CommonExecutor.accessTestCaseMainPhase(CommonExecutor.java:65)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:150)
	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:106)
	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:180)
	at TempTestSuite1736466949911.run(TempTestSuite1736466949911.groovy:35)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
)
	at com.kms.katalon.core.keyword.internal.KeywordMain.stepFailed(KeywordMain.groovy:39)
	at com.kms.katalon.core.keyword.internal.KeywordMain.stepFailed(KeywordMain.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:77)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.verifyEqual(VerifyEqualKeyword.groovy:63)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.execute(VerifyEqualKeyword.groovy:44)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:74)
	at com.kms.katalon.core.keyword.BuiltinKeywords.verifyEqual(BuiltinKeywords.groovy:146)
	at jdk.internal.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at Выручка по ДЗО сверка дашбордов.run(Выручка по ДЗО сверка дашбордов:180)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:448)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:439)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:418)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:410)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:285)
	at com.kms.katalon.core.common.CommonExecutor.accessTestCaseMainPhase(CommonExecutor.java:65)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:150)
	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:106)
	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:180)
	at TempTestSuite1736466949911.run(TempTestSuite1736466949911.groovy:35)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
Caused by: com.kms.katalon.core.exception.StepFailedException: Actual object '0%0%
0,66%0,66%
11,88%11,88%
10,78%10,78%
16,29%16,29%
0%0%
4,76%4,76%
8,24%8,24%
0%0%
1,44%1,44%
10,49%10,49%
15,84%15,84%
0%0%
0%0%
12,17%12,17%
7,45%7,45%
0%0%
' and expected object '0,16%0,16%
0,32%0,32%
5,52%5,52%
5,56%5,56%
7,41%7,41%
15,08%15,08%
2,26%2,26%
3,77%3,77%
5,03%5,03%
0,68%0,68%
5,36%5,36%
7,43%7,43%
19,67%19,67%
8,34%8,34%
9%9%
3,71%3,71%
0,69%0,69%
' are not equal
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.doCall(VerifyEqualKeyword.groovy:58)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.call(VerifyEqualKeyword.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:75)
	... 22 more]]></system-err>
      </testcase>
      <testcase name="Test Cases/Сверки дашбордов/Прогноз по отраслям сверка дашбордов" time="1150.011" classname="Test Cases/Сверки дашбордов/Прогноз по отраслям сверка дашбордов" status="PASSED">
         <system-out><![CDATA[10-01-2025T04:37:13 - [TEST_CASE][PASSED] - Test Cases/Сверки дашбордов/Прогноз по отраслям сверка дашбордов: Test Cases/Сверки дашбордов/Прогноз по отраслям сверка дашбордов

10-01-2025T04:37:13 - [TEST_STEP][PASSED] - date = new java.util.Date(): null

10-01-2025T04:37:13 - [TEST_STEP][PASSED] - todaysDate = date.format("dd.MM.yyyy"): null

10-01-2025T04:37:13 - [TEST_STEP][PASSED] - println(todaysDate): null

10-01-2025T04:37:13 - [TEST_STEP][PASSED] - typeOfData = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:37:13 - [TEST_STEP][PASSED] - filterSravnenie = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:37:13 - [TEST_STEP][PASSED] - kpoOtpusk = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:37:13 - [TEST_STEP][PASSED] - openBrowser(""): Browser is opened with url: ''

10-01-2025T04:37:13 - [MESSAGE][INFO] - Starting 'Chrome' driver

10-01-2025T04:37:13 - [MESSAGE][INFO] - Action delay is set to 0 milliseconds

10-01-2025T04:37:14 - [MESSAGE][PASSED] - Browser is opened with url: ''

10-01-2025T04:37:14 - [TEST_STEP][PASSED] - navigateToUrl(findTestData("PlanFact").getValue(10, 6)): Navigate to 'https://bi.rosseti.digital/viewer?dashboardGuid=d6acb5b1a7114a9791b34de39263106e&sheetGuid=0b6d261d7f7b4424a967aa8f3a724189&fit=true' successfully

10-01-2025T04:37:20 - [MESSAGE][PASSED] - Navigate to 'https://bi.rosseti.digital/viewer?dashboardGuid=d6acb5b1a7114a9791b34de39263106e&sheetGuid=0b6d261d7f7b4424a967aa8f3a724189&fit=true' successfully

10-01-2025T04:37:20 - [TEST_STEP][PASSED] - setText(findTestObject("Страница авторизации/input__username"), findTestData("PlanFact").getValue(8, 1)): Text 'liazgina-di' is set on object 'Object Repository/Страница авторизации/input__username'

10-01-2025T04:37:22 - [MESSAGE][PASSED] - Text 'liazgina-di' is set on object 'Object Repository/Страница авторизации/input__username'

10-01-2025T04:37:22 - [TEST_STEP][PASSED] - setText(findTestObject("Страница авторизации/input__password"), findTestData("PlanFact").getValue(9, 1)): Text ')$%5srZ8o688Dm#q' is set on object 'Object Repository/Страница авторизации/input__password'

10-01-2025T04:37:23 - [MESSAGE][PASSED] - Text ')$%5srZ8o688Dm#q' is set on object 'Object Repository/Страница авторизации/input__password'

10-01-2025T04:37:23 - [TEST_STEP][PASSED] - click(findTestObject("Страница авторизации/button_")): Object: 'Object Repository/Страница авторизации/button_' is clicked on

10-01-2025T04:37:25 - [MESSAGE][PASSED] - Object: 'Object Repository/Страница авторизации/button_' is clicked on

10-01-2025T04:37:25 - [TEST_STEP][PASSED] - delay(50): Delayed 50 second(s)

10-01-2025T04:38:15 - [MESSAGE][PASSED] - Delayed 50 second(s)

10-01-2025T04:38:15 - [TEST_STEP][PASSED] - click(findTestObject("Прогноз по отраслям/Фильтр Месяц")): Object: 'Object Repository/Прогноз по отраслям/Фильтр Месяц' is clicked on

10-01-2025T04:38:15 - [MESSAGE][PASSED] - Object: 'Object Repository/Прогноз по отраслям/Фильтр Месяц' is clicked on

10-01-2025T04:38:15 - [TEST_STEP][PASSED] - scrollToElement(findTestObject("Прогноз по отраслям/Ноябрь"), 30): Scroll to object 'Object Repository/Прогноз по отраслям/Ноябрь' successfully

10-01-2025T04:38:15 - [MESSAGE][PASSED] - Scroll to object 'Object Repository/Прогноз по отраслям/Ноябрь' successfully

10-01-2025T04:38:15 - [TEST_STEP][PASSED] - click(findTestObject("Прогноз по отраслям/Ноябрь"), CONTINUE_ON_FAILURE): Object: 'Object Repository/Прогноз по отраслям/Ноябрь' is clicked on

10-01-2025T04:38:16 - [MESSAGE][PASSED] - Object: 'Object Repository/Прогноз по отраслям/Ноябрь' is clicked on

10-01-2025T04:38:16 - [TEST_STEP][PASSED] - scrollToElement(findTestObject("Прогноз по отраслям/Заголовок дашборда"), 30): Scroll to object 'Object Repository/Прогноз по отраслям/Заголовок дашборда' successfully

10-01-2025T04:38:17 - [MESSAGE][PASSED] - Scroll to object 'Object Repository/Прогноз по отраслям/Заголовок дашборда' successfully

10-01-2025T04:38:17 - [TEST_STEP][PASSED] - click(findTestObject("Прогноз по отраслям/Фильтр Сравнение с")): Object: 'Object Repository/Прогноз по отраслям/Фильтр Сравнение с' is clicked on

10-01-2025T04:38:18 - [MESSAGE][PASSED] - Object: 'Object Repository/Прогноз по отраслям/Фильтр Сравнение с' is clicked on

10-01-2025T04:38:18 - [TEST_STEP][PASSED] - click(findTestObject("Прогноз по отраслям/Факт прошлого года")): Object: 'Object Repository/Прогноз по отраслям/Факт прошлого года' is clicked on

10-01-2025T04:38:18 - [MESSAGE][PASSED] - Object: 'Object Repository/Прогноз по отраслям/Факт прошлого года' is clicked on

10-01-2025T04:38:18 - [TEST_STEP][PASSED] - click(findTestObject("Прогноз по отраслям/Фильтр КПО-Отпуск")): Object: 'Object Repository/Прогноз по отраслям/Фильтр КПО-Отпуск' is clicked on

10-01-2025T04:38:20 - [MESSAGE][PASSED] - Object: 'Object Repository/Прогноз по отраслям/Фильтр КПО-Отпуск' is clicked on

10-01-2025T04:38:20 - [TEST_STEP][PASSED] - click(findTestObject("Прогноз по отраслям/Отпуск")): Object: 'Object Repository/Прогноз по отраслям/Отпуск' is clicked on

10-01-2025T04:38:21 - [MESSAGE][PASSED] - Object: 'Object Repository/Прогноз по отраслям/Отпуск' is clicked on

10-01-2025T04:38:21 - [TEST_STEP][PASSED] - delay(40): Delayed 40 second(s)

10-01-2025T04:39:01 - [MESSAGE][PASSED] - Delayed 40 second(s)

10-01-2025T04:39:01 - [TEST_STEP][PASSED] - a1 = getText(findTestObject("Прогноз по отраслям/Виджеты дашборда")): Text of object 'Object Repository/Прогноз по отраслям/Виджеты дашборда' is: 'Год 
2023 год
Сравнение с 
Факт прошлого года
Динамика электропотребления, млрд. кВт.ч. по ПАО Россети на 2023 год
12 12
186 186
36 36
50 50
10 10
19 19
0 0
17 17
85 85
19 19
82 82
604 604
10 10
197 197
37 37
48 48
10 10
15 15
4 4
18 18
80 80
19 19
82 82
608 608
Факт прошлого года
Ожидаемое (прогноз по конца года)
Интер РАО (дляФСК)
Промышленныепотребители
Транспорт
Нефтедобыча
Нефтепереработка
Нефтепроводы
Газопроводы
Сельскоехозяйство ипищеваяпромышленность
Непромышленныепотребители
Государственные(муниципальные)организации ипрочиебюджетныепотребители
Население иприравненныегруппыпотребителей
Территориальныесетевыеорганизации
Выручка по ПАО Россети на 2023 год
5 5
285 285
72 72
72 72
18 18
22 22
0 0
50 50
201 201
61 61
190 190
227 227
6 6
331 331
82 82
77 77
20 20
20 20
3 3
57 57
220 220
68 68
214 214
258 258
Факт прошлого года
Ожидаемое (прогноз по конца года)
Интер РАО (дляФСК)
Промышленныепотребители
Транспорт
Нефтедобыча
Нефтепереработка
Нефтепроводы
Газопроводы
Сельскоехозяйство ипищеваяпромышленность
Непромышленныепотребители
Государственные(муниципальные)организации ипрочиебюджетныепотребители
Население иприравненныегруппыпотребителей
Территориальныесетевыеорганизации
Отклонения по ПАО Россети на 2023 год
-18.5% -18.5%
5.9% 5.9%
3.6% 3.6%
-3.9% -3.9%
0.9% 0.9%
-20.7% -20.7%
3 313.2% 3 313.2%
3.8% 3.8%
-5.6% -5.6%
1.3% 1.3%
-0.9% -0.9%
0.7% 0.7%
⬤ Отклонение, %
Интер РАО (для ФСК)
Промышленные потребители
Транспорт
Нефтедобыча
Нефтепереработка
Нефтепроводы
Газопроводы
Сельское хозяйство и пищевая пр…
Непромышленные потребители
Государственные (муниципальные…
Население и приравненные групп…
Территориальные сетевые органи…
Выручка отклонения по ПАО Россети на 2023 год
7.7% 7.7%
16.0% 16.0%
13.2% 13.2%
6.7% 6.7%
13.3% 13.3%
-7.7% -7.7%
1 331.5% 1 331.5%
14.2% 14.2%
9.9% 9.9%
12.0% 12.0%
12.4% 12.4%
13.7% 13.7%
⬤ Отклонение, %
Интер РАО (для ФСК)
Промышленные потребители
Транспорт
Нефтедобыча
Нефтепереработка
Нефтепроводы
Газопроводы
Сельское хозяйство и пищевая пр…
Непромышленные потребители
Государственные (муниципальные…
Население и приравненные групп…
Территориальные сетевые органи…
абс.
%
Прогноз на месяц 
Ноябрь
КПО/Отпуск из сети 
Отпуск из сети, млн. кВт.ч
Организация 
Все
Прогноз электропотребления и выручки за услуги по передаче в разрезе отраслей'

10-01-2025T04:39:01 - [MESSAGE][PASSED] - Text of object 'Object Repository/Прогноз по отраслям/Виджеты дашборда' is: 'Год 
2023 год
Сравнение с 
Факт прошлого года
Динамика электропотребления, млрд. кВт.ч. по ПАО Россети на 2023 год
12 12
186 186
36 36
50 50
10 10
19 19
0 0
17 17
85 85
19 19
82 82
604 604
10 10
197 197
37 37
48 48
10 10
15 15
4 4
18 18
80 80
19 19
82 82
608 608
Факт прошлого года
Ожидаемое (прогноз по конца года)
Интер РАО (дляФСК)
Промышленныепотребители
Транспорт
Нефтедобыча
Нефтепереработка
Нефтепроводы
Газопроводы
Сельскоехозяйство ипищеваяпромышленность
Непромышленныепотребители
Государственные(муниципальные)организации ипрочиебюджетныепотребители
Население иприравненныегруппыпотребителей
Территориальныесетевыеорганизации
Выручка по ПАО Россети на 2023 год
5 5
285 285
72 72
72 72
18 18
22 22
0 0
50 50
201 201
61 61
190 190
227 227
6 6
331 331
82 82
77 77
20 20
20 20
3 3
57 57
220 220
68 68
214 214
258 258
Факт прошлого года
Ожидаемое (прогноз по конца года)
Интер РАО (дляФСК)
Промышленныепотребители
Транспорт
Нефтедобыча
Нефтепереработка
Нефтепроводы
Газопроводы
Сельскоехозяйство ипищеваяпромышленность
Непромышленныепотребители
Государственные(муниципальные)организации ипрочиебюджетныепотребители
Население иприравненныегруппыпотребителей
Территориальныесетевыеорганизации
Отклонения по ПАО Россети на 2023 год
-18.5% -18.5%
5.9% 5.9%
3.6% 3.6%
-3.9% -3.9%
0.9% 0.9%
-20.7% -20.7%
3 313.2% 3 313.2%
3.8% 3.8%
-5.6% -5.6%
1.3% 1.3%
-0.9% -0.9%
0.7% 0.7%
⬤ Отклонение, %
Интер РАО (для ФСК)
Промышленные потребители
Транспорт
Нефтедобыча
Нефтепереработка
Нефтепроводы
Газопроводы
Сельское хозяйство и пищевая пр…
Непромышленные потребители
Государственные (муниципальные…
Население и приравненные групп…
Территориальные сетевые органи…
Выручка отклонения по ПАО Россети на 2023 год
7.7% 7.7%
16.0% 16.0%
13.2% 13.2%
6.7% 6.7%
13.3% 13.3%
-7.7% -7.7%
1 331.5% 1 331.5%
14.2% 14.2%
9.9% 9.9%
12.0% 12.0%
12.4% 12.4%
13.7% 13.7%
⬤ Отклонение, %
Интер РАО (для ФСК)
Промышленные потребители
Транспорт
Нефтедобыча
Нефтепереработка
Нефтепроводы
Газопроводы
Сельское хозяйство и пищевая пр…
Непромышленные потребители
Государственные (муниципальные…
Население и приравненные групп…
Территориальные сетевые органи…
абс.
%
Прогноз на месяц 
Ноябрь
КПО/Отпуск из сети 
Отпуск из сети, млн. кВт.ч
Организация 
Все
Прогноз электропотребления и выручки за услуги по передаче в разрезе отраслей'

10-01-2025T04:39:01 - [TEST_STEP][PASSED] - a1 = a1.replaceAll("[^0-9]", ""): null

10-01-2025T04:39:01 - [TEST_STEP][PASSED] - println("a1:" + a1): null

10-01-2025T04:39:01 - [TEST_STEP][PASSED] - click(findTestObject("Прогноз по отраслям/Фильтр Сравнение с")): Object: 'Object Repository/Прогноз по отраслям/Фильтр Сравнение с' is clicked on

10-01-2025T04:39:01 - [MESSAGE][PASSED] - Object: 'Object Repository/Прогноз по отраслям/Фильтр Сравнение с' is clicked on

10-01-2025T04:39:01 - [TEST_STEP][PASSED] - click(findTestObject("Прогноз по отраслям/План")): Object: 'Object Repository/Прогноз по отраслям/План' is clicked on

10-01-2025T04:39:02 - [MESSAGE][PASSED] - Object: 'Object Repository/Прогноз по отраслям/План' is clicked on

10-01-2025T04:39:02 - [TEST_STEP][PASSED] - delay(40): Delayed 40 second(s)

10-01-2025T04:39:42 - [MESSAGE][PASSED] - Delayed 40 second(s)

10-01-2025T04:39:42 - [TEST_STEP][PASSED] - a2 = getText(findTestObject("Прогноз по отраслям/Виджеты дашборда")): Text of object 'Object Repository/Прогноз по отраслям/Виджеты дашборда' is: 'Год 
2023 год
Сравнение с 
План
Динамика электропотребления, млрд. кВт.ч. по ПАО Россети на 2023 год
10 10
190 190
36 36
14 14
9 9
14 14
4 4
17 17
80 80
19 19
82 82
588 588
10 10
197 197
37 37
48 48
10 10
15 15
4 4
18 18
80 80
19 19
82 82
608 608
План
Ожидаемое (прогноз по конца года)
Интер РАО (дляФСК)
Промышленныепотребители
Транспорт
Нефтедобыча
Нефтепереработка
Нефтепроводы
Газопроводы
Сельскоехозяйство ипищеваяпромышленность
Непромышленныепотребители
Государственные(муниципальные)организации ипрочиебюджетныепотребители
Население иприравненныегруппыпотребителей
Территориальныесетевыеорганизации
Выручка по ПАО Россети на 2023 год
5 5
319 319
81 81
16 16
16 16
20 20
2 2
56 56
215 215
67 67
218 218
239 239
6 6
331 331
82 82
77 77
20 20
20 20
3 3
57 57
220 220
68 68
214 214
258 258
План
Ожидаемое (прогноз по конца года)
Интер РАО (дляФСК)
Промышленныепотребители
Транспорт
Нефтедобыча
Нефтепереработка
Нефтепроводы
Газопроводы
Сельскоехозяйство ипищеваяпромышленность
Непромышленныепотребители
Государственные(муниципальные)организации ипрочиебюджетныепотребители
Население иприравненныегруппыпотребителей
Территориальныесетевыеорганизации
Отклонения по ПАО Россети на 2023 год
-4.7% -4.7%
3.8% 3.8%
1.9% 1.9%
230.3% 230.3%
10.9% 10.9%
4.2% 4.2%
21.7% 21.7%
3.9% 3.9%
-0.6% -0.6%
1.6% 1.6%
-1.0% -1.0%
3.3% 3.3%
⬤ Отклонение, %
Интер РАО (для ФСК)
Промышленные потребители
Транспорт
Нефтедобыча
Нефтепереработка
Нефтепроводы
Газопроводы
Сельское хозяйство и пищевая пр…
Непромышленные потребители
Государственные (муниципальные…
Население и приравненные групп…
Территориальные сетевые органи…
Выручка отклонения по ПАО Россети на 2023 год
15.6% 15.6%
3.8% 3.8%
1.2% 1.2%
398.2% 398.2%
26.9% 26.9%
-0.6% -0.6%
26.9% 26.9%
1.5% 1.5%
2.7% 2.7%
2.0% 2.0%
-2.0% -2.0%
7.9% 7.9%
⬤ Отклонение, %
Интер РАО (для ФСК)
Промышленные потребители
Транспорт
Нефтедобыча
Нефтепереработка
Нефтепроводы
Газопроводы
Сельское хозяйство и пищевая пр…
Непромышленные потребители
Государственные (муниципальные…
Население и приравненные групп…
Территориальные сетевые органи…
абс.
%
Прогноз на месяц 
Ноябрь
КПО/Отпуск из сети 
Отпуск из сети, млн. кВт.ч
Организация 
Все
Прогноз электропотребления и выручки за услуги по передаче в разрезе отраслей'

10-01-2025T04:39:43 - [MESSAGE][PASSED] - Text of object 'Object Repository/Прогноз по отраслям/Виджеты дашборда' is: 'Год 
2023 год
Сравнение с 
План
Динамика электропотребления, млрд. кВт.ч. по ПАО Россети на 2023 год
10 10
190 190
36 36
14 14
9 9
14 14
4 4
17 17
80 80
19 19
82 82
588 588
10 10
197 197
37 37
48 48
10 10
15 15
4 4
18 18
80 80
19 19
82 82
608 608
План
Ожидаемое (прогноз по конца года)
Интер РАО (дляФСК)
Промышленныепотребители
Транспорт
Нефтедобыча
Нефтепереработка
Нефтепроводы
Газопроводы
Сельскоехозяйство ипищеваяпромышленность
Непромышленныепотребители
Государственные(муниципальные)организации ипрочиебюджетныепотребители
Население иприравненныегруппыпотребителей
Территориальныесетевыеорганизации
Выручка по ПАО Россети на 2023 год
5 5
319 319
81 81
16 16
16 16
20 20
2 2
56 56
215 215
67 67
218 218
239 239
6 6
331 331
82 82
77 77
20 20
20 20
3 3
57 57
220 220
68 68
214 214
258 258
План
Ожидаемое (прогноз по конца года)
Интер РАО (дляФСК)
Промышленныепотребители
Транспорт
Нефтедобыча
Нефтепереработка
Нефтепроводы
Газопроводы
Сельскоехозяйство ипищеваяпромышленность
Непромышленныепотребители
Государственные(муниципальные)организации ипрочиебюджетныепотребители
Население иприравненныегруппыпотребителей
Территориальныесетевыеорганизации
Отклонения по ПАО Россети на 2023 год
-4.7% -4.7%
3.8% 3.8%
1.9% 1.9%
230.3% 230.3%
10.9% 10.9%
4.2% 4.2%
21.7% 21.7%
3.9% 3.9%
-0.6% -0.6%
1.6% 1.6%
-1.0% -1.0%
3.3% 3.3%
⬤ Отклонение, %
Интер РАО (для ФСК)
Промышленные потребители
Транспорт
Нефтедобыча
Нефтепереработка
Нефтепроводы
Газопроводы
Сельское хозяйство и пищевая пр…
Непромышленные потребители
Государственные (муниципальные…
Население и приравненные групп…
Территориальные сетевые органи…
Выручка отклонения по ПАО Россети на 2023 год
15.6% 15.6%
3.8% 3.8%
1.2% 1.2%
398.2% 398.2%
26.9% 26.9%
-0.6% -0.6%
26.9% 26.9%
1.5% 1.5%
2.7% 2.7%
2.0% 2.0%
-2.0% -2.0%
7.9% 7.9%
⬤ Отклонение, %
Интер РАО (для ФСК)
Промышленные потребители
Транспорт
Нефтедобыча
Нефтепереработка
Нефтепроводы
Газопроводы
Сельское хозяйство и пищевая пр…
Непромышленные потребители
Государственные (муниципальные…
Население и приравненные групп…
Территориальные сетевые органи…
абс.
%
Прогноз на месяц 
Ноябрь
КПО/Отпуск из сети 
Отпуск из сети, млн. кВт.ч
Организация 
Все
Прогноз электропотребления и выручки за услуги по передаче в разрезе отраслей'

10-01-2025T04:39:43 - [TEST_STEP][PASSED] - a2 = a2.replaceAll("[^0-9]", ""): null

10-01-2025T04:39:43 - [TEST_STEP][PASSED] - println("a2:" + a2): null

10-01-2025T04:39:43 - [TEST_STEP][PASSED] - click(findTestObject("Прогноз по отраслям/Фильтр Сравнение с")): Object: 'Object Repository/Прогноз по отраслям/Фильтр Сравнение с' is clicked on

10-01-2025T04:39:43 - [MESSAGE][PASSED] - Object: 'Object Repository/Прогноз по отраслям/Фильтр Сравнение с' is clicked on

10-01-2025T04:39:43 - [TEST_STEP][PASSED] - click(findTestObject("Прогноз по отраслям/План СУ")): Object: 'Object Repository/Прогноз по отраслям/План СУ' is clicked on

10-01-2025T04:39:44 - [MESSAGE][PASSED] - Object: 'Object Repository/Прогноз по отраслям/План СУ' is clicked on

10-01-2025T04:39:44 - [TEST_STEP][PASSED] - delay(40): Delayed 40 second(s)

10-01-2025T04:40:24 - [MESSAGE][PASSED] - Delayed 40 second(s)

10-01-2025T04:40:24 - [TEST_STEP][PASSED] - a3 = getText(findTestObject("Прогноз по отраслям/Виджеты дашборда")): Text of object 'Object Repository/Прогноз по отраслям/Виджеты дашборда' is: 'Год 
2023 год
Сравнение с 
План/СУ
Динамика электропотребления, млрд. кВт.ч. по ПАО Россети на 2023 год
10 10
186 186
36 36
15 15
9 9
14 14
4 4
17 17
88 88
19 19
83 83
597 597
10 10
197 197
37 37
48 48
10 10
15 15
4 4
18 18
80 80
19 19
82 82
608 608
СУ
Ожидаемое (прогноз по конца года)
Интер РАО (дляФСК)
Промышленныепотребители
Транспорт
Нефтедобыча
Нефтепереработка
Нефтепроводы
Газопроводы
Сельскоехозяйство ипищеваяпромышленность
Непромышленныепотребители
Государственные(муниципальные)организации ипрочиебюджетныепотребители
Население иприравненныегруппыпотребителей
Территориальныесетевыеорганизации
Выручка по ПАО Россети на 2023 год
6 6
331 331
82 82
77 77
20 20
20 20
3 3
57 57
220 220
68 68
214 214
258 258
Ожидаемое (прогноз по конца года)
Интер РАО (дляФСК)
Промышленныепотребители
Транспорт
Нефтедобыча
Нефтепереработка
Нефтепроводы
Газопроводы
Сельскоехозяйство ипищеваяпромышленность
Непромышленныепотребители
Государственные(муниципальные)организации ипрочиебюджетныепотребители
Население иприравненныегруппыпотребителей
Территориальныесетевыеорганизации
Отклонения по ПАО Россети на 2023 год
2.5% 2.5%
5.9% 5.9%
1.9% 1.9%
219.1% 219.1%
11.7% 11.7%
1.9% 1.9%
13.1% 13.1%
3.5% 3.5%
-8.7% -8.7%
0.2% 0.2%
-1.6% -1.6%
1.8% 1.8%
⬤ Отклонение, %
Интер РАО (для ФСК)
Промышленные потребители
Транспорт
Нефтедобыча
Нефтепереработка
Нефтепроводы
Газопроводы
Сельское хозяйство и пищевая пр…
Непромышленные потребители
Государственные (муниципальные…
Население и приравненные групп…
Территориальные сетевые органи…
Выручка отклонения по ПАО Россети на 2023 год
⬤ Отклонение, %
Интер РАО (для ФСК)
Промышленные потребители
Транспорт
Нефтедобыча
Нефтепереработка
Нефтепроводы
Газопроводы
Сельское хозяйство и пищевая пр…
Непромышленные потребители
Государственные (муниципальные…
Население и приравненные групп…
Территориальные сетевые органи…
абс.
%
Прогноз на месяц 
Ноябрь
КПО/Отпуск из сети 
Отпуск из сети, млн. кВт.ч
Организация 
Все
Прогноз электропотребления и выручки за услуги по передаче в разрезе отраслей'

10-01-2025T04:40:25 - [MESSAGE][PASSED] - Text of object 'Object Repository/Прогноз по отраслям/Виджеты дашборда' is: 'Год 
2023 год
Сравнение с 
План/СУ
Динамика электропотребления, млрд. кВт.ч. по ПАО Россети на 2023 год
10 10
186 186
36 36
15 15
9 9
14 14
4 4
17 17
88 88
19 19
83 83
597 597
10 10
197 197
37 37
48 48
10 10
15 15
4 4
18 18
80 80
19 19
82 82
608 608
СУ
Ожидаемое (прогноз по конца года)
Интер РАО (дляФСК)
Промышленныепотребители
Транспорт
Нефтедобыча
Нефтепереработка
Нефтепроводы
Газопроводы
Сельскоехозяйство ипищеваяпромышленность
Непромышленныепотребители
Государственные(муниципальные)организации ипрочиебюджетныепотребители
Население иприравненныегруппыпотребителей
Территориальныесетевыеорганизации
Выручка по ПАО Россети на 2023 год
6 6
331 331
82 82
77 77
20 20
20 20
3 3
57 57
220 220
68 68
214 214
258 258
Ожидаемое (прогноз по конца года)
Интер РАО (дляФСК)
Промышленныепотребители
Транспорт
Нефтедобыча
Нефтепереработка
Нефтепроводы
Газопроводы
Сельскоехозяйство ипищеваяпромышленность
Непромышленныепотребители
Государственные(муниципальные)организации ипрочиебюджетныепотребители
Население иприравненныегруппыпотребителей
Территориальныесетевыеорганизации
Отклонения по ПАО Россети на 2023 год
2.5% 2.5%
5.9% 5.9%
1.9% 1.9%
219.1% 219.1%
11.7% 11.7%
1.9% 1.9%
13.1% 13.1%
3.5% 3.5%
-8.7% -8.7%
0.2% 0.2%
-1.6% -1.6%
1.8% 1.8%
⬤ Отклонение, %
Интер РАО (для ФСК)
Промышленные потребители
Транспорт
Нефтедобыча
Нефтепереработка
Нефтепроводы
Газопроводы
Сельское хозяйство и пищевая пр…
Непромышленные потребители
Государственные (муниципальные…
Население и приравненные групп…
Территориальные сетевые органи…
Выручка отклонения по ПАО Россети на 2023 год
⬤ Отклонение, %
Интер РАО (для ФСК)
Промышленные потребители
Транспорт
Нефтедобыча
Нефтепереработка
Нефтепроводы
Газопроводы
Сельское хозяйство и пищевая пр…
Непромышленные потребители
Государственные (муниципальные…
Население и приравненные групп…
Территориальные сетевые органи…
абс.
%
Прогноз на месяц 
Ноябрь
КПО/Отпуск из сети 
Отпуск из сети, млн. кВт.ч
Организация 
Все
Прогноз электропотребления и выручки за услуги по передаче в разрезе отраслей'

10-01-2025T04:40:25 - [TEST_STEP][PASSED] - a3 = a3.replaceAll("[^0-9]", ""): null

10-01-2025T04:40:25 - [TEST_STEP][PASSED] - println("a3:" + a3): null

10-01-2025T04:40:25 - [TEST_STEP][PASSED] - click(findTestObject("Прогноз по отраслям/Фильтр Сравнение с")): Object: 'Object Repository/Прогноз по отраслям/Фильтр Сравнение с' is clicked on

10-01-2025T04:40:25 - [MESSAGE][PASSED] - Object: 'Object Repository/Прогноз по отраслям/Фильтр Сравнение с' is clicked on

10-01-2025T04:40:25 - [TEST_STEP][PASSED] - click(findTestObject("Прогноз по отраслям/Факт прошлого года")): Object: 'Object Repository/Прогноз по отраслям/Факт прошлого года' is clicked on

10-01-2025T04:40:26 - [MESSAGE][PASSED] - Object: 'Object Repository/Прогноз по отраслям/Факт прошлого года' is clicked on

10-01-2025T04:40:26 - [TEST_STEP][PASSED] - click(findTestObject("Прогноз по отраслям/Фильтр КПО-Отпуск")): Object: 'Object Repository/Прогноз по отраслям/Фильтр КПО-Отпуск' is clicked on

10-01-2025T04:40:27 - [MESSAGE][PASSED] - Object: 'Object Repository/Прогноз по отраслям/Фильтр КПО-Отпуск' is clicked on

10-01-2025T04:40:27 - [TEST_STEP][PASSED] - click(findTestObject("Прогноз по отраслям/КПО")): Object: 'Object Repository/Прогноз по отраслям/КПО' is clicked on

10-01-2025T04:40:28 - [MESSAGE][PASSED] - Object: 'Object Repository/Прогноз по отраслям/КПО' is clicked on

10-01-2025T04:40:28 - [TEST_STEP][PASSED] - delay(40): Delayed 40 second(s)

10-01-2025T04:41:08 - [MESSAGE][PASSED] - Delayed 40 second(s)

10-01-2025T04:41:08 - [TEST_STEP][PASSED] - a4 = getText(findTestObject("Прогноз по отраслям/Виджеты дашборда")): Text of object 'Object Repository/Прогноз по отраслям/Виджеты дашборда' is: 'Год 
2023 год
Сравнение с 
Факт прошлого года
Динамика электропотребления, млрд. кВт.ч. по ПАО Россети на 2023 год
0 0
120 120
38 38
41 41
8 8
10 10
0 0
19 19
77 77
25 25
122 122
61 61
0 0
120 120
39 39
39 39
8 8
8 8
1 1
20 20
78 78
26 26
121 121
60 60
Факт прошлого года
Ожидаемое (прогноз по конца года)
Интер РАО (дляФСК)
Промышленныепотребители
Транспорт
Нефтедобыча
Нефтепереработка
Нефтепроводы
Газопроводы
Сельскоехозяйство ипищеваяпромышленность
Непромышленныепотребители
Государственные(муниципальные)организации ипрочиебюджетныепотребители
Население иприравненныегруппыпотребителей
Территориальныесетевыеорганизации
Выручка по ПАО Россети на 2023 год
5 5
285 285
72 72
72 72
18 18
22 22
0 0
50 50
201 201
61 61
190 190
227 227
6 6
331 331
82 82
77 77
20 20
20 20
3 3
57 57
220 220
68 68
214 214
258 258
Факт прошлого года
Ожидаемое (прогноз по конца года)
Интер РАО (дляФСК)
Промышленныепотребители
Транспорт
Нефтедобыча
Нефтепереработка
Нефтепроводы
Газопроводы
Сельскоехозяйство ипищеваяпромышленность
Непромышленныепотребители
Государственные(муниципальные)организации ипрочиебюджетныепотребители
Население иприравненныегруппыпотребителей
Территориальныесетевыеорганизации
Отклонения по ПАО Россети на 2023 год
0.5% 0.5%
0.9% 0.9%
-5.9% -5.9%
3.1% 3.1%
-17.9% -17.9%
578.4% 578.4%
2.3% 2.3%
1.8% 1.8%
2.1% 2.1%
-0.9% -0.9%
-0.2% -0.2%
⬤ Отклонение, %
Интер РАО (для ФСК)
Промышленные потребители
Транспорт
Нефтедобыча
Нефтепереработка
Нефтепроводы
Газопроводы
Сельское хозяйство и пищевая пр…
Непромышленные потребители
Государственные (муниципальные…
Население и приравненные групп…
Территориальные сетевые органи…
Выручка отклонения по ПАО Россети на 2023 год
7.7% 7.7%
16.0% 16.0%
13.2% 13.2%
6.7% 6.7%
13.3% 13.3%
-7.7% -7.7%
1 331.5% 1 331.5%
14.2% 14.2%
9.9% 9.9%
12.0% 12.0%
12.4% 12.4%
13.7% 13.7%
⬤ Отклонение, %
Интер РАО (для ФСК)
Промышленные потребители
Транспорт
Нефтедобыча
Нефтепереработка
Нефтепроводы
Газопроводы
Сельское хозяйство и пищевая пр…
Непромышленные потребители
Государственные (муниципальные…
Население и приравненные групп…
Территориальные сетевые органи…
абс.
%
Прогноз на месяц 
Ноябрь
КПО/Отпуск из сети 
Котловой полезный отпуск, млн. кВт.ч
Организация 
Все
Прогноз электропотребления и выручки за услуги по передаче в разрезе отраслей'

10-01-2025T04:41:09 - [MESSAGE][PASSED] - Text of object 'Object Repository/Прогноз по отраслям/Виджеты дашборда' is: 'Год 
2023 год
Сравнение с 
Факт прошлого года
Динамика электропотребления, млрд. кВт.ч. по ПАО Россети на 2023 год
0 0
120 120
38 38
41 41
8 8
10 10
0 0
19 19
77 77
25 25
122 122
61 61
0 0
120 120
39 39
39 39
8 8
8 8
1 1
20 20
78 78
26 26
121 121
60 60
Факт прошлого года
Ожидаемое (прогноз по конца года)
Интер РАО (дляФСК)
Промышленныепотребители
Транспорт
Нефтедобыча
Нефтепереработка
Нефтепроводы
Газопроводы
Сельскоехозяйство ипищеваяпромышленность
Непромышленныепотребители
Государственные(муниципальные)организации ипрочиебюджетныепотребители
Население иприравненныегруппыпотребителей
Территориальныесетевыеорганизации
Выручка по ПАО Россети на 2023 год
5 5
285 285
72 72
72 72
18 18
22 22
0 0
50 50
201 201
61 61
190 190
227 227
6 6
331 331
82 82
77 77
20 20
20 20
3 3
57 57
220 220
68 68
214 214
258 258
Факт прошлого года
Ожидаемое (прогноз по конца года)
Интер РАО (дляФСК)
Промышленныепотребители
Транспорт
Нефтедобыча
Нефтепереработка
Нефтепроводы
Газопроводы
Сельскоехозяйство ипищеваяпромышленность
Непромышленныепотребители
Государственные(муниципальные)организации ипрочиебюджетныепотребители
Население иприравненныегруппыпотребителей
Территориальныесетевыеорганизации
Отклонения по ПАО Россети на 2023 год
0.5% 0.5%
0.9% 0.9%
-5.9% -5.9%
3.1% 3.1%
-17.9% -17.9%
578.4% 578.4%
2.3% 2.3%
1.8% 1.8%
2.1% 2.1%
-0.9% -0.9%
-0.2% -0.2%
⬤ Отклонение, %
Интер РАО (для ФСК)
Промышленные потребители
Транспорт
Нефтедобыча
Нефтепереработка
Нефтепроводы
Газопроводы
Сельское хозяйство и пищевая пр…
Непромышленные потребители
Государственные (муниципальные…
Население и приравненные групп…
Территориальные сетевые органи…
Выручка отклонения по ПАО Россети на 2023 год
7.7% 7.7%
16.0% 16.0%
13.2% 13.2%
6.7% 6.7%
13.3% 13.3%
-7.7% -7.7%
1 331.5% 1 331.5%
14.2% 14.2%
9.9% 9.9%
12.0% 12.0%
12.4% 12.4%
13.7% 13.7%
⬤ Отклонение, %
Интер РАО (для ФСК)
Промышленные потребители
Транспорт
Нефтедобыча
Нефтепереработка
Нефтепроводы
Газопроводы
Сельское хозяйство и пищевая пр…
Непромышленные потребители
Государственные (муниципальные…
Население и приравненные групп…
Территориальные сетевые органи…
абс.
%
Прогноз на месяц 
Ноябрь
КПО/Отпуск из сети 
Котловой полезный отпуск, млн. кВт.ч
Организация 
Все
Прогноз электропотребления и выручки за услуги по передаче в разрезе отраслей'

10-01-2025T04:41:09 - [TEST_STEP][PASSED] - a4 = a4.replaceAll("[^0-9]", ""): null

10-01-2025T04:41:09 - [TEST_STEP][PASSED] - println("a4:" + a4): null

10-01-2025T04:41:09 - [TEST_STEP][PASSED] - click(findTestObject("Прогноз по отраслям/Фильтр Сравнение с")): Object: 'Object Repository/Прогноз по отраслям/Фильтр Сравнение с' is clicked on

10-01-2025T04:41:09 - [MESSAGE][PASSED] - Object: 'Object Repository/Прогноз по отраслям/Фильтр Сравнение с' is clicked on

10-01-2025T04:41:09 - [TEST_STEP][PASSED] - click(findTestObject("Прогноз по отраслям/План")): Object: 'Object Repository/Прогноз по отраслям/План' is clicked on

10-01-2025T04:41:10 - [MESSAGE][PASSED] - Object: 'Object Repository/Прогноз по отраслям/План' is clicked on

10-01-2025T04:41:10 - [TEST_STEP][PASSED] - delay(40): Delayed 40 second(s)

10-01-2025T04:41:50 - [MESSAGE][PASSED] - Delayed 40 second(s)

10-01-2025T04:41:50 - [TEST_STEP][PASSED] - a5 = getText(findTestObject("Прогноз по отраслям/Виджеты дашборда")): Text of object 'Object Repository/Прогноз по отраслям/Виджеты дашборда' is: 'Год 
2023 год
Сравнение с 
План
Динамика электропотребления, млрд. кВт.ч. по ПАО Россети на 2023 год
0 0
119 119
37 37
7 7
7 7
8 8
1 1
19 19
75 75
25 25
123 123
55 55
0 0
120 120
39 39
39 39
8 8
8 8
1 1
20 20
78 78
26 26
121 121
60 60
План
Ожидаемое (прогноз по конца года)
Интер РАО (дляФСК)
Промышленныепотребители
Транспорт
Нефтедобыча
Нефтепереработка
Нефтепроводы
Газопроводы
Сельскоехозяйство ипищеваяпромышленность
Непромышленныепотребители
Государственные(муниципальные)организации ипрочиебюджетныепотребители
Население иприравненныегруппыпотребителей
Территориальныесетевыеорганизации
Выручка по ПАО Россети на 2023 год
5 5
319 319
81 81
16 16
16 16
20 20
2 2
56 56
215 215
67 67
218 218
239 239
6 6
331 331
82 82
77 77
20 20
20 20
3 3
57 57
220 220
68 68
214 214
258 258
План
Ожидаемое (прогноз по конца года)
Интер РАО (дляФСК)
Промышленныепотребители
Транспорт
Нефтедобыча
Нефтепереработка
Нефтепроводы
Газопроводы
Сельскоехозяйство ипищеваяпромышленность
Непромышленныепотребители
Государственные(муниципальные)организации ипрочиебюджетныепотребители
Население иприравненныегруппыпотребителей
Территориальныесетевыеорганизации
Отклонения по ПАО Россети на 2023 год
1.2% 1.2%
3.2% 3.2%
492.1% 492.1%
18.1% 18.1%
4.4% 4.4%
11.9% 11.9%
1.2% 1.2%
4.1% 4.1%
2.4% 2.4%
-1.4% -1.4%
9.7% 9.7%
⬤ Отклонение, %
Интер РАО (для ФСК)
Промышленные потребители
Транспорт
Нефтедобыча
Нефтепереработка
Нефтепроводы
Газопроводы
Сельское хозяйство и пищевая пр…
Непромышленные потребители
Государственные (муниципальные…
Население и приравненные групп…
Территориальные сетевые органи…
Выручка отклонения по ПАО Россети на 2023 год
15.6% 15.6%
3.8% 3.8%
1.2% 1.2%
398.2% 398.2%
26.9% 26.9%
-0.6% -0.6%
26.9% 26.9%
1.5% 1.5%
2.7% 2.7%
2.0% 2.0%
-2.0% -2.0%
7.9% 7.9%
⬤ Отклонение, %
Интер РАО (для ФСК)
Промышленные потребители
Транспорт
Нефтедобыча
Нефтепереработка
Нефтепроводы
Газопроводы
Сельское хозяйство и пищевая пр…
Непромышленные потребители
Государственные (муниципальные…
Население и приравненные групп…
Территориальные сетевые органи…
абс.
%
Прогноз на месяц 
Ноябрь
КПО/Отпуск из сети 
Котловой полезный отпуск, млн. кВт.ч
Организация 
Все
Прогноз электропотребления и выручки за услуги по передаче в разрезе отраслей'

10-01-2025T04:41:50 - [MESSAGE][PASSED] - Text of object 'Object Repository/Прогноз по отраслям/Виджеты дашборда' is: 'Год 
2023 год
Сравнение с 
План
Динамика электропотребления, млрд. кВт.ч. по ПАО Россети на 2023 год
0 0
119 119
37 37
7 7
7 7
8 8
1 1
19 19
75 75
25 25
123 123
55 55
0 0
120 120
39 39
39 39
8 8
8 8
1 1
20 20
78 78
26 26
121 121
60 60
План
Ожидаемое (прогноз по конца года)
Интер РАО (дляФСК)
Промышленныепотребители
Транспорт
Нефтедобыча
Нефтепереработка
Нефтепроводы
Газопроводы
Сельскоехозяйство ипищеваяпромышленность
Непромышленныепотребители
Государственные(муниципальные)организации ипрочиебюджетныепотребители
Население иприравненныегруппыпотребителей
Территориальныесетевыеорганизации
Выручка по ПАО Россети на 2023 год
5 5
319 319
81 81
16 16
16 16
20 20
2 2
56 56
215 215
67 67
218 218
239 239
6 6
331 331
82 82
77 77
20 20
20 20
3 3
57 57
220 220
68 68
214 214
258 258
План
Ожидаемое (прогноз по конца года)
Интер РАО (дляФСК)
Промышленныепотребители
Транспорт
Нефтедобыча
Нефтепереработка
Нефтепроводы
Газопроводы
Сельскоехозяйство ипищеваяпромышленность
Непромышленныепотребители
Государственные(муниципальные)организации ипрочиебюджетныепотребители
Население иприравненныегруппыпотребителей
Территориальныесетевыеорганизации
Отклонения по ПАО Россети на 2023 год
1.2% 1.2%
3.2% 3.2%
492.1% 492.1%
18.1% 18.1%
4.4% 4.4%
11.9% 11.9%
1.2% 1.2%
4.1% 4.1%
2.4% 2.4%
-1.4% -1.4%
9.7% 9.7%
⬤ Отклонение, %
Интер РАО (для ФСК)
Промышленные потребители
Транспорт
Нефтедобыча
Нефтепереработка
Нефтепроводы
Газопроводы
Сельское хозяйство и пищевая пр…
Непромышленные потребители
Государственные (муниципальные…
Население и приравненные групп…
Территориальные сетевые органи…
Выручка отклонения по ПАО Россети на 2023 год
15.6% 15.6%
3.8% 3.8%
1.2% 1.2%
398.2% 398.2%
26.9% 26.9%
-0.6% -0.6%
26.9% 26.9%
1.5% 1.5%
2.7% 2.7%
2.0% 2.0%
-2.0% -2.0%
7.9% 7.9%
⬤ Отклонение, %
Интер РАО (для ФСК)
Промышленные потребители
Транспорт
Нефтедобыча
Нефтепереработка
Нефтепроводы
Газопроводы
Сельское хозяйство и пищевая пр…
Непромышленные потребители
Государственные (муниципальные…
Население и приравненные групп…
Территориальные сетевые органи…
абс.
%
Прогноз на месяц 
Ноябрь
КПО/Отпуск из сети 
Котловой полезный отпуск, млн. кВт.ч
Организация 
Все
Прогноз электропотребления и выручки за услуги по передаче в разрезе отраслей'

10-01-2025T04:41:50 - [TEST_STEP][PASSED] - println("a5:" + a5): null

10-01-2025T04:41:50 - [TEST_STEP][PASSED] - a5 = a5.replaceAll("[^0-9]", ""): null

10-01-2025T04:41:50 - [TEST_STEP][PASSED] - println("a5:" + a5): null

10-01-2025T04:41:50 - [TEST_STEP][PASSED] - click(findTestObject("Прогноз по отраслям/Фильтр Сравнение с")): Object: 'Object Repository/Прогноз по отраслям/Фильтр Сравнение с' is clicked on

10-01-2025T04:41:51 - [MESSAGE][PASSED] - Object: 'Object Repository/Прогноз по отраслям/Фильтр Сравнение с' is clicked on

10-01-2025T04:41:51 - [TEST_STEP][PASSED] - click(findTestObject("Прогноз по отраслям/План СУ")): Object: 'Object Repository/Прогноз по отраслям/План СУ' is clicked on

10-01-2025T04:41:52 - [MESSAGE][PASSED] - Object: 'Object Repository/Прогноз по отраслям/План СУ' is clicked on

10-01-2025T04:41:52 - [TEST_STEP][PASSED] - delay(40): Delayed 40 second(s)

10-01-2025T04:42:32 - [MESSAGE][PASSED] - Delayed 40 second(s)

10-01-2025T04:42:32 - [TEST_STEP][PASSED] - a6 = getText(findTestObject("Прогноз по отраслям/Виджеты дашборда")): Text of object 'Object Repository/Прогноз по отраслям/Виджеты дашборда' is: 'Год 
2023 год
Сравнение с 
План/СУ
Динамика электропотребления, млрд. кВт.ч. по ПАО Россети на 2023 год
0 0
0 0
0 0
0 0
0 0
0 0
0 0
0 0
0 0
0 0
0 0
0 0
0 0
120 120
39 39
39 39
8 8
8 8
1 1
20 20
78 78
26 26
121 121
60 60
СУ
Ожидаемое (прогноз по конца года)
Интер РАО (дляФСК)
Промышленныепотребители
Транспорт
Нефтедобыча
Нефтепереработка
Нефтепроводы
Газопроводы
Сельскоехозяйство ипищеваяпромышленность
Непромышленныепотребители
Государственные(муниципальные)организации ипрочиебюджетныепотребители
Население иприравненныегруппыпотребителей
Территориальныесетевыеорганизации
Выручка по ПАО Россети на 2023 год
6 6
331 331
82 82
77 77
20 20
20 20
3 3
57 57
220 220
68 68
214 214
258 258
Ожидаемое (прогноз по конца года)
Интер РАО (дляФСК)
Промышленныепотребители
Транспорт
Нефтедобыча
Нефтепереработка
Нефтепроводы
Газопроводы
Сельскоехозяйство ипищеваяпромышленность
Непромышленныепотребители
Государственные(муниципальные)организации ипрочиебюджетныепотребители
Население иприравненныегруппыпотребителей
Территориальныесетевыеорганизации
Отклонения по ПАО Россети на 2023 год
⬤ Отклонение, %
Интер РАО (для ФСК)
Промышленные потребители
Транспорт
Нефтедобыча
Нефтепереработка
Нефтепроводы
Газопроводы
Сельское хозяйство и пищевая пр…
Непромышленные потребители
Государственные (муниципальные…
Население и приравненные групп…
Территориальные сетевые органи…
Выручка отклонения по ПАО Россети на 2023 год
⬤ Отклонение, %
Интер РАО (для ФСК)
Промышленные потребители
Транспорт
Нефтедобыча
Нефтепереработка
Нефтепроводы
Газопроводы
Сельское хозяйство и пищевая пр…
Непромышленные потребители
Государственные (муниципальные…
Население и приравненные групп…
Территориальные сетевые органи…
абс.
%
Прогноз на месяц 
Ноябрь
КПО/Отпуск из сети 
Котловой полезный отпуск, млн. кВт.ч
Организация 
Все
Прогноз электропотребления и выручки за услуги по передаче в разрезе отраслей'

10-01-2025T04:42:32 - [MESSAGE][PASSED] - Text of object 'Object Repository/Прогноз по отраслям/Виджеты дашборда' is: 'Год 
2023 год
Сравнение с 
План/СУ
Динамика электропотребления, млрд. кВт.ч. по ПАО Россети на 2023 год
0 0
0 0
0 0
0 0
0 0
0 0
0 0
0 0
0 0
0 0
0 0
0 0
0 0
120 120
39 39
39 39
8 8
8 8
1 1
20 20
78 78
26 26
121 121
60 60
СУ
Ожидаемое (прогноз по конца года)
Интер РАО (дляФСК)
Промышленныепотребители
Транспорт
Нефтедобыча
Нефтепереработка
Нефтепроводы
Газопроводы
Сельскоехозяйство ипищеваяпромышленность
Непромышленныепотребители
Государственные(муниципальные)организации ипрочиебюджетныепотребители
Население иприравненныегруппыпотребителей
Территориальныесетевыеорганизации
Выручка по ПАО Россети на 2023 год
6 6
331 331
82 82
77 77
20 20
20 20
3 3
57 57
220 220
68 68
214 214
258 258
Ожидаемое (прогноз по конца года)
Интер РАО (дляФСК)
Промышленныепотребители
Транспорт
Нефтедобыча
Нефтепереработка
Нефтепроводы
Газопроводы
Сельскоехозяйство ипищеваяпромышленность
Непромышленныепотребители
Государственные(муниципальные)организации ипрочиебюджетныепотребители
Население иприравненныегруппыпотребителей
Территориальныесетевыеорганизации
Отклонения по ПАО Россети на 2023 год
⬤ Отклонение, %
Интер РАО (для ФСК)
Промышленные потребители
Транспорт
Нефтедобыча
Нефтепереработка
Нефтепроводы
Газопроводы
Сельское хозяйство и пищевая пр…
Непромышленные потребители
Государственные (муниципальные…
Население и приравненные групп…
Территориальные сетевые органи…
Выручка отклонения по ПАО Россети на 2023 год
⬤ Отклонение, %
Интер РАО (для ФСК)
Промышленные потребители
Транспорт
Нефтедобыча
Нефтепереработка
Нефтепроводы
Газопроводы
Сельское хозяйство и пищевая пр…
Непромышленные потребители
Государственные (муниципальные…
Население и приравненные групп…
Территориальные сетевые органи…
абс.
%
Прогноз на месяц 
Ноябрь
КПО/Отпуск из сети 
Котловой полезный отпуск, млн. кВт.ч
Организация 
Все
Прогноз электропотребления и выручки за услуги по передаче в разрезе отраслей'

10-01-2025T04:42:32 - [TEST_STEP][PASSED] - a6 = a6.replaceAll("[^0-9]", ""): null

10-01-2025T04:42:32 - [TEST_STEP][PASSED] - println("a6:" + a6): null

10-01-2025T04:42:32 - [TEST_STEP][PASSED] - click(findTestObject("Прогноз по отраслям/Переключить отображение с процентов на абс Блок руководителя")): Object: 'Object Repository/Прогноз по отраслям/Переключить отображение с процентов на абс Блок руководителя' is clicked on

10-01-2025T04:42:33 - [MESSAGE][PASSED] - Object: 'Object Repository/Прогноз по отраслям/Переключить отображение с процентов на абс Блок руководителя' is clicked on

10-01-2025T04:42:33 - [TEST_STEP][PASSED] - click(findTestObject("Прогноз по отраслям/Фильтр Сравнение с")): Object: 'Object Repository/Прогноз по отраслям/Фильтр Сравнение с' is clicked on

10-01-2025T04:42:33 - [MESSAGE][PASSED] - Object: 'Object Repository/Прогноз по отраслям/Фильтр Сравнение с' is clicked on

10-01-2025T04:42:33 - [TEST_STEP][PASSED] - click(findTestObject("Прогноз по отраслям/Факт прошлого года")): Object: 'Object Repository/Прогноз по отраслям/Факт прошлого года' is clicked on

10-01-2025T04:42:34 - [MESSAGE][PASSED] - Object: 'Object Repository/Прогноз по отраслям/Факт прошлого года' is clicked on

10-01-2025T04:42:34 - [TEST_STEP][PASSED] - click(findTestObject("Прогноз по отраслям/Фильтр КПО-Отпуск")): Object: 'Object Repository/Прогноз по отраслям/Фильтр КПО-Отпуск' is clicked on

10-01-2025T04:42:37 - [MESSAGE][PASSED] - Object: 'Object Repository/Прогноз по отраслям/Фильтр КПО-Отпуск' is clicked on

10-01-2025T04:42:37 - [TEST_STEP][PASSED] - click(findTestObject("Прогноз по отраслям/Отпуск")): Object: 'Object Repository/Прогноз по отраслям/Отпуск' is clicked on

10-01-2025T04:42:38 - [MESSAGE][PASSED] - Object: 'Object Repository/Прогноз по отраслям/Отпуск' is clicked on

10-01-2025T04:42:38 - [TEST_STEP][PASSED] - delay(40): Delayed 40 second(s)

10-01-2025T04:43:18 - [MESSAGE][PASSED] - Delayed 40 second(s)

10-01-2025T04:43:18 - [TEST_STEP][PASSED] - a7 = getText(findTestObject("Прогноз по отраслям/Виджеты дашборда")): Text of object 'Object Repository/Прогноз по отраслям/Виджеты дашборда' is: 'Год 
2023 год
Сравнение с 
Факт прошлого года
Отклонения по ПАО Россети на 2023 год
-2 263.5 -2 263.5
11 054.6 11 054.6
1 280.2 1 280.2
-1 947.5 -1 947.5
90.9 90.9
-3 845.0 -3 845.0
4 162.1 4 162.1
651.7 651.7
-4 727.7 -4 727.7
256.5 256.5
-723.9 -723.9
4 292.3 4 292.3
⬤ Отклонение, млн. кВт.ч
Интер РАО (для ФСК)
Промышленные потребители
Транспорт
Нефтедобыча
Нефтепереработка
Нефтепроводы
Газопроводы
Сельское хозяйство и пищевая пр…
Непромышленные потребители
Государственные (муниципальные…
Население и приравненные групп…
Территориальные сетевые органи…
Выручка отклонения по ПАО Россети на 2023 год
421.3 421.3
45 574.9 45 574.9
9 547.5 9 547.5
4 889.3 4 889.3
2 337.4 2 337.4
-1 682.6 -1 682.6
2 919.4 2 919.4
7 110.2 7 110.2
19 840.8 19 840.8
7 289.5 7 289.5
23 664.8 23 664.8
31 028.3 31 028.3
⬤ Отклонение, млн. руб.
Интер РАО (для ФСК)
Промышленные потребители
Транспорт
Нефтедобыча
Нефтепереработка
Нефтепроводы
Газопроводы
Сельское хозяйство и пищевая пр…
Непромышленные потребители
Государственные (муниципальные…
Население и приравненные групп…
Территориальные сетевые органи…
Динамика электропотребления, млрд. кВт.ч. по ПАО Россети на 2023 год
12 12
186 186
36 36
50 50
10 10
19 19
0 0
17 17
85 85
19 19
82 82
604 604
10 10
197 197
37 37
48 48
10 10
15 15
4 4
18 18
80 80
19 19
82 82
608 608
Факт прошлого года
Ожидаемое (прогноз по конца года)
Интер РАО (дляФСК)
Промышленныепотребители
Транспорт
Нефтедобыча
Нефтепереработка
Нефтепроводы
Газопроводы
Сельскоехозяйство ипищеваяпромышленность
Непромышленныепотребители
Государственные(муниципальные)организации ипрочиебюджетныепотребители
Население иприравненныегруппыпотребителей
Территориальныесетевыеорганизации
Выручка по ПАО Россети на 2023 год
5 5
285 285
72 72
72 72
18 18
22 22
0 0
50 50
201 201
61 61
190 190
227 227
6 6
331 331
82 82
77 77
20 20
20 20
3 3
57 57
220 220
68 68
214 214
258 258
Факт прошлого года
Ожидаемое (прогноз по конца года)
Интер РАО (дляФСК)
Промышленныепотребители
Транспорт
Нефтедобыча
Нефтепереработка
Нефтепроводы
Газопроводы
Сельскоехозяйство ипищеваяпромышленность
Непромышленныепотребители
Государственные(муниципальные)организации ипрочиебюджетныепотребители
Население иприравненныегруппыпотребителей
Территориальныесетевыеорганизации
абс.
%
Прогноз на месяц 
Ноябрь
КПО/Отпуск из сети 
Отпуск из сети, млн. кВт.ч
Организация 
Все
Прогноз электропотребления и выручки за услуги по передаче в разрезе отраслей'

10-01-2025T04:43:18 - [MESSAGE][PASSED] - Text of object 'Object Repository/Прогноз по отраслям/Виджеты дашборда' is: 'Год 
2023 год
Сравнение с 
Факт прошлого года
Отклонения по ПАО Россети на 2023 год
-2 263.5 -2 263.5
11 054.6 11 054.6
1 280.2 1 280.2
-1 947.5 -1 947.5
90.9 90.9
-3 845.0 -3 845.0
4 162.1 4 162.1
651.7 651.7
-4 727.7 -4 727.7
256.5 256.5
-723.9 -723.9
4 292.3 4 292.3
⬤ Отклонение, млн. кВт.ч
Интер РАО (для ФСК)
Промышленные потребители
Транспорт
Нефтедобыча
Нефтепереработка
Нефтепроводы
Газопроводы
Сельское хозяйство и пищевая пр…
Непромышленные потребители
Государственные (муниципальные…
Население и приравненные групп…
Территориальные сетевые органи…
Выручка отклонения по ПАО Россети на 2023 год
421.3 421.3
45 574.9 45 574.9
9 547.5 9 547.5
4 889.3 4 889.3
2 337.4 2 337.4
-1 682.6 -1 682.6
2 919.4 2 919.4
7 110.2 7 110.2
19 840.8 19 840.8
7 289.5 7 289.5
23 664.8 23 664.8
31 028.3 31 028.3
⬤ Отклонение, млн. руб.
Интер РАО (для ФСК)
Промышленные потребители
Транспорт
Нефтедобыча
Нефтепереработка
Нефтепроводы
Газопроводы
Сельское хозяйство и пищевая пр…
Непромышленные потребители
Государственные (муниципальные…
Население и приравненные групп…
Территориальные сетевые органи…
Динамика электропотребления, млрд. кВт.ч. по ПАО Россети на 2023 год
12 12
186 186
36 36
50 50
10 10
19 19
0 0
17 17
85 85
19 19
82 82
604 604
10 10
197 197
37 37
48 48
10 10
15 15
4 4
18 18
80 80
19 19
82 82
608 608
Факт прошлого года
Ожидаемое (прогноз по конца года)
Интер РАО (дляФСК)
Промышленныепотребители
Транспорт
Нефтедобыча
Нефтепереработка
Нефтепроводы
Газопроводы
Сельскоехозяйство ипищеваяпромышленность
Непромышленныепотребители
Государственные(муниципальные)организации ипрочиебюджетныепотребители
Население иприравненныегруппыпотребителей
Территориальныесетевыеорганизации
Выручка по ПАО Россети на 2023 год
5 5
285 285
72 72
72 72
18 18
22 22
0 0
50 50
201 201
61 61
190 190
227 227
6 6
331 331
82 82
77 77
20 20
20 20
3 3
57 57
220 220
68 68
214 214
258 258
Факт прошлого года
Ожидаемое (прогноз по конца года)
Интер РАО (дляФСК)
Промышленныепотребители
Транспорт
Нефтедобыча
Нефтепереработка
Нефтепроводы
Газопроводы
Сельскоехозяйство ипищеваяпромышленность
Непромышленныепотребители
Государственные(муниципальные)организации ипрочиебюджетныепотребители
Население иприравненныегруппыпотребителей
Территориальныесетевыеорганизации
абс.
%
Прогноз на месяц 
Ноябрь
КПО/Отпуск из сети 
Отпуск из сети, млн. кВт.ч
Организация 
Все
Прогноз электропотребления и выручки за услуги по передаче в разрезе отраслей'

10-01-2025T04:43:18 - [TEST_STEP][PASSED] - a7 = a7.replaceAll("[^0-9]", ""): null

10-01-2025T04:43:18 - [TEST_STEP][PASSED] - println("a7:" + a7): null

10-01-2025T04:43:18 - [TEST_STEP][PASSED] - click(findTestObject("Прогноз по отраслям/Фильтр Сравнение с")): Object: 'Object Repository/Прогноз по отраслям/Фильтр Сравнение с' is clicked on

10-01-2025T04:43:19 - [MESSAGE][PASSED] - Object: 'Object Repository/Прогноз по отраслям/Фильтр Сравнение с' is clicked on

10-01-2025T04:43:19 - [TEST_STEP][PASSED] - click(findTestObject("Прогноз по отраслям/План")): Object: 'Object Repository/Прогноз по отраслям/План' is clicked on

10-01-2025T04:43:20 - [MESSAGE][PASSED] - Object: 'Object Repository/Прогноз по отраслям/План' is clicked on

10-01-2025T04:43:20 - [TEST_STEP][PASSED] - delay(40): Delayed 40 second(s)

10-01-2025T04:44:00 - [MESSAGE][PASSED] - Delayed 40 second(s)

10-01-2025T04:44:00 - [TEST_STEP][PASSED] - a8 = getText(findTestObject("Прогноз по отраслям/Виджеты дашборда")): Text of object 'Object Repository/Прогноз по отраслям/Виджеты дашборда' is: 'Год 
2023 год
Сравнение с 
План
Отклонения по ПАО Россети на 2023 год
-492.2 -492.2
7 165.1 7 165.1
689.3 689.3
33 271.7 33 271.7
986.4 986.4
593.8 593.8
764.0 764.0
670.4 670.4
-592.4 -592.4
308.8 308.8
-940.9 -940.9
19 604.1 19 604.1
⬤ Отклонение, млн. кВт.ч
Интер РАО (для ФСК)
Промышленные потребители
Транспорт
Нефтедобыча
Нефтепереработка
Нефтепроводы
Газопроводы
Сельское хозяйство и пищевая пр…
Непромышленные потребители
Государственные (муниципальные…
Население и приравненные групп…
Территориальные сетевые органи…
Выручка отклонения по ПАО Россети на 2023 год
794.9 794.9
12 195.0 12 195.0
972.7 972.7
61 803.9 61 803.9
4 222.3 4 222.3
-121.8 -121.8
666.2 666.2
873.2 873.2
5 809.6 5 809.6
1 342.6 1 342.6
-4 463.2 -4 463.2
18 375.5 18 375.5
⬤ Отклонение, млн. руб.
Интер РАО (для ФСК)
Промышленные потребители
Транспорт
Нефтедобыча
Нефтепереработка
Нефтепроводы
Газопроводы
Сельское хозяйство и пищевая пр…
Непромышленные потребители
Государственные (муниципальные…
Население и приравненные групп…
Территориальные сетевые органи…
Динамика электропотребления, млрд. кВт.ч. по ПАО Россети на 2023 год
10 10
190 190
36 36
14 14
9 9
14 14
4 4
17 17
80 80
19 19
82 82
588 588
10 10
197 197
37 37
48 48
10 10
15 15
4 4
18 18
80 80
19 19
82 82
608 608
План
Ожидаемое (прогноз по конца года)
Интер РАО (дляФСК)
Промышленныепотребители
Транспорт
Нефтедобыча
Нефтепереработка
Нефтепроводы
Газопроводы
Сельскоехозяйство ипищеваяпромышленность
Непромышленныепотребители
Государственные(муниципальные)организации ипрочиебюджетныепотребители
Население иприравненныегруппыпотребителей
Территориальныесетевыеорганизации
Выручка по ПАО Россети на 2023 год
5 5
319 319
81 81
16 16
16 16
20 20
2 2
56 56
215 215
67 67
218 218
239 239
6 6
331 331
82 82
77 77
20 20
20 20
3 3
57 57
220 220
68 68
214 214
258 258
План
Ожидаемое (прогноз по конца года)
Интер РАО (дляФСК)
Промышленныепотребители
Транспорт
Нефтедобыча
Нефтепереработка
Нефтепроводы
Газопроводы
Сельскоехозяйство ипищеваяпромышленность
Непромышленныепотребители
Государственные(муниципальные)организации ипрочиебюджетныепотребители
Население иприравненныегруппыпотребителей
Территориальныесетевыеорганизации
абс.
%
Прогноз на месяц 
Ноябрь
КПО/Отпуск из сети 
Отпуск из сети, млн. кВт.ч
Организация 
Все
Прогноз электропотребления и выручки за услуги по передаче в разрезе отраслей'

10-01-2025T04:44:00 - [MESSAGE][PASSED] - Text of object 'Object Repository/Прогноз по отраслям/Виджеты дашборда' is: 'Год 
2023 год
Сравнение с 
План
Отклонения по ПАО Россети на 2023 год
-492.2 -492.2
7 165.1 7 165.1
689.3 689.3
33 271.7 33 271.7
986.4 986.4
593.8 593.8
764.0 764.0
670.4 670.4
-592.4 -592.4
308.8 308.8
-940.9 -940.9
19 604.1 19 604.1
⬤ Отклонение, млн. кВт.ч
Интер РАО (для ФСК)
Промышленные потребители
Транспорт
Нефтедобыча
Нефтепереработка
Нефтепроводы
Газопроводы
Сельское хозяйство и пищевая пр…
Непромышленные потребители
Государственные (муниципальные…
Население и приравненные групп…
Территориальные сетевые органи…
Выручка отклонения по ПАО Россети на 2023 год
794.9 794.9
12 195.0 12 195.0
972.7 972.7
61 803.9 61 803.9
4 222.3 4 222.3
-121.8 -121.8
666.2 666.2
873.2 873.2
5 809.6 5 809.6
1 342.6 1 342.6
-4 463.2 -4 463.2
18 375.5 18 375.5
⬤ Отклонение, млн. руб.
Интер РАО (для ФСК)
Промышленные потребители
Транспорт
Нефтедобыча
Нефтепереработка
Нефтепроводы
Газопроводы
Сельское хозяйство и пищевая пр…
Непромышленные потребители
Государственные (муниципальные…
Население и приравненные групп…
Территориальные сетевые органи…
Динамика электропотребления, млрд. кВт.ч. по ПАО Россети на 2023 год
10 10
190 190
36 36
14 14
9 9
14 14
4 4
17 17
80 80
19 19
82 82
588 588
10 10
197 197
37 37
48 48
10 10
15 15
4 4
18 18
80 80
19 19
82 82
608 608
План
Ожидаемое (прогноз по конца года)
Интер РАО (дляФСК)
Промышленныепотребители
Транспорт
Нефтедобыча
Нефтепереработка
Нефтепроводы
Газопроводы
Сельскоехозяйство ипищеваяпромышленность
Непромышленныепотребители
Государственные(муниципальные)организации ипрочиебюджетныепотребители
Население иприравненныегруппыпотребителей
Территориальныесетевыеорганизации
Выручка по ПАО Россети на 2023 год
5 5
319 319
81 81
16 16
16 16
20 20
2 2
56 56
215 215
67 67
218 218
239 239
6 6
331 331
82 82
77 77
20 20
20 20
3 3
57 57
220 220
68 68
214 214
258 258
План
Ожидаемое (прогноз по конца года)
Интер РАО (дляФСК)
Промышленныепотребители
Транспорт
Нефтедобыча
Нефтепереработка
Нефтепроводы
Газопроводы
Сельскоехозяйство ипищеваяпромышленность
Непромышленныепотребители
Государственные(муниципальные)организации ипрочиебюджетныепотребители
Население иприравненныегруппыпотребителей
Территориальныесетевыеорганизации
абс.
%
Прогноз на месяц 
Ноябрь
КПО/Отпуск из сети 
Отпуск из сети, млн. кВт.ч
Организация 
Все
Прогноз электропотребления и выручки за услуги по передаче в разрезе отраслей'

10-01-2025T04:44:00 - [TEST_STEP][PASSED] - a8 = a8.replaceAll("[^0-9]", ""): null

10-01-2025T04:44:00 - [TEST_STEP][PASSED] - println("a8:" + a8): null

10-01-2025T04:44:00 - [TEST_STEP][PASSED] - click(findTestObject("Прогноз по отраслям/Фильтр Сравнение с")): Object: 'Object Repository/Прогноз по отраслям/Фильтр Сравнение с' is clicked on

10-01-2025T04:44:00 - [MESSAGE][PASSED] - Object: 'Object Repository/Прогноз по отраслям/Фильтр Сравнение с' is clicked on

10-01-2025T04:44:00 - [TEST_STEP][PASSED] - click(findTestObject("Прогноз по отраслям/План СУ")): Object: 'Object Repository/Прогноз по отраслям/План СУ' is clicked on

10-01-2025T04:44:01 - [MESSAGE][PASSED] - Object: 'Object Repository/Прогноз по отраслям/План СУ' is clicked on

10-01-2025T04:44:01 - [TEST_STEP][PASSED] - delay(40): Delayed 40 second(s)

10-01-2025T04:44:41 - [MESSAGE][PASSED] - Delayed 40 second(s)

10-01-2025T04:44:41 - [TEST_STEP][PASSED] - a9 = getText(findTestObject("Прогноз по отраслям/Виджеты дашборда")): Text of object 'Object Repository/Прогноз по отраслям/Виджеты дашборда' is: 'Год 
2023 год
Сравнение с 
План/СУ
Отклонения по ПАО Россети на 2023 год
243.5 243.5
11 013.5 11 013.5
674.8 674.8
32 765.3 32 765.3
1 049.4 1 049.4
271.8 271.8
495.2 495.2
588.7 588.7
-7 607.7 -7 607.7
31.9 31.9
-1 318.1 -1 318.1
10 906.5 10 906.5
⬤ Отклонение, млн. кВт.ч
Интер РАО (для ФСК)
Промышленные потребители
Транспорт
Нефтедобыча
Нефтепереработка
Нефтепроводы
Газопроводы
Сельское хозяйство и пищевая пр…
Непромышленные потребители
Государственные (муниципальные…
Население и приравненные групп…
Территориальные сетевые органи…
Выручка отклонения по ПАО Россети на 2023 год
⬤ Отклонение, млн. руб.
Интер РАО (для ФСК)
Промышленные потребители
Транспорт
Нефтедобыча
Нефтепереработка
Нефтепроводы
Газопроводы
Сельское хозяйство и пищевая пр…
Непромышленные потребители
Государственные (муниципальные…
Население и приравненные групп…
Территориальные сетевые органи…
Динамика электропотребления, млрд. кВт.ч. по ПАО Россети на 2023 год
10 10
186 186
36 36
15 15
9 9
14 14
4 4
17 17
88 88
19 19
83 83
597 597
10 10
197 197
37 37
48 48
10 10
15 15
4 4
18 18
80 80
19 19
82 82
608 608
СУ
Ожидаемое (прогноз по конца года)
Интер РАО (дляФСК)
Промышленныепотребители
Транспорт
Нефтедобыча
Нефтепереработка
Нефтепроводы
Газопроводы
Сельскоехозяйство ипищеваяпромышленность
Непромышленныепотребители
Государственные(муниципальные)организации ипрочиебюджетныепотребители
Население иприравненныегруппыпотребителей
Территориальныесетевыеорганизации
Выручка по ПАО Россети на 2023 год
6 6
331 331
82 82
77 77
20 20
20 20
3 3
57 57
220 220
68 68
214 214
258 258
Ожидаемое (прогноз по конца года)
Интер РАО (дляФСК)
Промышленныепотребители
Транспорт
Нефтедобыча
Нефтепереработка
Нефтепроводы
Газопроводы
Сельскоехозяйство ипищеваяпромышленность
Непромышленныепотребители
Государственные(муниципальные)организации ипрочиебюджетныепотребители
Население иприравненныегруппыпотребителей
Территориальныесетевыеорганизации
абс.
%
Прогноз на месяц 
Ноябрь
КПО/Отпуск из сети 
Отпуск из сети, млн. кВт.ч
Организация 
Все
Прогноз электропотребления и выручки за услуги по передаче в разрезе отраслей'

10-01-2025T04:44:42 - [MESSAGE][PASSED] - Text of object 'Object Repository/Прогноз по отраслям/Виджеты дашборда' is: 'Год 
2023 год
Сравнение с 
План/СУ
Отклонения по ПАО Россети на 2023 год
243.5 243.5
11 013.5 11 013.5
674.8 674.8
32 765.3 32 765.3
1 049.4 1 049.4
271.8 271.8
495.2 495.2
588.7 588.7
-7 607.7 -7 607.7
31.9 31.9
-1 318.1 -1 318.1
10 906.5 10 906.5
⬤ Отклонение, млн. кВт.ч
Интер РАО (для ФСК)
Промышленные потребители
Транспорт
Нефтедобыча
Нефтепереработка
Нефтепроводы
Газопроводы
Сельское хозяйство и пищевая пр…
Непромышленные потребители
Государственные (муниципальные…
Население и приравненные групп…
Территориальные сетевые органи…
Выручка отклонения по ПАО Россети на 2023 год
⬤ Отклонение, млн. руб.
Интер РАО (для ФСК)
Промышленные потребители
Транспорт
Нефтедобыча
Нефтепереработка
Нефтепроводы
Газопроводы
Сельское хозяйство и пищевая пр…
Непромышленные потребители
Государственные (муниципальные…
Население и приравненные групп…
Территориальные сетевые органи…
Динамика электропотребления, млрд. кВт.ч. по ПАО Россети на 2023 год
10 10
186 186
36 36
15 15
9 9
14 14
4 4
17 17
88 88
19 19
83 83
597 597
10 10
197 197
37 37
48 48
10 10
15 15
4 4
18 18
80 80
19 19
82 82
608 608
СУ
Ожидаемое (прогноз по конца года)
Интер РАО (дляФСК)
Промышленныепотребители
Транспорт
Нефтедобыча
Нефтепереработка
Нефтепроводы
Газопроводы
Сельскоехозяйство ипищеваяпромышленность
Непромышленныепотребители
Государственные(муниципальные)организации ипрочиебюджетныепотребители
Население иприравненныегруппыпотребителей
Территориальныесетевыеорганизации
Выручка по ПАО Россети на 2023 год
6 6
331 331
82 82
77 77
20 20
20 20
3 3
57 57
220 220
68 68
214 214
258 258
Ожидаемое (прогноз по конца года)
Интер РАО (дляФСК)
Промышленныепотребители
Транспорт
Нефтедобыча
Нефтепереработка
Нефтепроводы
Газопроводы
Сельскоехозяйство ипищеваяпромышленность
Непромышленныепотребители
Государственные(муниципальные)организации ипрочиебюджетныепотребители
Население иприравненныегруппыпотребителей
Территориальныесетевыеорганизации
абс.
%
Прогноз на месяц 
Ноябрь
КПО/Отпуск из сети 
Отпуск из сети, млн. кВт.ч
Организация 
Все
Прогноз электропотребления и выручки за услуги по передаче в разрезе отраслей'

10-01-2025T04:44:42 - [TEST_STEP][PASSED] - a9 = a9.replaceAll("[^0-9]", ""): null

10-01-2025T04:44:42 - [TEST_STEP][PASSED] - println("a9:" + a9): null

10-01-2025T04:44:42 - [TEST_STEP][PASSED] - click(findTestObject("Прогноз по отраслям/Фильтр Сравнение с")): Object: 'Object Repository/Прогноз по отраслям/Фильтр Сравнение с' is clicked on

10-01-2025T04:44:42 - [MESSAGE][PASSED] - Object: 'Object Repository/Прогноз по отраслям/Фильтр Сравнение с' is clicked on

10-01-2025T04:44:42 - [TEST_STEP][PASSED] - click(findTestObject("Прогноз по отраслям/Факт прошлого года")): Object: 'Object Repository/Прогноз по отраслям/Факт прошлого года' is clicked on

10-01-2025T04:44:43 - [MESSAGE][PASSED] - Object: 'Object Repository/Прогноз по отраслям/Факт прошлого года' is clicked on

10-01-2025T04:44:43 - [TEST_STEP][PASSED] - click(findTestObject("Прогноз по отраслям/Фильтр КПО-Отпуск")): Object: 'Object Repository/Прогноз по отраслям/Фильтр КПО-Отпуск' is clicked on

10-01-2025T04:44:45 - [MESSAGE][PASSED] - Object: 'Object Repository/Прогноз по отраслям/Фильтр КПО-Отпуск' is clicked on

10-01-2025T04:44:45 - [TEST_STEP][PASSED] - click(findTestObject("Прогноз по отраслям/КПО")): Object: 'Object Repository/Прогноз по отраслям/КПО' is clicked on

10-01-2025T04:44:46 - [MESSAGE][PASSED] - Object: 'Object Repository/Прогноз по отраслям/КПО' is clicked on

10-01-2025T04:44:46 - [TEST_STEP][PASSED] - delay(40): Delayed 40 second(s)

10-01-2025T04:45:26 - [MESSAGE][PASSED] - Delayed 40 second(s)

10-01-2025T04:45:26 - [TEST_STEP][PASSED] - a10 = getText(findTestObject("Прогноз по отраслям/Виджеты дашборда")): Text of object 'Object Repository/Прогноз по отраслям/Виджеты дашборда' is: 'Год 
2023 год
Сравнение с 
Факт прошлого года
Отклонения по ПАО Россети на 2023 год
0.0 0.0
646.5 646.5
341.1 341.1
-2 455.6 -2 455.6
245.6 245.6
-1 796.0 -1 796.0
676.2 676.2
452.4 452.4
1 386.2 1 386.2
527.5 527.5
-1 130.4 -1 130.4
-128.7 -128.7
⬤ Отклонение, млн. кВт.ч
Интер РАО (для ФСК)
Промышленные потребители
Транспорт
Нефтедобыча
Нефтепереработка
Нефтепроводы
Газопроводы
Сельское хозяйство и пищевая пр…
Непромышленные потребители
Государственные (муниципальные…
Население и приравненные групп…
Территориальные сетевые органи…
Выручка отклонения по ПАО Россети на 2023 год
421.3 421.3
45 574.9 45 574.9
9 547.5 9 547.5
4 889.3 4 889.3
2 337.4 2 337.4
-1 682.6 -1 682.6
2 919.4 2 919.4
7 110.2 7 110.2
19 840.8 19 840.8
7 289.5 7 289.5
23 664.8 23 664.8
31 028.3 31 028.3
⬤ Отклонение, млн. руб.
Интер РАО (для ФСК)
Промышленные потребители
Транспорт
Нефтедобыча
Нефтепереработка
Нефтепроводы
Газопроводы
Сельское хозяйство и пищевая пр…
Непромышленные потребители
Государственные (муниципальные…
Население и приравненные групп…
Территориальные сетевые органи…
Динамика электропотребления, млрд. кВт.ч. по ПАО Россети на 2023 год
0 0
120 120
38 38
41 41
8 8
10 10
0 0
19 19
77 77
25 25
122 122
61 61
0 0
120 120
39 39
39 39
8 8
8 8
1 1
20 20
78 78
26 26
121 121
60 60
Факт прошлого года
Ожидаемое (прогноз по конца года)
Интер РАО (дляФСК)
Промышленныепотребители
Транспорт
Нефтедобыча
Нефтепереработка
Нефтепроводы
Газопроводы
Сельскоехозяйство ипищеваяпромышленность
Непромышленныепотребители
Государственные(муниципальные)организации ипрочиебюджетныепотребители
Население иприравненныегруппыпотребителей
Территориальныесетевыеорганизации
Выручка по ПАО Россети на 2023 год
5 5
285 285
72 72
72 72
18 18
22 22
0 0
50 50
201 201
61 61
190 190
227 227
6 6
331 331
82 82
77 77
20 20
20 20
3 3
57 57
220 220
68 68
214 214
258 258
Факт прошлого года
Ожидаемое (прогноз по конца года)
Интер РАО (дляФСК)
Промышленныепотребители
Транспорт
Нефтедобыча
Нефтепереработка
Нефтепроводы
Газопроводы
Сельскоехозяйство ипищеваяпромышленность
Непромышленныепотребители
Государственные(муниципальные)организации ипрочиебюджетныепотребители
Население иприравненныегруппыпотребителей
Территориальныесетевыеорганизации
абс.
%
Прогноз на месяц 
Ноябрь
КПО/Отпуск из сети 
Котловой полезный отпуск, млн. кВт.ч
Организация 
Все
Прогноз электропотребления и выручки за услуги по передаче в разрезе отраслей'

10-01-2025T04:45:26 - [MESSAGE][PASSED] - Text of object 'Object Repository/Прогноз по отраслям/Виджеты дашборда' is: 'Год 
2023 год
Сравнение с 
Факт прошлого года
Отклонения по ПАО Россети на 2023 год
0.0 0.0
646.5 646.5
341.1 341.1
-2 455.6 -2 455.6
245.6 245.6
-1 796.0 -1 796.0
676.2 676.2
452.4 452.4
1 386.2 1 386.2
527.5 527.5
-1 130.4 -1 130.4
-128.7 -128.7
⬤ Отклонение, млн. кВт.ч
Интер РАО (для ФСК)
Промышленные потребители
Транспорт
Нефтедобыча
Нефтепереработка
Нефтепроводы
Газопроводы
Сельское хозяйство и пищевая пр…
Непромышленные потребители
Государственные (муниципальные…
Население и приравненные групп…
Территориальные сетевые органи…
Выручка отклонения по ПАО Россети на 2023 год
421.3 421.3
45 574.9 45 574.9
9 547.5 9 547.5
4 889.3 4 889.3
2 337.4 2 337.4
-1 682.6 -1 682.6
2 919.4 2 919.4
7 110.2 7 110.2
19 840.8 19 840.8
7 289.5 7 289.5
23 664.8 23 664.8
31 028.3 31 028.3
⬤ Отклонение, млн. руб.
Интер РАО (для ФСК)
Промышленные потребители
Транспорт
Нефтедобыча
Нефтепереработка
Нефтепроводы
Газопроводы
Сельское хозяйство и пищевая пр…
Непромышленные потребители
Государственные (муниципальные…
Население и приравненные групп…
Территориальные сетевые органи…
Динамика электропотребления, млрд. кВт.ч. по ПАО Россети на 2023 год
0 0
120 120
38 38
41 41
8 8
10 10
0 0
19 19
77 77
25 25
122 122
61 61
0 0
120 120
39 39
39 39
8 8
8 8
1 1
20 20
78 78
26 26
121 121
60 60
Факт прошлого года
Ожидаемое (прогноз по конца года)
Интер РАО (дляФСК)
Промышленныепотребители
Транспорт
Нефтедобыча
Нефтепереработка
Нефтепроводы
Газопроводы
Сельскоехозяйство ипищеваяпромышленность
Непромышленныепотребители
Государственные(муниципальные)организации ипрочиебюджетныепотребители
Население иприравненныегруппыпотребителей
Территориальныесетевыеорганизации
Выручка по ПАО Россети на 2023 год
5 5
285 285
72 72
72 72
18 18
22 22
0 0
50 50
201 201
61 61
190 190
227 227
6 6
331 331
82 82
77 77
20 20
20 20
3 3
57 57
220 220
68 68
214 214
258 258
Факт прошлого года
Ожидаемое (прогноз по конца года)
Интер РАО (дляФСК)
Промышленныепотребители
Транспорт
Нефтедобыча
Нефтепереработка
Нефтепроводы
Газопроводы
Сельскоехозяйство ипищеваяпромышленность
Непромышленныепотребители
Государственные(муниципальные)организации ипрочиебюджетныепотребители
Население иприравненныегруппыпотребителей
Территориальныесетевыеорганизации
абс.
%
Прогноз на месяц 
Ноябрь
КПО/Отпуск из сети 
Котловой полезный отпуск, млн. кВт.ч
Организация 
Все
Прогноз электропотребления и выручки за услуги по передаче в разрезе отраслей'

10-01-2025T04:45:26 - [TEST_STEP][PASSED] - a10 = a10.replaceAll("[^0-9]", ""): null

10-01-2025T04:45:26 - [TEST_STEP][PASSED] - println("a10:" + a10): null

10-01-2025T04:45:26 - [TEST_STEP][PASSED] - click(findTestObject("Прогноз по отраслям/Фильтр Сравнение с")): Object: 'Object Repository/Прогноз по отраслям/Фильтр Сравнение с' is clicked on

10-01-2025T04:45:27 - [MESSAGE][PASSED] - Object: 'Object Repository/Прогноз по отраслям/Фильтр Сравнение с' is clicked on

10-01-2025T04:45:27 - [TEST_STEP][PASSED] - click(findTestObject("Прогноз по отраслям/План")): Object: 'Object Repository/Прогноз по отраслям/План' is clicked on

10-01-2025T04:45:28 - [MESSAGE][PASSED] - Object: 'Object Repository/Прогноз по отраслям/План' is clicked on

10-01-2025T04:45:28 - [TEST_STEP][PASSED] - delay(40): Delayed 40 second(s)

10-01-2025T04:46:08 - [MESSAGE][PASSED] - Delayed 40 second(s)

10-01-2025T04:46:08 - [TEST_STEP][PASSED] - a11 = getText(findTestObject("Прогноз по отраслям/Виджеты дашборда")): Text of object 'Object Repository/Прогноз по отраслям/Виджеты дашборда' is: 'Год 
2023 год
Сравнение с 
План
Отклонения по ПАО Россети на 2023 год
0.0 0.0
1 471.7 1 471.7
1 186.5 1 186.5
32 445.2 32 445.2
1 268.3 1 268.3
349.4 349.4
84.3 84.3
239.8 239.8
2 969.4 2 969.4
589.2 589.2
-1 798.4 -1 798.4
5 359.3 5 359.3
⬤ Отклонение, млн. кВт.ч
Интер РАО (для ФСК)
Промышленные потребители
Транспорт
Нефтедобыча
Нефтепереработка
Нефтепроводы
Газопроводы
Сельское хозяйство и пищевая пр…
Непромышленные потребители
Государственные (муниципальные…
Население и приравненные групп…
Территориальные сетевые органи…
Выручка отклонения по ПАО Россети на 2023 год
794.9 794.9
12 195.0 12 195.0
972.7 972.7
61 803.9 61 803.9
4 222.3 4 222.3
-121.8 -121.8
666.2 666.2
873.2 873.2
5 809.6 5 809.6
1 342.6 1 342.6
-4 463.2 -4 463.2
18 375.5 18 375.5
⬤ Отклонение, млн. руб.
Интер РАО (для ФСК)
Промышленные потребители
Транспорт
Нефтедобыча
Нефтепереработка
Нефтепроводы
Газопроводы
Сельское хозяйство и пищевая пр…
Непромышленные потребители
Государственные (муниципальные…
Население и приравненные групп…
Территориальные сетевые органи…
Динамика электропотребления, млрд. кВт.ч. по ПАО Россети на 2023 год
0 0
119 119
37 37
7 7
7 7
8 8
1 1
19 19
75 75
25 25
123 123
55 55
0 0
120 120
39 39
39 39
8 8
8 8
1 1
20 20
78 78
26 26
121 121
60 60
План
Ожидаемое (прогноз по конца года)
Интер РАО (дляФСК)
Промышленныепотребители
Транспорт
Нефтедобыча
Нефтепереработка
Нефтепроводы
Газопроводы
Сельскоехозяйство ипищеваяпромышленность
Непромышленныепотребители
Государственные(муниципальные)организации ипрочиебюджетныепотребители
Население иприравненныегруппыпотребителей
Территориальныесетевыеорганизации
Выручка по ПАО Россети на 2023 год
5 5
319 319
81 81
16 16
16 16
20 20
2 2
56 56
215 215
67 67
218 218
239 239
6 6
331 331
82 82
77 77
20 20
20 20
3 3
57 57
220 220
68 68
214 214
258 258
План
Ожидаемое (прогноз по конца года)
Интер РАО (дляФСК)
Промышленныепотребители
Транспорт
Нефтедобыча
Нефтепереработка
Нефтепроводы
Газопроводы
Сельскоехозяйство ипищеваяпромышленность
Непромышленныепотребители
Государственные(муниципальные)организации ипрочиебюджетныепотребители
Население иприравненныегруппыпотребителей
Территориальныесетевыеорганизации
абс.
%
Прогноз на месяц 
Ноябрь
КПО/Отпуск из сети 
Котловой полезный отпуск, млн. кВт.ч
Организация 
Все
Прогноз электропотребления и выручки за услуги по передаче в разрезе отраслей'

10-01-2025T04:46:08 - [MESSAGE][PASSED] - Text of object 'Object Repository/Прогноз по отраслям/Виджеты дашборда' is: 'Год 
2023 год
Сравнение с 
План
Отклонения по ПАО Россети на 2023 год
0.0 0.0
1 471.7 1 471.7
1 186.5 1 186.5
32 445.2 32 445.2
1 268.3 1 268.3
349.4 349.4
84.3 84.3
239.8 239.8
2 969.4 2 969.4
589.2 589.2
-1 798.4 -1 798.4
5 359.3 5 359.3
⬤ Отклонение, млн. кВт.ч
Интер РАО (для ФСК)
Промышленные потребители
Транспорт
Нефтедобыча
Нефтепереработка
Нефтепроводы
Газопроводы
Сельское хозяйство и пищевая пр…
Непромышленные потребители
Государственные (муниципальные…
Население и приравненные групп…
Территориальные сетевые органи…
Выручка отклонения по ПАО Россети на 2023 год
794.9 794.9
12 195.0 12 195.0
972.7 972.7
61 803.9 61 803.9
4 222.3 4 222.3
-121.8 -121.8
666.2 666.2
873.2 873.2
5 809.6 5 809.6
1 342.6 1 342.6
-4 463.2 -4 463.2
18 375.5 18 375.5
⬤ Отклонение, млн. руб.
Интер РАО (для ФСК)
Промышленные потребители
Транспорт
Нефтедобыча
Нефтепереработка
Нефтепроводы
Газопроводы
Сельское хозяйство и пищевая пр…
Непромышленные потребители
Государственные (муниципальные…
Население и приравненные групп…
Территориальные сетевые органи…
Динамика электропотребления, млрд. кВт.ч. по ПАО Россети на 2023 год
0 0
119 119
37 37
7 7
7 7
8 8
1 1
19 19
75 75
25 25
123 123
55 55
0 0
120 120
39 39
39 39
8 8
8 8
1 1
20 20
78 78
26 26
121 121
60 60
План
Ожидаемое (прогноз по конца года)
Интер РАО (дляФСК)
Промышленныепотребители
Транспорт
Нефтедобыча
Нефтепереработка
Нефтепроводы
Газопроводы
Сельскоехозяйство ипищеваяпромышленность
Непромышленныепотребители
Государственные(муниципальные)организации ипрочиебюджетныепотребители
Население иприравненныегруппыпотребителей
Территориальныесетевыеорганизации
Выручка по ПАО Россети на 2023 год
5 5
319 319
81 81
16 16
16 16
20 20
2 2
56 56
215 215
67 67
218 218
239 239
6 6
331 331
82 82
77 77
20 20
20 20
3 3
57 57
220 220
68 68
214 214
258 258
План
Ожидаемое (прогноз по конца года)
Интер РАО (дляФСК)
Промышленныепотребители
Транспорт
Нефтедобыча
Нефтепереработка
Нефтепроводы
Газопроводы
Сельскоехозяйство ипищеваяпромышленность
Непромышленныепотребители
Государственные(муниципальные)организации ипрочиебюджетныепотребители
Население иприравненныегруппыпотребителей
Территориальныесетевыеорганизации
абс.
%
Прогноз на месяц 
Ноябрь
КПО/Отпуск из сети 
Котловой полезный отпуск, млн. кВт.ч
Организация 
Все
Прогноз электропотребления и выручки за услуги по передаче в разрезе отраслей'

10-01-2025T04:46:08 - [TEST_STEP][PASSED] - println("a11:" + a11): null

10-01-2025T04:46:08 - [TEST_STEP][PASSED] - a11 = a11.replaceAll("[^0-9]", ""): null

10-01-2025T04:46:08 - [TEST_STEP][PASSED] - println("a11:" + a11): null

10-01-2025T04:46:08 - [TEST_STEP][PASSED] - click(findTestObject("Прогноз по отраслям/Фильтр Сравнение с")): Object: 'Object Repository/Прогноз по отраслям/Фильтр Сравнение с' is clicked on

10-01-2025T04:46:08 - [MESSAGE][PASSED] - Object: 'Object Repository/Прогноз по отраслям/Фильтр Сравнение с' is clicked on

10-01-2025T04:46:08 - [TEST_STEP][PASSED] - click(findTestObject("Прогноз по отраслям/План СУ")): Object: 'Object Repository/Прогноз по отраслям/План СУ' is clicked on

10-01-2025T04:46:09 - [MESSAGE][PASSED] - Object: 'Object Repository/Прогноз по отраслям/План СУ' is clicked on

10-01-2025T04:46:09 - [TEST_STEP][PASSED] - delay(40): Delayed 40 second(s)

10-01-2025T04:46:49 - [MESSAGE][PASSED] - Delayed 40 second(s)

10-01-2025T04:46:49 - [TEST_STEP][PASSED] - a12 = getText(findTestObject("Прогноз по отраслям/Виджеты дашборда")): Text of object 'Object Repository/Прогноз по отраслям/Виджеты дашборда' is: 'Год 
2023 год
Сравнение с 
План/СУ
Отклонения по ПАО Россети на 2023 год
0.0 0.0
120 322.6 120 322.6
38 655.4 38 655.4
39 037.8 39 037.8
8 291.7 8 291.7
8 259.5 8 259.5
793.1 793.1
19 706.6 19 706.6
78 310.2 78 310.2
25 579.5 25 579.5
121 219.7 121 219.7
60 414.9 60 414.9
⬤ Отклонение, млн. кВт.ч
Интер РАО (для ФСК)
Промышленные потребители
Транспорт
Нефтедобыча
Нефтепереработка
Нефтепроводы
Газопроводы
Сельское хозяйство и пищевая пр…
Непромышленные потребители
Государственные (муниципальные…
Население и приравненные групп…
Территориальные сетевые органи…
Выручка отклонения по ПАО Россети на 2023 год
⬤ Отклонение, млн. руб.
Интер РАО (для ФСК)
Промышленные потребители
Транспорт
Нефтедобыча
Нефтепереработка
Нефтепроводы
Газопроводы
Сельское хозяйство и пищевая пр…
Непромышленные потребители
Государственные (муниципальные…
Население и приравненные групп…
Территориальные сетевые органи…
Динамика электропотребления, млрд. кВт.ч. по ПАО Россети на 2023 год
0 0
0 0
0 0
0 0
0 0
0 0
0 0
0 0
0 0
0 0
0 0
0 0
0 0
120 120
39 39
39 39
8 8
8 8
1 1
20 20
78 78
26 26
121 121
60 60
СУ
Ожидаемое (прогноз по конца года)
Интер РАО (дляФСК)
Промышленныепотребители
Транспорт
Нефтедобыча
Нефтепереработка
Нефтепроводы
Газопроводы
Сельскоехозяйство ипищеваяпромышленность
Непромышленныепотребители
Государственные(муниципальные)организации ипрочиебюджетныепотребители
Население иприравненныегруппыпотребителей
Территориальныесетевыеорганизации
Выручка по ПАО Россети на 2023 год
6 6
331 331
82 82
77 77
20 20
20 20
3 3
57 57
220 220
68 68
214 214
258 258
Ожидаемое (прогноз по конца года)
Интер РАО (дляФСК)
Промышленныепотребители
Транспорт
Нефтедобыча
Нефтепереработка
Нефтепроводы
Газопроводы
Сельскоехозяйство ипищеваяпромышленность
Непромышленныепотребители
Государственные(муниципальные)организации ипрочиебюджетныепотребители
Население иприравненныегруппыпотребителей
Территориальныесетевыеорганизации
абс.
%
Прогноз на месяц 
Ноябрь
КПО/Отпуск из сети 
Котловой полезный отпуск, млн. кВт.ч
Организация 
Все
Прогноз электропотребления и выручки за услуги по передаче в разрезе отраслей'

10-01-2025T04:46:50 - [MESSAGE][PASSED] - Text of object 'Object Repository/Прогноз по отраслям/Виджеты дашборда' is: 'Год 
2023 год
Сравнение с 
План/СУ
Отклонения по ПАО Россети на 2023 год
0.0 0.0
120 322.6 120 322.6
38 655.4 38 655.4
39 037.8 39 037.8
8 291.7 8 291.7
8 259.5 8 259.5
793.1 793.1
19 706.6 19 706.6
78 310.2 78 310.2
25 579.5 25 579.5
121 219.7 121 219.7
60 414.9 60 414.9
⬤ Отклонение, млн. кВт.ч
Интер РАО (для ФСК)
Промышленные потребители
Транспорт
Нефтедобыча
Нефтепереработка
Нефтепроводы
Газопроводы
Сельское хозяйство и пищевая пр…
Непромышленные потребители
Государственные (муниципальные…
Население и приравненные групп…
Территориальные сетевые органи…
Выручка отклонения по ПАО Россети на 2023 год
⬤ Отклонение, млн. руб.
Интер РАО (для ФСК)
Промышленные потребители
Транспорт
Нефтедобыча
Нефтепереработка
Нефтепроводы
Газопроводы
Сельское хозяйство и пищевая пр…
Непромышленные потребители
Государственные (муниципальные…
Население и приравненные групп…
Территориальные сетевые органи…
Динамика электропотребления, млрд. кВт.ч. по ПАО Россети на 2023 год
0 0
0 0
0 0
0 0
0 0
0 0
0 0
0 0
0 0
0 0
0 0
0 0
0 0
120 120
39 39
39 39
8 8
8 8
1 1
20 20
78 78
26 26
121 121
60 60
СУ
Ожидаемое (прогноз по конца года)
Интер РАО (дляФСК)
Промышленныепотребители
Транспорт
Нефтедобыча
Нефтепереработка
Нефтепроводы
Газопроводы
Сельскоехозяйство ипищеваяпромышленность
Непромышленныепотребители
Государственные(муниципальные)организации ипрочиебюджетныепотребители
Население иприравненныегруппыпотребителей
Территориальныесетевыеорганизации
Выручка по ПАО Россети на 2023 год
6 6
331 331
82 82
77 77
20 20
20 20
3 3
57 57
220 220
68 68
214 214
258 258
Ожидаемое (прогноз по конца года)
Интер РАО (дляФСК)
Промышленныепотребители
Транспорт
Нефтедобыча
Нефтепереработка
Нефтепроводы
Газопроводы
Сельскоехозяйство ипищеваяпромышленность
Непромышленныепотребители
Государственные(муниципальные)организации ипрочиебюджетныепотребители
Население иприравненныегруппыпотребителей
Территориальныесетевыеорганизации
абс.
%
Прогноз на месяц 
Ноябрь
КПО/Отпуск из сети 
Котловой полезный отпуск, млн. кВт.ч
Организация 
Все
Прогноз электропотребления и выручки за услуги по передаче в разрезе отраслей'

10-01-2025T04:46:50 - [TEST_STEP][PASSED] - a12 = a12.replaceAll("[^0-9]", ""): null

10-01-2025T04:46:50 - [TEST_STEP][PASSED] - println("a12:" + a12): null

10-01-2025T04:46:50 - [TEST_STEP][PASSED] - navigateToUrl(findTestData("PlanFact").getValue(10, 12)): Navigate to 'https://bi.rosseti.digital/viewer?dashboardGuid=d218b6eb1b7845df8f1994d6a65c072b&sheetGuid=3059d1e0f28043ee8c80901707e9c246&fit=true' successfully

10-01-2025T04:46:51 - [MESSAGE][PASSED] - Navigate to 'https://bi.rosseti.digital/viewer?dashboardGuid=d218b6eb1b7845df8f1994d6a65c072b&sheetGuid=3059d1e0f28043ee8c80901707e9c246&fit=true' successfully

10-01-2025T04:46:51 - [TEST_STEP][PASSED] - delay(50): Delayed 50 second(s)

10-01-2025T04:47:41 - [MESSAGE][PASSED] - Delayed 50 second(s)

10-01-2025T04:47:41 - [TEST_STEP][PASSED] - click(findTestObject("Прогноз по отраслям/Фильтр месяц Стресс")): Object: 'Object Repository/Прогноз по отраслям/Фильтр месяц Стресс' is clicked on

10-01-2025T04:47:41 - [MESSAGE][PASSED] - Object: 'Object Repository/Прогноз по отраслям/Фильтр месяц Стресс' is clicked on

10-01-2025T04:47:41 - [TEST_STEP][PASSED] - scrollToElement(findTestObject("Прогноз по отраслям/Ноябрь Стресс"), 30): Scroll to object 'Object Repository/Прогноз по отраслям/Ноябрь Стресс' successfully

10-01-2025T04:47:41 - [MESSAGE][PASSED] - Scroll to object 'Object Repository/Прогноз по отраслям/Ноябрь Стресс' successfully

10-01-2025T04:47:41 - [TEST_STEP][PASSED] - click(findTestObject("Прогноз по отраслям/Ноябрь Стресс")): Object: 'Object Repository/Прогноз по отраслям/Ноябрь Стресс' is clicked on

10-01-2025T04:47:43 - [MESSAGE][PASSED] - Object: 'Object Repository/Прогноз по отраслям/Ноябрь Стресс' is clicked on

10-01-2025T04:47:43 - [TEST_STEP][PASSED] - scrollToElement(findTestObject("Прогноз по отраслям/Заголовок дашборда Стресс"), 30): Scroll to object 'Object Repository/Прогноз по отраслям/Заголовок дашборда Стресс' successfully

10-01-2025T04:47:43 - [MESSAGE][PASSED] - Scroll to object 'Object Repository/Прогноз по отраслям/Заголовок дашборда Стресс' successfully

10-01-2025T04:47:43 - [TEST_STEP][PASSED] - click(findTestObject("Прогноз по отраслям/Фильтр Сравнение с Стресс")): Object: 'Object Repository/Прогноз по отраслям/Фильтр Сравнение с Стресс' is clicked on

10-01-2025T04:47:44 - [MESSAGE][PASSED] - Object: 'Object Repository/Прогноз по отраслям/Фильтр Сравнение с Стресс' is clicked on

10-01-2025T04:47:44 - [TEST_STEP][PASSED] - click(findTestObject("Прогноз по отраслям/Факт прошлого года Стресс")): Object: 'Object Repository/Прогноз по отраслям/Факт прошлого года Стресс' is clicked on

10-01-2025T04:47:45 - [MESSAGE][PASSED] - Object: 'Object Repository/Прогноз по отраслям/Факт прошлого года Стресс' is clicked on

10-01-2025T04:47:45 - [TEST_STEP][PASSED] - click(findTestObject("Прогноз по отраслям/Фильтр КПО-Отпуск Стресс")): Object: 'Object Repository/Прогноз по отраслям/Фильтр КПО-Отпуск Стресс' is clicked on

10-01-2025T04:47:46 - [MESSAGE][PASSED] - Object: 'Object Repository/Прогноз по отраслям/Фильтр КПО-Отпуск Стресс' is clicked on

10-01-2025T04:47:46 - [TEST_STEP][PASSED] - click(findTestObject("Прогноз по отраслям/Отпуск Стресс")): Object: 'Object Repository/Прогноз по отраслям/Отпуск Стресс' is clicked on

10-01-2025T04:47:47 - [MESSAGE][PASSED] - Object: 'Object Repository/Прогноз по отраслям/Отпуск Стресс' is clicked on

10-01-2025T04:47:47 - [TEST_STEP][PASSED] - delay(40): Delayed 40 second(s)

10-01-2025T04:48:27 - [MESSAGE][PASSED] - Delayed 40 second(s)

10-01-2025T04:48:27 - [TEST_STEP][PASSED] - b1 = getText(findTestObject("Прогноз по отраслям/Виджеты дашборда")): Text of object 'Object Repository/Прогноз по отраслям/Виджеты дашборда' is: 'Год 
2023 год
Сравнение с 
Факт прошлого года
Динамика электропотребления, млрд. кВт.ч., по ПАО Россети на 2023 год
12 12
186 186
36 36
50 50
10 10
19 19
0 0
17 17
85 85
19 19
82 82
604 604
10 10
197 197
37 37
48 48
10 10
15 15
4 4
18 18
80 80
19 19
82 82
608 608
Факт прошлого года
Ожидаемое (прогноз до конца года)
Интер РАО(для ФСК)
Промышленныепотребители
Транспорт
Нефтедобыча
Нефтеперераб…
Нефтепроводы
Газопроводы
Сельское хозя…
Непромышлен…
Государственн…
Население иприравненныегруппыпотребителей
Территориальн…
Выручка, млрд. руб, по ПАО Россети на 2023 год
5 5
285 285
72 72
72 72
18 18
22 22
0 0
50 50
201 201
61 61
190 190
227 227
6 6
331 331
82 82
77 77
20 20
20 20
3 3
57 57
220 220
68 68
214 214
258 258
Факт прошлого года
Ожидаемое (прогноз до конца года)
Интер РАО(для ФСК)
Промышленныепотребители
Транспорт
Нефтедобыча
Нефтеперераб…
Нефтепроводы
Газопроводы
Сельское хозя…
Непромышлен…
Государственн…
Население иприравненныегруппыпотребителей
Территориальн…
Отклонения по ПАО Россети на 2023 год
-18.5% -18.5%
5.9% 5.9%
3.6% 3.6%
-3.9% -3.9%
0.9% 0.9%
-20.7% -20.7%
3 313.2% 3 313.2%
3.8% 3.8%
-5.6% -5.6%
1.3% 1.3%
-0.9% -0.9%
0.7% 0.7%
⬤ Отклонение, %
Интер РАО (для ФСК)
Промышленные потребители
Транспорт
Нефтедобыча
Нефтепереработка
Нефтепроводы
Газопроводы
Сельское хозяйство и пищевая про…
Непромышленные потребители
Государственные (муниципальные)…
Население и приравненные группы…
Территориальные сетевые организ…
Выручка отклонения по ПАО Россети на 2023 год
7.7% 7.7%
16.0% 16.0%
13.2% 13.2%
6.7% 6.7%
13.3% 13.3%
-7.7% -7.7%
1 331.5% 1 331.5%
14.2% 14.2%
9.9% 9.9%
12.0% 12.0%
12.4% 12.4%
13.7% 13.7%
⬤ Отклонение, %
Интер РАО (для ФСК)
Промышленные потребители
Транспорт
Нефтедобыча
Нефтепереработка
Нефтепроводы
Газопроводы
Сельское хозяйство и пищевая про…
Непромышленные потребители
Государственные (муниципальные)…
Население и приравненные группы…
Территориальные сетевые организ…
абс.
%
Прогноз на месяц 
Ноябрь
КПО/Отпуск из сети 
Отпуск из сети, млн. кВт.ч
Организация 
Все
Прогноз электропотребления и выручки за услуги по передаче в разрезе отраслей'

10-01-2025T04:48:28 - [MESSAGE][PASSED] - Text of object 'Object Repository/Прогноз по отраслям/Виджеты дашборда' is: 'Год 
2023 год
Сравнение с 
Факт прошлого года
Динамика электропотребления, млрд. кВт.ч., по ПАО Россети на 2023 год
12 12
186 186
36 36
50 50
10 10
19 19
0 0
17 17
85 85
19 19
82 82
604 604
10 10
197 197
37 37
48 48
10 10
15 15
4 4
18 18
80 80
19 19
82 82
608 608
Факт прошлого года
Ожидаемое (прогноз до конца года)
Интер РАО(для ФСК)
Промышленныепотребители
Транспорт
Нефтедобыча
Нефтеперераб…
Нефтепроводы
Газопроводы
Сельское хозя…
Непромышлен…
Государственн…
Население иприравненныегруппыпотребителей
Территориальн…
Выручка, млрд. руб, по ПАО Россети на 2023 год
5 5
285 285
72 72
72 72
18 18
22 22
0 0
50 50
201 201
61 61
190 190
227 227
6 6
331 331
82 82
77 77
20 20
20 20
3 3
57 57
220 220
68 68
214 214
258 258
Факт прошлого года
Ожидаемое (прогноз до конца года)
Интер РАО(для ФСК)
Промышленныепотребители
Транспорт
Нефтедобыча
Нефтеперераб…
Нефтепроводы
Газопроводы
Сельское хозя…
Непромышлен…
Государственн…
Население иприравненныегруппыпотребителей
Территориальн…
Отклонения по ПАО Россети на 2023 год
-18.5% -18.5%
5.9% 5.9%
3.6% 3.6%
-3.9% -3.9%
0.9% 0.9%
-20.7% -20.7%
3 313.2% 3 313.2%
3.8% 3.8%
-5.6% -5.6%
1.3% 1.3%
-0.9% -0.9%
0.7% 0.7%
⬤ Отклонение, %
Интер РАО (для ФСК)
Промышленные потребители
Транспорт
Нефтедобыча
Нефтепереработка
Нефтепроводы
Газопроводы
Сельское хозяйство и пищевая про…
Непромышленные потребители
Государственные (муниципальные)…
Население и приравненные группы…
Территориальные сетевые организ…
Выручка отклонения по ПАО Россети на 2023 год
7.7% 7.7%
16.0% 16.0%
13.2% 13.2%
6.7% 6.7%
13.3% 13.3%
-7.7% -7.7%
1 331.5% 1 331.5%
14.2% 14.2%
9.9% 9.9%
12.0% 12.0%
12.4% 12.4%
13.7% 13.7%
⬤ Отклонение, %
Интер РАО (для ФСК)
Промышленные потребители
Транспорт
Нефтедобыча
Нефтепереработка
Нефтепроводы
Газопроводы
Сельское хозяйство и пищевая про…
Непромышленные потребители
Государственные (муниципальные)…
Население и приравненные группы…
Территориальные сетевые организ…
абс.
%
Прогноз на месяц 
Ноябрь
КПО/Отпуск из сети 
Отпуск из сети, млн. кВт.ч
Организация 
Все
Прогноз электропотребления и выручки за услуги по передаче в разрезе отраслей'

10-01-2025T04:48:28 - [TEST_STEP][PASSED] - b1 = b1.replaceAll("[^0-9]", ""): null

10-01-2025T04:48:28 - [TEST_STEP][PASSED] - println("b1:" + b1): null

10-01-2025T04:48:28 - [TEST_STEP][PASSED] - click(findTestObject("Прогноз по отраслям/Фильтр Сравнение с Стресс")): Object: 'Object Repository/Прогноз по отраслям/Фильтр Сравнение с Стресс' is clicked on

10-01-2025T04:48:28 - [MESSAGE][PASSED] - Object: 'Object Repository/Прогноз по отраслям/Фильтр Сравнение с Стресс' is clicked on

10-01-2025T04:48:28 - [TEST_STEP][PASSED] - click(findTestObject("Прогноз по отраслям/План Стресс")): Object: 'Object Repository/Прогноз по отраслям/План Стресс' is clicked on

10-01-2025T04:48:30 - [MESSAGE][PASSED] - Object: 'Object Repository/Прогноз по отраслям/План Стресс' is clicked on

10-01-2025T04:48:30 - [TEST_STEP][PASSED] - delay(40): Delayed 40 second(s)

10-01-2025T04:49:10 - [MESSAGE][PASSED] - Delayed 40 second(s)

10-01-2025T04:49:10 - [TEST_STEP][PASSED] - b2 = getText(findTestObject("Прогноз по отраслям/Виджеты дашборда")): Text of object 'Object Repository/Прогноз по отраслям/Виджеты дашборда' is: 'Год 
2023 год
Сравнение с 
План
Динамика электропотребления, млрд. кВт.ч., по ПАО Россети на 2023 год
10 10
190 190
36 36
14 14
9 9
14 14
4 4
17 17
80 80
19 19
82 82
588 588
10 10
197 197
37 37
48 48
10 10
15 15
4 4
18 18
80 80
19 19
82 82
608 608
План
Ожидаемое (прогноз до конца года)
Интер РАО(для ФСК)
Промышленныепотребители
Транспорт
Нефтедобыча
Нефтеперераб…
Нефтепроводы
Газопроводы
Сельское хозя…
Непромышлен…
Государственн…
Население иприравненныегруппыпотребителей
Территориальн…
Выручка, млрд. руб, по ПАО Россети на 2023 год
5 5
319 319
81 81
16 16
16 16
20 20
2 2
56 56
215 215
67 67
218 218
239 239
6 6
331 331
82 82
77 77
20 20
20 20
3 3
57 57
220 220
68 68
214 214
258 258
План
Ожидаемое (прогноз до конца года)
Интер РАО(для ФСК)
Промышленныепотребители
Транспорт
Нефтедобыча
Нефтеперераб…
Нефтепроводы
Газопроводы
Сельское хозя…
Непромышлен…
Государственн…
Население иприравненныегруппыпотребителей
Территориальн…
Отклонения по ПАО Россети на 2023 год
-4.7% -4.7%
3.8% 3.8%
1.9% 1.9%
230.3% 230.3%
10.9% 10.9%
4.2% 4.2%
21.7% 21.7%
3.9% 3.9%
-0.6% -0.6%
1.6% 1.6%
-1.0% -1.0%
3.3% 3.3%
⬤ Отклонение, %
Интер РАО (для ФСК)
Промышленные потребители
Транспорт
Нефтедобыча
Нефтепереработка
Нефтепроводы
Газопроводы
Сельское хозяйство и пищевая про…
Непромышленные потребители
Государственные (муниципальные)…
Население и приравненные группы…
Территориальные сетевые организ…
Выручка отклонения по ПАО Россети на 2023 год
15.6% 15.6%
3.8% 3.8%
1.2% 1.2%
398.2% 398.2%
26.9% 26.9%
-0.6% -0.6%
26.9% 26.9%
1.5% 1.5%
2.7% 2.7%
2.0% 2.0%
-2.0% -2.0%
7.9% 7.9%
⬤ Отклонение, %
Интер РАО (для ФСК)
Промышленные потребители
Транспорт
Нефтедобыча
Нефтепереработка
Нефтепроводы
Газопроводы
Сельское хозяйство и пищевая про…
Непромышленные потребители
Государственные (муниципальные)…
Население и приравненные группы…
Территориальные сетевые организ…
абс.
%
Прогноз на месяц 
Ноябрь
КПО/Отпуск из сети 
Отпуск из сети, млн. кВт.ч
Организация 
Все
Прогноз электропотребления и выручки за услуги по передаче в разрезе отраслей'

10-01-2025T04:49:11 - [MESSAGE][PASSED] - Text of object 'Object Repository/Прогноз по отраслям/Виджеты дашборда' is: 'Год 
2023 год
Сравнение с 
План
Динамика электропотребления, млрд. кВт.ч., по ПАО Россети на 2023 год
10 10
190 190
36 36
14 14
9 9
14 14
4 4
17 17
80 80
19 19
82 82
588 588
10 10
197 197
37 37
48 48
10 10
15 15
4 4
18 18
80 80
19 19
82 82
608 608
План
Ожидаемое (прогноз до конца года)
Интер РАО(для ФСК)
Промышленныепотребители
Транспорт
Нефтедобыча
Нефтеперераб…
Нефтепроводы
Газопроводы
Сельское хозя…
Непромышлен…
Государственн…
Население иприравненныегруппыпотребителей
Территориальн…
Выручка, млрд. руб, по ПАО Россети на 2023 год
5 5
319 319
81 81
16 16
16 16
20 20
2 2
56 56
215 215
67 67
218 218
239 239
6 6
331 331
82 82
77 77
20 20
20 20
3 3
57 57
220 220
68 68
214 214
258 258
План
Ожидаемое (прогноз до конца года)
Интер РАО(для ФСК)
Промышленныепотребители
Транспорт
Нефтедобыча
Нефтеперераб…
Нефтепроводы
Газопроводы
Сельское хозя…
Непромышлен…
Государственн…
Население иприравненныегруппыпотребителей
Территориальн…
Отклонения по ПАО Россети на 2023 год
-4.7% -4.7%
3.8% 3.8%
1.9% 1.9%
230.3% 230.3%
10.9% 10.9%
4.2% 4.2%
21.7% 21.7%
3.9% 3.9%
-0.6% -0.6%
1.6% 1.6%
-1.0% -1.0%
3.3% 3.3%
⬤ Отклонение, %
Интер РАО (для ФСК)
Промышленные потребители
Транспорт
Нефтедобыча
Нефтепереработка
Нефтепроводы
Газопроводы
Сельское хозяйство и пищевая про…
Непромышленные потребители
Государственные (муниципальные)…
Население и приравненные группы…
Территориальные сетевые организ…
Выручка отклонения по ПАО Россети на 2023 год
15.6% 15.6%
3.8% 3.8%
1.2% 1.2%
398.2% 398.2%
26.9% 26.9%
-0.6% -0.6%
26.9% 26.9%
1.5% 1.5%
2.7% 2.7%
2.0% 2.0%
-2.0% -2.0%
7.9% 7.9%
⬤ Отклонение, %
Интер РАО (для ФСК)
Промышленные потребители
Транспорт
Нефтедобыча
Нефтепереработка
Нефтепроводы
Газопроводы
Сельское хозяйство и пищевая про…
Непромышленные потребители
Государственные (муниципальные)…
Население и приравненные группы…
Территориальные сетевые организ…
абс.
%
Прогноз на месяц 
Ноябрь
КПО/Отпуск из сети 
Отпуск из сети, млн. кВт.ч
Организация 
Все
Прогноз электропотребления и выручки за услуги по передаче в разрезе отраслей'

10-01-2025T04:49:11 - [TEST_STEP][PASSED] - b2 = b2.replaceAll("[^0-9]", ""): null

10-01-2025T04:49:11 - [TEST_STEP][PASSED] - println("b2:" + b2): null

10-01-2025T04:49:11 - [TEST_STEP][PASSED] - click(findTestObject("Прогноз по отраслям/Фильтр Сравнение с Стресс")): Object: 'Object Repository/Прогноз по отраслям/Фильтр Сравнение с Стресс' is clicked on

10-01-2025T04:49:11 - [MESSAGE][PASSED] - Object: 'Object Repository/Прогноз по отраслям/Фильтр Сравнение с Стресс' is clicked on

10-01-2025T04:49:11 - [TEST_STEP][PASSED] - click(findTestObject("Прогноз по отраслям/План СУ Стресс")): Object: 'Object Repository/Прогноз по отраслям/План СУ Стресс' is clicked on

10-01-2025T04:49:12 - [MESSAGE][PASSED] - Object: 'Object Repository/Прогноз по отраслям/План СУ Стресс' is clicked on

10-01-2025T04:49:12 - [TEST_STEP][PASSED] - delay(40): Delayed 40 second(s)

10-01-2025T04:49:52 - [MESSAGE][PASSED] - Delayed 40 second(s)

10-01-2025T04:49:52 - [TEST_STEP][PASSED] - b3 = getText(findTestObject("Прогноз по отраслям/Виджеты дашборда")): Text of object 'Object Repository/Прогноз по отраслям/Виджеты дашборда' is: 'Год 
2023 год
Сравнение с 
План/СУ
Динамика электропотребления, млрд. кВт.ч., по ПАО Россети на 2023 год
10 10
186 186
36 36
15 15
9 9
14 14
4 4
17 17
88 88
19 19
83 83
597 597
10 10
197 197
37 37
48 48
10 10
15 15
4 4
18 18
80 80
19 19
82 82
608 608
СУ
Ожидаемое (прогноз до конца года)
Интер РАО(для ФСК)
Промышленныепотребители
Транспорт
Нефтедобыча
Нефтеперераб…
Нефтепроводы
Газопроводы
Сельское хозя…
Непромышлен…
Государственн…
Население иприравненныегруппыпотребителей
Территориальн…
Выручка, млрд. руб, по ПАО Россети на 2023 год
6 6
331 331
82 82
77 77
20 20
20 20
3 3
57 57
220 220
68 68
214 214
258 258
Ожидаемое (прогноз до конца года)
Интер РАО(для ФСК)
Промышленныепотребители
Транспорт
Нефтедобыча
Нефтеперераб…
Нефтепроводы
Газопроводы
Сельское хозя…
Непромышлен…
Государственн…
Население иприравненныегруппыпотребителей
Территориальн…
Отклонения по ПАО Россети на 2023 год
2.5% 2.5%
5.9% 5.9%
1.9% 1.9%
219.1% 219.1%
11.7% 11.7%
1.9% 1.9%
13.1% 13.1%
3.5% 3.5%
-8.7% -8.7%
0.2% 0.2%
-1.6% -1.6%
1.8% 1.8%
⬤ Отклонение, %
Интер РАО (для ФСК)
Промышленные потребители
Транспорт
Нефтедобыча
Нефтепереработка
Нефтепроводы
Газопроводы
Сельское хозяйство и пищевая про…
Непромышленные потребители
Государственные (муниципальные)…
Население и приравненные группы…
Территориальные сетевые организ…
Выручка отклонения по ПАО Россети на 2023 год
⬤ Отклонение, %
Интер РАО (для ФСК)
Промышленные потребители
Транспорт
Нефтедобыча
Нефтепереработка
Нефтепроводы
Газопроводы
Сельское хозяйство и пищевая про…
Непромышленные потребители
Государственные (муниципальные)…
Население и приравненные группы…
Территориальные сетевые организ…
абс.
%
Прогноз на месяц 
Ноябрь
КПО/Отпуск из сети 
Отпуск из сети, млн. кВт.ч
Организация 
Все
Прогноз электропотребления и выручки за услуги по передаче в разрезе отраслей'

10-01-2025T04:49:53 - [MESSAGE][PASSED] - Text of object 'Object Repository/Прогноз по отраслям/Виджеты дашборда' is: 'Год 
2023 год
Сравнение с 
План/СУ
Динамика электропотребления, млрд. кВт.ч., по ПАО Россети на 2023 год
10 10
186 186
36 36
15 15
9 9
14 14
4 4
17 17
88 88
19 19
83 83
597 597
10 10
197 197
37 37
48 48
10 10
15 15
4 4
18 18
80 80
19 19
82 82
608 608
СУ
Ожидаемое (прогноз до конца года)
Интер РАО(для ФСК)
Промышленныепотребители
Транспорт
Нефтедобыча
Нефтеперераб…
Нефтепроводы
Газопроводы
Сельское хозя…
Непромышлен…
Государственн…
Население иприравненныегруппыпотребителей
Территориальн…
Выручка, млрд. руб, по ПАО Россети на 2023 год
6 6
331 331
82 82
77 77
20 20
20 20
3 3
57 57
220 220
68 68
214 214
258 258
Ожидаемое (прогноз до конца года)
Интер РАО(для ФСК)
Промышленныепотребители
Транспорт
Нефтедобыча
Нефтеперераб…
Нефтепроводы
Газопроводы
Сельское хозя…
Непромышлен…
Государственн…
Население иприравненныегруппыпотребителей
Территориальн…
Отклонения по ПАО Россети на 2023 год
2.5% 2.5%
5.9% 5.9%
1.9% 1.9%
219.1% 219.1%
11.7% 11.7%
1.9% 1.9%
13.1% 13.1%
3.5% 3.5%
-8.7% -8.7%
0.2% 0.2%
-1.6% -1.6%
1.8% 1.8%
⬤ Отклонение, %
Интер РАО (для ФСК)
Промышленные потребители
Транспорт
Нефтедобыча
Нефтепереработка
Нефтепроводы
Газопроводы
Сельское хозяйство и пищевая про…
Непромышленные потребители
Государственные (муниципальные)…
Население и приравненные группы…
Территориальные сетевые организ…
Выручка отклонения по ПАО Россети на 2023 год
⬤ Отклонение, %
Интер РАО (для ФСК)
Промышленные потребители
Транспорт
Нефтедобыча
Нефтепереработка
Нефтепроводы
Газопроводы
Сельское хозяйство и пищевая про…
Непромышленные потребители
Государственные (муниципальные)…
Население и приравненные группы…
Территориальные сетевые организ…
абс.
%
Прогноз на месяц 
Ноябрь
КПО/Отпуск из сети 
Отпуск из сети, млн. кВт.ч
Организация 
Все
Прогноз электропотребления и выручки за услуги по передаче в разрезе отраслей'

10-01-2025T04:49:53 - [TEST_STEP][PASSED] - b3 = b3.replaceAll("[^0-9]", ""): null

10-01-2025T04:49:53 - [TEST_STEP][PASSED] - println("b3:" + b3): null

10-01-2025T04:49:53 - [TEST_STEP][PASSED] - click(findTestObject("Прогноз по отраслям/Фильтр Сравнение с Стресс")): Object: 'Object Repository/Прогноз по отраслям/Фильтр Сравнение с Стресс' is clicked on

10-01-2025T04:49:53 - [MESSAGE][PASSED] - Object: 'Object Repository/Прогноз по отраслям/Фильтр Сравнение с Стресс' is clicked on

10-01-2025T04:49:53 - [TEST_STEP][PASSED] - click(findTestObject("Прогноз по отраслям/Факт прошлого года Стресс")): Object: 'Object Repository/Прогноз по отраслям/Факт прошлого года Стресс' is clicked on

10-01-2025T04:49:55 - [MESSAGE][PASSED] - Object: 'Object Repository/Прогноз по отраслям/Факт прошлого года Стресс' is clicked on

10-01-2025T04:49:55 - [TEST_STEP][PASSED] - click(findTestObject("Прогноз по отраслям/Фильтр КПО-Отпуск Стресс")): Object: 'Object Repository/Прогноз по отраслям/Фильтр КПО-Отпуск Стресс' is clicked on

10-01-2025T04:49:56 - [MESSAGE][PASSED] - Object: 'Object Repository/Прогноз по отраслям/Фильтр КПО-Отпуск Стресс' is clicked on

10-01-2025T04:49:56 - [TEST_STEP][PASSED] - click(findTestObject("Прогноз по отраслям/КПО Стресс")): Object: 'Object Repository/Прогноз по отраслям/КПО Стресс' is clicked on

10-01-2025T04:49:57 - [MESSAGE][PASSED] - Object: 'Object Repository/Прогноз по отраслям/КПО Стресс' is clicked on

10-01-2025T04:49:57 - [TEST_STEP][PASSED] - delay(40): Delayed 40 second(s)

10-01-2025T04:50:37 - [MESSAGE][PASSED] - Delayed 40 second(s)

10-01-2025T04:50:37 - [TEST_STEP][PASSED] - b4 = getText(findTestObject("Прогноз по отраслям/Виджеты дашборда")): Text of object 'Object Repository/Прогноз по отраслям/Виджеты дашборда' is: 'Год 
2023 год
Сравнение с 
Факт прошлого года
Динамика электропотребления, млрд. кВт.ч., по ПАО Россети на 2023 год
0 0
120 120
38 38
41 41
8 8
10 10
0 0
19 19
77 77
25 25
122 122
61 61
0 0
120 120
39 39
39 39
8 8
8 8
1 1
20 20
78 78
26 26
121 121
60 60
Факт прошлого года
Ожидаемое (прогноз до конца года)
Интер РАО(для ФСК)
Промышленныепотребители
Транспорт
Нефтедобыча
Нефтеперераб…
Нефтепроводы
Газопроводы
Сельское хозя…
Непромышлен…
Государственн…
Население иприравненныегруппыпотребителей
Территориальн…
Выручка, млрд. руб, по ПАО Россети на 2023 год
5 5
285 285
72 72
72 72
18 18
22 22
0 0
50 50
201 201
61 61
190 190
227 227
6 6
331 331
82 82
77 77
20 20
20 20
3 3
57 57
220 220
68 68
214 214
258 258
Факт прошлого года
Ожидаемое (прогноз до конца года)
Интер РАО(для ФСК)
Промышленныепотребители
Транспорт
Нефтедобыча
Нефтеперераб…
Нефтепроводы
Газопроводы
Сельское хозя…
Непромышлен…
Государственн…
Население иприравненныегруппыпотребителей
Территориальн…
Отклонения по ПАО Россети на 2023 год
0.5% 0.5%
0.9% 0.9%
-5.9% -5.9%
3.1% 3.1%
-17.9% -17.9%
578.4% 578.4%
2.3% 2.3%
1.8% 1.8%
2.1% 2.1%
-0.9% -0.9%
-0.2% -0.2%
⬤ Отклонение, %
Интер РАО (для ФСК)
Промышленные потребители
Транспорт
Нефтедобыча
Нефтепереработка
Нефтепроводы
Газопроводы
Сельское хозяйство и пищевая про…
Непромышленные потребители
Государственные (муниципальные)…
Население и приравненные группы…
Территориальные сетевые организ…
Выручка отклонения по ПАО Россети на 2023 год
7.7% 7.7%
16.0% 16.0%
13.2% 13.2%
6.7% 6.7%
13.3% 13.3%
-7.7% -7.7%
1 331.5% 1 331.5%
14.2% 14.2%
9.9% 9.9%
12.0% 12.0%
12.4% 12.4%
13.7% 13.7%
⬤ Отклонение, %
Интер РАО (для ФСК)
Промышленные потребители
Транспорт
Нефтедобыча
Нефтепереработка
Нефтепроводы
Газопроводы
Сельское хозяйство и пищевая про…
Непромышленные потребители
Государственные (муниципальные)…
Население и приравненные группы…
Территориальные сетевые организ…
абс.
%
Прогноз на месяц 
Ноябрь
КПО/Отпуск из сети 
Котловой полезный отпуск, млн. кВт.ч
Организация 
Все
Прогноз электропотребления и выручки за услуги по передаче в разрезе отраслей'

10-01-2025T04:50:38 - [MESSAGE][PASSED] - Text of object 'Object Repository/Прогноз по отраслям/Виджеты дашборда' is: 'Год 
2023 год
Сравнение с 
Факт прошлого года
Динамика электропотребления, млрд. кВт.ч., по ПАО Россети на 2023 год
0 0
120 120
38 38
41 41
8 8
10 10
0 0
19 19
77 77
25 25
122 122
61 61
0 0
120 120
39 39
39 39
8 8
8 8
1 1
20 20
78 78
26 26
121 121
60 60
Факт прошлого года
Ожидаемое (прогноз до конца года)
Интер РАО(для ФСК)
Промышленныепотребители
Транспорт
Нефтедобыча
Нефтеперераб…
Нефтепроводы
Газопроводы
Сельское хозя…
Непромышлен…
Государственн…
Население иприравненныегруппыпотребителей
Территориальн…
Выручка, млрд. руб, по ПАО Россети на 2023 год
5 5
285 285
72 72
72 72
18 18
22 22
0 0
50 50
201 201
61 61
190 190
227 227
6 6
331 331
82 82
77 77
20 20
20 20
3 3
57 57
220 220
68 68
214 214
258 258
Факт прошлого года
Ожидаемое (прогноз до конца года)
Интер РАО(для ФСК)
Промышленныепотребители
Транспорт
Нефтедобыча
Нефтеперераб…
Нефтепроводы
Газопроводы
Сельское хозя…
Непромышлен…
Государственн…
Население иприравненныегруппыпотребителей
Территориальн…
Отклонения по ПАО Россети на 2023 год
0.5% 0.5%
0.9% 0.9%
-5.9% -5.9%
3.1% 3.1%
-17.9% -17.9%
578.4% 578.4%
2.3% 2.3%
1.8% 1.8%
2.1% 2.1%
-0.9% -0.9%
-0.2% -0.2%
⬤ Отклонение, %
Интер РАО (для ФСК)
Промышленные потребители
Транспорт
Нефтедобыча
Нефтепереработка
Нефтепроводы
Газопроводы
Сельское хозяйство и пищевая про…
Непромышленные потребители
Государственные (муниципальные)…
Население и приравненные группы…
Территориальные сетевые организ…
Выручка отклонения по ПАО Россети на 2023 год
7.7% 7.7%
16.0% 16.0%
13.2% 13.2%
6.7% 6.7%
13.3% 13.3%
-7.7% -7.7%
1 331.5% 1 331.5%
14.2% 14.2%
9.9% 9.9%
12.0% 12.0%
12.4% 12.4%
13.7% 13.7%
⬤ Отклонение, %
Интер РАО (для ФСК)
Промышленные потребители
Транспорт
Нефтедобыча
Нефтепереработка
Нефтепроводы
Газопроводы
Сельское хозяйство и пищевая про…
Непромышленные потребители
Государственные (муниципальные)…
Население и приравненные группы…
Территориальные сетевые организ…
абс.
%
Прогноз на месяц 
Ноябрь
КПО/Отпуск из сети 
Котловой полезный отпуск, млн. кВт.ч
Организация 
Все
Прогноз электропотребления и выручки за услуги по передаче в разрезе отраслей'

10-01-2025T04:50:38 - [TEST_STEP][PASSED] - b4 = b4.replaceAll("[^0-9]", ""): null

10-01-2025T04:50:38 - [TEST_STEP][PASSED] - println("b4:" + b4): null

10-01-2025T04:50:38 - [TEST_STEP][PASSED] - click(findTestObject("Прогноз по отраслям/Фильтр Сравнение с Стресс")): Object: 'Object Repository/Прогноз по отраслям/Фильтр Сравнение с Стресс' is clicked on

10-01-2025T04:50:38 - [MESSAGE][PASSED] - Object: 'Object Repository/Прогноз по отраслям/Фильтр Сравнение с Стресс' is clicked on

10-01-2025T04:50:38 - [TEST_STEP][PASSED] - click(findTestObject("Прогноз по отраслям/План Стресс")): Object: 'Object Repository/Прогноз по отраслям/План Стресс' is clicked on

10-01-2025T04:50:40 - [MESSAGE][PASSED] - Object: 'Object Repository/Прогноз по отраслям/План Стресс' is clicked on

10-01-2025T04:50:40 - [TEST_STEP][PASSED] - delay(40): Delayed 40 second(s)

10-01-2025T04:51:20 - [MESSAGE][PASSED] - Delayed 40 second(s)

10-01-2025T04:51:20 - [TEST_STEP][PASSED] - b5 = getText(findTestObject("Прогноз по отраслям/Виджеты дашборда")): Text of object 'Object Repository/Прогноз по отраслям/Виджеты дашборда' is: 'Год 
2023 год
Сравнение с 
План
Динамика электропотребления, млрд. кВт.ч., по ПАО Россети на 2023 год
0 0
119 119
37 37
7 7
7 7
8 8
1 1
19 19
75 75
25 25
123 123
55 55
0 0
120 120
39 39
39 39
8 8
8 8
1 1
20 20
78 78
26 26
121 121
60 60
План
Ожидаемое (прогноз до конца года)
Интер РАО(для ФСК)
Промышленныепотребители
Транспорт
Нефтедобыча
Нефтеперераб…
Нефтепроводы
Газопроводы
Сельское хозя…
Непромышлен…
Государственн…
Население иприравненныегруппыпотребителей
Территориальн…
Выручка, млрд. руб, по ПАО Россети на 2023 год
5 5
319 319
81 81
16 16
16 16
20 20
2 2
56 56
215 215
67 67
218 218
239 239
6 6
331 331
82 82
77 77
20 20
20 20
3 3
57 57
220 220
68 68
214 214
258 258
План
Ожидаемое (прогноз до конца года)
Интер РАО(для ФСК)
Промышленныепотребители
Транспорт
Нефтедобыча
Нефтеперераб…
Нефтепроводы
Газопроводы
Сельское хозя…
Непромышлен…
Государственн…
Население иприравненныегруппыпотребителей
Территориальн…
Отклонения по ПАО Россети на 2023 год
1.2% 1.2%
3.2% 3.2%
492.1% 492.1%
18.1% 18.1%
4.4% 4.4%
11.9% 11.9%
1.2% 1.2%
4.1% 4.1%
2.4% 2.4%
-1.4% -1.4%
9.7% 9.7%
⬤ Отклонение, %
Интер РАО (для ФСК)
Промышленные потребители
Транспорт
Нефтедобыча
Нефтепереработка
Нефтепроводы
Газопроводы
Сельское хозяйство и пищевая про…
Непромышленные потребители
Государственные (муниципальные)…
Население и приравненные группы…
Территориальные сетевые организ…
Выручка отклонения по ПАО Россети на 2023 год
15.6% 15.6%
3.8% 3.8%
1.2% 1.2%
398.2% 398.2%
26.9% 26.9%
-0.6% -0.6%
26.9% 26.9%
1.5% 1.5%
2.7% 2.7%
2.0% 2.0%
-2.0% -2.0%
7.9% 7.9%
⬤ Отклонение, %
Интер РАО (для ФСК)
Промышленные потребители
Транспорт
Нефтедобыча
Нефтепереработка
Нефтепроводы
Газопроводы
Сельское хозяйство и пищевая про…
Непромышленные потребители
Государственные (муниципальные)…
Население и приравненные группы…
Территориальные сетевые организ…
абс.
%
Прогноз на месяц 
Ноябрь
КПО/Отпуск из сети 
Котловой полезный отпуск, млн. кВт.ч
Организация 
Все
Прогноз электропотребления и выручки за услуги по передаче в разрезе отраслей'

10-01-2025T04:51:20 - [MESSAGE][PASSED] - Text of object 'Object Repository/Прогноз по отраслям/Виджеты дашборда' is: 'Год 
2023 год
Сравнение с 
План
Динамика электропотребления, млрд. кВт.ч., по ПАО Россети на 2023 год
0 0
119 119
37 37
7 7
7 7
8 8
1 1
19 19
75 75
25 25
123 123
55 55
0 0
120 120
39 39
39 39
8 8
8 8
1 1
20 20
78 78
26 26
121 121
60 60
План
Ожидаемое (прогноз до конца года)
Интер РАО(для ФСК)
Промышленныепотребители
Транспорт
Нефтедобыча
Нефтеперераб…
Нефтепроводы
Газопроводы
Сельское хозя…
Непромышлен…
Государственн…
Население иприравненныегруппыпотребителей
Территориальн…
Выручка, млрд. руб, по ПАО Россети на 2023 год
5 5
319 319
81 81
16 16
16 16
20 20
2 2
56 56
215 215
67 67
218 218
239 239
6 6
331 331
82 82
77 77
20 20
20 20
3 3
57 57
220 220
68 68
214 214
258 258
План
Ожидаемое (прогноз до конца года)
Интер РАО(для ФСК)
Промышленныепотребители
Транспорт
Нефтедобыча
Нефтеперераб…
Нефтепроводы
Газопроводы
Сельское хозя…
Непромышлен…
Государственн…
Население иприравненныегруппыпотребителей
Территориальн…
Отклонения по ПАО Россети на 2023 год
1.2% 1.2%
3.2% 3.2%
492.1% 492.1%
18.1% 18.1%
4.4% 4.4%
11.9% 11.9%
1.2% 1.2%
4.1% 4.1%
2.4% 2.4%
-1.4% -1.4%
9.7% 9.7%
⬤ Отклонение, %
Интер РАО (для ФСК)
Промышленные потребители
Транспорт
Нефтедобыча
Нефтепереработка
Нефтепроводы
Газопроводы
Сельское хозяйство и пищевая про…
Непромышленные потребители
Государственные (муниципальные)…
Население и приравненные группы…
Территориальные сетевые организ…
Выручка отклонения по ПАО Россети на 2023 год
15.6% 15.6%
3.8% 3.8%
1.2% 1.2%
398.2% 398.2%
26.9% 26.9%
-0.6% -0.6%
26.9% 26.9%
1.5% 1.5%
2.7% 2.7%
2.0% 2.0%
-2.0% -2.0%
7.9% 7.9%
⬤ Отклонение, %
Интер РАО (для ФСК)
Промышленные потребители
Транспорт
Нефтедобыча
Нефтепереработка
Нефтепроводы
Газопроводы
Сельское хозяйство и пищевая про…
Непромышленные потребители
Государственные (муниципальные)…
Население и приравненные группы…
Территориальные сетевые организ…
абс.
%
Прогноз на месяц 
Ноябрь
КПО/Отпуск из сети 
Котловой полезный отпуск, млн. кВт.ч
Организация 
Все
Прогноз электропотребления и выручки за услуги по передаче в разрезе отраслей'

10-01-2025T04:51:20 - [TEST_STEP][PASSED] - println("b5:" + b5): null

10-01-2025T04:51:20 - [TEST_STEP][PASSED] - b5 = b5.replaceAll("[^0-9]", ""): null

10-01-2025T04:51:20 - [TEST_STEP][PASSED] - println("b5:" + b5): null

10-01-2025T04:51:20 - [TEST_STEP][PASSED] - click(findTestObject("Прогноз по отраслям/Фильтр Сравнение с Стресс")): Object: 'Object Repository/Прогноз по отраслям/Фильтр Сравнение с Стресс' is clicked on

10-01-2025T04:51:21 - [MESSAGE][PASSED] - Object: 'Object Repository/Прогноз по отраслям/Фильтр Сравнение с Стресс' is clicked on

10-01-2025T04:51:21 - [TEST_STEP][PASSED] - click(findTestObject("Прогноз по отраслям/План СУ Стресс")): Object: 'Object Repository/Прогноз по отраслям/План СУ Стресс' is clicked on

10-01-2025T04:51:22 - [MESSAGE][PASSED] - Object: 'Object Repository/Прогноз по отраслям/План СУ Стресс' is clicked on

10-01-2025T04:51:22 - [TEST_STEP][PASSED] - delay(40): Delayed 40 second(s)

10-01-2025T04:52:02 - [MESSAGE][PASSED] - Delayed 40 second(s)

10-01-2025T04:52:02 - [TEST_STEP][PASSED] - b6 = getText(findTestObject("Прогноз по отраслям/Виджеты дашборда")): Text of object 'Object Repository/Прогноз по отраслям/Виджеты дашборда' is: 'Год 
2023 год
Сравнение с 
План/СУ
Динамика электропотребления, млрд. кВт.ч., по ПАО Россети на 2023 год
0 0
0 0
0 0
0 0
0 0
0 0
0 0
0 0
0 0
0 0
0 0
0 0
0 0
120 120
39 39
39 39
8 8
8 8
1 1
20 20
78 78
26 26
121 121
60 60
СУ
Ожидаемое (прогноз до конца года)
Интер РАО(для ФСК)
Промышленныепотребители
Транспорт
Нефтедобыча
Нефтеперераб…
Нефтепроводы
Газопроводы
Сельское хозя…
Непромышлен…
Государственн…
Население иприравненныегруппыпотребителей
Территориальн…
Выручка, млрд. руб, по ПАО Россети на 2023 год
6 6
331 331
82 82
77 77
20 20
20 20
3 3
57 57
220 220
68 68
214 214
258 258
Ожидаемое (прогноз до конца года)
Интер РАО(для ФСК)
Промышленныепотребители
Транспорт
Нефтедобыча
Нефтеперераб…
Нефтепроводы
Газопроводы
Сельское хозя…
Непромышлен…
Государственн…
Население иприравненныегруппыпотребителей
Территориальн…
Отклонения по ПАО Россети на 2023 год
⬤ Отклонение, %
Интер РАО (для ФСК)
Промышленные потребители
Транспорт
Нефтедобыча
Нефтепереработка
Нефтепроводы
Газопроводы
Сельское хозяйство и пищевая про…
Непромышленные потребители
Государственные (муниципальные)…
Население и приравненные группы…
Территориальные сетевые организ…
Выручка отклонения по ПАО Россети на 2023 год
⬤ Отклонение, %
Интер РАО (для ФСК)
Промышленные потребители
Транспорт
Нефтедобыча
Нефтепереработка
Нефтепроводы
Газопроводы
Сельское хозяйство и пищевая про…
Непромышленные потребители
Государственные (муниципальные)…
Население и приравненные группы…
Территориальные сетевые организ…
абс.
%
Прогноз на месяц 
Ноябрь
КПО/Отпуск из сети 
Котловой полезный отпуск, млн. кВт.ч
Организация 
Все
Прогноз электропотребления и выручки за услуги по передаче в разрезе отраслей'

10-01-2025T04:52:03 - [MESSAGE][PASSED] - Text of object 'Object Repository/Прогноз по отраслям/Виджеты дашборда' is: 'Год 
2023 год
Сравнение с 
План/СУ
Динамика электропотребления, млрд. кВт.ч., по ПАО Россети на 2023 год
0 0
0 0
0 0
0 0
0 0
0 0
0 0
0 0
0 0
0 0
0 0
0 0
0 0
120 120
39 39
39 39
8 8
8 8
1 1
20 20
78 78
26 26
121 121
60 60
СУ
Ожидаемое (прогноз до конца года)
Интер РАО(для ФСК)
Промышленныепотребители
Транспорт
Нефтедобыча
Нефтеперераб…
Нефтепроводы
Газопроводы
Сельское хозя…
Непромышлен…
Государственн…
Население иприравненныегруппыпотребителей
Территориальн…
Выручка, млрд. руб, по ПАО Россети на 2023 год
6 6
331 331
82 82
77 77
20 20
20 20
3 3
57 57
220 220
68 68
214 214
258 258
Ожидаемое (прогноз до конца года)
Интер РАО(для ФСК)
Промышленныепотребители
Транспорт
Нефтедобыча
Нефтеперераб…
Нефтепроводы
Газопроводы
Сельское хозя…
Непромышлен…
Государственн…
Население иприравненныегруппыпотребителей
Территориальн…
Отклонения по ПАО Россети на 2023 год
⬤ Отклонение, %
Интер РАО (для ФСК)
Промышленные потребители
Транспорт
Нефтедобыча
Нефтепереработка
Нефтепроводы
Газопроводы
Сельское хозяйство и пищевая про…
Непромышленные потребители
Государственные (муниципальные)…
Население и приравненные группы…
Территориальные сетевые организ…
Выручка отклонения по ПАО Россети на 2023 год
⬤ Отклонение, %
Интер РАО (для ФСК)
Промышленные потребители
Транспорт
Нефтедобыча
Нефтепереработка
Нефтепроводы
Газопроводы
Сельское хозяйство и пищевая про…
Непромышленные потребители
Государственные (муниципальные)…
Население и приравненные группы…
Территориальные сетевые организ…
абс.
%
Прогноз на месяц 
Ноябрь
КПО/Отпуск из сети 
Котловой полезный отпуск, млн. кВт.ч
Организация 
Все
Прогноз электропотребления и выручки за услуги по передаче в разрезе отраслей'

10-01-2025T04:52:03 - [TEST_STEP][PASSED] - b6 = b6.replaceAll("[^0-9]", ""): null

10-01-2025T04:52:03 - [TEST_STEP][PASSED] - println("b6:" + b6): null

10-01-2025T04:52:03 - [TEST_STEP][PASSED] - click(findTestObject("Прогноз по отраслям/Переключить отображение с процентов на абс Стресс-сценарий")): Object: 'Object Repository/Прогноз по отраслям/Переключить отображение с процентов на абс Стресс-сценарий' is clicked on

10-01-2025T04:52:03 - [MESSAGE][PASSED] - Object: 'Object Repository/Прогноз по отраслям/Переключить отображение с процентов на абс Стресс-сценарий' is clicked on

10-01-2025T04:52:03 - [TEST_STEP][PASSED] - click(findTestObject("Прогноз по отраслям/Фильтр Сравнение с Стресс")): Object: 'Object Repository/Прогноз по отраслям/Фильтр Сравнение с Стресс' is clicked on

10-01-2025T04:52:03 - [MESSAGE][PASSED] - Object: 'Object Repository/Прогноз по отраслям/Фильтр Сравнение с Стресс' is clicked on

10-01-2025T04:52:03 - [TEST_STEP][PASSED] - click(findTestObject("Прогноз по отраслям/Факт прошлого года Стресс")): Object: 'Object Repository/Прогноз по отраслям/Факт прошлого года Стресс' is clicked on

10-01-2025T04:52:05 - [MESSAGE][PASSED] - Object: 'Object Repository/Прогноз по отраслям/Факт прошлого года Стресс' is clicked on

10-01-2025T04:52:05 - [TEST_STEP][PASSED] - click(findTestObject("Прогноз по отраслям/Фильтр КПО-Отпуск Стресс")): Object: 'Object Repository/Прогноз по отраслям/Фильтр КПО-Отпуск Стресс' is clicked on

10-01-2025T04:52:06 - [MESSAGE][PASSED] - Object: 'Object Repository/Прогноз по отраслям/Фильтр КПО-Отпуск Стресс' is clicked on

10-01-2025T04:52:06 - [TEST_STEP][PASSED] - click(findTestObject("Прогноз по отраслям/Отпуск Стресс")): Object: 'Object Repository/Прогноз по отраслям/Отпуск Стресс' is clicked on

10-01-2025T04:52:07 - [MESSAGE][PASSED] - Object: 'Object Repository/Прогноз по отраслям/Отпуск Стресс' is clicked on

10-01-2025T04:52:07 - [TEST_STEP][PASSED] - delay(40): Delayed 40 second(s)

10-01-2025T04:52:47 - [MESSAGE][PASSED] - Delayed 40 second(s)

10-01-2025T04:52:47 - [TEST_STEP][PASSED] - b7 = getText(findTestObject("Прогноз по отраслям/Виджеты дашборда")): Text of object 'Object Repository/Прогноз по отраслям/Виджеты дашборда' is: 'Год 
2023 год
Сравнение с 
Факт прошлого года
Отклонения по ПАО Россети на 2023 год
-2 263.5 -2 263.5
11 054.6 11 054.6
1 280.2 1 280.2
-1 947.5 -1 947.5
90.9 90.9
-3 845.0 -3 845.0
4 162.1 4 162.1
651.7 651.7
-4 727.7 -4 727.7
256.5 256.5
-723.9 -723.9
4 292.3 4 292.3
⬤ Отклонение, млн. кВт.ч
Интер РАО (для ФСК)
Промышленные потребители
Транспорт
Нефтедобыча
Нефтепереработка
Нефтепроводы
Газопроводы
Сельское хозяйство и пищевая про…
Непромышленные потребители
Государственные (муниципальные…
Население и приравненные группы…
Территориальные сетевые организ…
Выручка отклонения по ПАО Россети на 2023 год
421.3 421.3
45 574.9 45 574.9
9 547.5 9 547.5
4 889.3 4 889.3
2 337.4 2 337.4
-1 682.6 -1 682.6
2 919.4 2 919.4
7 110.2 7 110.2
19 840.8 19 840.8
7 289.5 7 289.5
23 664.8 23 664.8
31 028.3 31 028.3
⬤ Отклонение, млн. руб
Интер РАО (для ФСК)
Промышленные потребители
Транспорт
Нефтедобыча
Нефтепереработка
Нефтепроводы
Газопроводы
Сельское хозяйство и пищевая про…
Непромышленные потребители
Государственные (муниципальные…
Население и приравненные группы…
Территориальные сетевые организ…
Динамика электропотребления, млрд. кВт.ч., по ПАО Россети на 2023 год
12 12
186 186
36 36
50 50
10 10
19 19
0 0
17 17
85 85
19 19
82 82
604 604
10 10
197 197
37 37
48 48
10 10
15 15
4 4
18 18
80 80
19 19
82 82
608 608
Факт прошлого года
Ожидаемое (прогноз до конца года)
Интер РАО(для ФСК)
Промышленныепотребители
Транспорт
Нефтедобыча
Нефтеперераб…
Нефтепроводы
Газопроводы
Сельское хозя…
Непромышлен…
Государственн…
Население иприравненныегруппыпотребителей
Территориальн…
Выручка, млрд. руб, по ПАО Россети на 2023 год
5 5
285 285
72 72
72 72
18 18
22 22
0 0
50 50
201 201
61 61
190 190
227 227
6 6
331 331
82 82
77 77
20 20
20 20
3 3
57 57
220 220
68 68
214 214
258 258
Факт прошлого года
Ожидаемое (прогноз до конца года)
Интер РАО(для ФСК)
Промышленныепотребители
Транспорт
Нефтедобыча
Нефтеперераб…
Нефтепроводы
Газопроводы
Сельское хозя…
Непромышлен…
Государственн…
Население иприравненныегруппыпотребителей
Территориальн…
абс.
%
Прогноз на месяц 
Ноябрь
КПО/Отпуск из сети 
Отпуск из сети, млн. кВт.ч
Организация 
Все
Прогноз электропотребления и выручки за услуги по передаче в разрезе отраслей'

10-01-2025T04:52:48 - [MESSAGE][PASSED] - Text of object 'Object Repository/Прогноз по отраслям/Виджеты дашборда' is: 'Год 
2023 год
Сравнение с 
Факт прошлого года
Отклонения по ПАО Россети на 2023 год
-2 263.5 -2 263.5
11 054.6 11 054.6
1 280.2 1 280.2
-1 947.5 -1 947.5
90.9 90.9
-3 845.0 -3 845.0
4 162.1 4 162.1
651.7 651.7
-4 727.7 -4 727.7
256.5 256.5
-723.9 -723.9
4 292.3 4 292.3
⬤ Отклонение, млн. кВт.ч
Интер РАО (для ФСК)
Промышленные потребители
Транспорт
Нефтедобыча
Нефтепереработка
Нефтепроводы
Газопроводы
Сельское хозяйство и пищевая про…
Непромышленные потребители
Государственные (муниципальные…
Население и приравненные группы…
Территориальные сетевые организ…
Выручка отклонения по ПАО Россети на 2023 год
421.3 421.3
45 574.9 45 574.9
9 547.5 9 547.5
4 889.3 4 889.3
2 337.4 2 337.4
-1 682.6 -1 682.6
2 919.4 2 919.4
7 110.2 7 110.2
19 840.8 19 840.8
7 289.5 7 289.5
23 664.8 23 664.8
31 028.3 31 028.3
⬤ Отклонение, млн. руб
Интер РАО (для ФСК)
Промышленные потребители
Транспорт
Нефтедобыча
Нефтепереработка
Нефтепроводы
Газопроводы
Сельское хозяйство и пищевая про…
Непромышленные потребители
Государственные (муниципальные…
Население и приравненные группы…
Территориальные сетевые организ…
Динамика электропотребления, млрд. кВт.ч., по ПАО Россети на 2023 год
12 12
186 186
36 36
50 50
10 10
19 19
0 0
17 17
85 85
19 19
82 82
604 604
10 10
197 197
37 37
48 48
10 10
15 15
4 4
18 18
80 80
19 19
82 82
608 608
Факт прошлого года
Ожидаемое (прогноз до конца года)
Интер РАО(для ФСК)
Промышленныепотребители
Транспорт
Нефтедобыча
Нефтеперераб…
Нефтепроводы
Газопроводы
Сельское хозя…
Непромышлен…
Государственн…
Население иприравненныегруппыпотребителей
Территориальн…
Выручка, млрд. руб, по ПАО Россети на 2023 год
5 5
285 285
72 72
72 72
18 18
22 22
0 0
50 50
201 201
61 61
190 190
227 227
6 6
331 331
82 82
77 77
20 20
20 20
3 3
57 57
220 220
68 68
214 214
258 258
Факт прошлого года
Ожидаемое (прогноз до конца года)
Интер РАО(для ФСК)
Промышленныепотребители
Транспорт
Нефтедобыча
Нефтеперераб…
Нефтепроводы
Газопроводы
Сельское хозя…
Непромышлен…
Государственн…
Население иприравненныегруппыпотребителей
Территориальн…
абс.
%
Прогноз на месяц 
Ноябрь
КПО/Отпуск из сети 
Отпуск из сети, млн. кВт.ч
Организация 
Все
Прогноз электропотребления и выручки за услуги по передаче в разрезе отраслей'

10-01-2025T04:52:48 - [TEST_STEP][PASSED] - b7 = b7.replaceAll("[^0-9]", ""): null

10-01-2025T04:52:48 - [TEST_STEP][PASSED] - println("b7:" + b7): null

10-01-2025T04:52:48 - [TEST_STEP][PASSED] - click(findTestObject("Прогноз по отраслям/Фильтр Сравнение с Стресс")): Object: 'Object Repository/Прогноз по отраслям/Фильтр Сравнение с Стресс' is clicked on

10-01-2025T04:52:48 - [MESSAGE][PASSED] - Object: 'Object Repository/Прогноз по отраслям/Фильтр Сравнение с Стресс' is clicked on

10-01-2025T04:52:48 - [TEST_STEP][PASSED] - click(findTestObject("Прогноз по отраслям/План Стресс")): Object: 'Object Repository/Прогноз по отраслям/План Стресс' is clicked on

10-01-2025T04:52:50 - [MESSAGE][PASSED] - Object: 'Object Repository/Прогноз по отраслям/План Стресс' is clicked on

10-01-2025T04:52:50 - [TEST_STEP][PASSED] - delay(40): Delayed 40 second(s)

10-01-2025T04:53:30 - [MESSAGE][PASSED] - Delayed 40 second(s)

10-01-2025T04:53:30 - [TEST_STEP][PASSED] - b8 = getText(findTestObject("Прогноз по отраслям/Виджеты дашборда")): Text of object 'Object Repository/Прогноз по отраслям/Виджеты дашборда' is: 'Год 
2023 год
Сравнение с 
План
Отклонения по ПАО Россети на 2023 год
-492.2 -492.2
7 165.1 7 165.1
689.3 689.3
33 271.7 33 271.7
986.4 986.4
593.8 593.8
764.0 764.0
670.4 670.4
-592.4 -592.4
308.8 308.8
-940.9 -940.9
19 604.1 19 604.1
⬤ Отклонение, млн. кВт.ч
Интер РАО (для ФСК)
Промышленные потребители
Транспорт
Нефтедобыча
Нефтепереработка
Нефтепроводы
Газопроводы
Сельское хозяйство и пищевая про…
Непромышленные потребители
Государственные (муниципальные…
Население и приравненные группы…
Территориальные сетевые организ…
Выручка отклонения по ПАО Россети на 2023 год
794.9 794.9
12 195.0 12 195.0
972.7 972.7
61 803.9 61 803.9
4 222.3 4 222.3
-121.8 -121.8
666.2 666.2
873.2 873.2
5 809.6 5 809.6
1 342.6 1 342.6
-4 463.2 -4 463.2
18 375.5 18 375.5
⬤ Отклонение, млн. руб
Интер РАО (для ФСК)
Промышленные потребители
Транспорт
Нефтедобыча
Нефтепереработка
Нефтепроводы
Газопроводы
Сельское хозяйство и пищевая про…
Непромышленные потребители
Государственные (муниципальные…
Население и приравненные группы…
Территориальные сетевые организ…
Динамика электропотребления, млрд. кВт.ч., по ПАО Россети на 2023 год
10 10
190 190
36 36
14 14
9 9
14 14
4 4
17 17
80 80
19 19
82 82
588 588
10 10
197 197
37 37
48 48
10 10
15 15
4 4
18 18
80 80
19 19
82 82
608 608
План
Ожидаемое (прогноз до конца года)
Интер РАО(для ФСК)
Промышленныепотребители
Транспорт
Нефтедобыча
Нефтеперераб…
Нефтепроводы
Газопроводы
Сельское хозя…
Непромышлен…
Государственн…
Население иприравненныегруппыпотребителей
Территориальн…
Выручка, млрд. руб, по ПАО Россети на 2023 год
5 5
319 319
81 81
16 16
16 16
20 20
2 2
56 56
215 215
67 67
218 218
239 239
6 6
331 331
82 82
77 77
20 20
20 20
3 3
57 57
220 220
68 68
214 214
258 258
План
Ожидаемое (прогноз до конца года)
Интер РАО(для ФСК)
Промышленныепотребители
Транспорт
Нефтедобыча
Нефтеперераб…
Нефтепроводы
Газопроводы
Сельское хозя…
Непромышлен…
Государственн…
Население иприравненныегруппыпотребителей
Территориальн…
абс.
%
Прогноз на месяц 
Ноябрь
КПО/Отпуск из сети 
Отпуск из сети, млн. кВт.ч
Организация 
Все
Прогноз электропотребления и выручки за услуги по передаче в разрезе отраслей'

10-01-2025T04:53:30 - [MESSAGE][PASSED] - Text of object 'Object Repository/Прогноз по отраслям/Виджеты дашборда' is: 'Год 
2023 год
Сравнение с 
План
Отклонения по ПАО Россети на 2023 год
-492.2 -492.2
7 165.1 7 165.1
689.3 689.3
33 271.7 33 271.7
986.4 986.4
593.8 593.8
764.0 764.0
670.4 670.4
-592.4 -592.4
308.8 308.8
-940.9 -940.9
19 604.1 19 604.1
⬤ Отклонение, млн. кВт.ч
Интер РАО (для ФСК)
Промышленные потребители
Транспорт
Нефтедобыча
Нефтепереработка
Нефтепроводы
Газопроводы
Сельское хозяйство и пищевая про…
Непромышленные потребители
Государственные (муниципальные…
Население и приравненные группы…
Территориальные сетевые организ…
Выручка отклонения по ПАО Россети на 2023 год
794.9 794.9
12 195.0 12 195.0
972.7 972.7
61 803.9 61 803.9
4 222.3 4 222.3
-121.8 -121.8
666.2 666.2
873.2 873.2
5 809.6 5 809.6
1 342.6 1 342.6
-4 463.2 -4 463.2
18 375.5 18 375.5
⬤ Отклонение, млн. руб
Интер РАО (для ФСК)
Промышленные потребители
Транспорт
Нефтедобыча
Нефтепереработка
Нефтепроводы
Газопроводы
Сельское хозяйство и пищевая про…
Непромышленные потребители
Государственные (муниципальные…
Население и приравненные группы…
Территориальные сетевые организ…
Динамика электропотребления, млрд. кВт.ч., по ПАО Россети на 2023 год
10 10
190 190
36 36
14 14
9 9
14 14
4 4
17 17
80 80
19 19
82 82
588 588
10 10
197 197
37 37
48 48
10 10
15 15
4 4
18 18
80 80
19 19
82 82
608 608
План
Ожидаемое (прогноз до конца года)
Интер РАО(для ФСК)
Промышленныепотребители
Транспорт
Нефтедобыча
Нефтеперераб…
Нефтепроводы
Газопроводы
Сельское хозя…
Непромышлен…
Государственн…
Население иприравненныегруппыпотребителей
Территориальн…
Выручка, млрд. руб, по ПАО Россети на 2023 год
5 5
319 319
81 81
16 16
16 16
20 20
2 2
56 56
215 215
67 67
218 218
239 239
6 6
331 331
82 82
77 77
20 20
20 20
3 3
57 57
220 220
68 68
214 214
258 258
План
Ожидаемое (прогноз до конца года)
Интер РАО(для ФСК)
Промышленныепотребители
Транспорт
Нефтедобыча
Нефтеперераб…
Нефтепроводы
Газопроводы
Сельское хозя…
Непромышлен…
Государственн…
Население иприравненныегруппыпотребителей
Территориальн…
абс.
%
Прогноз на месяц 
Ноябрь
КПО/Отпуск из сети 
Отпуск из сети, млн. кВт.ч
Организация 
Все
Прогноз электропотребления и выручки за услуги по передаче в разрезе отраслей'

10-01-2025T04:53:30 - [TEST_STEP][PASSED] - b8 = b8.replaceAll("[^0-9]", ""): null

10-01-2025T04:53:30 - [TEST_STEP][PASSED] - println("b8:" + b8): null

10-01-2025T04:53:30 - [TEST_STEP][PASSED] - click(findTestObject("Прогноз по отраслям/Фильтр Сравнение с Стресс")): Object: 'Object Repository/Прогноз по отраслям/Фильтр Сравнение с Стресс' is clicked on

10-01-2025T04:53:31 - [MESSAGE][PASSED] - Object: 'Object Repository/Прогноз по отраслям/Фильтр Сравнение с Стресс' is clicked on

10-01-2025T04:53:31 - [TEST_STEP][PASSED] - click(findTestObject("Прогноз по отраслям/План СУ Стресс")): Object: 'Object Repository/Прогноз по отраслям/План СУ Стресс' is clicked on

10-01-2025T04:53:32 - [MESSAGE][PASSED] - Object: 'Object Repository/Прогноз по отраслям/План СУ Стресс' is clicked on

10-01-2025T04:53:32 - [TEST_STEP][PASSED] - delay(40): Delayed 40 second(s)

10-01-2025T04:54:12 - [MESSAGE][PASSED] - Delayed 40 second(s)

10-01-2025T04:54:12 - [TEST_STEP][PASSED] - b9 = getText(findTestObject("Прогноз по отраслям/Виджеты дашборда")): Text of object 'Object Repository/Прогноз по отраслям/Виджеты дашборда' is: 'Год 
2023 год
Сравнение с 
План/СУ
Отклонения по ПАО Россети на 2023 год
243.5 243.5
11 013.5 11 013.5
674.8 674.8
32 765.3 32 765.3
1 049.4 1 049.4
271.8 271.8
495.2 495.2
588.7 588.7
-7 607.7 -7 607.7
31.9 31.9
-1 318.1 -1 318.1
10 906.5 10 906.5
⬤ Отклонение, млн. кВт.ч
Интер РАО (для ФСК)
Промышленные потребители
Транспорт
Нефтедобыча
Нефтепереработка
Нефтепроводы
Газопроводы
Сельское хозяйство и пищевая про…
Непромышленные потребители
Государственные (муниципальные…
Население и приравненные группы…
Территориальные сетевые организ…
Выручка отклонения по ПАО Россети на 2023 год
⬤ Отклонение, млн. руб
Интер РАО (для ФСК)
Промышленные потребители
Транспорт
Нефтедобыча
Нефтепереработка
Нефтепроводы
Газопроводы
Сельское хозяйство и пищевая про…
Непромышленные потребители
Государственные (муниципальные…
Население и приравненные группы…
Территориальные сетевые организ…
Динамика электропотребления, млрд. кВт.ч., по ПАО Россети на 2023 год
10 10
186 186
36 36
15 15
9 9
14 14
4 4
17 17
88 88
19 19
83 83
597 597
10 10
197 197
37 37
48 48
10 10
15 15
4 4
18 18
80 80
19 19
82 82
608 608
СУ
Ожидаемое (прогноз до конца года)
Интер РАО(для ФСК)
Промышленныепотребители
Транспорт
Нефтедобыча
Нефтеперераб…
Нефтепроводы
Газопроводы
Сельское хозя…
Непромышлен…
Государственн…
Население иприравненныегруппыпотребителей
Территориальн…
Выручка, млрд. руб, по ПАО Россети на 2023 год
6 6
331 331
82 82
77 77
20 20
20 20
3 3
57 57
220 220
68 68
214 214
258 258
Ожидаемое (прогноз до конца года)
Интер РАО(для ФСК)
Промышленныепотребители
Транспорт
Нефтедобыча
Нефтеперераб…
Нефтепроводы
Газопроводы
Сельское хозя…
Непромышлен…
Государственн…
Население иприравненныегруппыпотребителей
Территориальн…
абс.
%
Прогноз на месяц 
Ноябрь
КПО/Отпуск из сети 
Отпуск из сети, млн. кВт.ч
Организация 
Все
Прогноз электропотребления и выручки за услуги по передаче в разрезе отраслей'

10-01-2025T04:54:13 - [MESSAGE][PASSED] - Text of object 'Object Repository/Прогноз по отраслям/Виджеты дашборда' is: 'Год 
2023 год
Сравнение с 
План/СУ
Отклонения по ПАО Россети на 2023 год
243.5 243.5
11 013.5 11 013.5
674.8 674.8
32 765.3 32 765.3
1 049.4 1 049.4
271.8 271.8
495.2 495.2
588.7 588.7
-7 607.7 -7 607.7
31.9 31.9
-1 318.1 -1 318.1
10 906.5 10 906.5
⬤ Отклонение, млн. кВт.ч
Интер РАО (для ФСК)
Промышленные потребители
Транспорт
Нефтедобыча
Нефтепереработка
Нефтепроводы
Газопроводы
Сельское хозяйство и пищевая про…
Непромышленные потребители
Государственные (муниципальные…
Население и приравненные группы…
Территориальные сетевые организ…
Выручка отклонения по ПАО Россети на 2023 год
⬤ Отклонение, млн. руб
Интер РАО (для ФСК)
Промышленные потребители
Транспорт
Нефтедобыча
Нефтепереработка
Нефтепроводы
Газопроводы
Сельское хозяйство и пищевая про…
Непромышленные потребители
Государственные (муниципальные…
Население и приравненные группы…
Территориальные сетевые организ…
Динамика электропотребления, млрд. кВт.ч., по ПАО Россети на 2023 год
10 10
186 186
36 36
15 15
9 9
14 14
4 4
17 17
88 88
19 19
83 83
597 597
10 10
197 197
37 37
48 48
10 10
15 15
4 4
18 18
80 80
19 19
82 82
608 608
СУ
Ожидаемое (прогноз до конца года)
Интер РАО(для ФСК)
Промышленныепотребители
Транспорт
Нефтедобыча
Нефтеперераб…
Нефтепроводы
Газопроводы
Сельское хозя…
Непромышлен…
Государственн…
Население иприравненныегруппыпотребителей
Территориальн…
Выручка, млрд. руб, по ПАО Россети на 2023 год
6 6
331 331
82 82
77 77
20 20
20 20
3 3
57 57
220 220
68 68
214 214
258 258
Ожидаемое (прогноз до конца года)
Интер РАО(для ФСК)
Промышленныепотребители
Транспорт
Нефтедобыча
Нефтеперераб…
Нефтепроводы
Газопроводы
Сельское хозя…
Непромышлен…
Государственн…
Население иприравненныегруппыпотребителей
Территориальн…
абс.
%
Прогноз на месяц 
Ноябрь
КПО/Отпуск из сети 
Отпуск из сети, млн. кВт.ч
Организация 
Все
Прогноз электропотребления и выручки за услуги по передаче в разрезе отраслей'

10-01-2025T04:54:13 - [TEST_STEP][PASSED] - b9 = b9.replaceAll("[^0-9]", ""): null

10-01-2025T04:54:13 - [TEST_STEP][PASSED] - println("b9:" + b9): null

10-01-2025T04:54:13 - [TEST_STEP][PASSED] - click(findTestObject("Прогноз по отраслям/Фильтр Сравнение с Стресс")): Object: 'Object Repository/Прогноз по отраслям/Фильтр Сравнение с Стресс' is clicked on

10-01-2025T04:54:13 - [MESSAGE][PASSED] - Object: 'Object Repository/Прогноз по отраслям/Фильтр Сравнение с Стресс' is clicked on

10-01-2025T04:54:13 - [TEST_STEP][PASSED] - click(findTestObject("Прогноз по отраслям/Факт прошлого года Стресс")): Object: 'Object Repository/Прогноз по отраслям/Факт прошлого года Стресс' is clicked on

10-01-2025T04:54:14 - [MESSAGE][PASSED] - Object: 'Object Repository/Прогноз по отраслям/Факт прошлого года Стресс' is clicked on

10-01-2025T04:54:14 - [TEST_STEP][PASSED] - click(findTestObject("Прогноз по отраслям/Фильтр КПО-Отпуск Стресс")): Object: 'Object Repository/Прогноз по отраслям/Фильтр КПО-Отпуск Стресс' is clicked on

10-01-2025T04:54:16 - [MESSAGE][PASSED] - Object: 'Object Repository/Прогноз по отраслям/Фильтр КПО-Отпуск Стресс' is clicked on

10-01-2025T04:54:16 - [TEST_STEP][PASSED] - click(findTestObject("Прогноз по отраслям/КПО Стресс")): Object: 'Object Repository/Прогноз по отраслям/КПО Стресс' is clicked on

10-01-2025T04:54:17 - [MESSAGE][PASSED] - Object: 'Object Repository/Прогноз по отраслям/КПО Стресс' is clicked on

10-01-2025T04:54:17 - [TEST_STEP][PASSED] - delay(40): Delayed 40 second(s)

10-01-2025T04:54:57 - [MESSAGE][PASSED] - Delayed 40 second(s)

10-01-2025T04:54:57 - [TEST_STEP][PASSED] - b10 = getText(findTestObject("Прогноз по отраслям/Виджеты дашборда")): Text of object 'Object Repository/Прогноз по отраслям/Виджеты дашборда' is: 'Год 
2023 год
Сравнение с 
Факт прошлого года
Отклонения по ПАО Россети на 2023 год
0.0 0.0
646.5 646.5
341.1 341.1
-2 455.6 -2 455.6
245.6 245.6
-1 796.0 -1 796.0
676.2 676.2
452.4 452.4
1 386.2 1 386.2
527.5 527.5
-1 130.4 -1 130.4
-128.7 -128.7
⬤ Отклонение, млн. кВт.ч
Интер РАО (для ФСК)
Промышленные потребители
Транспорт
Нефтедобыча
Нефтепереработка
Нефтепроводы
Газопроводы
Сельское хозяйство и пищевая про…
Непромышленные потребители
Государственные (муниципальные…
Население и приравненные группы…
Территориальные сетевые организ…
Выручка отклонения по ПАО Россети на 2023 год
421.3 421.3
45 574.9 45 574.9
9 547.5 9 547.5
4 889.3 4 889.3
2 337.4 2 337.4
-1 682.6 -1 682.6
2 919.4 2 919.4
7 110.2 7 110.2
19 840.8 19 840.8
7 289.5 7 289.5
23 664.8 23 664.8
31 028.3 31 028.3
⬤ Отклонение, млн. руб
Интер РАО (для ФСК)
Промышленные потребители
Транспорт
Нефтедобыча
Нефтепереработка
Нефтепроводы
Газопроводы
Сельское хозяйство и пищевая про…
Непромышленные потребители
Государственные (муниципальные…
Население и приравненные группы…
Территориальные сетевые организ…
Динамика электропотребления, млрд. кВт.ч., по ПАО Россети на 2023 год
0 0
120 120
38 38
41 41
8 8
10 10
0 0
19 19
77 77
25 25
122 122
61 61
0 0
120 120
39 39
39 39
8 8
8 8
1 1
20 20
78 78
26 26
121 121
60 60
Факт прошлого года
Ожидаемое (прогноз до конца года)
Интер РАО(для ФСК)
Промышленныепотребители
Транспорт
Нефтедобыча
Нефтеперераб…
Нефтепроводы
Газопроводы
Сельское хозя…
Непромышлен…
Государственн…
Население иприравненныегруппыпотребителей
Территориальн…
Выручка, млрд. руб, по ПАО Россети на 2023 год
5 5
285 285
72 72
72 72
18 18
22 22
0 0
50 50
201 201
61 61
190 190
227 227
6 6
331 331
82 82
77 77
20 20
20 20
3 3
57 57
220 220
68 68
214 214
258 258
Факт прошлого года
Ожидаемое (прогноз до конца года)
Интер РАО(для ФСК)
Промышленныепотребители
Транспорт
Нефтедобыча
Нефтеперераб…
Нефтепроводы
Газопроводы
Сельское хозя…
Непромышлен…
Государственн…
Население иприравненныегруппыпотребителей
Территориальн…
абс.
%
Прогноз на месяц 
Ноябрь
КПО/Отпуск из сети 
Котловой полезный отпуск, млн. кВт.ч
Организация 
Все
Прогноз электропотребления и выручки за услуги по передаче в разрезе отраслей'

10-01-2025T04:54:58 - [MESSAGE][PASSED] - Text of object 'Object Repository/Прогноз по отраслям/Виджеты дашборда' is: 'Год 
2023 год
Сравнение с 
Факт прошлого года
Отклонения по ПАО Россети на 2023 год
0.0 0.0
646.5 646.5
341.1 341.1
-2 455.6 -2 455.6
245.6 245.6
-1 796.0 -1 796.0
676.2 676.2
452.4 452.4
1 386.2 1 386.2
527.5 527.5
-1 130.4 -1 130.4
-128.7 -128.7
⬤ Отклонение, млн. кВт.ч
Интер РАО (для ФСК)
Промышленные потребители
Транспорт
Нефтедобыча
Нефтепереработка
Нефтепроводы
Газопроводы
Сельское хозяйство и пищевая про…
Непромышленные потребители
Государственные (муниципальные…
Население и приравненные группы…
Территориальные сетевые организ…
Выручка отклонения по ПАО Россети на 2023 год
421.3 421.3
45 574.9 45 574.9
9 547.5 9 547.5
4 889.3 4 889.3
2 337.4 2 337.4
-1 682.6 -1 682.6
2 919.4 2 919.4
7 110.2 7 110.2
19 840.8 19 840.8
7 289.5 7 289.5
23 664.8 23 664.8
31 028.3 31 028.3
⬤ Отклонение, млн. руб
Интер РАО (для ФСК)
Промышленные потребители
Транспорт
Нефтедобыча
Нефтепереработка
Нефтепроводы
Газопроводы
Сельское хозяйство и пищевая про…
Непромышленные потребители
Государственные (муниципальные…
Население и приравненные группы…
Территориальные сетевые организ…
Динамика электропотребления, млрд. кВт.ч., по ПАО Россети на 2023 год
0 0
120 120
38 38
41 41
8 8
10 10
0 0
19 19
77 77
25 25
122 122
61 61
0 0
120 120
39 39
39 39
8 8
8 8
1 1
20 20
78 78
26 26
121 121
60 60
Факт прошлого года
Ожидаемое (прогноз до конца года)
Интер РАО(для ФСК)
Промышленныепотребители
Транспорт
Нефтедобыча
Нефтеперераб…
Нефтепроводы
Газопроводы
Сельское хозя…
Непромышлен…
Государственн…
Население иприравненныегруппыпотребителей
Территориальн…
Выручка, млрд. руб, по ПАО Россети на 2023 год
5 5
285 285
72 72
72 72
18 18
22 22
0 0
50 50
201 201
61 61
190 190
227 227
6 6
331 331
82 82
77 77
20 20
20 20
3 3
57 57
220 220
68 68
214 214
258 258
Факт прошлого года
Ожидаемое (прогноз до конца года)
Интер РАО(для ФСК)
Промышленныепотребители
Транспорт
Нефтедобыча
Нефтеперераб…
Нефтепроводы
Газопроводы
Сельское хозя…
Непромышлен…
Государственн…
Население иприравненныегруппыпотребителей
Территориальн…
абс.
%
Прогноз на месяц 
Ноябрь
КПО/Отпуск из сети 
Котловой полезный отпуск, млн. кВт.ч
Организация 
Все
Прогноз электропотребления и выручки за услуги по передаче в разрезе отраслей'

10-01-2025T04:54:58 - [TEST_STEP][PASSED] - b10 = b10.replaceAll("[^0-9]", ""): null

10-01-2025T04:54:58 - [TEST_STEP][PASSED] - println("b10:" + b10): null

10-01-2025T04:54:58 - [TEST_STEP][PASSED] - click(findTestObject("Прогноз по отраслям/Фильтр Сравнение с Стресс")): Object: 'Object Repository/Прогноз по отраслям/Фильтр Сравнение с Стресс' is clicked on

10-01-2025T04:54:58 - [MESSAGE][PASSED] - Object: 'Object Repository/Прогноз по отраслям/Фильтр Сравнение с Стресс' is clicked on

10-01-2025T04:54:58 - [TEST_STEP][PASSED] - click(findTestObject("Прогноз по отраслям/План Стресс")): Object: 'Object Repository/Прогноз по отраслям/План Стресс' is clicked on

10-01-2025T04:54:59 - [MESSAGE][PASSED] - Object: 'Object Repository/Прогноз по отраслям/План Стресс' is clicked on

10-01-2025T04:54:59 - [TEST_STEP][PASSED] - delay(40): Delayed 40 second(s)

10-01-2025T04:55:39 - [MESSAGE][PASSED] - Delayed 40 second(s)

10-01-2025T04:55:39 - [TEST_STEP][PASSED] - b11 = getText(findTestObject("Прогноз по отраслям/Виджеты дашборда")): Text of object 'Object Repository/Прогноз по отраслям/Виджеты дашборда' is: 'Год 
2023 год
Сравнение с 
План
Отклонения по ПАО Россети на 2023 год
0.0 0.0
1 471.7 1 471.7
1 186.5 1 186.5
32 445.2 32 445.2
1 268.3 1 268.3
349.4 349.4
84.3 84.3
239.8 239.8
2 969.4 2 969.4
589.2 589.2
-1 798.4 -1 798.4
5 359.3 5 359.3
⬤ Отклонение, млн. кВт.ч
Интер РАО (для ФСК)
Промышленные потребители
Транспорт
Нефтедобыча
Нефтепереработка
Нефтепроводы
Газопроводы
Сельское хозяйство и пищевая про…
Непромышленные потребители
Государственные (муниципальные…
Население и приравненные группы…
Территориальные сетевые организ…
Выручка отклонения по ПАО Россети на 2023 год
794.9 794.9
12 195.0 12 195.0
972.7 972.7
61 803.9 61 803.9
4 222.3 4 222.3
-121.8 -121.8
666.2 666.2
873.2 873.2
5 809.6 5 809.6
1 342.6 1 342.6
-4 463.2 -4 463.2
18 375.5 18 375.5
⬤ Отклонение, млн. руб
Интер РАО (для ФСК)
Промышленные потребители
Транспорт
Нефтедобыча
Нефтепереработка
Нефтепроводы
Газопроводы
Сельское хозяйство и пищевая про…
Непромышленные потребители
Государственные (муниципальные…
Население и приравненные группы…
Территориальные сетевые организ…
Динамика электропотребления, млрд. кВт.ч., по ПАО Россети на 2023 год
0 0
119 119
37 37
7 7
7 7
8 8
1 1
19 19
75 75
25 25
123 123
55 55
0 0
120 120
39 39
39 39
8 8
8 8
1 1
20 20
78 78
26 26
121 121
60 60
План
Ожидаемое (прогноз до конца года)
Интер РАО(для ФСК)
Промышленныепотребители
Транспорт
Нефтедобыча
Нефтеперераб…
Нефтепроводы
Газопроводы
Сельское хозя…
Непромышлен…
Государственн…
Население иприравненныегруппыпотребителей
Территориальн…
Выручка, млрд. руб, по ПАО Россети на 2023 год
5 5
319 319
81 81
16 16
16 16
20 20
2 2
56 56
215 215
67 67
218 218
239 239
6 6
331 331
82 82
77 77
20 20
20 20
3 3
57 57
220 220
68 68
214 214
258 258
План
Ожидаемое (прогноз до конца года)
Интер РАО(для ФСК)
Промышленныепотребители
Транспорт
Нефтедобыча
Нефтеперераб…
Нефтепроводы
Газопроводы
Сельское хозя…
Непромышлен…
Государственн…
Население иприравненныегруппыпотребителей
Территориальн…
абс.
%
Прогноз на месяц 
Ноябрь
КПО/Отпуск из сети 
Котловой полезный отпуск, млн. кВт.ч
Организация 
Все
Прогноз электропотребления и выручки за услуги по передаче в разрезе отраслей'

10-01-2025T04:55:40 - [MESSAGE][PASSED] - Text of object 'Object Repository/Прогноз по отраслям/Виджеты дашборда' is: 'Год 
2023 год
Сравнение с 
План
Отклонения по ПАО Россети на 2023 год
0.0 0.0
1 471.7 1 471.7
1 186.5 1 186.5
32 445.2 32 445.2
1 268.3 1 268.3
349.4 349.4
84.3 84.3
239.8 239.8
2 969.4 2 969.4
589.2 589.2
-1 798.4 -1 798.4
5 359.3 5 359.3
⬤ Отклонение, млн. кВт.ч
Интер РАО (для ФСК)
Промышленные потребители
Транспорт
Нефтедобыча
Нефтепереработка
Нефтепроводы
Газопроводы
Сельское хозяйство и пищевая про…
Непромышленные потребители
Государственные (муниципальные…
Население и приравненные группы…
Территориальные сетевые организ…
Выручка отклонения по ПАО Россети на 2023 год
794.9 794.9
12 195.0 12 195.0
972.7 972.7
61 803.9 61 803.9
4 222.3 4 222.3
-121.8 -121.8
666.2 666.2
873.2 873.2
5 809.6 5 809.6
1 342.6 1 342.6
-4 463.2 -4 463.2
18 375.5 18 375.5
⬤ Отклонение, млн. руб
Интер РАО (для ФСК)
Промышленные потребители
Транспорт
Нефтедобыча
Нефтепереработка
Нефтепроводы
Газопроводы
Сельское хозяйство и пищевая про…
Непромышленные потребители
Государственные (муниципальные…
Население и приравненные группы…
Территориальные сетевые организ…
Динамика электропотребления, млрд. кВт.ч., по ПАО Россети на 2023 год
0 0
119 119
37 37
7 7
7 7
8 8
1 1
19 19
75 75
25 25
123 123
55 55
0 0
120 120
39 39
39 39
8 8
8 8
1 1
20 20
78 78
26 26
121 121
60 60
План
Ожидаемое (прогноз до конца года)
Интер РАО(для ФСК)
Промышленныепотребители
Транспорт
Нефтедобыча
Нефтеперераб…
Нефтепроводы
Газопроводы
Сельское хозя…
Непромышлен…
Государственн…
Население иприравненныегруппыпотребителей
Территориальн…
Выручка, млрд. руб, по ПАО Россети на 2023 год
5 5
319 319
81 81
16 16
16 16
20 20
2 2
56 56
215 215
67 67
218 218
239 239
6 6
331 331
82 82
77 77
20 20
20 20
3 3
57 57
220 220
68 68
214 214
258 258
План
Ожидаемое (прогноз до конца года)
Интер РАО(для ФСК)
Промышленныепотребители
Транспорт
Нефтедобыча
Нефтеперераб…
Нефтепроводы
Газопроводы
Сельское хозя…
Непромышлен…
Государственн…
Население иприравненныегруппыпотребителей
Территориальн…
абс.
%
Прогноз на месяц 
Ноябрь
КПО/Отпуск из сети 
Котловой полезный отпуск, млн. кВт.ч
Организация 
Все
Прогноз электропотребления и выручки за услуги по передаче в разрезе отраслей'

10-01-2025T04:55:40 - [TEST_STEP][PASSED] - println("b11:" + b11): null

10-01-2025T04:55:40 - [TEST_STEP][PASSED] - b11 = b11.replaceAll("[^0-9]", ""): null

10-01-2025T04:55:40 - [TEST_STEP][PASSED] - println("b11:" + b11): null

10-01-2025T04:55:40 - [TEST_STEP][PASSED] - click(findTestObject("Прогноз по отраслям/Фильтр Сравнение с Стресс")): Object: 'Object Repository/Прогноз по отраслям/Фильтр Сравнение с Стресс' is clicked on

10-01-2025T04:55:40 - [MESSAGE][PASSED] - Object: 'Object Repository/Прогноз по отраслям/Фильтр Сравнение с Стресс' is clicked on

10-01-2025T04:55:40 - [TEST_STEP][PASSED] - click(findTestObject("Прогноз по отраслям/План СУ Стресс")): Object: 'Object Repository/Прогноз по отраслям/План СУ Стресс' is clicked on

10-01-2025T04:55:42 - [MESSAGE][PASSED] - Object: 'Object Repository/Прогноз по отраслям/План СУ Стресс' is clicked on

10-01-2025T04:55:42 - [TEST_STEP][PASSED] - delay(40): Delayed 40 second(s)

10-01-2025T04:56:22 - [MESSAGE][PASSED] - Delayed 40 second(s)

10-01-2025T04:56:22 - [TEST_STEP][PASSED] - b12 = getText(findTestObject("Прогноз по отраслям/Виджеты дашборда")): Text of object 'Object Repository/Прогноз по отраслям/Виджеты дашборда' is: 'Год 
2023 год
Сравнение с 
План/СУ
Отклонения по ПАО Россети на 2023 год
0.0 0.0
120 322.6 120 322.6
38 655.4 38 655.4
39 037.8 39 037.8
8 291.7 8 291.7
8 259.5 8 259.5
793.1 793.1
19 706.6 19 706.6
78 310.2 78 310.2
25 579.5 25 579.5
121 219.7 121 219.7
60 414.9 60 414.9
⬤ Отклонение, млн. кВт.ч
Интер РАО (для ФСК)
Промышленные потребители
Транспорт
Нефтедобыча
Нефтепереработка
Нефтепроводы
Газопроводы
Сельское хозяйство и пищевая про…
Непромышленные потребители
Государственные (муниципальные…
Население и приравненные группы…
Территориальные сетевые организ…
Выручка отклонения по ПАО Россети на 2023 год
⬤ Отклонение, млн. руб
Интер РАО (для ФСК)
Промышленные потребители
Транспорт
Нефтедобыча
Нефтепереработка
Нефтепроводы
Газопроводы
Сельское хозяйство и пищевая про…
Непромышленные потребители
Государственные (муниципальные…
Население и приравненные группы…
Территориальные сетевые организ…
Динамика электропотребления, млрд. кВт.ч., по ПАО Россети на 2023 год
0 0
0 0
0 0
0 0
0 0
0 0
0 0
0 0
0 0
0 0
0 0
0 0
0 0
120 120
39 39
39 39
8 8
8 8
1 1
20 20
78 78
26 26
121 121
60 60
СУ
Ожидаемое (прогноз до конца года)
Интер РАО(для ФСК)
Промышленныепотребители
Транспорт
Нефтедобыча
Нефтеперераб…
Нефтепроводы
Газопроводы
Сельское хозя…
Непромышлен…
Государственн…
Население иприравненныегруппыпотребителей
Территориальн…
Выручка, млрд. руб, по ПАО Россети на 2023 год
6 6
331 331
82 82
77 77
20 20
20 20
3 3
57 57
220 220
68 68
214 214
258 258
Ожидаемое (прогноз до конца года)
Интер РАО(для ФСК)
Промышленныепотребители
Транспорт
Нефтедобыча
Нефтеперераб…
Нефтепроводы
Газопроводы
Сельское хозя…
Непромышлен…
Государственн…
Население иприравненныегруппыпотребителей
Территориальн…
абс.
%
Прогноз на месяц 
Ноябрь
КПО/Отпуск из сети 
Котловой полезный отпуск, млн. кВт.ч
Организация 
Все
Прогноз электропотребления и выручки за услуги по передаче в разрезе отраслей'

10-01-2025T04:56:22 - [MESSAGE][PASSED] - Text of object 'Object Repository/Прогноз по отраслям/Виджеты дашборда' is: 'Год 
2023 год
Сравнение с 
План/СУ
Отклонения по ПАО Россети на 2023 год
0.0 0.0
120 322.6 120 322.6
38 655.4 38 655.4
39 037.8 39 037.8
8 291.7 8 291.7
8 259.5 8 259.5
793.1 793.1
19 706.6 19 706.6
78 310.2 78 310.2
25 579.5 25 579.5
121 219.7 121 219.7
60 414.9 60 414.9
⬤ Отклонение, млн. кВт.ч
Интер РАО (для ФСК)
Промышленные потребители
Транспорт
Нефтедобыча
Нефтепереработка
Нефтепроводы
Газопроводы
Сельское хозяйство и пищевая про…
Непромышленные потребители
Государственные (муниципальные…
Население и приравненные группы…
Территориальные сетевые организ…
Выручка отклонения по ПАО Россети на 2023 год
⬤ Отклонение, млн. руб
Интер РАО (для ФСК)
Промышленные потребители
Транспорт
Нефтедобыча
Нефтепереработка
Нефтепроводы
Газопроводы
Сельское хозяйство и пищевая про…
Непромышленные потребители
Государственные (муниципальные…
Население и приравненные группы…
Территориальные сетевые организ…
Динамика электропотребления, млрд. кВт.ч., по ПАО Россети на 2023 год
0 0
0 0
0 0
0 0
0 0
0 0
0 0
0 0
0 0
0 0
0 0
0 0
0 0
120 120
39 39
39 39
8 8
8 8
1 1
20 20
78 78
26 26
121 121
60 60
СУ
Ожидаемое (прогноз до конца года)
Интер РАО(для ФСК)
Промышленныепотребители
Транспорт
Нефтедобыча
Нефтеперераб…
Нефтепроводы
Газопроводы
Сельское хозя…
Непромышлен…
Государственн…
Население иприравненныегруппыпотребителей
Территориальн…
Выручка, млрд. руб, по ПАО Россети на 2023 год
6 6
331 331
82 82
77 77
20 20
20 20
3 3
57 57
220 220
68 68
214 214
258 258
Ожидаемое (прогноз до конца года)
Интер РАО(для ФСК)
Промышленныепотребители
Транспорт
Нефтедобыча
Нефтеперераб…
Нефтепроводы
Газопроводы
Сельское хозя…
Непромышлен…
Государственн…
Население иприравненныегруппыпотребителей
Территориальн…
абс.
%
Прогноз на месяц 
Ноябрь
КПО/Отпуск из сети 
Котловой полезный отпуск, млн. кВт.ч
Организация 
Все
Прогноз электропотребления и выручки за услуги по передаче в разрезе отраслей'

10-01-2025T04:56:22 - [TEST_STEP][PASSED] - b12 = b12.replaceAll("[^0-9]", ""): null

10-01-2025T04:56:22 - [TEST_STEP][PASSED] - println("b12:" + b12): null

10-01-2025T04:56:22 - [TEST_STEP][PASSED] - if (verifyEqual(a1, b1) == true): Actual object '20232023121218618636365050101019190017178585191982826046041010197197373748481010151544181880801919828260860820235528528572727272181822220050502012016161190190227227663313318282777720202020335757220220686821421425825820231851855959363639390909207207331323313238385656131309090707202377771601601321326767133133777713315133151421429999120120124124137137' and expected object '20232023121218618636365050101019190017178585191982826046041010197197373748481010151544181880801919828260860820235528528572727272181822220050502012016161190190227227663313318282777720202020335757220220686821421425825820231851855959363639390909207207331323313238385656131309090707202377771601601321326767133133777713315133151421429999120120124124137137' are equal

10-01-2025T04:56:22 - [MESSAGE][PASSED] - Actual object '20232023121218618636365050101019190017178585191982826046041010197197373748481010151544181880801919828260860820235528528572727272181822220050502012016161190190227227663313318282777720202020335757220220686821421425825820231851855959363639390909207207331323313238385656131309090707202377771601601321326767133133777713315133151421429999120120124124137137' and expected object '20232023121218618636365050101019190017178585191982826046041010197197373748481010151544181880801919828260860820235528528572727272181822220050502012016161190190227227663313318282777720202020335757220220686821421425825820231851855959363639390909207207331323313238385656131309090707202377771601601321326767133133777713315133151421429999120120124124137137' are equal

10-01-2025T04:56:22 - [TEST_STEP][PASSED] - if (verifyEqual(a2, b2) == true): Actual object '202320231010190190363614149914144417178080191982825885881010197197373748481010151544181880801919828260860820235531931981811616161620202256562152156767218218239239663313318282777720202020335757220220686821421425825820234747383819192303230310910942422172173939060616161010333320231561563838121239823982269269060626926915152727202020207979' and expected object '202320231010190190363614149914144417178080191982825885881010197197373748481010151544181880801919828260860820235531931981811616161620202256562152156767218218239239663313318282777720202020335757220220686821421425825820234747383819192303230310910942422172173939060616161010333320231561563838121239823982269269060626926915152727202020207979' are equal

10-01-2025T04:56:22 - [MESSAGE][PASSED] - Actual object '202320231010190190363614149914144417178080191982825885881010197197373748481010151544181880801919828260860820235531931981811616161620202256562152156767218218239239663313318282777720202020335757220220686821421425825820234747383819192303230310910942422172173939060616161010333320231561563838121239823982269269060626926915152727202020207979' and expected object '202320231010190190363614149914144417178080191982825885881010197197373748481010151544181880801919828260860820235531931981811616161620202256562152156767218218239239663313318282777720202020335757220220686821421425825820234747383819192303230310910942422172173939060616161010333320231561563838121239823982269269060626926915152727202020207979' are equal

10-01-2025T04:56:22 - [TEST_STEP][PASSED] - if (verifyEqual(a3, b3) == true): Actual object '2023202310101861863636151599141444171788881919838359759710101971973737484810101515441818808019198282608608202366331331828277772020202033575722022068682142142582582023252559591919219121911171171919131131353587870202161618182023' and expected object '2023202310101861863636151599141444171788881919838359759710101971973737484810101515441818808019198282608608202366331331828277772020202033575722022068682142142582582023252559591919219121911171171919131131353587870202161618182023' are equal

10-01-2025T04:56:22 - [MESSAGE][PASSED] - Actual object '2023202310101861863636151599141444171788881919838359759710101971973737484810101515441818808019198282608608202366331331828277772020202033575722022068682142142582582023252559591919219121911171171919131131353587870202161618182023' and expected object '2023202310101861863636151599141444171788881919838359759710101971973737484810101515441818808019198282608608202366331331828277772020202033575722022068682142142582582023252559591919219121911171171919131131353587870202161618182023' are equal

10-01-2025T04:56:22 - [TEST_STEP][PASSED] - if (verifyEqual(a4, b4) == true): Actual object '20232023001201203838414188101000191977772525122122616100120120393939398888112020787826261211216060202355285285727272721818222200505020120161611901902272276633133182827777202020203357572202206868214214258258202305050909595931311791795784578423231818212109090202202377771601601321326767133133777713315133151421429999120120124124137137' and expected object '20232023001201203838414188101000191977772525122122616100120120393939398888112020787826261211216060202355285285727272721818222200505020120161611901902272276633133182827777202020203357572202206868214214258258202305050909595931311791795784578423231818212109090202202377771601601321326767133133777713315133151421429999120120124124137137' are equal

10-01-2025T04:56:22 - [MESSAGE][PASSED] - Actual object '20232023001201203838414188101000191977772525122122616100120120393939398888112020787826261211216060202355285285727272721818222200505020120161611901902272276633133182827777202020203357572202206868214214258258202305050909595931311791795784578423231818212109090202202377771601601321326767133133777713315133151421429999120120124124137137' and expected object '20232023001201203838414188101000191977772525122122616100120120393939398888112020787826261211216060202355285285727272721818222200505020120161611901902272276633133182827777202020203357572202206868214214258258202305050909595931311791795784578423231818212109090202202377771601601321326767133133777713315133151421429999120120124124137137' are equal

10-01-2025T04:56:22 - [TEST_STEP][PASSED] - if (verifyEqual(a5, b5) == true): Actual object '20232023001191193737777788111919757525251231235555001201203939393988881120207878262612112160602023553193198181161616162020225656215215676721821823923966331331828277772020202033575722022068682142142582582023121232324921492118118144441191191212414124241414979720231561563838121239823982269269060626926915152727202020207979' and expected object '20232023001191193737777788111919757525251231235555001201203939393988881120207878262612112160602023553193198181161616162020225656215215676721821823923966331331828277772020202033575722022068682142142582582023121232324921492118118144441191191212414124241414979720231561563838121239823982269269060626926915152727202020207979' are equal

10-01-2025T04:56:22 - [MESSAGE][PASSED] - Actual object '20232023001191193737777788111919757525251231235555001201203939393988881120207878262612112160602023553193198181161616162020225656215215676721821823923966331331828277772020202033575722022068682142142582582023121232324921492118118144441191191212414124241414979720231561563838121239823982269269060626926915152727202020207979' and expected object '20232023001191193737777788111919757525251231235555001201203939393988881120207878262612112160602023553193198181161616162020225656215215676721821823923966331331828277772020202033575722022068682142142582582023121232324921492118118144441191191212414124241414979720231561563838121239823982269269060626926915152727202020207979' are equal

10-01-2025T04:56:22 - [TEST_STEP][PASSED] - if (verifyEqual(a6, b6) == true): Actual object '20232023000000000000000000000000001201203939393988881120207878262612112160602023663313318282777720202020335757220220686821421425825820232023' and expected object '20232023000000000000000000000000001201203939393988881120207878262612112160602023663313318282777720202020335757220220686821421425825820232023' are equal

10-01-2025T04:56:22 - [MESSAGE][PASSED] - Actual object '20232023000000000000000000000000001201203939393988881120207878262612112160602023663313318282777720202020335757220220686821421425825820232023' and expected object '20232023000000000000000000000000001201203939393988881120207878262612112160602023663313318282777720202020335757220220686821421425825820232023' are equal

10-01-2025T04:56:22 - [TEST_STEP][PASSED] - if (verifyEqual(a7, b7) == true): Actual object '202320232263522635110546110546128021280219475194759099093845038450416214162165176517472774727725652565723972394292342923202342134213455749455749954759547548893488932337423374168261682629194291947110271102198408198408728957289523664823664831028331028320231212186186363650501010191900171785851919828260460410101971973737484810101515441818808019198282608608202355285285727272721818222200505020120161611901902272276633133182827777202020203357572202206868214214258258' and expected object '202320232263522635110546110546128021280219475194759099093845038450416214162165176517472774727725652565723972394292342923202342134213455749455749954759547548893488932337423374168261682629194291947110271102198408198408728957289523664823664831028331028320231212186186363650501010191900171785851919828260460410101971973737484810101515441818808019198282608608202355285285727272721818222200505020120161611901902272276633133182827777202020203357572202206868214214258258' are equal

10-01-2025T04:56:22 - [MESSAGE][PASSED] - Actual object '202320232263522635110546110546128021280219475194759099093845038450416214162165176517472774727725652565723972394292342923202342134213455749455749954759547548893488932337423374168261682629194291947110271102198408198408728957289523664823664831028331028320231212186186363650501010191900171785851919828260460410101971973737484810101515441818808019198282608608202355285285727272721818222200505020120161611901902272276633133182827777202020203357572202206868214214258258' and expected object '202320232263522635110546110546128021280219475194759099093845038450416214162165176517472774727725652565723972394292342923202342134213455749455749954759547548893488932337423374168261682629194291947110271102198408198408728957289523664823664831028331028320231212186186363650501010191900171785851919828260460410101971973737484810101515441818808019198282608608202355285285727272721818222200505020120161611901902272276633133182827777202020203357572202206868214214258258' are equal

10-01-2025T04:56:22 - [TEST_STEP][PASSED] - if (verifyEqual(a8, b8) == true): Actual object '202320234922492271651716516893689333271733271798649864593859387640764067046704592459243088308894099409196041196041202379497949121950121950972797276180396180394222342223121812186662666287328732580965809613426134264463244632183755183755202310101901903636141499141444171780801919828258858810101971973737484810101515441818808019198282608608202355319319818116161616202022565621521567672182182392396633133182827777202020203357572202206868214214258258' and expected object '202320234922492271651716516893689333271733271798649864593859387640764067046704592459243088308894099409196041196041202379497949121950121950972797276180396180394222342223121812186662666287328732580965809613426134264463244632183755183755202310101901903636141499141444171780801919828258858810101971973737484810101515441818808019198282608608202355319319818116161616202022565621521567672182182392396633133182827777202020203357572202206868214214258258' are equal

10-01-2025T04:56:22 - [MESSAGE][PASSED] - Actual object '202320234922492271651716516893689333271733271798649864593859387640764067046704592459243088308894099409196041196041202379497949121950121950972797276180396180394222342223121812186662666287328732580965809613426134264463244632183755183755202310101901903636141499141444171780801919828258858810101971973737484810101515441818808019198282608608202355319319818116161616202022565621521567672182182392396633133182827777202020203357572202206868214214258258' and expected object '202320234922492271651716516893689333271733271798649864593859387640764067046704592459243088308894099409196041196041202379497949121950121950972797276180396180394222342223121812186662666287328732580965809613426134264463244632183755183755202310101901903636141499141444171780801919828258858810101971973737484810101515441818808019198282608608202355319319818116161616202022565621521567672182182392396633133182827777202020203357572202206868214214258258' are equal

10-01-2025T04:56:22 - [TEST_STEP][PASSED] - if (verifyEqual(a9, b9) == true): Actual object '202320232435243511013511013567486748327653327653104941049427182718495249525887588776077760773193191318113181109065109065202320231010186186363615159914144417178888191983835975971010197197373748481010151544181880801919828260860820236633133182827777202020203357572202206868214214258258' and expected object '202320232435243511013511013567486748327653327653104941049427182718495249525887588776077760773193191318113181109065109065202320231010186186363615159914144417178888191983835975971010197197373748481010151544181880801919828260860820236633133182827777202020203357572202206868214214258258' are equal

10-01-2025T04:56:22 - [MESSAGE][PASSED] - Actual object '202320232435243511013511013567486748327653327653104941049427182718495249525887588776077760773193191318113181109065109065202320231010186186363615159914144417178888191983835975971010197197373748481010151544181880801919828260860820236633133182827777202020203357572202206868214214258258' and expected object '202320232435243511013511013567486748327653327653104941049427182718495249525887588776077760773193191318113181109065109065202320231010186186363615159914144417178888191983835975971010197197373748481010151544181880801919828260860820236633133182827777202020203357572202206868214214258258' are equal

10-01-2025T04:56:22 - [TEST_STEP][PASSED] - if (verifyEqual(a10, b10) == true): Actual object '20232023000064656465341134112455624556245624561796017960676267624524452413862138625275527511304113041287128720234213421345574945574995475954754889348893233742337416826168262919429194711027110219840819840872895728952366482366483102833102832023001201203838414188101000191977772525122122616100120120393939398888112020787826261211216060202355285285727272721818222200505020120161611901902272276633133182827777202020203357572202206868214214258258' and expected object '20232023000064656465341134112455624556245624561796017960676267624524452413862138625275527511304113041287128720234213421345574945574995475954754889348893233742337416826168262919429194711027110219840819840872895728952366482366483102833102832023001201203838414188101000191977772525122122616100120120393939398888112020787826261211216060202355285285727272721818222200505020120161611901902272276633133182827777202020203357572202206868214214258258' are equal

10-01-2025T04:56:22 - [MESSAGE][PASSED] - Actual object '20232023000064656465341134112455624556245624561796017960676267624524452413862138625275527511304113041287128720234213421345574945574995475954754889348893233742337416826168262919429194711027110219840819840872895728952366482366483102833102832023001201203838414188101000191977772525122122616100120120393939398888112020787826261211216060202355285285727272721818222200505020120161611901902272276633133182827777202020203357572202206868214214258258' and expected object '20232023000064656465341134112455624556245624561796017960676267624524452413862138625275527511304113041287128720234213421345574945574995475954754889348893233742337416826168262919429194711027110219840819840872895728952366482366483102833102832023001201203838414188101000191977772525122122616100120120393939398888112020787826261211216060202355285285727272721818222200505020120161611901902272276633133182827777202020203357572202206868214214258258' are equal

10-01-2025T04:56:22 - [TEST_STEP][PASSED] - if (verifyEqual(a11, b11) == true): Actual object '202320230000147171471711865118653244523244521268312683349434948438432398239829694296945892589217984179845359353593202379497949121950121950972797276180396180394222342223121812186662666287328732580965809613426134264463244632183755183755202300119119373777778811191975752525123123555500120120393939398888112020787826261211216060202355319319818116161616202022565621521567672182182392396633133182827777202020203357572202206868214214258258' and expected object '202320230000147171471711865118653244523244521268312683349434948438432398239829694296945892589217984179845359353593202379497949121950121950972797276180396180394222342223121812186662666287328732580965809613426134264463244632183755183755202300119119373777778811191975752525123123555500120120393939398888112020787826261211216060202355319319818116161616202022565621521567672182182392396633133182827777202020203357572202206868214214258258' are equal

10-01-2025T04:56:22 - [MESSAGE][PASSED] - Actual object '202320230000147171471711865118653244523244521268312683349434948438432398239829694296945892589217984179845359353593202379497949121950121950972797276180396180394222342223121812186662666287328732580965809613426134264463244632183755183755202300119119373777778811191975752525123123555500120120393939398888112020787826261211216060202355319319818116161616202022565621521567672182182392396633133182827777202020203357572202206868214214258258' and expected object '202320230000147171471711865118653244523244521268312683349434948438432398239829694296945892589217984179845359353593202379497949121950121950972797276180396180394222342223121812186662666287328732580965809613426134264463244632183755183755202300119119373777778811191975752525123123555500120120393939398888112020787826261211216060202355319319818116161616202022565621521567672182182392396633133182827777202020203357572202206868214214258258' are equal

10-01-2025T04:56:22 - [TEST_STEP][PASSED] - if (verifyEqual(a12, b12) == true): Actual object '20232023000012032261203226386554386554390378390378829178291782595825957931793119706619706678310278310225579525579512121971212197604149604149202320230000000000000000000000000012012039393939888811202078782626121121606020236633133182827777202020203357572202206868214214258258' and expected object '20232023000012032261203226386554386554390378390378829178291782595825957931793119706619706678310278310225579525579512121971212197604149604149202320230000000000000000000000000012012039393939888811202078782626121121606020236633133182827777202020203357572202206868214214258258' are equal

10-01-2025T04:56:22 - [MESSAGE][PASSED] - Actual object '20232023000012032261203226386554386554390378390378829178291782595825957931793119706619706678310278310225579525579512121971212197604149604149202320230000000000000000000000000012012039393939888811202078782626121121606020236633133182827777202020203357572202206868214214258258' and expected object '20232023000012032261203226386554386554390378390378829178291782595825957931793119706619706678310278310225579525579512121971212197604149604149202320230000000000000000000000000012012039393939888811202078782626121121606020236633133182827777202020203357572202206868214214258258' are equal

10-01-2025T04:56:22 - [TEST_STEP][PASSED] - closeBrowser(): Browser is closed

10-01-2025T04:56:23 - [MESSAGE][PASSED] - Browser is closed]]></system-out>
         <system-err><![CDATA[]]></system-err>
      </testcase>
      <testcase name="Test Cases/Сверки дашбордов/Факторный анализ сверка дашбордов" time="199.762" classname="Test Cases/Сверки дашбордов/Факторный анализ сверка дашбордов" status="FAILED">
         <failure type="FAILED" message="Test Cases/Сверки дашбордов/Факторный анализ сверка дашбордов FAILED.&#xa;Reason:&#xa;com.kms.katalon.core.exception.StepFailedException: Unable to verify equal between actual object '-1291521' and expected object '-1252328' (Root cause: com.kms.katalon.core.exception.StepFailedException: Actual object '-1291521' and expected object '-1252328' are not equal&#xa;	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.doCall(VerifyEqualKeyword.groovy:58)&#xa;	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.call(VerifyEqualKeyword.groovy)&#xa;	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:75)&#xa;	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.verifyEqual(VerifyEqualKeyword.groovy:63)&#xa;	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.execute(VerifyEqualKeyword.groovy:44)&#xa;	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:74)&#xa;	at com.kms.katalon.core.keyword.BuiltinKeywords.verifyEqual(BuiltinKeywords.groovy:146)&#xa;	at jdk.internal.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)&#xa;	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#xa;	at Факторный анализ сверка дашбордов.Compare(Факторный анализ сверка дашбордов:682)&#xa;	at Факторный анализ сверка дашбордов.Test(Факторный анализ сверка дашбордов:446)&#xa;	at Факторный анализ сверка дашбордов.run(Факторный анализ сверка дашбордов:44)&#xa;	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)&#xa;	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)&#xa;	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:448)&#xa;	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:439)&#xa;	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:418)&#xa;	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:410)&#xa;	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:285)&#xa;	at com.kms.katalon.core.common.CommonExecutor.accessTestCaseMainPhase(CommonExecutor.java:65)&#xa;	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:150)&#xa;	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:106)&#xa;	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:180)&#xa;	at TempTestSuite1736466949911.run(TempTestSuite1736466949911.groovy:35)&#xa;	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#xa;	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)&#xa;	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#xa;)&#xa;	at com.kms.katalon.core.keyword.internal.KeywordMain.stepFailed(KeywordMain.groovy:39)&#xa;	at com.kms.katalon.core.keyword.internal.KeywordMain.stepFailed(KeywordMain.groovy)&#xa;	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:77)&#xa;	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.verifyEqual(VerifyEqualKeyword.groovy:63)&#xa;	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.execute(VerifyEqualKeyword.groovy:44)&#xa;	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:74)&#xa;	at com.kms.katalon.core.keyword.BuiltinKeywords.verifyEqual(BuiltinKeywords.groovy:146)&#xa;	at jdk.internal.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)&#xa;	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#xa;	at Факторный анализ сверка дашбордов.Compare(Факторный анализ сверка дашбордов:682)&#xa;	at Факторный анализ сверка дашбордов.Test(Факторный анализ сверка дашбордов:446)&#xa;	at Факторный анализ сверка дашбордов.run(Факторный анализ сверка дашбордов:44)&#xa;	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)&#xa;	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)&#xa;	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:448)&#xa;	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:439)&#xa;	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:418)&#xa;	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:410)&#xa;	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:285)&#xa;	at com.kms.katalon.core.common.CommonExecutor.accessTestCaseMainPhase(CommonExecutor.java:65)&#xa;	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:150)&#xa;	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:106)&#xa;	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:180)&#xa;	at TempTestSuite1736466949911.run(TempTestSuite1736466949911.groovy:35)&#xa;	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#xa;	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)&#xa;	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#xa;Caused by: com.kms.katalon.core.exception.StepFailedException: Actual object '-1291521' and expected object '-1252328' are not equal&#xa;	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.doCall(VerifyEqualKeyword.groovy:58)&#xa;	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.call(VerifyEqualKeyword.groovy)&#xa;	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:75)&#xa;	... 24 more&#xa;"/>
         <system-out><![CDATA[10-01-2025T04:56:23 - [TEST_CASE][FAILED] - Test Cases/Сверки дашбордов/Факторный анализ сверка дашбордов: Test Cases/Сверки дашбордов/Факторный анализ сверка дашбордов FAILED.
Reason:
com.kms.katalon.core.exception.StepFailedException: Unable to verify equal between actual object '-1291521' and expected object '-1252328' (Root cause: com.kms.katalon.core.exception.StepFailedException: Actual object '-1291521' and expected object '-1252328' are not equal
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.doCall(VerifyEqualKeyword.groovy:58)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.call(VerifyEqualKeyword.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:75)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.verifyEqual(VerifyEqualKeyword.groovy:63)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.execute(VerifyEqualKeyword.groovy:44)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:74)
	at com.kms.katalon.core.keyword.BuiltinKeywords.verifyEqual(BuiltinKeywords.groovy:146)
	at jdk.internal.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at Факторный анализ сверка дашбордов.Compare(Факторный анализ сверка дашбордов:682)
	at Факторный анализ сверка дашбордов.Test(Факторный анализ сверка дашбордов:446)
	at Факторный анализ сверка дашбордов.run(Факторный анализ сверка дашбордов:44)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:448)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:439)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:418)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:410)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:285)
	at com.kms.katalon.core.common.CommonExecutor.accessTestCaseMainPhase(CommonExecutor.java:65)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:150)
	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:106)
	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:180)
	at TempTestSuite1736466949911.run(TempTestSuite1736466949911.groovy:35)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
)
	at com.kms.katalon.core.keyword.internal.KeywordMain.stepFailed(KeywordMain.groovy:39)
	at com.kms.katalon.core.keyword.internal.KeywordMain.stepFailed(KeywordMain.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:77)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.verifyEqual(VerifyEqualKeyword.groovy:63)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.execute(VerifyEqualKeyword.groovy:44)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:74)
	at com.kms.katalon.core.keyword.BuiltinKeywords.verifyEqual(BuiltinKeywords.groovy:146)
	at jdk.internal.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at Факторный анализ сверка дашбордов.Compare(Факторный анализ сверка дашбордов:682)
	at Факторный анализ сверка дашбордов.Test(Факторный анализ сверка дашбордов:446)
	at Факторный анализ сверка дашбордов.run(Факторный анализ сверка дашбордов:44)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:448)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:439)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:418)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:410)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:285)
	at com.kms.katalon.core.common.CommonExecutor.accessTestCaseMainPhase(CommonExecutor.java:65)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:150)
	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:106)
	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:180)
	at TempTestSuite1736466949911.run(TempTestSuite1736466949911.groovy:35)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
Caused by: com.kms.katalon.core.exception.StepFailedException: Actual object '-1291521' and expected object '-1252328' are not equal
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.doCall(VerifyEqualKeyword.groovy:58)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.call(VerifyEqualKeyword.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:75)
	... 24 more


10-01-2025T04:56:23 - [TEST_STEP][PASSED] - date = new java.util.Date(): null

10-01-2025T04:56:23 - [TEST_STEP][PASSED] - todaysDate = date.format("dd.MM.yyyy"): null

10-01-2025T04:56:23 - [TEST_STEP][PASSED] - typeOfData = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:56:23 - [TEST_STEP][PASSED] - otobrajeniyeDannyh = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:56:23 - [TEST_STEP][PASSED] - println(todaysDate): null

10-01-2025T04:56:23 - [TEST_STEP][PASSED] - vidget = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:56:23 - [TEST_STEP][PASSED] - x = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:56:23 - [TEST_STEP][PASSED] - y = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:56:23 - [TEST_STEP][PASSED] - DZO = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:56:23 - [TEST_STEP][PASSED] - openBrowser(""): Browser is opened with url: ''

10-01-2025T04:56:23 - [MESSAGE][INFO] - Starting 'Chrome' driver

10-01-2025T04:56:23 - [MESSAGE][INFO] - Action delay is set to 0 milliseconds

10-01-2025T04:56:24 - [MESSAGE][PASSED] - Browser is opened with url: ''

10-01-2025T04:56:24 - [TEST_STEP][PASSED] - run = 1: null

10-01-2025T04:56:24 - [TEST_STEP][PASSED] - for ([run = 1, run < 3, (run++)]): null

10-01-2025T04:56:24 - [TEST_STEP][PASSED] - Script1719551244403.Test(run, todaysDate, typeOfData, otobrajeniyeDannyh, x, y, vidget, DZO): null

10-01-2025T04:56:24 - [TEST_STEP][PASSED] - navigateToUrl(findTestData("PlanFact").getValue(10, 3)): Navigate to 'https://bi.rosseti.digital/viewer?dashboardGuid=2301950b23be4ed89c1df75f2020051e&sheetGuid=ccd7d7486b3d4e6fa0ee9b1eaebed46c&fit=true' successfully

10-01-2025T04:56:38 - [MESSAGE][PASSED] - Navigate to 'https://bi.rosseti.digital/viewer?dashboardGuid=2301950b23be4ed89c1df75f2020051e&sheetGuid=ccd7d7486b3d4e6fa0ee9b1eaebed46c&fit=true' successfully

10-01-2025T04:56:38 - [TEST_STEP][PASSED] - Script1719551244403.Autorization(run): null

10-01-2025T04:56:38 - [TEST_STEP][PASSED] - delay(10): Delayed 10 second(s)

10-01-2025T04:56:48 - [MESSAGE][PASSED] - Delayed 10 second(s)

10-01-2025T04:56:48 - [TEST_STEP][PASSED] - if (run == 1): Delayed 10 second(s)

10-01-2025T04:56:48 - [TEST_STEP][PASSED] - setText(findTestObject("Страница авторизации/input__username"), findTestData("PlanFact").getValue(8, 1)): Text 'liazgina-di' is set on object 'Object Repository/Страница авторизации/input__username'

10-01-2025T04:56:49 - [MESSAGE][PASSED] - Text 'liazgina-di' is set on object 'Object Repository/Страница авторизации/input__username'

10-01-2025T04:56:49 - [TEST_STEP][PASSED] - setText(findTestObject("Страница авторизации/input__password"), findTestData("PlanFact").getValue(9, 1)): Text ')$%5srZ8o688Dm#q' is set on object 'Object Repository/Страница авторизации/input__password'

10-01-2025T04:56:49 - [MESSAGE][PASSED] - Text ')$%5srZ8o688Dm#q' is set on object 'Object Repository/Страница авторизации/input__password'

10-01-2025T04:56:49 - [TEST_STEP][PASSED] - click(findTestObject("Страница авторизации/button_")): Object: 'Object Repository/Страница авторизации/button_' is clicked on

10-01-2025T04:56:51 - [MESSAGE][PASSED] - Object: 'Object Repository/Страница авторизации/button_' is clicked on

10-01-2025T04:56:51 - [TEST_STEP][PASSED] - delay(10): Delayed 10 second(s)

10-01-2025T04:57:01 - [MESSAGE][PASSED] - Delayed 10 second(s)

10-01-2025T04:57:01 - [TEST_STEP][PASSED] - i = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:57:01 - [TEST_STEP][PASSED] - ii = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:57:01 - [TEST_STEP][PASSED] - a = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:57:01 - [TEST_STEP][PASSED] - a1 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:57:01 - [TEST_STEP][PASSED] - a2 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:57:01 - [TEST_STEP][PASSED] - click(findTestObject("Факторный анализ/Фильтр Период")): Object: 'Object Repository/Факторный анализ/Фильтр Период' is clicked on

10-01-2025T04:57:08 - [MESSAGE][PASSED] - Object: 'Object Repository/Факторный анализ/Фильтр Период' is clicked on

10-01-2025T04:57:08 - [TEST_STEP][PASSED] - click(findTestObject("Факторный анализ/Снять выделение в фильтре Дата")): Object: 'Object Repository/Факторный анализ/Снять выделение в фильтре Дата' is clicked on

10-01-2025T04:57:09 - [MESSAGE][PASSED] - Object: 'Object Repository/Факторный анализ/Снять выделение в фильтре Дата' is clicked on

10-01-2025T04:57:09 - [TEST_STEP][PASSED] - click(findTestObject("Факторный анализ/Применить в фильтре Дата")): Object: 'Object Repository/Факторный анализ/Применить в фильтре Дата' is clicked on

10-01-2025T04:57:09 - [MESSAGE][PASSED] - Object: 'Object Repository/Факторный анализ/Применить в фильтре Дата' is clicked on

10-01-2025T04:57:09 - [TEST_STEP][PASSED] - delay(10): Delayed 10 second(s)

10-01-2025T04:57:19 - [MESSAGE][PASSED] - Delayed 10 second(s)

10-01-2025T04:57:19 - [TEST_STEP][PASSED] - click(findTestObject("Факторный анализ/Фильтр Период")): Object: 'Object Repository/Факторный анализ/Фильтр Период' is clicked on

10-01-2025T04:57:20 - [MESSAGE][PASSED] - Object: 'Object Repository/Факторный анализ/Фильтр Период' is clicked on

10-01-2025T04:57:20 - [TEST_STEP][PASSED] - click(findTestObject("Факторный анализ/Снять выделение в фильтре Дата")): Object: 'Object Repository/Факторный анализ/Снять выделение в фильтре Дата' is clicked on

10-01-2025T04:57:20 - [MESSAGE][PASSED] - Object: 'Object Repository/Факторный анализ/Снять выделение в фильтре Дата' is clicked on

10-01-2025T04:57:20 - [TEST_STEP][PASSED] - scrollToElement(findTestObject("Факторный анализ/2024 список"), 30): Scroll to object 'Object Repository/Факторный анализ/2024 список' successfully

10-01-2025T04:57:21 - [MESSAGE][PASSED] - Scroll to object 'Object Repository/Факторный анализ/2024 список' successfully

10-01-2025T04:57:21 - [TEST_STEP][PASSED] - click(findTestObject("Факторный анализ/2024 список")): Object: 'Object Repository/Факторный анализ/2024 список' is clicked on

10-01-2025T04:57:21 - [MESSAGE][PASSED] - Object: 'Object Repository/Факторный анализ/2024 список' is clicked on

10-01-2025T04:57:21 - [TEST_STEP][PASSED] - scrollToElement(findTestObject("Факторный анализ/1 квартал 2024 выбрать"), 30): Scroll to object 'Object Repository/Факторный анализ/1 квартал 2024 выбрать' successfully

10-01-2025T04:57:21 - [MESSAGE][PASSED] - Scroll to object 'Object Repository/Факторный анализ/1 квартал 2024 выбрать' successfully

10-01-2025T04:57:21 - [TEST_STEP][PASSED] - click(findTestObject("Факторный анализ/1 квартал 2024 выбрать")): Object: 'Object Repository/Факторный анализ/1 квартал 2024 выбрать' is clicked on

10-01-2025T04:57:22 - [MESSAGE][PASSED] - Object: 'Object Repository/Факторный анализ/1 квартал 2024 выбрать' is clicked on

10-01-2025T04:57:22 - [TEST_STEP][PASSED] - scrollToElement(findTestObject("Факторный анализ/1 квартал 2024 выбрать"), 30): Scroll to object 'Object Repository/Факторный анализ/1 квартал 2024 выбрать' successfully

10-01-2025T04:57:22 - [MESSAGE][PASSED] - Scroll to object 'Object Repository/Факторный анализ/1 квартал 2024 выбрать' successfully

10-01-2025T04:57:22 - [TEST_STEP][PASSED] - click(findTestObject("Факторный анализ/2 квартал 2024 выбрать"), CONTINUE_ON_FAILURE): Object: 'Object Repository/Факторный анализ/2 квартал 2024 выбрать' is clicked on

10-01-2025T04:57:23 - [MESSAGE][PASSED] - Object: 'Object Repository/Факторный анализ/2 квартал 2024 выбрать' is clicked on

10-01-2025T04:57:23 - [TEST_STEP][PASSED] - click(findTestObject("Факторный анализ/3 квартал 2024 выбрать"), CONTINUE_ON_FAILURE): Object: 'Object Repository/Факторный анализ/3 квартал 2024 выбрать' is clicked on

10-01-2025T04:57:23 - [MESSAGE][PASSED] - Object: 'Object Repository/Факторный анализ/3 квартал 2024 выбрать' is clicked on

10-01-2025T04:57:23 - [TEST_STEP][PASSED] - scrollToElement(findTestObject("Факторный анализ/4 квартал 2024 список"), 30): Scroll to object 'Object Repository/Факторный анализ/4 квартал 2024 список' successfully

10-01-2025T04:57:24 - [MESSAGE][PASSED] - Scroll to object 'Object Repository/Факторный анализ/4 квартал 2024 список' successfully

10-01-2025T04:57:24 - [TEST_STEP][PASSED] - click(findTestObject("Факторный анализ/4 квартал 2024 список"), CONTINUE_ON_FAILURE): Object: 'Object Repository/Факторный анализ/4 квартал 2024 список' is clicked on

10-01-2025T04:57:24 - [MESSAGE][PASSED] - Object: 'Object Repository/Факторный анализ/4 квартал 2024 список' is clicked on

10-01-2025T04:57:24 - [TEST_STEP][PASSED] - scrollToElement(findTestObject("Факторный анализ/Октябрь 2024"), 30): Scroll to object 'Object Repository/Факторный анализ/Октябрь 2024' successfully

10-01-2025T04:57:24 - [MESSAGE][PASSED] - Scroll to object 'Object Repository/Факторный анализ/Октябрь 2024' successfully

10-01-2025T04:57:24 - [TEST_STEP][PASSED] - click(findTestObject("Факторный анализ/Октябрь 2024"), CONTINUE_ON_FAILURE): Object: 'Object Repository/Факторный анализ/Октябрь 2024' is clicked on

10-01-2025T04:57:25 - [MESSAGE][PASSED] - Object: 'Object Repository/Факторный анализ/Октябрь 2024' is clicked on

10-01-2025T04:57:25 - [TEST_STEP][PASSED] - scrollToElement(findTestObject("Факторный анализ/Ноябрь 2024"), 30): Scroll to object 'Object Repository/Факторный анализ/Ноябрь 2024' successfully

10-01-2025T04:57:25 - [MESSAGE][PASSED] - Scroll to object 'Object Repository/Факторный анализ/Ноябрь 2024' successfully

10-01-2025T04:57:25 - [TEST_STEP][PASSED] - click(findTestObject("Факторный анализ/Ноябрь 2024"), CONTINUE_ON_FAILURE): Object: 'Object Repository/Факторный анализ/Ноябрь 2024' is clicked on

10-01-2025T04:57:25 - [MESSAGE][PASSED] - Object: 'Object Repository/Факторный анализ/Ноябрь 2024' is clicked on

10-01-2025T04:57:25 - [TEST_STEP][PASSED] - scrollToElement(findTestObject("Факторный анализ/Заголовок дашборда"), 30): Scroll to object 'Object Repository/Факторный анализ/Заголовок дашборда' successfully

10-01-2025T04:57:26 - [MESSAGE][PASSED] - Scroll to object 'Object Repository/Факторный анализ/Заголовок дашборда' successfully

10-01-2025T04:57:26 - [TEST_STEP][PASSED] - click(findTestObject("Факторный анализ/Применить в фильтре Дата")): Object: 'Object Repository/Факторный анализ/Применить в фильтре Дата' is clicked on

10-01-2025T04:57:26 - [MESSAGE][PASSED] - Object: 'Object Repository/Факторный анализ/Применить в фильтре Дата' is clicked on

10-01-2025T04:57:26 - [TEST_STEP][PASSED] - if (run == 1): null

10-01-2025T04:57:26 - [TEST_STEP][PASSED] - a = getText(findTestObject("Факторный анализ/Отклонения выручки по факторам Блок руководителя")): Text of object 'Object Repository/Факторный анализ/Отклонения выручки по факторам Блок руководителя' is: '-1 291 521-1 291 521
31 69431 694
Отклонение (объём услуг)
Отклонение (средний тариф)
ПАО Россети'

10-01-2025T04:57:28 - [MESSAGE][PASSED] - Text of object 'Object Repository/Факторный анализ/Отклонения выручки по факторам Блок руководителя' is: '-1 291 521-1 291 521
31 69431 694
Отклонение (объём услуг)
Отклонение (средний тариф)
ПАО Россети'

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - a = a.replaceAll("[\r?
|
]", "/"): null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - i = a.indexOf("Отклонение"): null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - if (i > -1): null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - i = i: null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - a = substring(0, i).trim(): null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - println("a: " + a): null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - i = a.indexOf("/"): null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - if (i > -1): null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - a1 = a.substring(0, i): null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - println("a1: " + a1): null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - a2 = a.substring(a1.length() + 1, a.length()): null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - println("a2: " + a2): null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - i = a1.length() / 2: null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - if (i > -1): null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - a1 = replaceAll("\s+", "").trim(): null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - println("a1: " + a1): null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - i = a2.length() / 2: null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - if (i > -1): null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - a2 = replaceAll("\s+", "").trim(): null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - println("a2: " + a2): null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - tableA = getText(findTestObject("Факторный анализ/AllTable1")).replaceAll("[\r?
|
]", "/"): Text of object 'Object Repository/Факторный анализ/AllTable1' is: 'ДЗО
Филиал
Отклонение (объём услуг)
Отклонение (средний тариф)
АО «Тываэнерго» АО "Тываэнерго" 486 - 128
АО «Чеченэнерго» АО «Чеченэнерго» -4 079 47
Россети Волга Мордовэнерго -3 530 -93
Оренбургэнерго -13 669 - 135
Пензаэнерго -8 434 -67
Самарские РС -16 427 -1 202
Саратовские РС -16 583 - 569
Ульяновские РС -6 101 - 216
Чувашэнерго -5 275 152
Россети Кубань Кубаньэнерго -64 770 599
Россети Ленэнерго (ГК) Ленинградская область -36 803 1 111
г. Санкт-Петербург -51 373 - 108
Россети Московский регион Московская область 5 429 - 877
г. Москва 4 012 10
Россети Северный Кавказ (ГК) Дагестанская энергосбытовая компания - 111 69
Дагэнерго -8 053 589
Ингушэнерго -1 797 137
Каббалкэнерго -3 286 70
Карачаево-Черкесскэнерго -2 129 13
Севкавказэнерго -3 775 172
Ставропольэнерго -10 373 - 198
Россети Северо-Запад Архангельский филиал 74 - 112
Вологодский филиал 277 8
Карельский филиал -91 186
Мурманский филиал 102 46
Новгородский филиал 227 -48
Псковский филиал 151 -15
филиал в Республике Коми -63 41
Россети Сибирь (ГК) Алтайэнерго 332 333
Бурятэнерго - 119 329
ГАЭС 153 -21
Красноярскэнерго 1 368 - 676
Кузбассэнерго-РЭС - 461 932
Омскэнерго 188 -70
Хакасэнерго 422 - 442
Читаэнерго -77 206
Россети Томск Томская распределительная компания -8 299 - 146
Россети Тюмень Россети Тюмень -82 026 - 638
Россети Урал (ГК) Пермэнерго 669 - 246
Свердловэнерго 964 315
Челябэнерго 1 045 - 720
Россети ФСК ЕЭС Итого по ФСК ЕЭС -17 684 -6 088
Россети Центр Белгородэнерго 347 138
Брянскэнерго -5 765 17
Воронежэнерго -15 652 167
Костромаэнерго 127 -11
Курскэнерго -2 510 157
Липецкэнерго 853 - 381
Орелэнерго -4 613 -57
Смоленскэнерго -8 540 48
Тамбовэнерго -6 716 -12
Тверьэнерго 376 192
Ярэнерго -6 276 95
Россети Центр и Приволжье (ГК) Владимирэнерго 574 64
Ивэнерго 201 62
Калугаэнерго 706 -61
Кировэнерго 511 30
Мариэнерго 189 23
Нижновэнерго 849 359
Рязаньэнерго 229 70
Тулэнерго 877 - 292
Удмуртэнерго 401 20
Россети Юг (ГК) АО «ВМЭС» -4 225 59
Астраханьэнерго -6 426 68
Волгоградэнерго -11 043 - 400
Калмэнерго -1 859 -2
Ростовэнерго -22 464 75
Россети Янтарь Россети Янтарь 419 -47'

10-01-2025T04:57:28 - [MESSAGE][PASSED] - Text of object 'Object Repository/Факторный анализ/AllTable1' is: 'ДЗО
Филиал
Отклонение (объём услуг)
Отклонение (средний тариф)
АО «Тываэнерго» АО "Тываэнерго" 486 - 128
АО «Чеченэнерго» АО «Чеченэнерго» -4 079 47
Россети Волга Мордовэнерго -3 530 -93
Оренбургэнерго -13 669 - 135
Пензаэнерго -8 434 -67
Самарские РС -16 427 -1 202
Саратовские РС -16 583 - 569
Ульяновские РС -6 101 - 216
Чувашэнерго -5 275 152
Россети Кубань Кубаньэнерго -64 770 599
Россети Ленэнерго (ГК) Ленинградская область -36 803 1 111
г. Санкт-Петербург -51 373 - 108
Россети Московский регион Московская область 5 429 - 877
г. Москва 4 012 10
Россети Северный Кавказ (ГК) Дагестанская энергосбытовая компания - 111 69
Дагэнерго -8 053 589
Ингушэнерго -1 797 137
Каббалкэнерго -3 286 70
Карачаево-Черкесскэнерго -2 129 13
Севкавказэнерго -3 775 172
Ставропольэнерго -10 373 - 198
Россети Северо-Запад Архангельский филиал 74 - 112
Вологодский филиал 277 8
Карельский филиал -91 186
Мурманский филиал 102 46
Новгородский филиал 227 -48
Псковский филиал 151 -15
филиал в Республике Коми -63 41
Россети Сибирь (ГК) Алтайэнерго 332 333
Бурятэнерго - 119 329
ГАЭС 153 -21
Красноярскэнерго 1 368 - 676
Кузбассэнерго-РЭС - 461 932
Омскэнерго 188 -70
Хакасэнерго 422 - 442
Читаэнерго -77 206
Россети Томск Томская распределительная компания -8 299 - 146
Россети Тюмень Россети Тюмень -82 026 - 638
Россети Урал (ГК) Пермэнерго 669 - 246
Свердловэнерго 964 315
Челябэнерго 1 045 - 720
Россети ФСК ЕЭС Итого по ФСК ЕЭС -17 684 -6 088
Россети Центр Белгородэнерго 347 138
Брянскэнерго -5 765 17
Воронежэнерго -15 652 167
Костромаэнерго 127 -11
Курскэнерго -2 510 157
Липецкэнерго 853 - 381
Орелэнерго -4 613 -57
Смоленскэнерго -8 540 48
Тамбовэнерго -6 716 -12
Тверьэнерго 376 192
Ярэнерго -6 276 95
Россети Центр и Приволжье (ГК) Владимирэнерго 574 64
Ивэнерго 201 62
Калугаэнерго 706 -61
Кировэнерго 511 30
Мариэнерго 189 23
Нижновэнерго 849 359
Рязаньэнерго 229 70
Тулэнерго 877 - 292
Удмуртэнерго 401 20
Россети Юг (ГК) АО «ВМЭС» -4 225 59
Астраханьэнерго -6 426 68
Волгоградэнерго -11 043 - 400
Калмэнерго -1 859 -2
Ростовэнерго -22 464 75
Россети Янтарь Россети Янтарь 419 -47'

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - println("tableA: " + tableA): null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - for ([i = 1, i < 5, (i++)]): null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - ii = tableA.indexOf("/") + 1: null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - tableA = tableA.substring(ii, tableA.length()): null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - ii = tableA.indexOf("/") + 1: null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - tableA = tableA.substring(ii, tableA.length()): null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - ii = tableA.indexOf("/") + 1: null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - tableA = tableA.substring(ii, tableA.length()): null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - ii = tableA.indexOf("/") + 1: null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - tableA = tableA.substring(ii, tableA.length()): null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - println("tableA: " + tableA): null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - TyA = Script1719551244403.GetData(x = tableA): null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - i2 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - i2 = x.indexOf("/") + 1: null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - x = replaceAll("\p{P}", "").trim(): null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - return x: null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - println("TyA: " + TyA): null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - tableA = Script1719551244403.NewDZO(x = tableA): null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - i3 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - i3 = x.indexOf("/") + 1: null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - x = x.substring(i3, x.length()): null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - return x: null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - ChA = Script1719551244403.GetData(x = tableA): null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - i2 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - i2 = x.indexOf("/") + 1: null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - x = replaceAll("\p{P}", "").trim(): null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - return x: null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - println("ChA: " + ChA): null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - tableA = Script1719551244403.NewDZO(x = tableA): null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - i3 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - i3 = x.indexOf("/") + 1: null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - x = x.substring(i3, x.length()): null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - return x: null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - i = tableA.indexOf("Кубань"): null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - VA = replaceAll("\p{P}", "").trim(): null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - println("VA: " + VA): null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - for ([i = 1, i < 8, (i++)]): null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - tableA = Script1719551244403.NewDZO(x = tableA): null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - i3 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - i3 = x.indexOf("/") + 1: null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - x = x.substring(i3, x.length()): null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - return x: null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - tableA = Script1719551244403.NewDZO(x = tableA): null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - i3 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - i3 = x.indexOf("/") + 1: null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - x = x.substring(i3, x.length()): null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - return x: null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - tableA = Script1719551244403.NewDZO(x = tableA): null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - i3 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - i3 = x.indexOf("/") + 1: null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - x = x.substring(i3, x.length()): null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - return x: null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - tableA = Script1719551244403.NewDZO(x = tableA): null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - i3 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - i3 = x.indexOf("/") + 1: null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - x = x.substring(i3, x.length()): null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - return x: null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - tableA = Script1719551244403.NewDZO(x = tableA): null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - i3 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - i3 = x.indexOf("/") + 1: null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - x = x.substring(i3, x.length()): null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - return x: null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - tableA = Script1719551244403.NewDZO(x = tableA): null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - i3 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - i3 = x.indexOf("/") + 1: null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - x = x.substring(i3, x.length()): null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - return x: null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - tableA = Script1719551244403.NewDZO(x = tableA): null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - i3 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - i3 = x.indexOf("/") + 1: null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - x = x.substring(i3, x.length()): null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - return x: null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - i = tableA.indexOf("Ленэнерго"): null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - KuA = Script1719551244403.GetData(x = tableA): null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - i2 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - i2 = x.indexOf("/") + 1: null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - x = replaceAll("\p{P}", "").trim(): null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - return x: null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - println("KuA: " + KuA): null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - tableA = Script1719551244403.NewDZO(x = tableA): null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - i3 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - i3 = x.indexOf("/") + 1: null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - x = x.substring(i3, x.length()): null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - return x: null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - i = tableA.indexOf("Московский"): null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - LenA = replaceAll("\p{P}", "").trim(): null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - println("LenA: " + LenA): null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - tableA = Script1719551244403.NewDZO(x = tableA): null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - i3 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - i3 = x.indexOf("/") + 1: null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - x = x.substring(i3, x.length()): null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - return x: null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - tableA = Script1719551244403.NewDZO(x = tableA): null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - i3 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - i3 = x.indexOf("/") + 1: null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - x = x.substring(i3, x.length()): null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - return x: null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - i = tableA.indexOf("Кавказ"): null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - MosA = replaceAll("\p{P}", "").trim(): null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - println("MosA: " + MosA): null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - for ([i = 1, i < 3, (i++)]): null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - tableA = Script1719551244403.NewDZO(x = tableA): null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - i3 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - i3 = x.indexOf("/") + 1: null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - x = x.substring(i3, x.length()): null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - return x: null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - tableA = Script1719551244403.NewDZO(x = tableA): null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - i3 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - i3 = x.indexOf("/") + 1: null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - x = x.substring(i3, x.length()): null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - return x: null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - i = tableA.indexOf("Запад"): null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - SKA = replaceAll("\p{P}", "").trim(): null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - println("SKA: " + SKA): null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - for ([i = 1, i < 7, (i++)]): null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - tableA = Script1719551244403.NewDZO(x = tableA): null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - i3 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - i3 = x.indexOf("/") + 1: null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - x = x.substring(i3, x.length()): null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - return x: null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - tableA = Script1719551244403.NewDZO(x = tableA): null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - i3 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - i3 = x.indexOf("/") + 1: null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - x = x.substring(i3, x.length()): null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - return x: null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - tableA = Script1719551244403.NewDZO(x = tableA): null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - i3 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - i3 = x.indexOf("/") + 1: null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - x = x.substring(i3, x.length()): null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - return x: null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - tableA = Script1719551244403.NewDZO(x = tableA): null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - i3 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - i3 = x.indexOf("/") + 1: null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - x = x.substring(i3, x.length()): null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - return x: null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - tableA = Script1719551244403.NewDZO(x = tableA): null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - i3 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - i3 = x.indexOf("/") + 1: null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - x = x.substring(i3, x.length()): null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - return x: null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - tableA = Script1719551244403.NewDZO(x = tableA): null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - i3 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - i3 = x.indexOf("/") + 1: null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - x = x.substring(i3, x.length()): null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - return x: null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - i = tableA.indexOf("Сибирь"): null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - SZA = replaceAll("\p{P}", "").trim(): null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - println("SZA: " + SZA): null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - for ([i = 1, i < 8, (i++)]): null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - tableA = Script1719551244403.NewDZO(x = tableA): null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - i3 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - i3 = x.indexOf("/") + 1: null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - x = x.substring(i3, x.length()): null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - return x: null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - tableA = Script1719551244403.NewDZO(x = tableA): null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - i3 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - i3 = x.indexOf("/") + 1: null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - x = x.substring(i3, x.length()): null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - return x: null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - tableA = Script1719551244403.NewDZO(x = tableA): null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - i3 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - i3 = x.indexOf("/") + 1: null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - x = x.substring(i3, x.length()): null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - return x: null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - tableA = Script1719551244403.NewDZO(x = tableA): null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - i3 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - i3 = x.indexOf("/") + 1: null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - x = x.substring(i3, x.length()): null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - return x: null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - tableA = Script1719551244403.NewDZO(x = tableA): null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - i3 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - i3 = x.indexOf("/") + 1: null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - x = x.substring(i3, x.length()): null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - return x: null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - tableA = Script1719551244403.NewDZO(x = tableA): null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - i3 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - i3 = x.indexOf("/") + 1: null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - x = x.substring(i3, x.length()): null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - return x: null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - tableA = Script1719551244403.NewDZO(x = tableA): null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - i3 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - i3 = x.indexOf("/") + 1: null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - x = x.substring(i3, x.length()): null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - return x: null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - i = tableA.indexOf("Томск"): null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - SiA = replaceAll("\p{P}", "").trim(): null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - println("SiA: " + SiA): null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - for ([i = 1, i < 9, (i++)]): null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - tableA = Script1719551244403.NewDZO(x = tableA): null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - i3 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - i3 = x.indexOf("/") + 1: null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - x = x.substring(i3, x.length()): null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - return x: null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - tableA = Script1719551244403.NewDZO(x = tableA): null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - i3 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - i3 = x.indexOf("/") + 1: null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - x = x.substring(i3, x.length()): null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - return x: null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - tableA = Script1719551244403.NewDZO(x = tableA): null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - i3 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - i3 = x.indexOf("/") + 1: null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - x = x.substring(i3, x.length()): null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - return x: null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - tableA = Script1719551244403.NewDZO(x = tableA): null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - i3 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - i3 = x.indexOf("/") + 1: null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - x = x.substring(i3, x.length()): null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - return x: null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - tableA = Script1719551244403.NewDZO(x = tableA): null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - i3 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - i3 = x.indexOf("/") + 1: null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - x = x.substring(i3, x.length()): null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - return x: null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - tableA = Script1719551244403.NewDZO(x = tableA): null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - i3 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - i3 = x.indexOf("/") + 1: null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - x = x.substring(i3, x.length()): null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - return x: null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - tableA = Script1719551244403.NewDZO(x = tableA): null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - i3 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - i3 = x.indexOf("/") + 1: null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - x = x.substring(i3, x.length()): null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - return x: null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - tableA = Script1719551244403.NewDZO(x = tableA): null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - i3 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - i3 = x.indexOf("/") + 1: null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - x = x.substring(i3, x.length()): null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - return x: null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - i = tableA.indexOf("Тюмень"): null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - ToA = replaceAll("\p{P}", "").trim(): null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - println("ToA: " + ToA): null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - tableA = Script1719551244403.NewDZO(x = tableA): null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - i3 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - i3 = x.indexOf("/") + 1: null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - x = x.substring(i3, x.length()): null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - return x: null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - TyuA = replaceAll("\p{P}", "").trim(): null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - println("TyuA: " + TyuA): null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - tableA = Script1719551244403.NewDZO(x = tableA): null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - i3 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - i3 = x.indexOf("/") + 1: null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - x = x.substring(i3, x.length()): null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - return x: null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - i = tableA.indexOf("ЕЭС"): null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - UrA = replaceAll("\p{P}", "").trim(): null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - println("UrA: " + UrA): null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - for ([i = 1, i < 4, (i++)]): null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - tableA = Script1719551244403.NewDZO(x = tableA): null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - i3 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - i3 = x.indexOf("/") + 1: null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - x = x.substring(i3, x.length()): null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - return x: null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - tableA = Script1719551244403.NewDZO(x = tableA): null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - i3 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - i3 = x.indexOf("/") + 1: null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - x = x.substring(i3, x.length()): null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - return x: null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - tableA = Script1719551244403.NewDZO(x = tableA): null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - i3 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - i3 = x.indexOf("/") + 1: null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - x = x.substring(i3, x.length()): null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - return x: null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - i = tableA.indexOf("Центр"): null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - FSKA = replaceAll("\p{P}", "").trim(): null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - println("FSKA: " + FSKA): null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - tableA = Script1719551244403.NewDZO(x = tableA): null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - i3 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - i3 = x.indexOf("/") + 1: null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - x = x.substring(i3, x.length()): null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - return x: null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - i = tableA.indexOf("Приволжье"): null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - CenA = replaceAll("\p{P}", "").trim(): null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - println("CenA: " + CenA): null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - for ([i = 1, i < 12, (i++)]): null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - tableA = Script1719551244403.NewDZO(x = tableA): null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - i3 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - i3 = x.indexOf("/") + 1: null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - x = x.substring(i3, x.length()): null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - return x: null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - tableA = Script1719551244403.NewDZO(x = tableA): null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - i3 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - i3 = x.indexOf("/") + 1: null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - x = x.substring(i3, x.length()): null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - return x: null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - tableA = Script1719551244403.NewDZO(x = tableA): null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - i3 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - i3 = x.indexOf("/") + 1: null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - x = x.substring(i3, x.length()): null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - return x: null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - tableA = Script1719551244403.NewDZO(x = tableA): null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - i3 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - i3 = x.indexOf("/") + 1: null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - x = x.substring(i3, x.length()): null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - return x: null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - tableA = Script1719551244403.NewDZO(x = tableA): null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - i3 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - i3 = x.indexOf("/") + 1: null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - x = x.substring(i3, x.length()): null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - return x: null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - tableA = Script1719551244403.NewDZO(x = tableA): null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - i3 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - i3 = x.indexOf("/") + 1: null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - x = x.substring(i3, x.length()): null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - return x: null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - tableA = Script1719551244403.NewDZO(x = tableA): null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - i3 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - i3 = x.indexOf("/") + 1: null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - x = x.substring(i3, x.length()): null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - return x: null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - tableA = Script1719551244403.NewDZO(x = tableA): null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - i3 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - i3 = x.indexOf("/") + 1: null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - x = x.substring(i3, x.length()): null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - return x: null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - tableA = Script1719551244403.NewDZO(x = tableA): null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - i3 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - i3 = x.indexOf("/") + 1: null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - x = x.substring(i3, x.length()): null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - return x: null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - tableA = Script1719551244403.NewDZO(x = tableA): null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - i3 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - i3 = x.indexOf("/") + 1: null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - x = x.substring(i3, x.length()): null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - return x: null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - tableA = Script1719551244403.NewDZO(x = tableA): null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - i3 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - i3 = x.indexOf("/") + 1: null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - x = x.substring(i3, x.length()): null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - return x: null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - i = tableA.indexOf("Юг"): null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - CiPA = replaceAll("\p{P}", "").trim(): null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - println("CiPA: " + CiPA): null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - for ([i = 1, i < 10, (i++)]): null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - tableA = Script1719551244403.NewDZO(x = tableA): null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - i3 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - i3 = x.indexOf("/") + 1: null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - x = x.substring(i3, x.length()): null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - return x: null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - tableA = Script1719551244403.NewDZO(x = tableA): null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - i3 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - i3 = x.indexOf("/") + 1: null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - x = x.substring(i3, x.length()): null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - return x: null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - tableA = Script1719551244403.NewDZO(x = tableA): null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - i3 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - i3 = x.indexOf("/") + 1: null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - x = x.substring(i3, x.length()): null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - return x: null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - tableA = Script1719551244403.NewDZO(x = tableA): null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - i3 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - i3 = x.indexOf("/") + 1: null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - x = x.substring(i3, x.length()): null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - return x: null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - tableA = Script1719551244403.NewDZO(x = tableA): null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - i3 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - i3 = x.indexOf("/") + 1: null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - x = x.substring(i3, x.length()): null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - return x: null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - tableA = Script1719551244403.NewDZO(x = tableA): null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - i3 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - i3 = x.indexOf("/") + 1: null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - x = x.substring(i3, x.length()): null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - return x: null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - tableA = Script1719551244403.NewDZO(x = tableA): null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - i3 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - i3 = x.indexOf("/") + 1: null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - x = x.substring(i3, x.length()): null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - return x: null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - tableA = Script1719551244403.NewDZO(x = tableA): null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - i3 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - i3 = x.indexOf("/") + 1: null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - x = x.substring(i3, x.length()): null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - return x: null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - tableA = Script1719551244403.NewDZO(x = tableA): null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - i3 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - i3 = x.indexOf("/") + 1: null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - x = x.substring(i3, x.length()): null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - return x: null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - i = tableA.indexOf("Янтарь"): null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - UgA = replaceAll("\p{P}", "").trim(): null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - println("UgA: " + UgA): null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - i = tableA.lastIndexOf("/"): null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - YaA = replaceAll("\p{P}", "").trim(): null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - println("YaA: " + YaA): null

10-01-2025T04:57:28 - [TEST_STEP][PASSED] - delay(10): Delayed 10 second(s)

10-01-2025T04:57:38 - [MESSAGE][PASSED] - Delayed 10 second(s)

10-01-2025T04:57:38 - [TEST_STEP][PASSED] - navigateToUrl(findTestData("PlanFact").getValue(10, 11)): Navigate to 'https://bi.rosseti.digital/viewer?dashboardGuid=a1fd28b3785d443cbc4d7690a1d78e31&sheetGuid=d3a0ddec2e914cb380b20dca74903099&fit=true' successfully

10-01-2025T04:57:39 - [MESSAGE][PASSED] - Navigate to 'https://bi.rosseti.digital/viewer?dashboardGuid=a1fd28b3785d443cbc4d7690a1d78e31&sheetGuid=d3a0ddec2e914cb380b20dca74903099&fit=true' successfully

10-01-2025T04:57:39 - [TEST_STEP][PASSED] - b = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:57:39 - [TEST_STEP][PASSED] - b1 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:57:39 - [TEST_STEP][PASSED] - b2 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:57:39 - [TEST_STEP][PASSED] - click(findTestObject("Факторный анализ/Фильтр Дата Выручка")): Object: 'Object Repository/Факторный анализ/Фильтр Дата Выручка' is clicked on

10-01-2025T04:57:53 - [MESSAGE][PASSED] - Object: 'Object Repository/Факторный анализ/Фильтр Дата Выручка' is clicked on

10-01-2025T04:57:53 - [TEST_STEP][PASSED] - click(findTestObject("Факторный анализ/Снять выделение в фильтре Дата Выручка")): Object: 'Object Repository/Факторный анализ/Снять выделение в фильтре Дата Выручка' is clicked on

10-01-2025T04:57:53 - [MESSAGE][PASSED] - Object: 'Object Repository/Факторный анализ/Снять выделение в фильтре Дата Выручка' is clicked on

10-01-2025T04:57:53 - [TEST_STEP][PASSED] - click(findTestObject("Факторный анализ/Применить в фильтре Дата Выручка")): Object: 'Object Repository/Факторный анализ/Применить в фильтре Дата Выручка' is clicked on

10-01-2025T04:57:54 - [MESSAGE][PASSED] - Object: 'Object Repository/Факторный анализ/Применить в фильтре Дата Выручка' is clicked on

10-01-2025T04:57:54 - [TEST_STEP][PASSED] - delay(10): Delayed 10 second(s)

10-01-2025T04:58:04 - [MESSAGE][PASSED] - Delayed 10 second(s)

10-01-2025T04:58:04 - [TEST_STEP][PASSED] - click(findTestObject("Факторный анализ/Фильтр Дата Выручка")): Object: 'Object Repository/Факторный анализ/Фильтр Дата Выручка' is clicked on

10-01-2025T04:58:04 - [MESSAGE][PASSED] - Object: 'Object Repository/Факторный анализ/Фильтр Дата Выручка' is clicked on

10-01-2025T04:58:04 - [TEST_STEP][PASSED] - click(findTestObject("Факторный анализ/Снять выделение в фильтре Дата Выручка")): Object: 'Object Repository/Факторный анализ/Снять выделение в фильтре Дата Выручка' is clicked on

10-01-2025T04:58:05 - [MESSAGE][PASSED] - Object: 'Object Repository/Факторный анализ/Снять выделение в фильтре Дата Выручка' is clicked on

10-01-2025T04:58:05 - [TEST_STEP][PASSED] - scrollToElement(findTestObject("Факторный анализ/2024 список Выручка"), 30): Scroll to object 'Object Repository/Факторный анализ/2024 список Выручка' successfully

10-01-2025T04:58:05 - [MESSAGE][PASSED] - Scroll to object 'Object Repository/Факторный анализ/2024 список Выручка' successfully

10-01-2025T04:58:05 - [TEST_STEP][PASSED] - click(findTestObject("Факторный анализ/2024 список Выручка")): Object: 'Object Repository/Факторный анализ/2024 список Выручка' is clicked on

10-01-2025T04:58:05 - [MESSAGE][PASSED] - Object: 'Object Repository/Факторный анализ/2024 список Выручка' is clicked on

10-01-2025T04:58:05 - [TEST_STEP][PASSED] - scrollToElement(findTestObject("Факторный анализ/1 квартал 2024 выбрать Выручка"), 30): Scroll to object 'Object Repository/Факторный анализ/1 квартал 2024 выбрать Выручка' successfully

10-01-2025T04:58:06 - [MESSAGE][PASSED] - Scroll to object 'Object Repository/Факторный анализ/1 квартал 2024 выбрать Выручка' successfully

10-01-2025T04:58:06 - [TEST_STEP][PASSED] - click(findTestObject("Факторный анализ/1 квартал 2024 выбрать Выручка")): Object: 'Object Repository/Факторный анализ/1 квартал 2024 выбрать Выручка' is clicked on

10-01-2025T04:58:06 - [MESSAGE][PASSED] - Object: 'Object Repository/Факторный анализ/1 квартал 2024 выбрать Выручка' is clicked on

10-01-2025T04:58:06 - [TEST_STEP][PASSED] - scrollToElement(findTestObject("Факторный анализ/2 квартал 2024 выбрать Выручка"), 30): Scroll to object 'Object Repository/Факторный анализ/2 квартал 2024 выбрать Выручка' successfully

10-01-2025T04:58:07 - [MESSAGE][PASSED] - Scroll to object 'Object Repository/Факторный анализ/2 квартал 2024 выбрать Выручка' successfully

10-01-2025T04:58:07 - [TEST_STEP][PASSED] - click(findTestObject("Факторный анализ/2 квартал 2024 выбрать Выручка"), CONTINUE_ON_FAILURE): Object: 'Object Repository/Факторный анализ/2 квартал 2024 выбрать Выручка' is clicked on

10-01-2025T04:58:07 - [MESSAGE][PASSED] - Object: 'Object Repository/Факторный анализ/2 квартал 2024 выбрать Выручка' is clicked on

10-01-2025T04:58:07 - [TEST_STEP][PASSED] - click(findTestObject("Факторный анализ/3 квартал 2024 выбрать Выручка"), CONTINUE_ON_FAILURE): Object: 'Object Repository/Факторный анализ/3 квартал 2024 выбрать Выручка' is clicked on

10-01-2025T04:58:07 - [MESSAGE][PASSED] - Object: 'Object Repository/Факторный анализ/3 квартал 2024 выбрать Выручка' is clicked on

10-01-2025T04:58:07 - [TEST_STEP][PASSED] - scrollToElement(findTestObject("Факторный анализ/4 квартал 2024 список Выручка"), 30): Scroll to object 'Object Repository/Факторный анализ/4 квартал 2024 список Выручка' successfully

10-01-2025T04:58:08 - [MESSAGE][PASSED] - Scroll to object 'Object Repository/Факторный анализ/4 квартал 2024 список Выручка' successfully

10-01-2025T04:58:08 - [TEST_STEP][PASSED] - click(findTestObject("Факторный анализ/4 квартал 2024 список Выручка"), CONTINUE_ON_FAILURE): Object: 'Object Repository/Факторный анализ/4 квартал 2024 список Выручка' is clicked on

10-01-2025T04:58:08 - [MESSAGE][PASSED] - Object: 'Object Repository/Факторный анализ/4 квартал 2024 список Выручка' is clicked on

10-01-2025T04:58:08 - [TEST_STEP][PASSED] - scrollToElement(findTestObject("Факторный анализ/Октябрь 2024 Выручка"), 30): Scroll to object 'Object Repository/Факторный анализ/Октябрь 2024 Выручка' successfully

10-01-2025T04:58:09 - [MESSAGE][PASSED] - Scroll to object 'Object Repository/Факторный анализ/Октябрь 2024 Выручка' successfully

10-01-2025T04:58:09 - [TEST_STEP][PASSED] - click(findTestObject("Факторный анализ/Октябрь 2024 Выручка"), CONTINUE_ON_FAILURE): Object: 'Object Repository/Факторный анализ/Октябрь 2024 Выручка' is clicked on

10-01-2025T04:58:09 - [MESSAGE][PASSED] - Object: 'Object Repository/Факторный анализ/Октябрь 2024 Выручка' is clicked on

10-01-2025T04:58:09 - [TEST_STEP][PASSED] - scrollToElement(findTestObject("Факторный анализ/Ноябрь 2024 Выручка"), 30): Scroll to object 'Object Repository/Факторный анализ/Ноябрь 2024 Выручка' successfully

10-01-2025T04:58:10 - [MESSAGE][PASSED] - Scroll to object 'Object Repository/Факторный анализ/Ноябрь 2024 Выручка' successfully

10-01-2025T04:58:10 - [TEST_STEP][PASSED] - click(findTestObject("Факторный анализ/Ноябрь 2024 Выручка"), CONTINUE_ON_FAILURE): Object: 'Object Repository/Факторный анализ/Ноябрь 2024 Выручка' is clicked on

10-01-2025T04:58:10 - [MESSAGE][PASSED] - Object: 'Object Repository/Факторный анализ/Ноябрь 2024 Выручка' is clicked on

10-01-2025T04:58:10 - [TEST_STEP][PASSED] - scrollToElement(findTestObject("Факторный анализ/Заголовок дашборда Выручка"), 30): Scroll to object 'Object Repository/Факторный анализ/Заголовок дашборда Выручка' successfully

10-01-2025T04:58:10 - [MESSAGE][PASSED] - Scroll to object 'Object Repository/Факторный анализ/Заголовок дашборда Выручка' successfully

10-01-2025T04:58:10 - [TEST_STEP][PASSED] - click(findTestObject("Факторный анализ/Применить в фильтре Дата Выручка")): Object: 'Object Repository/Факторный анализ/Применить в фильтре Дата Выручка' is clicked on

10-01-2025T04:58:11 - [MESSAGE][PASSED] - Object: 'Object Repository/Факторный анализ/Применить в фильтре Дата Выручка' is clicked on

10-01-2025T04:58:11 - [TEST_STEP][PASSED] - if (run == 1): null

10-01-2025T04:58:11 - [TEST_STEP][PASSED] - b = getText(findTestObject("Факторный анализ/Отклонения выручки по факторам Выручка")): Text of object 'Object Repository/Факторный анализ/Отклонения выручки по факторам Выручка' is: '-1 252 328-1 252 328
3 6753 675
Отклонение (объём услуг) филиал без Nan
Отклонение (средний тариф) филиал без Nan
ПАО Россети'

10-01-2025T04:58:13 - [MESSAGE][PASSED] - Text of object 'Object Repository/Факторный анализ/Отклонения выручки по факторам Выручка' is: '-1 252 328-1 252 328
3 6753 675
Отклонение (объём услуг) филиал без Nan
Отклонение (средний тариф) филиал без Nan
ПАО Россети'

10-01-2025T04:58:13 - [TEST_STEP][PASSED] - b = b.replaceAll("[\r?
|
]", "/"): null

10-01-2025T04:58:13 - [TEST_STEP][PASSED] - println("b: " + b): null

10-01-2025T04:58:13 - [TEST_STEP][PASSED] - i = b.indexOf("Отклонение"): null

10-01-2025T04:58:13 - [TEST_STEP][PASSED] - if (i > -1): null

10-01-2025T04:58:13 - [TEST_STEP][PASSED] - i = i: null

10-01-2025T04:58:13 - [TEST_STEP][PASSED] - b = substring(0, i).trim(): null

10-01-2025T04:58:13 - [TEST_STEP][PASSED] - println("b: " + b): null

10-01-2025T04:58:13 - [TEST_STEP][PASSED] - i = b.indexOf("/"): null

10-01-2025T04:58:13 - [TEST_STEP][PASSED] - if (i > -1): null

10-01-2025T04:58:13 - [TEST_STEP][PASSED] - b1 = b.substring(0, i): null

10-01-2025T04:58:13 - [TEST_STEP][PASSED] - println("b1: " + b1): null

10-01-2025T04:58:13 - [TEST_STEP][PASSED] - b2 = b.substring(b1.length() + 1, b.length()): null

10-01-2025T04:58:13 - [TEST_STEP][PASSED] - println("b2: " + b2): null

10-01-2025T04:58:13 - [TEST_STEP][PASSED] - i = b1.length() / 2: null

10-01-2025T04:58:13 - [TEST_STEP][PASSED] - if (i > -1): null

10-01-2025T04:58:13 - [TEST_STEP][PASSED] - b1 = replaceAll("\s+", "").trim(): null

10-01-2025T04:58:13 - [TEST_STEP][PASSED] - println("b1: " + b1): null

10-01-2025T04:58:13 - [TEST_STEP][PASSED] - i = b2.length() / 2: null

10-01-2025T04:58:13 - [TEST_STEP][PASSED] - if (i > -1): null

10-01-2025T04:58:13 - [TEST_STEP][PASSED] - b2 = replaceAll("\s+", "").trim(): null

10-01-2025T04:58:13 - [TEST_STEP][PASSED] - println("b2: " + b2): null

10-01-2025T04:58:13 - [TEST_STEP][PASSED] - vidget = "Отклонения выручки по факторам": null

10-01-2025T04:58:13 - [TEST_STEP][PASSED] - DZO = "ПАО Россети": null

10-01-2025T04:58:13 - [TEST_STEP][PASSED] - typeOfData = "Отклонение (объём услуг)": null

10-01-2025T04:58:13 - [TEST_STEP][PASSED] - Script1719551244403.Compare(x = a1, y = b1, run, typeOfData, otobrajeniyeDannyh, todaysDate, vidget, DZO): null

10-01-2025T04:58:13 - [TEST_STEP][FAILED] - if (verifyEqual(x, y) == true): Unable to verify equal between actual object '-1291521' and expected object '-1252328' (Root cause: com.kms.katalon.core.exception.StepFailedException: Actual object '-1291521' and expected object '-1252328' are not equal
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.doCall(VerifyEqualKeyword.groovy:58)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.call(VerifyEqualKeyword.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:75)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.verifyEqual(VerifyEqualKeyword.groovy:63)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.execute(VerifyEqualKeyword.groovy:44)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:74)
	at com.kms.katalon.core.keyword.BuiltinKeywords.verifyEqual(BuiltinKeywords.groovy:146)
	at jdk.internal.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at Факторный анализ сверка дашбордов.Compare(Факторный анализ сверка дашбордов:682)
	at Факторный анализ сверка дашбордов.Test(Факторный анализ сверка дашбордов:446)
	at Факторный анализ сверка дашбордов.run(Факторный анализ сверка дашбордов:44)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:448)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:439)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:418)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:410)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:285)
	at com.kms.katalon.core.common.CommonExecutor.accessTestCaseMainPhase(CommonExecutor.java:65)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:150)
	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:106)
	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:180)
	at TempTestSuite1736466949911.run(TempTestSuite1736466949911.groovy:35)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
)

10-01-2025T04:58:13 - [MESSAGE][FAILED] - Unable to verify equal between actual object '-1291521' and expected object '-1252328' (Root cause: com.kms.katalon.core.exception.StepFailedException: Actual object '-1291521' and expected object '-1252328' are not equal
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.doCall(VerifyEqualKeyword.groovy:58)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.call(VerifyEqualKeyword.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:75)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.verifyEqual(VerifyEqualKeyword.groovy:63)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.execute(VerifyEqualKeyword.groovy:44)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:74)
	at com.kms.katalon.core.keyword.BuiltinKeywords.verifyEqual(BuiltinKeywords.groovy:146)
	at jdk.internal.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at Факторный анализ сверка дашбордов.Compare(Факторный анализ сверка дашбордов:682)
	at Факторный анализ сверка дашбордов.Test(Факторный анализ сверка дашбордов:446)
	at Факторный анализ сверка дашбордов.run(Факторный анализ сверка дашбордов:44)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:448)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:439)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:418)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:410)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:285)
	at com.kms.katalon.core.common.CommonExecutor.accessTestCaseMainPhase(CommonExecutor.java:65)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:150)
	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:106)
	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:180)
	at TempTestSuite1736466949911.run(TempTestSuite1736466949911.groovy:35)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
)

10-01-2025T04:58:13 - [TEST_STEP][PASSED] - else: null

10-01-2025T04:58:13 - [TEST_STEP][PASSED] - if (run == 1): null

10-01-2025T04:58:13 - [TEST_STEP][PASSED] - otobrajeniyeDannyh = "Филиал": null

10-01-2025T04:58:13 - [TEST_STEP][PASSED] - Script1719551244403.WriteToExcel(todaysDate, typeOfData, otobrajeniyeDannyh, x, y, vidget, DZO): null

10-01-2025T04:58:13 - [TEST_STEP][PASSED] - sheetName = "Sheet1": null

10-01-2025T04:58:13 - [TEST_STEP][PASSED] - data = findTestData("PlanFact"): null

10-01-2025T04:58:13 - [TEST_STEP][PASSED] - n = data.getRowNumbers() + 1: null

10-01-2025T04:58:13 - [TEST_STEP][PASSED] - period = getText(findTestObject("Факторный анализ/Фильтр Период")): Text of object 'Object Repository/Факторный анализ/Фильтр Период' is: 'Октябрь, Ноябрь и 1, 2, 3 кв. 2024 года'

10-01-2025T04:58:14 - [MESSAGE][PASSED] - Text of object 'Object Repository/Факторный анализ/Фильтр Период' is: 'Октябрь, Ноябрь и 1, 2, 3 кв. 2024 года'

10-01-2025T04:58:14 - [TEST_STEP][PASSED] - println(period): null

10-01-2025T04:58:14 - [TEST_STEP][PASSED] - dashboardName = "Факторный анализ": null

10-01-2025T04:58:14 - [TEST_STEP][PASSED] - workbook01 = getWorkbook(excelFilePath): null

10-01-2025T04:58:14 - [TEST_STEP][PASSED] - sheet01 = getExcelSheet(workbook01, sheetName): null

10-01-2025T04:58:14 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 0, dashboardName): null

10-01-2025T04:58:14 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 1, DZO): null

10-01-2025T04:58:14 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 2, vidget): null

10-01-2025T04:58:14 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 3, typeOfData): null

10-01-2025T04:58:14 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 4, otobrajeniyeDannyh): null

10-01-2025T04:58:14 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 5, period): null

10-01-2025T04:58:14 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 6, todaysDate): null

10-01-2025T04:58:14 - [TEST_STEP][PASSED] - n = n + 1: null

10-01-2025T04:58:14 - [TEST_STEP][PASSED] - saveWorkbook(excelFilePath, workbook01): null

10-01-2025T04:58:14 - [TEST_STEP][PASSED] - typeOfData = "Отклонение (средний тариф)": null

10-01-2025T04:58:14 - [TEST_STEP][PASSED] - Script1719551244403.Compare(x = a2, y = b2, run, typeOfData, otobrajeniyeDannyh, todaysDate, vidget, DZO): null

10-01-2025T04:58:14 - [TEST_STEP][FAILED] - if (verifyEqual(x, y) == true): Unable to verify equal between actual object '31694' and expected object '3675' (Root cause: com.kms.katalon.core.exception.StepFailedException: Actual object '31694' and expected object '3675' are not equal
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.doCall(VerifyEqualKeyword.groovy:58)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.call(VerifyEqualKeyword.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:75)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.verifyEqual(VerifyEqualKeyword.groovy:63)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.execute(VerifyEqualKeyword.groovy:44)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:74)
	at com.kms.katalon.core.keyword.BuiltinKeywords.verifyEqual(BuiltinKeywords.groovy:146)
	at jdk.internal.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at Факторный анализ сверка дашбордов.Compare(Факторный анализ сверка дашбордов:682)
	at Факторный анализ сверка дашбордов.Test(Факторный анализ сверка дашбордов:450)
	at Факторный анализ сверка дашбордов.run(Факторный анализ сверка дашбордов:44)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:448)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:439)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:418)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:410)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:285)
	at com.kms.katalon.core.common.CommonExecutor.accessTestCaseMainPhase(CommonExecutor.java:65)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:150)
	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:106)
	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:180)
	at TempTestSuite1736466949911.run(TempTestSuite1736466949911.groovy:35)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
)

10-01-2025T04:58:14 - [MESSAGE][FAILED] - Unable to verify equal between actual object '31694' and expected object '3675' (Root cause: com.kms.katalon.core.exception.StepFailedException: Actual object '31694' and expected object '3675' are not equal
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.doCall(VerifyEqualKeyword.groovy:58)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.call(VerifyEqualKeyword.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:75)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.verifyEqual(VerifyEqualKeyword.groovy:63)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.execute(VerifyEqualKeyword.groovy:44)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:74)
	at com.kms.katalon.core.keyword.BuiltinKeywords.verifyEqual(BuiltinKeywords.groovy:146)
	at jdk.internal.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at Факторный анализ сверка дашбордов.Compare(Факторный анализ сверка дашбордов:682)
	at Факторный анализ сверка дашбордов.Test(Факторный анализ сверка дашбордов:450)
	at Факторный анализ сверка дашбордов.run(Факторный анализ сверка дашбордов:44)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:448)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:439)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:418)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:410)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:285)
	at com.kms.katalon.core.common.CommonExecutor.accessTestCaseMainPhase(CommonExecutor.java:65)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:150)
	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:106)
	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:180)
	at TempTestSuite1736466949911.run(TempTestSuite1736466949911.groovy:35)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
)

10-01-2025T04:58:14 - [TEST_STEP][PASSED] - else: null

10-01-2025T04:58:14 - [TEST_STEP][PASSED] - if (run == 1): null

10-01-2025T04:58:14 - [TEST_STEP][PASSED] - otobrajeniyeDannyh = "Филиал": null

10-01-2025T04:58:14 - [TEST_STEP][PASSED] - Script1719551244403.WriteToExcel(todaysDate, typeOfData, otobrajeniyeDannyh, x, y, vidget, DZO): null

10-01-2025T04:58:14 - [TEST_STEP][PASSED] - sheetName = "Sheet1": null

10-01-2025T04:58:14 - [TEST_STEP][PASSED] - data = findTestData("PlanFact"): null

10-01-2025T04:58:14 - [TEST_STEP][PASSED] - n = data.getRowNumbers() + 1: null

10-01-2025T04:58:14 - [TEST_STEP][PASSED] - period = getText(findTestObject("Факторный анализ/Фильтр Период")): Text of object 'Object Repository/Факторный анализ/Фильтр Период' is: 'Октябрь, Ноябрь и 1, 2, 3 кв. 2024 года'

10-01-2025T04:58:14 - [MESSAGE][PASSED] - Text of object 'Object Repository/Факторный анализ/Фильтр Период' is: 'Октябрь, Ноябрь и 1, 2, 3 кв. 2024 года'

10-01-2025T04:58:14 - [TEST_STEP][PASSED] - println(period): null

10-01-2025T04:58:14 - [TEST_STEP][PASSED] - dashboardName = "Факторный анализ": null

10-01-2025T04:58:14 - [TEST_STEP][PASSED] - workbook01 = getWorkbook(excelFilePath): null

10-01-2025T04:58:14 - [TEST_STEP][PASSED] - sheet01 = getExcelSheet(workbook01, sheetName): null

10-01-2025T04:58:14 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 0, dashboardName): null

10-01-2025T04:58:14 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 1, DZO): null

10-01-2025T04:58:14 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 2, vidget): null

10-01-2025T04:58:14 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 3, typeOfData): null

10-01-2025T04:58:14 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 4, otobrajeniyeDannyh): null

10-01-2025T04:58:14 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 5, period): null

10-01-2025T04:58:14 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 6, todaysDate): null

10-01-2025T04:58:14 - [TEST_STEP][PASSED] - n = n + 1: null

10-01-2025T04:58:14 - [TEST_STEP][PASSED] - saveWorkbook(excelFilePath, workbook01): null

10-01-2025T04:58:14 - [TEST_STEP][PASSED] - tableB = getText(findTestObject("Факторный анализ/AllTable1 Выручка")).replaceAll("[\r?
|
]", "/"): Text of object 'Object Repository/Факторный анализ/AllTable1 Выручка' is: 'ДЗО
Филиал
Отклонение (объём услуг) филиал без Nan
Отклонение (средний тариф) филиал без Nan
АО «Тываэнерго» АО "Тываэнерго" 486 - 128
АО «Чеченэнерго» АО «Чеченэнерго» 73 47
Россети Волга Мордовэнерго 224 -93
Оренбургэнерго 833 - 135
Пензаэнерго 340 -67
Самарские РС 380 -1 202
Саратовские РС 471 - 569
Ульяновские РС 276 - 216
Чувашэнерго - 156 152
Россети Кубань Кубаньэнерго 3 908 599
Россети Ленэнерго (ГК) Ленинградская область 1 472 1 111
г. Санкт-Петербург 2 698 - 108
Россети Московский регион Московская область 5 429 - 877
г. Москва 4 012 10
Россети Северный Кавказ (ГК) Дагестанская энергосбытовая компания 0 0
Дагэнерго - 635 589
Ингушэнерго - 207 154
Каббалкэнерго 286 70
Карачаево-Черкесскэнерго 155 13
Севкавказэнерго - 404 172
Ставропольэнерго 281 - 198
Россети Северо-Запад Архангельский филиал 74 - 112
Вологодский филиал 277 8
Карельский филиал -91 186
Мурманский филиал 102 46
Новгородский филиал 227 -48
Псковский филиал 151 -15
филиал в Республике Коми -63 41
Россети Сибирь (ГК) Алтайэнерго 332 333
Бурятэнерго - 119 329
ГАЭС 153 -21
Красноярскэнерго 1 368 - 676
Кузбассэнерго-РЭС - 461 932
Омскэнерго 188 -70
Хакасэнерго 422 - 442
Читаэнерго -77 206
Россети Томск Томская распределительная компания 387 - 146
Россети Тюмень Россети Тюмень -5 414 - 638
Россети Урал (ГК) Пермэнерго 669 - 246
Свердловэнерго 964 315
Челябэнерго 1 045 - 720
Россети ФСК ЕЭС Итого по ФСК ЕЭС -17 684 -6 088
Россети Центр Белгородэнерго 347 138
Брянскэнерго 78 9
Воронежэнерго 667 130
Костромаэнерго 127 -11
Курскэнерго -6 84
Липецкэнерго 853 - 381
Орелэнерго 158 -52
Смоленскэнерго 34 48
Тамбовэнерго 307 -12
Тверьэнерго 376 192
Ярэнерго 630 15
Россети Центр и Приволжье (ГК) Владимирэнерго 574 64
Ивэнерго 201 62
Калугаэнерго 706 -61
Кировэнерго 511 30
Мариэнерго 189 23
Нижновэнерго 849 359
Рязаньэнерго 229 70
Тулэнерго 877 - 292
Удмуртэнерго 401 20
Россети Юг (ГК) АО «ВМЭС» 151 59
Астраханьэнерго 38 68
Волгоградэнерго 447 - 400
Калмэнерго 25 -2
Ростовэнерго 868 75
Россети Янтарь Россети Янтарь 419 -47'

10-01-2025T04:58:15 - [MESSAGE][PASSED] - Text of object 'Object Repository/Факторный анализ/AllTable1 Выручка' is: 'ДЗО
Филиал
Отклонение (объём услуг) филиал без Nan
Отклонение (средний тариф) филиал без Nan
АО «Тываэнерго» АО "Тываэнерго" 486 - 128
АО «Чеченэнерго» АО «Чеченэнерго» 73 47
Россети Волга Мордовэнерго 224 -93
Оренбургэнерго 833 - 135
Пензаэнерго 340 -67
Самарские РС 380 -1 202
Саратовские РС 471 - 569
Ульяновские РС 276 - 216
Чувашэнерго - 156 152
Россети Кубань Кубаньэнерго 3 908 599
Россети Ленэнерго (ГК) Ленинградская область 1 472 1 111
г. Санкт-Петербург 2 698 - 108
Россети Московский регион Московская область 5 429 - 877
г. Москва 4 012 10
Россети Северный Кавказ (ГК) Дагестанская энергосбытовая компания 0 0
Дагэнерго - 635 589
Ингушэнерго - 207 154
Каббалкэнерго 286 70
Карачаево-Черкесскэнерго 155 13
Севкавказэнерго - 404 172
Ставропольэнерго 281 - 198
Россети Северо-Запад Архангельский филиал 74 - 112
Вологодский филиал 277 8
Карельский филиал -91 186
Мурманский филиал 102 46
Новгородский филиал 227 -48
Псковский филиал 151 -15
филиал в Республике Коми -63 41
Россети Сибирь (ГК) Алтайэнерго 332 333
Бурятэнерго - 119 329
ГАЭС 153 -21
Красноярскэнерго 1 368 - 676
Кузбассэнерго-РЭС - 461 932
Омскэнерго 188 -70
Хакасэнерго 422 - 442
Читаэнерго -77 206
Россети Томск Томская распределительная компания 387 - 146
Россети Тюмень Россети Тюмень -5 414 - 638
Россети Урал (ГК) Пермэнерго 669 - 246
Свердловэнерго 964 315
Челябэнерго 1 045 - 720
Россети ФСК ЕЭС Итого по ФСК ЕЭС -17 684 -6 088
Россети Центр Белгородэнерго 347 138
Брянскэнерго 78 9
Воронежэнерго 667 130
Костромаэнерго 127 -11
Курскэнерго -6 84
Липецкэнерго 853 - 381
Орелэнерго 158 -52
Смоленскэнерго 34 48
Тамбовэнерго 307 -12
Тверьэнерго 376 192
Ярэнерго 630 15
Россети Центр и Приволжье (ГК) Владимирэнерго 574 64
Ивэнерго 201 62
Калугаэнерго 706 -61
Кировэнерго 511 30
Мариэнерго 189 23
Нижновэнерго 849 359
Рязаньэнерго 229 70
Тулэнерго 877 - 292
Удмуртэнерго 401 20
Россети Юг (ГК) АО «ВМЭС» 151 59
Астраханьэнерго 38 68
Волгоградэнерго 447 - 400
Калмэнерго 25 -2
Ростовэнерго 868 75
Россети Янтарь Россети Янтарь 419 -47'

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - println("tableB: " + tableB): null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - for ([i = 1, i < 5, (i++)]): null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - ii = tableB.indexOf("/") + 1: null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - tableB = tableB.substring(ii, tableB.length()): null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - ii = tableB.indexOf("/") + 1: null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - tableB = tableB.substring(ii, tableB.length()): null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - ii = tableB.indexOf("/") + 1: null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - tableB = tableB.substring(ii, tableB.length()): null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - ii = tableB.indexOf("/") + 1: null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - tableB = tableB.substring(ii, tableB.length()): null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - println("tableB: " + tableB): null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - TyB = Script1719551244403.GetData(x = tableB): null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - i2 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - i2 = x.indexOf("/") + 1: null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - x = replaceAll("\p{P}", "").trim(): null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - return x: null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - println("TyB: " + TyB): null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - tableB = Script1719551244403.NewDZO(x = tableB): null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - i3 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - i3 = x.indexOf("/") + 1: null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - x = x.substring(i3, x.length()): null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - return x: null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - ChB = Script1719551244403.GetData(x = tableB): null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - i2 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - i2 = x.indexOf("/") + 1: null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - x = replaceAll("\p{P}", "").trim(): null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - return x: null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - println("ChB: " + ChB): null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - tableB = Script1719551244403.NewDZO(x = tableB): null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - i3 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - i3 = x.indexOf("/") + 1: null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - x = x.substring(i3, x.length()): null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - return x: null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - i = tableB.indexOf("Кубань"): null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - VB = replaceAll("\p{P}", "").trim(): null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - println("VB: " + VB): null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - for ([i = 1, i < 8, (i++)]): null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - tableB = Script1719551244403.NewDZO(x = tableB): null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - i3 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - i3 = x.indexOf("/") + 1: null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - x = x.substring(i3, x.length()): null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - return x: null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - tableB = Script1719551244403.NewDZO(x = tableB): null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - i3 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - i3 = x.indexOf("/") + 1: null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - x = x.substring(i3, x.length()): null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - return x: null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - tableB = Script1719551244403.NewDZO(x = tableB): null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - i3 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - i3 = x.indexOf("/") + 1: null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - x = x.substring(i3, x.length()): null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - return x: null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - tableB = Script1719551244403.NewDZO(x = tableB): null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - i3 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - i3 = x.indexOf("/") + 1: null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - x = x.substring(i3, x.length()): null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - return x: null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - tableB = Script1719551244403.NewDZO(x = tableB): null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - i3 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - i3 = x.indexOf("/") + 1: null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - x = x.substring(i3, x.length()): null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - return x: null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - tableB = Script1719551244403.NewDZO(x = tableB): null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - i3 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - i3 = x.indexOf("/") + 1: null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - x = x.substring(i3, x.length()): null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - return x: null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - tableB = Script1719551244403.NewDZO(x = tableB): null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - i3 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - i3 = x.indexOf("/") + 1: null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - x = x.substring(i3, x.length()): null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - return x: null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - i = tableB.indexOf("Ленэнерго"): null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - KuB = Script1719551244403.GetData(x = tableB): null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - i2 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - i2 = x.indexOf("/") + 1: null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - x = replaceAll("\p{P}", "").trim(): null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - return x: null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - println("KuB: " + KuB): null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - tableB = Script1719551244403.NewDZO(x = tableB): null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - i3 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - i3 = x.indexOf("/") + 1: null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - x = x.substring(i3, x.length()): null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - return x: null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - i = tableB.indexOf("Московский"): null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - LenB = replaceAll("\p{P}", "").trim(): null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - println("LenB: " + LenB): null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - tableB = Script1719551244403.NewDZO(x = tableB): null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - i3 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - i3 = x.indexOf("/") + 1: null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - x = x.substring(i3, x.length()): null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - return x: null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - tableB = Script1719551244403.NewDZO(x = tableB): null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - i3 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - i3 = x.indexOf("/") + 1: null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - x = x.substring(i3, x.length()): null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - return x: null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - i = tableB.indexOf("Кавказ"): null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - MosB = replaceAll("\p{P}", "").trim(): null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - println("MosB: " + MosB): null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - for ([i = 1, i < 3, (i++)]): null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - tableB = Script1719551244403.NewDZO(x = tableB): null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - i3 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - i3 = x.indexOf("/") + 1: null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - x = x.substring(i3, x.length()): null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - return x: null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - tableB = Script1719551244403.NewDZO(x = tableB): null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - i3 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - i3 = x.indexOf("/") + 1: null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - x = x.substring(i3, x.length()): null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - return x: null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - i = tableB.indexOf("Запад"): null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - SKB = replaceAll("\p{P}", "").trim(): null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - println("SKB: " + SKB): null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - for ([i = 1, i < 7, (i++)]): null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - tableB = Script1719551244403.NewDZO(x = tableB): null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - i3 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - i3 = x.indexOf("/") + 1: null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - x = x.substring(i3, x.length()): null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - return x: null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - tableB = Script1719551244403.NewDZO(x = tableB): null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - i3 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - i3 = x.indexOf("/") + 1: null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - x = x.substring(i3, x.length()): null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - return x: null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - tableB = Script1719551244403.NewDZO(x = tableB): null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - i3 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - i3 = x.indexOf("/") + 1: null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - x = x.substring(i3, x.length()): null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - return x: null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - tableB = Script1719551244403.NewDZO(x = tableB): null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - i3 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - i3 = x.indexOf("/") + 1: null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - x = x.substring(i3, x.length()): null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - return x: null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - tableB = Script1719551244403.NewDZO(x = tableB): null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - i3 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - i3 = x.indexOf("/") + 1: null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - x = x.substring(i3, x.length()): null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - return x: null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - tableB = Script1719551244403.NewDZO(x = tableB): null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - i3 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - i3 = x.indexOf("/") + 1: null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - x = x.substring(i3, x.length()): null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - return x: null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - i = tableB.indexOf("Сибирь"): null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - SZB = replaceAll("\p{P}", "").trim(): null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - println("SZB: " + SZB): null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - for ([i = 1, i < 8, (i++)]): null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - tableB = Script1719551244403.NewDZO(x = tableB): null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - i3 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - i3 = x.indexOf("/") + 1: null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - x = x.substring(i3, x.length()): null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - return x: null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - tableB = Script1719551244403.NewDZO(x = tableB): null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - i3 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - i3 = x.indexOf("/") + 1: null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - x = x.substring(i3, x.length()): null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - return x: null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - tableB = Script1719551244403.NewDZO(x = tableB): null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - i3 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - i3 = x.indexOf("/") + 1: null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - x = x.substring(i3, x.length()): null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - return x: null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - tableB = Script1719551244403.NewDZO(x = tableB): null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - i3 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - i3 = x.indexOf("/") + 1: null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - x = x.substring(i3, x.length()): null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - return x: null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - tableB = Script1719551244403.NewDZO(x = tableB): null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - i3 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - i3 = x.indexOf("/") + 1: null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - x = x.substring(i3, x.length()): null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - return x: null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - tableB = Script1719551244403.NewDZO(x = tableB): null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - i3 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - i3 = x.indexOf("/") + 1: null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - x = x.substring(i3, x.length()): null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - return x: null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - tableB = Script1719551244403.NewDZO(x = tableB): null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - i3 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - i3 = x.indexOf("/") + 1: null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - x = x.substring(i3, x.length()): null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - return x: null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - i = tableB.indexOf("Томск"): null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - SiB = replaceAll("\p{P}", "").trim(): null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - println("SiB: " + SiB): null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - for ([i = 1, i < 9, (i++)]): null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - tableB = Script1719551244403.NewDZO(x = tableB): null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - i3 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - i3 = x.indexOf("/") + 1: null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - x = x.substring(i3, x.length()): null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - return x: null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - tableB = Script1719551244403.NewDZO(x = tableB): null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - i3 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - i3 = x.indexOf("/") + 1: null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - x = x.substring(i3, x.length()): null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - return x: null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - tableB = Script1719551244403.NewDZO(x = tableB): null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - i3 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - i3 = x.indexOf("/") + 1: null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - x = x.substring(i3, x.length()): null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - return x: null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - tableB = Script1719551244403.NewDZO(x = tableB): null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - i3 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - i3 = x.indexOf("/") + 1: null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - x = x.substring(i3, x.length()): null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - return x: null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - tableB = Script1719551244403.NewDZO(x = tableB): null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - i3 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - i3 = x.indexOf("/") + 1: null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - x = x.substring(i3, x.length()): null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - return x: null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - tableB = Script1719551244403.NewDZO(x = tableB): null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - i3 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - i3 = x.indexOf("/") + 1: null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - x = x.substring(i3, x.length()): null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - return x: null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - tableB = Script1719551244403.NewDZO(x = tableB): null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - i3 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - i3 = x.indexOf("/") + 1: null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - x = x.substring(i3, x.length()): null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - return x: null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - tableB = Script1719551244403.NewDZO(x = tableB): null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - i3 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - i3 = x.indexOf("/") + 1: null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - x = x.substring(i3, x.length()): null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - return x: null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - i = tableB.indexOf("Тюмень"): null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - ToB = replaceAll("\p{P}", "").trim(): null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - println("ToB: " + ToB): null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - tableB = Script1719551244403.NewDZO(x = tableB): null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - i3 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - i3 = x.indexOf("/") + 1: null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - x = x.substring(i3, x.length()): null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - return x: null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - TyuB = replaceAll("\p{P}", "").trim(): null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - println("TyuB: " + TyuB): null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - tableB = Script1719551244403.NewDZO(x = tableB): null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - i3 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - i3 = x.indexOf("/") + 1: null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - x = x.substring(i3, x.length()): null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - return x: null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - i = tableB.indexOf("ЕЭС"): null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - UrB = replaceAll("\p{P}", "").trim(): null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - println("UrB: " + UrB): null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - for ([i = 1, i < 4, (i++)]): null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - tableB = Script1719551244403.NewDZO(x = tableB): null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - i3 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - i3 = x.indexOf("/") + 1: null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - x = x.substring(i3, x.length()): null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - return x: null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - tableB = Script1719551244403.NewDZO(x = tableB): null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - i3 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - i3 = x.indexOf("/") + 1: null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - x = x.substring(i3, x.length()): null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - return x: null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - tableB = Script1719551244403.NewDZO(x = tableB): null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - i3 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - i3 = x.indexOf("/") + 1: null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - x = x.substring(i3, x.length()): null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - return x: null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - i = tableB.indexOf("Центр"): null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - FSKB = replaceAll("\p{P}", "").trim(): null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - println("FSKB: " + FSKB): null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - tableB = Script1719551244403.NewDZO(x = tableB): null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - i3 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - i3 = x.indexOf("/") + 1: null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - x = x.substring(i3, x.length()): null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - return x: null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - i = tableB.indexOf("Приволжье"): null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - CenB = replaceAll("\p{P}", "").trim(): null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - println("CenB: " + CenB): null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - for ([i = 1, i < 12, (i++)]): null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - tableB = Script1719551244403.NewDZO(x = tableB): null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - i3 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - i3 = x.indexOf("/") + 1: null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - x = x.substring(i3, x.length()): null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - return x: null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - tableB = Script1719551244403.NewDZO(x = tableB): null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - i3 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - i3 = x.indexOf("/") + 1: null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - x = x.substring(i3, x.length()): null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - return x: null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - tableB = Script1719551244403.NewDZO(x = tableB): null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - i3 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - i3 = x.indexOf("/") + 1: null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - x = x.substring(i3, x.length()): null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - return x: null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - tableB = Script1719551244403.NewDZO(x = tableB): null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - i3 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - i3 = x.indexOf("/") + 1: null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - x = x.substring(i3, x.length()): null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - return x: null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - tableB = Script1719551244403.NewDZO(x = tableB): null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - i3 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - i3 = x.indexOf("/") + 1: null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - x = x.substring(i3, x.length()): null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - return x: null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - tableB = Script1719551244403.NewDZO(x = tableB): null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - i3 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - i3 = x.indexOf("/") + 1: null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - x = x.substring(i3, x.length()): null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - return x: null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - tableB = Script1719551244403.NewDZO(x = tableB): null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - i3 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - i3 = x.indexOf("/") + 1: null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - x = x.substring(i3, x.length()): null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - return x: null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - tableB = Script1719551244403.NewDZO(x = tableB): null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - i3 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - i3 = x.indexOf("/") + 1: null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - x = x.substring(i3, x.length()): null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - return x: null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - tableB = Script1719551244403.NewDZO(x = tableB): null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - i3 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - i3 = x.indexOf("/") + 1: null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - x = x.substring(i3, x.length()): null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - return x: null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - tableB = Script1719551244403.NewDZO(x = tableB): null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - i3 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - i3 = x.indexOf("/") + 1: null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - x = x.substring(i3, x.length()): null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - return x: null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - tableB = Script1719551244403.NewDZO(x = tableB): null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - i3 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - i3 = x.indexOf("/") + 1: null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - x = x.substring(i3, x.length()): null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - return x: null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - i = tableB.indexOf("Юг"): null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - CiPB = replaceAll("\p{P}", "").trim(): null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - println("CiPB: " + CiPB): null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - for ([i = 1, i < 10, (i++)]): null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - tableB = Script1719551244403.NewDZO(x = tableB): null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - i3 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - i3 = x.indexOf("/") + 1: null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - x = x.substring(i3, x.length()): null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - return x: null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - tableB = Script1719551244403.NewDZO(x = tableB): null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - i3 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - i3 = x.indexOf("/") + 1: null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - x = x.substring(i3, x.length()): null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - return x: null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - tableB = Script1719551244403.NewDZO(x = tableB): null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - i3 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - i3 = x.indexOf("/") + 1: null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - x = x.substring(i3, x.length()): null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - return x: null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - tableB = Script1719551244403.NewDZO(x = tableB): null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - i3 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - i3 = x.indexOf("/") + 1: null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - x = x.substring(i3, x.length()): null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - return x: null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - tableB = Script1719551244403.NewDZO(x = tableB): null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - i3 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - i3 = x.indexOf("/") + 1: null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - x = x.substring(i3, x.length()): null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - return x: null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - tableB = Script1719551244403.NewDZO(x = tableB): null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - i3 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - i3 = x.indexOf("/") + 1: null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - x = x.substring(i3, x.length()): null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - return x: null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - tableB = Script1719551244403.NewDZO(x = tableB): null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - i3 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - i3 = x.indexOf("/") + 1: null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - x = x.substring(i3, x.length()): null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - return x: null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - tableB = Script1719551244403.NewDZO(x = tableB): null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - i3 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - i3 = x.indexOf("/") + 1: null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - x = x.substring(i3, x.length()): null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - return x: null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - tableB = Script1719551244403.NewDZO(x = tableB): null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - i3 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - i3 = x.indexOf("/") + 1: null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - x = x.substring(i3, x.length()): null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - return x: null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - i = tableB.indexOf("Янтарь"): null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - UgB = replaceAll("\p{P}", "").trim(): null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - println("UgB: " + UgB): null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - i = tableB.lastIndexOf("/"): null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - YaB = replaceAll("\p{P}", "").trim(): null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - println("YaB: " + YaB): null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - vidget = "Отклонения выручки по факторам": null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - if (run == 2): null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - Script1719551244403.Test(run, todaysDate, typeOfData, otobrajeniyeDannyh, x, y, vidget, DZO): null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - navigateToUrl(findTestData("PlanFact").getValue(10, 3)): Navigate to 'https://bi.rosseti.digital/viewer?dashboardGuid=2301950b23be4ed89c1df75f2020051e&sheetGuid=ccd7d7486b3d4e6fa0ee9b1eaebed46c&fit=true' successfully

10-01-2025T04:58:15 - [MESSAGE][PASSED] - Navigate to 'https://bi.rosseti.digital/viewer?dashboardGuid=2301950b23be4ed89c1df75f2020051e&sheetGuid=ccd7d7486b3d4e6fa0ee9b1eaebed46c&fit=true' successfully

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - Script1719551244403.Autorization(run): null

10-01-2025T04:58:15 - [TEST_STEP][PASSED] - delay(10): Delayed 10 second(s)

10-01-2025T04:58:25 - [MESSAGE][PASSED] - Delayed 10 second(s)

10-01-2025T04:58:25 - [TEST_STEP][PASSED] - if (run == 1): null

10-01-2025T04:58:25 - [TEST_STEP][PASSED] - i = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:58:25 - [TEST_STEP][PASSED] - ii = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:58:25 - [TEST_STEP][PASSED] - a = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:58:25 - [TEST_STEP][PASSED] - a1 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:58:25 - [TEST_STEP][PASSED] - a2 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:58:25 - [TEST_STEP][PASSED] - click(findTestObject("Факторный анализ/Фильтр Период")): Object: 'Object Repository/Факторный анализ/Фильтр Период' is clicked on

10-01-2025T04:58:27 - [MESSAGE][PASSED] - Object: 'Object Repository/Факторный анализ/Фильтр Период' is clicked on

10-01-2025T04:58:27 - [TEST_STEP][PASSED] - click(findTestObject("Факторный анализ/Снять выделение в фильтре Дата")): Object: 'Object Repository/Факторный анализ/Снять выделение в фильтре Дата' is clicked on

10-01-2025T04:58:28 - [MESSAGE][PASSED] - Object: 'Object Repository/Факторный анализ/Снять выделение в фильтре Дата' is clicked on

10-01-2025T04:58:28 - [TEST_STEP][PASSED] - click(findTestObject("Факторный анализ/Применить в фильтре Дата")): Object: 'Object Repository/Факторный анализ/Применить в фильтре Дата' is clicked on

10-01-2025T04:58:28 - [MESSAGE][PASSED] - Object: 'Object Repository/Факторный анализ/Применить в фильтре Дата' is clicked on

10-01-2025T04:58:28 - [TEST_STEP][PASSED] - delay(10): Delayed 10 second(s)

10-01-2025T04:58:38 - [MESSAGE][PASSED] - Delayed 10 second(s)

10-01-2025T04:58:38 - [TEST_STEP][PASSED] - click(findTestObject("Факторный анализ/Фильтр Период")): Object: 'Object Repository/Факторный анализ/Фильтр Период' is clicked on

10-01-2025T04:58:39 - [MESSAGE][PASSED] - Object: 'Object Repository/Факторный анализ/Фильтр Период' is clicked on

10-01-2025T04:58:39 - [TEST_STEP][PASSED] - click(findTestObject("Факторный анализ/Снять выделение в фильтре Дата")): Object: 'Object Repository/Факторный анализ/Снять выделение в фильтре Дата' is clicked on

10-01-2025T04:58:39 - [MESSAGE][PASSED] - Object: 'Object Repository/Факторный анализ/Снять выделение в фильтре Дата' is clicked on

10-01-2025T04:58:39 - [TEST_STEP][PASSED] - scrollToElement(findTestObject("Факторный анализ/2024 список"), 30): Scroll to object 'Object Repository/Факторный анализ/2024 список' successfully

10-01-2025T04:58:39 - [MESSAGE][PASSED] - Scroll to object 'Object Repository/Факторный анализ/2024 список' successfully

10-01-2025T04:58:39 - [TEST_STEP][PASSED] - click(findTestObject("Факторный анализ/2024 список")): Object: 'Object Repository/Факторный анализ/2024 список' is clicked on

10-01-2025T04:58:40 - [MESSAGE][PASSED] - Object: 'Object Repository/Факторный анализ/2024 список' is clicked on

10-01-2025T04:58:40 - [TEST_STEP][PASSED] - scrollToElement(findTestObject("Факторный анализ/1 квартал 2024 выбрать"), 30): Scroll to object 'Object Repository/Факторный анализ/1 квартал 2024 выбрать' successfully

10-01-2025T04:58:40 - [MESSAGE][PASSED] - Scroll to object 'Object Repository/Факторный анализ/1 квартал 2024 выбрать' successfully

10-01-2025T04:58:40 - [TEST_STEP][PASSED] - click(findTestObject("Факторный анализ/1 квартал 2024 выбрать")): Object: 'Object Repository/Факторный анализ/1 квартал 2024 выбрать' is clicked on

10-01-2025T04:58:41 - [MESSAGE][PASSED] - Object: 'Object Repository/Факторный анализ/1 квартал 2024 выбрать' is clicked on

10-01-2025T04:58:41 - [TEST_STEP][PASSED] - scrollToElement(findTestObject("Факторный анализ/1 квартал 2024 выбрать"), 30): Scroll to object 'Object Repository/Факторный анализ/1 квартал 2024 выбрать' successfully

10-01-2025T04:58:41 - [MESSAGE][PASSED] - Scroll to object 'Object Repository/Факторный анализ/1 квартал 2024 выбрать' successfully

10-01-2025T04:58:41 - [TEST_STEP][PASSED] - click(findTestObject("Факторный анализ/2 квартал 2024 выбрать"), CONTINUE_ON_FAILURE): Object: 'Object Repository/Факторный анализ/2 квартал 2024 выбрать' is clicked on

10-01-2025T04:58:41 - [MESSAGE][PASSED] - Object: 'Object Repository/Факторный анализ/2 квартал 2024 выбрать' is clicked on

10-01-2025T04:58:41 - [TEST_STEP][PASSED] - click(findTestObject("Факторный анализ/3 квартал 2024 выбрать"), CONTINUE_ON_FAILURE): Object: 'Object Repository/Факторный анализ/3 квартал 2024 выбрать' is clicked on

10-01-2025T04:58:42 - [MESSAGE][PASSED] - Object: 'Object Repository/Факторный анализ/3 квартал 2024 выбрать' is clicked on

10-01-2025T04:58:42 - [TEST_STEP][PASSED] - scrollToElement(findTestObject("Факторный анализ/4 квартал 2024 список"), 30): Scroll to object 'Object Repository/Факторный анализ/4 квартал 2024 список' successfully

10-01-2025T04:58:43 - [MESSAGE][PASSED] - Scroll to object 'Object Repository/Факторный анализ/4 квартал 2024 список' successfully

10-01-2025T04:58:43 - [TEST_STEP][PASSED] - click(findTestObject("Факторный анализ/4 квартал 2024 список"), CONTINUE_ON_FAILURE): Object: 'Object Repository/Факторный анализ/4 квартал 2024 список' is clicked on

10-01-2025T04:58:43 - [MESSAGE][PASSED] - Object: 'Object Repository/Факторный анализ/4 квартал 2024 список' is clicked on

10-01-2025T04:58:43 - [TEST_STEP][PASSED] - scrollToElement(findTestObject("Факторный анализ/Октябрь 2024"), 30): Scroll to object 'Object Repository/Факторный анализ/Октябрь 2024' successfully

10-01-2025T04:58:43 - [MESSAGE][PASSED] - Scroll to object 'Object Repository/Факторный анализ/Октябрь 2024' successfully

10-01-2025T04:58:43 - [TEST_STEP][PASSED] - click(findTestObject("Факторный анализ/Октябрь 2024"), CONTINUE_ON_FAILURE): Object: 'Object Repository/Факторный анализ/Октябрь 2024' is clicked on

10-01-2025T04:58:44 - [MESSAGE][PASSED] - Object: 'Object Repository/Факторный анализ/Октябрь 2024' is clicked on

10-01-2025T04:58:44 - [TEST_STEP][PASSED] - scrollToElement(findTestObject("Факторный анализ/Ноябрь 2024"), 30): Scroll to object 'Object Repository/Факторный анализ/Ноябрь 2024' successfully

10-01-2025T04:58:44 - [MESSAGE][PASSED] - Scroll to object 'Object Repository/Факторный анализ/Ноябрь 2024' successfully

10-01-2025T04:58:44 - [TEST_STEP][PASSED] - click(findTestObject("Факторный анализ/Ноябрь 2024"), CONTINUE_ON_FAILURE): Object: 'Object Repository/Факторный анализ/Ноябрь 2024' is clicked on

10-01-2025T04:58:44 - [MESSAGE][PASSED] - Object: 'Object Repository/Факторный анализ/Ноябрь 2024' is clicked on

10-01-2025T04:58:44 - [TEST_STEP][PASSED] - scrollToElement(findTestObject("Факторный анализ/Заголовок дашборда"), 30): Scroll to object 'Object Repository/Факторный анализ/Заголовок дашборда' successfully

10-01-2025T04:58:45 - [MESSAGE][PASSED] - Scroll to object 'Object Repository/Факторный анализ/Заголовок дашборда' successfully

10-01-2025T04:58:45 - [TEST_STEP][PASSED] - click(findTestObject("Факторный анализ/Применить в фильтре Дата")): Object: 'Object Repository/Факторный анализ/Применить в фильтре Дата' is clicked on

10-01-2025T04:58:46 - [MESSAGE][PASSED] - Object: 'Object Repository/Факторный анализ/Применить в фильтре Дата' is clicked on

10-01-2025T04:58:46 - [TEST_STEP][PASSED] - if (run == 1): null

10-01-2025T04:58:46 - [TEST_STEP][PASSED] - else: null

10-01-2025T04:58:46 - [TEST_STEP][PASSED] - click(findTestObject("Факторный анализ/Переключить отображение с филиала на месяц")): Object: 'Object Repository/Факторный анализ/Переключить отображение с филиала на месяц' is clicked on

10-01-2025T04:58:47 - [MESSAGE][PASSED] - Object: 'Object Repository/Факторный анализ/Переключить отображение с филиала на месяц' is clicked on

10-01-2025T04:58:47 - [TEST_STEP][PASSED] - a1 = replaceAll("\s+", "").trim(): Text of object 'Object Repository/Факторный анализ/span1 Блок руководителя' is: '-1 279 044'

10-01-2025T04:58:48 - [MESSAGE][PASSED] - Text of object 'Object Repository/Факторный анализ/span1 Блок руководителя' is: '-1 279 044'

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - a2 = replaceAll("\s+", "").trim(): Text of object 'Object Repository/Факторный анализ/span2 Блок руководителя' is: '-9 388'

10-01-2025T04:58:48 - [MESSAGE][PASSED] - Text of object 'Object Repository/Факторный анализ/span2 Блок руководителя' is: '-9 388'

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - println("a1: " + a1): null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - println("a2: " + a2): null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - tableA = getText(findTestObject("Факторный анализ/AllTable1")).replaceAll("[\r?
|
]", "/"): Text of object 'Object Repository/Факторный анализ/AllTable1' is: 'ДЗО
Филиал
Отклонение (объём услуг)
Отклонение (средний тариф)
АО «Тываэнерго» АО "Тываэнерго" 486 - 128
АО «Чеченэнерго» АО «Чеченэнерго» -4 079 47
Россети Волга Мордовэнерго -3 530 -93
Оренбургэнерго -13 669 - 135
Пензаэнерго -8 434 -67
Самарские РС -16 427 -1 202
Саратовские РС -16 583 - 569
Ульяновские РС -6 101 - 216
Чувашэнерго -5 275 152
Россети Кубань Кубаньэнерго -64 770 599
Россети Ленэнерго (ГК) Ленинградская область -36 803 1 111
г. Санкт-Петербург -51 373 - 108
Россети Московский регион Московская область 5 429 - 877
г. Москва 4 012 10
Россети Северный Кавказ (ГК) Дагестанская энергосбытовая компания - 111 69
Дагэнерго -8 053 589
Ингушэнерго -1 797 137
Каббалкэнерго -3 286 70
Карачаево-Черкесскэнерго -2 129 13
Севкавказэнерго -3 775 172
Ставропольэнерго -10 373 - 198
Россети Северо-Запад Архангельский филиал 74 - 112
Вологодский филиал 277 8
Карельский филиал -91 186
Мурманский филиал 102 46
Новгородский филиал 227 -48
Псковский филиал 151 -15
филиал в Республике Коми -63 41
Россети Сибирь (ГК) Алтайэнерго 332 333
Бурятэнерго - 119 329
ГАЭС 153 -21
Красноярскэнерго 1 368 - 676
Кузбассэнерго-РЭС - 461 932
Омскэнерго 188 -70
Хакасэнерго 422 - 442
Читаэнерго -77 206
Россети Томск Томская распределительная компания -8 299 - 146
Россети Тюмень Россети Тюмень -82 026 - 638
Россети Урал (ГК) Пермэнерго 669 - 246
Свердловэнерго 964 315
Челябэнерго 1 045 - 720
Россети ФСК ЕЭС Итого по ФСК ЕЭС -17 684 -6 088
Россети Центр Белгородэнерго 347 138
Брянскэнерго -5 765 17
Воронежэнерго -15 652 167
Костромаэнерго 127 -11
Курскэнерго -2 510 157
Липецкэнерго 853 - 381
Орелэнерго -4 613 -57
Смоленскэнерго -8 540 48
Тамбовэнерго -6 716 -12
Тверьэнерго 376 192
Ярэнерго -6 276 95
Россети Центр и Приволжье (ГК) Владимирэнерго 574 64
Ивэнерго 201 62
Калугаэнерго 706 -61
Кировэнерго 511 30
Мариэнерго 189 23
Нижновэнерго 849 359
Рязаньэнерго 229 70
Тулэнерго 877 - 292
Удмуртэнерго 401 20
Россети Юг (ГК) АО «ВМЭС» -4 225 59
Астраханьэнерго -6 426 68
Волгоградэнерго -11 043 - 400
Калмэнерго -1 859 -2
Ростовэнерго -22 464 75
Россети Янтарь Россети Янтарь 419 -47'

10-01-2025T04:58:48 - [MESSAGE][PASSED] - Text of object 'Object Repository/Факторный анализ/AllTable1' is: 'ДЗО
Филиал
Отклонение (объём услуг)
Отклонение (средний тариф)
АО «Тываэнерго» АО "Тываэнерго" 486 - 128
АО «Чеченэнерго» АО «Чеченэнерго» -4 079 47
Россети Волга Мордовэнерго -3 530 -93
Оренбургэнерго -13 669 - 135
Пензаэнерго -8 434 -67
Самарские РС -16 427 -1 202
Саратовские РС -16 583 - 569
Ульяновские РС -6 101 - 216
Чувашэнерго -5 275 152
Россети Кубань Кубаньэнерго -64 770 599
Россети Ленэнерго (ГК) Ленинградская область -36 803 1 111
г. Санкт-Петербург -51 373 - 108
Россети Московский регион Московская область 5 429 - 877
г. Москва 4 012 10
Россети Северный Кавказ (ГК) Дагестанская энергосбытовая компания - 111 69
Дагэнерго -8 053 589
Ингушэнерго -1 797 137
Каббалкэнерго -3 286 70
Карачаево-Черкесскэнерго -2 129 13
Севкавказэнерго -3 775 172
Ставропольэнерго -10 373 - 198
Россети Северо-Запад Архангельский филиал 74 - 112
Вологодский филиал 277 8
Карельский филиал -91 186
Мурманский филиал 102 46
Новгородский филиал 227 -48
Псковский филиал 151 -15
филиал в Республике Коми -63 41
Россети Сибирь (ГК) Алтайэнерго 332 333
Бурятэнерго - 119 329
ГАЭС 153 -21
Красноярскэнерго 1 368 - 676
Кузбассэнерго-РЭС - 461 932
Омскэнерго 188 -70
Хакасэнерго 422 - 442
Читаэнерго -77 206
Россети Томск Томская распределительная компания -8 299 - 146
Россети Тюмень Россети Тюмень -82 026 - 638
Россети Урал (ГК) Пермэнерго 669 - 246
Свердловэнерго 964 315
Челябэнерго 1 045 - 720
Россети ФСК ЕЭС Итого по ФСК ЕЭС -17 684 -6 088
Россети Центр Белгородэнерго 347 138
Брянскэнерго -5 765 17
Воронежэнерго -15 652 167
Костромаэнерго 127 -11
Курскэнерго -2 510 157
Липецкэнерго 853 - 381
Орелэнерго -4 613 -57
Смоленскэнерго -8 540 48
Тамбовэнерго -6 716 -12
Тверьэнерго 376 192
Ярэнерго -6 276 95
Россети Центр и Приволжье (ГК) Владимирэнерго 574 64
Ивэнерго 201 62
Калугаэнерго 706 -61
Кировэнерго 511 30
Мариэнерго 189 23
Нижновэнерго 849 359
Рязаньэнерго 229 70
Тулэнерго 877 - 292
Удмуртэнерго 401 20
Россети Юг (ГК) АО «ВМЭС» -4 225 59
Астраханьэнерго -6 426 68
Волгоградэнерго -11 043 - 400
Калмэнерго -1 859 -2
Ростовэнерго -22 464 75
Россети Янтарь Россети Янтарь 419 -47'

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - println("tableA: " + tableA): null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - for ([i = 1, i < 5, (i++)]): null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - ii = tableA.indexOf("/") + 1: null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - tableA = tableA.substring(ii, tableA.length()): null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - ii = tableA.indexOf("/") + 1: null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - tableA = tableA.substring(ii, tableA.length()): null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - ii = tableA.indexOf("/") + 1: null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - tableA = tableA.substring(ii, tableA.length()): null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - ii = tableA.indexOf("/") + 1: null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - tableA = tableA.substring(ii, tableA.length()): null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - println("tableA: " + tableA): null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - TyA = Script1719551244403.GetData(x = tableA): null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - i2 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - i2 = x.indexOf("/") + 1: null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - x = replaceAll("\p{P}", "").trim(): null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - return x: null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - println("TyA: " + TyA): null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - tableA = Script1719551244403.NewDZO(x = tableA): null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - i3 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - i3 = x.indexOf("/") + 1: null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - x = x.substring(i3, x.length()): null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - return x: null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - ChA = Script1719551244403.GetData(x = tableA): null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - i2 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - i2 = x.indexOf("/") + 1: null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - x = replaceAll("\p{P}", "").trim(): null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - return x: null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - println("ChA: " + ChA): null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - tableA = Script1719551244403.NewDZO(x = tableA): null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - i3 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - i3 = x.indexOf("/") + 1: null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - x = x.substring(i3, x.length()): null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - return x: null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - i = tableA.indexOf("Кубань"): null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - VA = replaceAll("\p{P}", "").trim(): null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - println("VA: " + VA): null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - for ([i = 1, i < 8, (i++)]): null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - tableA = Script1719551244403.NewDZO(x = tableA): null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - i3 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - i3 = x.indexOf("/") + 1: null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - x = x.substring(i3, x.length()): null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - return x: null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - tableA = Script1719551244403.NewDZO(x = tableA): null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - i3 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - i3 = x.indexOf("/") + 1: null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - x = x.substring(i3, x.length()): null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - return x: null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - tableA = Script1719551244403.NewDZO(x = tableA): null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - i3 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - i3 = x.indexOf("/") + 1: null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - x = x.substring(i3, x.length()): null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - return x: null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - tableA = Script1719551244403.NewDZO(x = tableA): null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - i3 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - i3 = x.indexOf("/") + 1: null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - x = x.substring(i3, x.length()): null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - return x: null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - tableA = Script1719551244403.NewDZO(x = tableA): null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - i3 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - i3 = x.indexOf("/") + 1: null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - x = x.substring(i3, x.length()): null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - return x: null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - tableA = Script1719551244403.NewDZO(x = tableA): null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - i3 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - i3 = x.indexOf("/") + 1: null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - x = x.substring(i3, x.length()): null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - return x: null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - tableA = Script1719551244403.NewDZO(x = tableA): null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - i3 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - i3 = x.indexOf("/") + 1: null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - x = x.substring(i3, x.length()): null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - return x: null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - i = tableA.indexOf("Ленэнерго"): null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - KuA = Script1719551244403.GetData(x = tableA): null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - i2 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - i2 = x.indexOf("/") + 1: null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - x = replaceAll("\p{P}", "").trim(): null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - return x: null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - println("KuA: " + KuA): null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - tableA = Script1719551244403.NewDZO(x = tableA): null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - i3 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - i3 = x.indexOf("/") + 1: null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - x = x.substring(i3, x.length()): null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - return x: null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - i = tableA.indexOf("Московский"): null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - LenA = replaceAll("\p{P}", "").trim(): null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - println("LenA: " + LenA): null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - tableA = Script1719551244403.NewDZO(x = tableA): null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - i3 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - i3 = x.indexOf("/") + 1: null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - x = x.substring(i3, x.length()): null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - return x: null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - tableA = Script1719551244403.NewDZO(x = tableA): null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - i3 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - i3 = x.indexOf("/") + 1: null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - x = x.substring(i3, x.length()): null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - return x: null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - i = tableA.indexOf("Кавказ"): null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - MosA = replaceAll("\p{P}", "").trim(): null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - println("MosA: " + MosA): null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - for ([i = 1, i < 3, (i++)]): null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - tableA = Script1719551244403.NewDZO(x = tableA): null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - i3 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - i3 = x.indexOf("/") + 1: null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - x = x.substring(i3, x.length()): null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - return x: null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - tableA = Script1719551244403.NewDZO(x = tableA): null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - i3 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - i3 = x.indexOf("/") + 1: null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - x = x.substring(i3, x.length()): null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - return x: null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - i = tableA.indexOf("Запад"): null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - SKA = replaceAll("\p{P}", "").trim(): null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - println("SKA: " + SKA): null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - for ([i = 1, i < 7, (i++)]): null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - tableA = Script1719551244403.NewDZO(x = tableA): null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - i3 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - i3 = x.indexOf("/") + 1: null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - x = x.substring(i3, x.length()): null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - return x: null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - tableA = Script1719551244403.NewDZO(x = tableA): null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - i3 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - i3 = x.indexOf("/") + 1: null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - x = x.substring(i3, x.length()): null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - return x: null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - tableA = Script1719551244403.NewDZO(x = tableA): null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - i3 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - i3 = x.indexOf("/") + 1: null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - x = x.substring(i3, x.length()): null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - return x: null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - tableA = Script1719551244403.NewDZO(x = tableA): null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - i3 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - i3 = x.indexOf("/") + 1: null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - x = x.substring(i3, x.length()): null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - return x: null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - tableA = Script1719551244403.NewDZO(x = tableA): null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - i3 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - i3 = x.indexOf("/") + 1: null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - x = x.substring(i3, x.length()): null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - return x: null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - tableA = Script1719551244403.NewDZO(x = tableA): null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - i3 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - i3 = x.indexOf("/") + 1: null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - x = x.substring(i3, x.length()): null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - return x: null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - i = tableA.indexOf("Сибирь"): null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - SZA = replaceAll("\p{P}", "").trim(): null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - println("SZA: " + SZA): null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - for ([i = 1, i < 8, (i++)]): null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - tableA = Script1719551244403.NewDZO(x = tableA): null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - i3 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - i3 = x.indexOf("/") + 1: null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - x = x.substring(i3, x.length()): null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - return x: null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - tableA = Script1719551244403.NewDZO(x = tableA): null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - i3 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - i3 = x.indexOf("/") + 1: null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - x = x.substring(i3, x.length()): null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - return x: null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - tableA = Script1719551244403.NewDZO(x = tableA): null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - i3 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - i3 = x.indexOf("/") + 1: null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - x = x.substring(i3, x.length()): null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - return x: null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - tableA = Script1719551244403.NewDZO(x = tableA): null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - i3 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - i3 = x.indexOf("/") + 1: null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - x = x.substring(i3, x.length()): null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - return x: null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - tableA = Script1719551244403.NewDZO(x = tableA): null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - i3 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - i3 = x.indexOf("/") + 1: null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - x = x.substring(i3, x.length()): null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - return x: null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - tableA = Script1719551244403.NewDZO(x = tableA): null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - i3 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - i3 = x.indexOf("/") + 1: null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - x = x.substring(i3, x.length()): null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - return x: null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - tableA = Script1719551244403.NewDZO(x = tableA): null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - i3 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - i3 = x.indexOf("/") + 1: null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - x = x.substring(i3, x.length()): null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - return x: null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - i = tableA.indexOf("Томск"): null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - SiA = replaceAll("\p{P}", "").trim(): null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - println("SiA: " + SiA): null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - for ([i = 1, i < 9, (i++)]): null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - tableA = Script1719551244403.NewDZO(x = tableA): null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - i3 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - i3 = x.indexOf("/") + 1: null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - x = x.substring(i3, x.length()): null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - return x: null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - tableA = Script1719551244403.NewDZO(x = tableA): null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - i3 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - i3 = x.indexOf("/") + 1: null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - x = x.substring(i3, x.length()): null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - return x: null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - tableA = Script1719551244403.NewDZO(x = tableA): null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - i3 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - i3 = x.indexOf("/") + 1: null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - x = x.substring(i3, x.length()): null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - return x: null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - tableA = Script1719551244403.NewDZO(x = tableA): null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - i3 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - i3 = x.indexOf("/") + 1: null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - x = x.substring(i3, x.length()): null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - return x: null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - tableA = Script1719551244403.NewDZO(x = tableA): null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - i3 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - i3 = x.indexOf("/") + 1: null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - x = x.substring(i3, x.length()): null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - return x: null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - tableA = Script1719551244403.NewDZO(x = tableA): null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - i3 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - i3 = x.indexOf("/") + 1: null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - x = x.substring(i3, x.length()): null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - return x: null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - tableA = Script1719551244403.NewDZO(x = tableA): null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - i3 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - i3 = x.indexOf("/") + 1: null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - x = x.substring(i3, x.length()): null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - return x: null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - tableA = Script1719551244403.NewDZO(x = tableA): null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - i3 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - i3 = x.indexOf("/") + 1: null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - x = x.substring(i3, x.length()): null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - return x: null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - i = tableA.indexOf("Тюмень"): null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - ToA = replaceAll("\p{P}", "").trim(): null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - println("ToA: " + ToA): null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - tableA = Script1719551244403.NewDZO(x = tableA): null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - i3 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - i3 = x.indexOf("/") + 1: null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - x = x.substring(i3, x.length()): null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - return x: null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - TyuA = replaceAll("\p{P}", "").trim(): null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - println("TyuA: " + TyuA): null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - tableA = Script1719551244403.NewDZO(x = tableA): null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - i3 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - i3 = x.indexOf("/") + 1: null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - x = x.substring(i3, x.length()): null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - return x: null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - i = tableA.indexOf("ЕЭС"): null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - UrA = replaceAll("\p{P}", "").trim(): null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - println("UrA: " + UrA): null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - for ([i = 1, i < 4, (i++)]): null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - tableA = Script1719551244403.NewDZO(x = tableA): null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - i3 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - i3 = x.indexOf("/") + 1: null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - x = x.substring(i3, x.length()): null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - return x: null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - tableA = Script1719551244403.NewDZO(x = tableA): null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - i3 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - i3 = x.indexOf("/") + 1: null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - x = x.substring(i3, x.length()): null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - return x: null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - tableA = Script1719551244403.NewDZO(x = tableA): null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - i3 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - i3 = x.indexOf("/") + 1: null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - x = x.substring(i3, x.length()): null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - return x: null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - i = tableA.indexOf("Центр"): null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - FSKA = replaceAll("\p{P}", "").trim(): null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - println("FSKA: " + FSKA): null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - tableA = Script1719551244403.NewDZO(x = tableA): null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - i3 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - i3 = x.indexOf("/") + 1: null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - x = x.substring(i3, x.length()): null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - return x: null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - i = tableA.indexOf("Приволжье"): null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - CenA = replaceAll("\p{P}", "").trim(): null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - println("CenA: " + CenA): null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - for ([i = 1, i < 12, (i++)]): null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - tableA = Script1719551244403.NewDZO(x = tableA): null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - i3 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - i3 = x.indexOf("/") + 1: null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - x = x.substring(i3, x.length()): null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - return x: null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - tableA = Script1719551244403.NewDZO(x = tableA): null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - i3 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - i3 = x.indexOf("/") + 1: null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - x = x.substring(i3, x.length()): null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - return x: null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - tableA = Script1719551244403.NewDZO(x = tableA): null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - i3 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - i3 = x.indexOf("/") + 1: null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - x = x.substring(i3, x.length()): null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - return x: null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - tableA = Script1719551244403.NewDZO(x = tableA): null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - i3 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - i3 = x.indexOf("/") + 1: null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - x = x.substring(i3, x.length()): null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - return x: null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - tableA = Script1719551244403.NewDZO(x = tableA): null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - i3 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - i3 = x.indexOf("/") + 1: null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - x = x.substring(i3, x.length()): null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - return x: null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - tableA = Script1719551244403.NewDZO(x = tableA): null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - i3 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - i3 = x.indexOf("/") + 1: null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - x = x.substring(i3, x.length()): null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - return x: null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - tableA = Script1719551244403.NewDZO(x = tableA): null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - i3 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - i3 = x.indexOf("/") + 1: null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - x = x.substring(i3, x.length()): null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - return x: null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - tableA = Script1719551244403.NewDZO(x = tableA): null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - i3 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - i3 = x.indexOf("/") + 1: null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - x = x.substring(i3, x.length()): null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - return x: null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - tableA = Script1719551244403.NewDZO(x = tableA): null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - i3 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - i3 = x.indexOf("/") + 1: null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - x = x.substring(i3, x.length()): null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - return x: null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - tableA = Script1719551244403.NewDZO(x = tableA): null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - i3 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - i3 = x.indexOf("/") + 1: null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - x = x.substring(i3, x.length()): null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - return x: null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - tableA = Script1719551244403.NewDZO(x = tableA): null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - i3 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - i3 = x.indexOf("/") + 1: null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - x = x.substring(i3, x.length()): null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - return x: null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - i = tableA.indexOf("Юг"): null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - CiPA = replaceAll("\p{P}", "").trim(): null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - println("CiPA: " + CiPA): null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - for ([i = 1, i < 10, (i++)]): null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - tableA = Script1719551244403.NewDZO(x = tableA): null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - i3 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - i3 = x.indexOf("/") + 1: null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - x = x.substring(i3, x.length()): null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - return x: null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - tableA = Script1719551244403.NewDZO(x = tableA): null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - i3 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - i3 = x.indexOf("/") + 1: null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - x = x.substring(i3, x.length()): null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - return x: null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - tableA = Script1719551244403.NewDZO(x = tableA): null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - i3 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - i3 = x.indexOf("/") + 1: null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - x = x.substring(i3, x.length()): null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - return x: null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - tableA = Script1719551244403.NewDZO(x = tableA): null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - i3 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - i3 = x.indexOf("/") + 1: null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - x = x.substring(i3, x.length()): null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - return x: null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - tableA = Script1719551244403.NewDZO(x = tableA): null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - i3 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - i3 = x.indexOf("/") + 1: null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - x = x.substring(i3, x.length()): null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - return x: null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - tableA = Script1719551244403.NewDZO(x = tableA): null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - i3 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - i3 = x.indexOf("/") + 1: null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - x = x.substring(i3, x.length()): null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - return x: null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - tableA = Script1719551244403.NewDZO(x = tableA): null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - i3 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - i3 = x.indexOf("/") + 1: null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - x = x.substring(i3, x.length()): null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - return x: null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - tableA = Script1719551244403.NewDZO(x = tableA): null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - i3 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - i3 = x.indexOf("/") + 1: null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - x = x.substring(i3, x.length()): null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - return x: null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - tableA = Script1719551244403.NewDZO(x = tableA): null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - i3 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - i3 = x.indexOf("/") + 1: null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - x = x.substring(i3, x.length()): null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - return x: null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - i = tableA.indexOf("Янтарь"): null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - UgA = replaceAll("\p{P}", "").trim(): null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - println("UgA: " + UgA): null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - i = tableA.lastIndexOf("/"): null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - YaA = replaceAll("\p{P}", "").trim(): null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - println("YaA: " + YaA): null

10-01-2025T04:58:48 - [TEST_STEP][PASSED] - delay(10): Delayed 10 second(s)

10-01-2025T04:58:58 - [MESSAGE][PASSED] - Delayed 10 second(s)

10-01-2025T04:58:58 - [TEST_STEP][PASSED] - navigateToUrl(findTestData("PlanFact").getValue(10, 11)): Navigate to 'https://bi.rosseti.digital/viewer?dashboardGuid=a1fd28b3785d443cbc4d7690a1d78e31&sheetGuid=d3a0ddec2e914cb380b20dca74903099&fit=true' successfully

10-01-2025T04:58:59 - [MESSAGE][PASSED] - Navigate to 'https://bi.rosseti.digital/viewer?dashboardGuid=a1fd28b3785d443cbc4d7690a1d78e31&sheetGuid=d3a0ddec2e914cb380b20dca74903099&fit=true' successfully

10-01-2025T04:58:59 - [TEST_STEP][PASSED] - b = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:58:59 - [TEST_STEP][PASSED] - b1 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:58:59 - [TEST_STEP][PASSED] - b2 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:58:59 - [TEST_STEP][PASSED] - click(findTestObject("Факторный анализ/Фильтр Дата Выручка")): Object: 'Object Repository/Факторный анализ/Фильтр Дата Выручка' is clicked on

10-01-2025T04:59:13 - [MESSAGE][PASSED] - Object: 'Object Repository/Факторный анализ/Фильтр Дата Выручка' is clicked on

10-01-2025T04:59:13 - [TEST_STEP][PASSED] - click(findTestObject("Факторный анализ/Снять выделение в фильтре Дата Выручка")): Object: 'Object Repository/Факторный анализ/Снять выделение в фильтре Дата Выручка' is clicked on

10-01-2025T04:59:14 - [MESSAGE][PASSED] - Object: 'Object Repository/Факторный анализ/Снять выделение в фильтре Дата Выручка' is clicked on

10-01-2025T04:59:14 - [TEST_STEP][PASSED] - click(findTestObject("Факторный анализ/Применить в фильтре Дата Выручка")): Object: 'Object Repository/Факторный анализ/Применить в фильтре Дата Выручка' is clicked on

10-01-2025T04:59:14 - [MESSAGE][PASSED] - Object: 'Object Repository/Факторный анализ/Применить в фильтре Дата Выручка' is clicked on

10-01-2025T04:59:14 - [TEST_STEP][PASSED] - delay(10): Delayed 10 second(s)

10-01-2025T04:59:24 - [MESSAGE][PASSED] - Delayed 10 second(s)

10-01-2025T04:59:24 - [TEST_STEP][PASSED] - click(findTestObject("Факторный анализ/Фильтр Дата Выручка")): Object: 'Object Repository/Факторный анализ/Фильтр Дата Выручка' is clicked on

10-01-2025T04:59:25 - [MESSAGE][PASSED] - Object: 'Object Repository/Факторный анализ/Фильтр Дата Выручка' is clicked on

10-01-2025T04:59:25 - [TEST_STEP][PASSED] - click(findTestObject("Факторный анализ/Снять выделение в фильтре Дата Выручка")): Object: 'Object Repository/Факторный анализ/Снять выделение в фильтре Дата Выручка' is clicked on

10-01-2025T04:59:25 - [MESSAGE][PASSED] - Object: 'Object Repository/Факторный анализ/Снять выделение в фильтре Дата Выручка' is clicked on

10-01-2025T04:59:25 - [TEST_STEP][PASSED] - scrollToElement(findTestObject("Факторный анализ/2024 список Выручка"), 30): Scroll to object 'Object Repository/Факторный анализ/2024 список Выручка' successfully

10-01-2025T04:59:26 - [MESSAGE][PASSED] - Scroll to object 'Object Repository/Факторный анализ/2024 список Выручка' successfully

10-01-2025T04:59:26 - [TEST_STEP][PASSED] - click(findTestObject("Факторный анализ/2024 список Выручка")): Object: 'Object Repository/Факторный анализ/2024 список Выручка' is clicked on

10-01-2025T04:59:26 - [MESSAGE][PASSED] - Object: 'Object Repository/Факторный анализ/2024 список Выручка' is clicked on

10-01-2025T04:59:26 - [TEST_STEP][PASSED] - scrollToElement(findTestObject("Факторный анализ/1 квартал 2024 выбрать Выручка"), 30): Scroll to object 'Object Repository/Факторный анализ/1 квартал 2024 выбрать Выручка' successfully

10-01-2025T04:59:26 - [MESSAGE][PASSED] - Scroll to object 'Object Repository/Факторный анализ/1 квартал 2024 выбрать Выручка' successfully

10-01-2025T04:59:26 - [TEST_STEP][PASSED] - click(findTestObject("Факторный анализ/1 квартал 2024 выбрать Выручка")): Object: 'Object Repository/Факторный анализ/1 квартал 2024 выбрать Выручка' is clicked on

10-01-2025T04:59:27 - [MESSAGE][PASSED] - Object: 'Object Repository/Факторный анализ/1 квартал 2024 выбрать Выручка' is clicked on

10-01-2025T04:59:27 - [TEST_STEP][PASSED] - scrollToElement(findTestObject("Факторный анализ/2 квартал 2024 выбрать Выручка"), 30): Scroll to object 'Object Repository/Факторный анализ/2 квартал 2024 выбрать Выручка' successfully

10-01-2025T04:59:27 - [MESSAGE][PASSED] - Scroll to object 'Object Repository/Факторный анализ/2 квартал 2024 выбрать Выручка' successfully

10-01-2025T04:59:27 - [TEST_STEP][PASSED] - click(findTestObject("Факторный анализ/2 квартал 2024 выбрать Выручка"), CONTINUE_ON_FAILURE): Object: 'Object Repository/Факторный анализ/2 квартал 2024 выбрать Выручка' is clicked on

10-01-2025T04:59:28 - [MESSAGE][PASSED] - Object: 'Object Repository/Факторный анализ/2 квартал 2024 выбрать Выручка' is clicked on

10-01-2025T04:59:28 - [TEST_STEP][PASSED] - click(findTestObject("Факторный анализ/3 квартал 2024 выбрать Выручка"), CONTINUE_ON_FAILURE): Object: 'Object Repository/Факторный анализ/3 квартал 2024 выбрать Выручка' is clicked on

10-01-2025T04:59:28 - [MESSAGE][PASSED] - Object: 'Object Repository/Факторный анализ/3 квартал 2024 выбрать Выручка' is clicked on

10-01-2025T04:59:28 - [TEST_STEP][PASSED] - scrollToElement(findTestObject("Факторный анализ/4 квартал 2024 список Выручка"), 30): Scroll to object 'Object Repository/Факторный анализ/4 квартал 2024 список Выручка' successfully

10-01-2025T04:59:29 - [MESSAGE][PASSED] - Scroll to object 'Object Repository/Факторный анализ/4 квартал 2024 список Выручка' successfully

10-01-2025T04:59:29 - [TEST_STEP][PASSED] - click(findTestObject("Факторный анализ/4 квартал 2024 список Выручка"), CONTINUE_ON_FAILURE): Object: 'Object Repository/Факторный анализ/4 квартал 2024 список Выручка' is clicked on

10-01-2025T04:59:29 - [MESSAGE][PASSED] - Object: 'Object Repository/Факторный анализ/4 квартал 2024 список Выручка' is clicked on

10-01-2025T04:59:29 - [TEST_STEP][PASSED] - scrollToElement(findTestObject("Факторный анализ/Октябрь 2024 Выручка"), 30): Scroll to object 'Object Repository/Факторный анализ/Октябрь 2024 Выручка' successfully

10-01-2025T04:59:29 - [MESSAGE][PASSED] - Scroll to object 'Object Repository/Факторный анализ/Октябрь 2024 Выручка' successfully

10-01-2025T04:59:29 - [TEST_STEP][PASSED] - click(findTestObject("Факторный анализ/Октябрь 2024 Выручка"), CONTINUE_ON_FAILURE): Object: 'Object Repository/Факторный анализ/Октябрь 2024 Выручка' is clicked on

10-01-2025T04:59:30 - [MESSAGE][PASSED] - Object: 'Object Repository/Факторный анализ/Октябрь 2024 Выручка' is clicked on

10-01-2025T04:59:30 - [TEST_STEP][PASSED] - scrollToElement(findTestObject("Факторный анализ/Ноябрь 2024 Выручка"), 30): Scroll to object 'Object Repository/Факторный анализ/Ноябрь 2024 Выручка' successfully

10-01-2025T04:59:30 - [MESSAGE][PASSED] - Scroll to object 'Object Repository/Факторный анализ/Ноябрь 2024 Выручка' successfully

10-01-2025T04:59:30 - [TEST_STEP][PASSED] - click(findTestObject("Факторный анализ/Ноябрь 2024 Выручка"), CONTINUE_ON_FAILURE): Object: 'Object Repository/Факторный анализ/Ноябрь 2024 Выручка' is clicked on

10-01-2025T04:59:31 - [MESSAGE][PASSED] - Object: 'Object Repository/Факторный анализ/Ноябрь 2024 Выручка' is clicked on

10-01-2025T04:59:31 - [TEST_STEP][PASSED] - scrollToElement(findTestObject("Факторный анализ/Заголовок дашборда Выручка"), 30): Scroll to object 'Object Repository/Факторный анализ/Заголовок дашборда Выручка' successfully

10-01-2025T04:59:31 - [MESSAGE][PASSED] - Scroll to object 'Object Repository/Факторный анализ/Заголовок дашборда Выручка' successfully

10-01-2025T04:59:31 - [TEST_STEP][PASSED] - click(findTestObject("Факторный анализ/Применить в фильтре Дата Выручка")): Object: 'Object Repository/Факторный анализ/Применить в фильтре Дата Выручка' is clicked on

10-01-2025T04:59:32 - [MESSAGE][PASSED] - Object: 'Object Repository/Факторный анализ/Применить в фильтре Дата Выручка' is clicked on

10-01-2025T04:59:32 - [TEST_STEP][PASSED] - if (run == 1): null

10-01-2025T04:59:32 - [TEST_STEP][PASSED] - else: null

10-01-2025T04:59:32 - [TEST_STEP][PASSED] - click(findTestObject("Факторный анализ/Переключить отображение с филиала на месяц")): Object: 'Object Repository/Факторный анализ/Переключить отображение с филиала на месяц' is clicked on

10-01-2025T04:59:34 - [MESSAGE][PASSED] - Object: 'Object Repository/Факторный анализ/Переключить отображение с филиала на месяц' is clicked on

10-01-2025T04:59:34 - [TEST_STEP][PASSED] - b1 = replaceAll("\s+", "").trim(): Text of object 'Object Repository/Факторный анализ/span1 Выручка' is: '-1 279 044'

10-01-2025T04:59:34 - [MESSAGE][PASSED] - Text of object 'Object Repository/Факторный анализ/span1 Выручка' is: '-1 279 044'

10-01-2025T04:59:34 - [TEST_STEP][PASSED] - b2 = replaceAll("\s+", "").trim(): Text of object 'Object Repository/Факторный анализ/span2 Выручка' is: '-9 388'

10-01-2025T04:59:34 - [MESSAGE][PASSED] - Text of object 'Object Repository/Факторный анализ/span2 Выручка' is: '-9 388'

10-01-2025T04:59:34 - [TEST_STEP][PASSED] - println("b1: " + b1): null

10-01-2025T04:59:34 - [TEST_STEP][PASSED] - println("b2: " + b2): null

10-01-2025T04:59:34 - [TEST_STEP][PASSED] - vidget = "Отклонения выручки по факторам": null

10-01-2025T04:59:34 - [TEST_STEP][PASSED] - DZO = "ПАО Россети": null

10-01-2025T04:59:34 - [TEST_STEP][PASSED] - typeOfData = "Отклонение (объём услуг)": null

10-01-2025T04:59:34 - [TEST_STEP][PASSED] - Script1719551244403.Compare(x = a1, y = b1, run, typeOfData, otobrajeniyeDannyh, todaysDate, vidget, DZO): null

10-01-2025T04:59:34 - [TEST_STEP][PASSED] - if (verifyEqual(x, y) == true): Actual object '-1279044' and expected object '-1279044' are equal

10-01-2025T04:59:34 - [MESSAGE][PASSED] - Actual object '-1279044' and expected object '-1279044' are equal

10-01-2025T04:59:34 - [TEST_STEP][PASSED] - typeOfData = "Отклонение (средний тариф)": null

10-01-2025T04:59:34 - [TEST_STEP][PASSED] - Script1719551244403.Compare(x = a2, y = b2, run, typeOfData, otobrajeniyeDannyh, todaysDate, vidget, DZO): null

10-01-2025T04:59:34 - [TEST_STEP][PASSED] - if (verifyEqual(x, y) == true): Actual object '-9388' and expected object '-9388' are equal

10-01-2025T04:59:34 - [MESSAGE][PASSED] - Actual object '-9388' and expected object '-9388' are equal

10-01-2025T04:59:34 - [TEST_STEP][PASSED] - tableB = getText(findTestObject("Факторный анализ/AllTable1 Выручка")).replaceAll("[\r?
|
]", "/"): Text of object 'Object Repository/Факторный анализ/AllTable1 Выручка' is: 'ДЗО
Филиал
Отклонение (объём услуг) филиал без Nan
Отклонение (средний тариф) филиал без Nan
АО «Тываэнерго» АО "Тываэнерго" 486 - 128
АО «Чеченэнерго» АО «Чеченэнерго» 73 47
Россети Волга Мордовэнерго 224 -93
Оренбургэнерго 833 - 135
Пензаэнерго 340 -67
Самарские РС 380 -1 202
Саратовские РС 471 - 569
Ульяновские РС 276 - 216
Чувашэнерго - 156 152
Россети Кубань Кубаньэнерго 3 908 599
Россети Ленэнерго (ГК) Ленинградская область 1 472 1 111
г. Санкт-Петербург 2 698 - 108
Россети Московский регион Московская область 5 429 - 877
г. Москва 4 012 10
Россети Северный Кавказ (ГК) Дагестанская энергосбытовая компания 0 0
Дагэнерго - 635 589
Ингушэнерго - 207 154
Каббалкэнерго 286 70
Карачаево-Черкесскэнерго 155 13
Севкавказэнерго - 404 172
Ставропольэнерго 281 - 198
Россети Северо-Запад Архангельский филиал 74 - 112
Вологодский филиал 277 8
Карельский филиал -91 186
Мурманский филиал 102 46
Новгородский филиал 227 -48
Псковский филиал 151 -15
филиал в Республике Коми -63 41
Россети Сибирь (ГК) Алтайэнерго 332 333
Бурятэнерго - 119 329
ГАЭС 153 -21
Красноярскэнерго 1 368 - 676
Кузбассэнерго-РЭС - 461 932
Омскэнерго 188 -70
Хакасэнерго 422 - 442
Читаэнерго -77 206
Россети Томск Томская распределительная компания 387 - 146
Россети Тюмень Россети Тюмень -5 414 - 638
Россети Урал (ГК) Пермэнерго 669 - 246
Свердловэнерго 964 315
Челябэнерго 1 045 - 720
Россети ФСК ЕЭС Итого по ФСК ЕЭС -17 684 -6 088
Россети Центр Белгородэнерго 347 138
Брянскэнерго 78 9
Воронежэнерго 667 130
Костромаэнерго 127 -11
Курскэнерго -6 84
Липецкэнерго 853 - 381
Орелэнерго 158 -52
Смоленскэнерго 34 48
Тамбовэнерго 307 -12
Тверьэнерго 376 192
Ярэнерго 630 15
Россети Центр и Приволжье (ГК) Владимирэнерго 574 64
Ивэнерго 201 62
Калугаэнерго 706 -61
Кировэнерго 511 30
Мариэнерго 189 23
Нижновэнерго 849 359
Рязаньэнерго 229 70
Тулэнерго 877 - 292
Удмуртэнерго 401 20
Россети Юг (ГК) АО «ВМЭС» 151 59
Астраханьэнерго 38 68
Волгоградэнерго 447 - 400
Калмэнерго 25 -2
Ростовэнерго 868 75
Россети Янтарь Россети Янтарь 419 -47'

10-01-2025T04:59:35 - [MESSAGE][PASSED] - Text of object 'Object Repository/Факторный анализ/AllTable1 Выручка' is: 'ДЗО
Филиал
Отклонение (объём услуг) филиал без Nan
Отклонение (средний тариф) филиал без Nan
АО «Тываэнерго» АО "Тываэнерго" 486 - 128
АО «Чеченэнерго» АО «Чеченэнерго» 73 47
Россети Волга Мордовэнерго 224 -93
Оренбургэнерго 833 - 135
Пензаэнерго 340 -67
Самарские РС 380 -1 202
Саратовские РС 471 - 569
Ульяновские РС 276 - 216
Чувашэнерго - 156 152
Россети Кубань Кубаньэнерго 3 908 599
Россети Ленэнерго (ГК) Ленинградская область 1 472 1 111
г. Санкт-Петербург 2 698 - 108
Россети Московский регион Московская область 5 429 - 877
г. Москва 4 012 10
Россети Северный Кавказ (ГК) Дагестанская энергосбытовая компания 0 0
Дагэнерго - 635 589
Ингушэнерго - 207 154
Каббалкэнерго 286 70
Карачаево-Черкесскэнерго 155 13
Севкавказэнерго - 404 172
Ставропольэнерго 281 - 198
Россети Северо-Запад Архангельский филиал 74 - 112
Вологодский филиал 277 8
Карельский филиал -91 186
Мурманский филиал 102 46
Новгородский филиал 227 -48
Псковский филиал 151 -15
филиал в Республике Коми -63 41
Россети Сибирь (ГК) Алтайэнерго 332 333
Бурятэнерго - 119 329
ГАЭС 153 -21
Красноярскэнерго 1 368 - 676
Кузбассэнерго-РЭС - 461 932
Омскэнерго 188 -70
Хакасэнерго 422 - 442
Читаэнерго -77 206
Россети Томск Томская распределительная компания 387 - 146
Россети Тюмень Россети Тюмень -5 414 - 638
Россети Урал (ГК) Пермэнерго 669 - 246
Свердловэнерго 964 315
Челябэнерго 1 045 - 720
Россети ФСК ЕЭС Итого по ФСК ЕЭС -17 684 -6 088
Россети Центр Белгородэнерго 347 138
Брянскэнерго 78 9
Воронежэнерго 667 130
Костромаэнерго 127 -11
Курскэнерго -6 84
Липецкэнерго 853 - 381
Орелэнерго 158 -52
Смоленскэнерго 34 48
Тамбовэнерго 307 -12
Тверьэнерго 376 192
Ярэнерго 630 15
Россети Центр и Приволжье (ГК) Владимирэнерго 574 64
Ивэнерго 201 62
Калугаэнерго 706 -61
Кировэнерго 511 30
Мариэнерго 189 23
Нижновэнерго 849 359
Рязаньэнерго 229 70
Тулэнерго 877 - 292
Удмуртэнерго 401 20
Россети Юг (ГК) АО «ВМЭС» 151 59
Астраханьэнерго 38 68
Волгоградэнерго 447 - 400
Калмэнерго 25 -2
Ростовэнерго 868 75
Россети Янтарь Россети Янтарь 419 -47'

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - println("tableB: " + tableB): null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - for ([i = 1, i < 5, (i++)]): null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - ii = tableB.indexOf("/") + 1: null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - tableB = tableB.substring(ii, tableB.length()): null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - ii = tableB.indexOf("/") + 1: null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - tableB = tableB.substring(ii, tableB.length()): null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - ii = tableB.indexOf("/") + 1: null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - tableB = tableB.substring(ii, tableB.length()): null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - ii = tableB.indexOf("/") + 1: null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - tableB = tableB.substring(ii, tableB.length()): null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - println("tableB: " + tableB): null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - TyB = Script1719551244403.GetData(x = tableB): null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - i2 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - i2 = x.indexOf("/") + 1: null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - x = replaceAll("\p{P}", "").trim(): null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - return x: null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - println("TyB: " + TyB): null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - tableB = Script1719551244403.NewDZO(x = tableB): null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - i3 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - i3 = x.indexOf("/") + 1: null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - x = x.substring(i3, x.length()): null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - return x: null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - ChB = Script1719551244403.GetData(x = tableB): null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - i2 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - i2 = x.indexOf("/") + 1: null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - x = replaceAll("\p{P}", "").trim(): null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - return x: null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - println("ChB: " + ChB): null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - tableB = Script1719551244403.NewDZO(x = tableB): null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - i3 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - i3 = x.indexOf("/") + 1: null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - x = x.substring(i3, x.length()): null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - return x: null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - i = tableB.indexOf("Кубань"): null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - VB = replaceAll("\p{P}", "").trim(): null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - println("VB: " + VB): null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - for ([i = 1, i < 8, (i++)]): null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - tableB = Script1719551244403.NewDZO(x = tableB): null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - i3 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - i3 = x.indexOf("/") + 1: null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - x = x.substring(i3, x.length()): null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - return x: null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - tableB = Script1719551244403.NewDZO(x = tableB): null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - i3 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - i3 = x.indexOf("/") + 1: null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - x = x.substring(i3, x.length()): null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - return x: null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - tableB = Script1719551244403.NewDZO(x = tableB): null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - i3 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - i3 = x.indexOf("/") + 1: null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - x = x.substring(i3, x.length()): null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - return x: null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - tableB = Script1719551244403.NewDZO(x = tableB): null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - i3 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - i3 = x.indexOf("/") + 1: null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - x = x.substring(i3, x.length()): null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - return x: null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - tableB = Script1719551244403.NewDZO(x = tableB): null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - i3 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - i3 = x.indexOf("/") + 1: null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - x = x.substring(i3, x.length()): null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - return x: null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - tableB = Script1719551244403.NewDZO(x = tableB): null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - i3 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - i3 = x.indexOf("/") + 1: null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - x = x.substring(i3, x.length()): null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - return x: null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - tableB = Script1719551244403.NewDZO(x = tableB): null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - i3 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - i3 = x.indexOf("/") + 1: null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - x = x.substring(i3, x.length()): null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - return x: null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - i = tableB.indexOf("Ленэнерго"): null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - KuB = Script1719551244403.GetData(x = tableB): null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - i2 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - i2 = x.indexOf("/") + 1: null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - x = replaceAll("\p{P}", "").trim(): null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - return x: null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - println("KuB: " + KuB): null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - tableB = Script1719551244403.NewDZO(x = tableB): null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - i3 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - i3 = x.indexOf("/") + 1: null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - x = x.substring(i3, x.length()): null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - return x: null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - i = tableB.indexOf("Московский"): null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - LenB = replaceAll("\p{P}", "").trim(): null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - println("LenB: " + LenB): null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - tableB = Script1719551244403.NewDZO(x = tableB): null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - i3 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - i3 = x.indexOf("/") + 1: null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - x = x.substring(i3, x.length()): null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - return x: null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - tableB = Script1719551244403.NewDZO(x = tableB): null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - i3 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - i3 = x.indexOf("/") + 1: null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - x = x.substring(i3, x.length()): null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - return x: null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - i = tableB.indexOf("Кавказ"): null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - MosB = replaceAll("\p{P}", "").trim(): null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - println("MosB: " + MosB): null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - for ([i = 1, i < 3, (i++)]): null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - tableB = Script1719551244403.NewDZO(x = tableB): null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - i3 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - i3 = x.indexOf("/") + 1: null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - x = x.substring(i3, x.length()): null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - return x: null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - tableB = Script1719551244403.NewDZO(x = tableB): null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - i3 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - i3 = x.indexOf("/") + 1: null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - x = x.substring(i3, x.length()): null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - return x: null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - i = tableB.indexOf("Запад"): null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - SKB = replaceAll("\p{P}", "").trim(): null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - println("SKB: " + SKB): null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - for ([i = 1, i < 7, (i++)]): null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - tableB = Script1719551244403.NewDZO(x = tableB): null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - i3 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - i3 = x.indexOf("/") + 1: null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - x = x.substring(i3, x.length()): null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - return x: null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - tableB = Script1719551244403.NewDZO(x = tableB): null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - i3 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - i3 = x.indexOf("/") + 1: null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - x = x.substring(i3, x.length()): null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - return x: null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - tableB = Script1719551244403.NewDZO(x = tableB): null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - i3 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - i3 = x.indexOf("/") + 1: null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - x = x.substring(i3, x.length()): null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - return x: null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - tableB = Script1719551244403.NewDZO(x = tableB): null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - i3 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - i3 = x.indexOf("/") + 1: null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - x = x.substring(i3, x.length()): null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - return x: null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - tableB = Script1719551244403.NewDZO(x = tableB): null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - i3 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - i3 = x.indexOf("/") + 1: null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - x = x.substring(i3, x.length()): null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - return x: null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - tableB = Script1719551244403.NewDZO(x = tableB): null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - i3 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - i3 = x.indexOf("/") + 1: null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - x = x.substring(i3, x.length()): null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - return x: null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - i = tableB.indexOf("Сибирь"): null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - SZB = replaceAll("\p{P}", "").trim(): null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - println("SZB: " + SZB): null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - for ([i = 1, i < 8, (i++)]): null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - tableB = Script1719551244403.NewDZO(x = tableB): null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - i3 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - i3 = x.indexOf("/") + 1: null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - x = x.substring(i3, x.length()): null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - return x: null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - tableB = Script1719551244403.NewDZO(x = tableB): null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - i3 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - i3 = x.indexOf("/") + 1: null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - x = x.substring(i3, x.length()): null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - return x: null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - tableB = Script1719551244403.NewDZO(x = tableB): null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - i3 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - i3 = x.indexOf("/") + 1: null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - x = x.substring(i3, x.length()): null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - return x: null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - tableB = Script1719551244403.NewDZO(x = tableB): null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - i3 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - i3 = x.indexOf("/") + 1: null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - x = x.substring(i3, x.length()): null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - return x: null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - tableB = Script1719551244403.NewDZO(x = tableB): null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - i3 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - i3 = x.indexOf("/") + 1: null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - x = x.substring(i3, x.length()): null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - return x: null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - tableB = Script1719551244403.NewDZO(x = tableB): null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - i3 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - i3 = x.indexOf("/") + 1: null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - x = x.substring(i3, x.length()): null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - return x: null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - tableB = Script1719551244403.NewDZO(x = tableB): null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - i3 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - i3 = x.indexOf("/") + 1: null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - x = x.substring(i3, x.length()): null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - return x: null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - i = tableB.indexOf("Томск"): null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - SiB = replaceAll("\p{P}", "").trim(): null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - println("SiB: " + SiB): null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - for ([i = 1, i < 9, (i++)]): null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - tableB = Script1719551244403.NewDZO(x = tableB): null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - i3 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - i3 = x.indexOf("/") + 1: null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - x = x.substring(i3, x.length()): null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - return x: null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - tableB = Script1719551244403.NewDZO(x = tableB): null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - i3 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - i3 = x.indexOf("/") + 1: null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - x = x.substring(i3, x.length()): null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - return x: null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - tableB = Script1719551244403.NewDZO(x = tableB): null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - i3 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - i3 = x.indexOf("/") + 1: null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - x = x.substring(i3, x.length()): null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - return x: null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - tableB = Script1719551244403.NewDZO(x = tableB): null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - i3 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - i3 = x.indexOf("/") + 1: null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - x = x.substring(i3, x.length()): null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - return x: null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - tableB = Script1719551244403.NewDZO(x = tableB): null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - i3 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - i3 = x.indexOf("/") + 1: null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - x = x.substring(i3, x.length()): null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - return x: null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - tableB = Script1719551244403.NewDZO(x = tableB): null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - i3 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - i3 = x.indexOf("/") + 1: null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - x = x.substring(i3, x.length()): null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - return x: null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - tableB = Script1719551244403.NewDZO(x = tableB): null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - i3 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - i3 = x.indexOf("/") + 1: null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - x = x.substring(i3, x.length()): null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - return x: null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - tableB = Script1719551244403.NewDZO(x = tableB): null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - i3 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - i3 = x.indexOf("/") + 1: null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - x = x.substring(i3, x.length()): null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - return x: null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - i = tableB.indexOf("Тюмень"): null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - ToB = replaceAll("\p{P}", "").trim(): null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - println("ToB: " + ToB): null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - tableB = Script1719551244403.NewDZO(x = tableB): null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - i3 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - i3 = x.indexOf("/") + 1: null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - x = x.substring(i3, x.length()): null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - return x: null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - TyuB = replaceAll("\p{P}", "").trim(): null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - println("TyuB: " + TyuB): null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - tableB = Script1719551244403.NewDZO(x = tableB): null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - i3 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - i3 = x.indexOf("/") + 1: null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - x = x.substring(i3, x.length()): null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - return x: null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - i = tableB.indexOf("ЕЭС"): null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - UrB = replaceAll("\p{P}", "").trim(): null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - println("UrB: " + UrB): null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - for ([i = 1, i < 4, (i++)]): null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - tableB = Script1719551244403.NewDZO(x = tableB): null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - i3 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - i3 = x.indexOf("/") + 1: null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - x = x.substring(i3, x.length()): null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - return x: null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - tableB = Script1719551244403.NewDZO(x = tableB): null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - i3 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - i3 = x.indexOf("/") + 1: null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - x = x.substring(i3, x.length()): null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - return x: null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - tableB = Script1719551244403.NewDZO(x = tableB): null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - i3 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - i3 = x.indexOf("/") + 1: null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - x = x.substring(i3, x.length()): null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - return x: null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - i = tableB.indexOf("Центр"): null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - FSKB = replaceAll("\p{P}", "").trim(): null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - println("FSKB: " + FSKB): null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - tableB = Script1719551244403.NewDZO(x = tableB): null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - i3 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - i3 = x.indexOf("/") + 1: null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - x = x.substring(i3, x.length()): null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - return x: null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - i = tableB.indexOf("Приволжье"): null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - CenB = replaceAll("\p{P}", "").trim(): null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - println("CenB: " + CenB): null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - for ([i = 1, i < 12, (i++)]): null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - tableB = Script1719551244403.NewDZO(x = tableB): null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - i3 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - i3 = x.indexOf("/") + 1: null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - x = x.substring(i3, x.length()): null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - return x: null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - tableB = Script1719551244403.NewDZO(x = tableB): null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - i3 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - i3 = x.indexOf("/") + 1: null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - x = x.substring(i3, x.length()): null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - return x: null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - tableB = Script1719551244403.NewDZO(x = tableB): null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - i3 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - i3 = x.indexOf("/") + 1: null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - x = x.substring(i3, x.length()): null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - return x: null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - tableB = Script1719551244403.NewDZO(x = tableB): null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - i3 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - i3 = x.indexOf("/") + 1: null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - x = x.substring(i3, x.length()): null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - return x: null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - tableB = Script1719551244403.NewDZO(x = tableB): null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - i3 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - i3 = x.indexOf("/") + 1: null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - x = x.substring(i3, x.length()): null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - return x: null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - tableB = Script1719551244403.NewDZO(x = tableB): null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - i3 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - i3 = x.indexOf("/") + 1: null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - x = x.substring(i3, x.length()): null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - return x: null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - tableB = Script1719551244403.NewDZO(x = tableB): null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - i3 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - i3 = x.indexOf("/") + 1: null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - x = x.substring(i3, x.length()): null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - return x: null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - tableB = Script1719551244403.NewDZO(x = tableB): null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - i3 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - i3 = x.indexOf("/") + 1: null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - x = x.substring(i3, x.length()): null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - return x: null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - tableB = Script1719551244403.NewDZO(x = tableB): null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - i3 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - i3 = x.indexOf("/") + 1: null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - x = x.substring(i3, x.length()): null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - return x: null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - tableB = Script1719551244403.NewDZO(x = tableB): null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - i3 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - i3 = x.indexOf("/") + 1: null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - x = x.substring(i3, x.length()): null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - return x: null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - tableB = Script1719551244403.NewDZO(x = tableB): null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - i3 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - i3 = x.indexOf("/") + 1: null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - x = x.substring(i3, x.length()): null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - return x: null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - i = tableB.indexOf("Юг"): null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - CiPB = replaceAll("\p{P}", "").trim(): null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - println("CiPB: " + CiPB): null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - for ([i = 1, i < 10, (i++)]): null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - tableB = Script1719551244403.NewDZO(x = tableB): null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - i3 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - i3 = x.indexOf("/") + 1: null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - x = x.substring(i3, x.length()): null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - return x: null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - tableB = Script1719551244403.NewDZO(x = tableB): null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - i3 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - i3 = x.indexOf("/") + 1: null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - x = x.substring(i3, x.length()): null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - return x: null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - tableB = Script1719551244403.NewDZO(x = tableB): null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - i3 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - i3 = x.indexOf("/") + 1: null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - x = x.substring(i3, x.length()): null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - return x: null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - tableB = Script1719551244403.NewDZO(x = tableB): null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - i3 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - i3 = x.indexOf("/") + 1: null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - x = x.substring(i3, x.length()): null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - return x: null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - tableB = Script1719551244403.NewDZO(x = tableB): null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - i3 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - i3 = x.indexOf("/") + 1: null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - x = x.substring(i3, x.length()): null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - return x: null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - tableB = Script1719551244403.NewDZO(x = tableB): null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - i3 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - i3 = x.indexOf("/") + 1: null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - x = x.substring(i3, x.length()): null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - return x: null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - tableB = Script1719551244403.NewDZO(x = tableB): null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - i3 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - i3 = x.indexOf("/") + 1: null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - x = x.substring(i3, x.length()): null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - return x: null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - tableB = Script1719551244403.NewDZO(x = tableB): null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - i3 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - i3 = x.indexOf("/") + 1: null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - x = x.substring(i3, x.length()): null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - return x: null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - tableB = Script1719551244403.NewDZO(x = tableB): null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - i3 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - i3 = x.indexOf("/") + 1: null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - x = x.substring(i3, x.length()): null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - return x: null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - i = tableB.indexOf("Янтарь"): null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - UgB = replaceAll("\p{P}", "").trim(): null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - println("UgB: " + UgB): null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - i = tableB.lastIndexOf("/"): null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - YaB = replaceAll("\p{P}", "").trim(): null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - println("YaB: " + YaB): null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - vidget = "Отклонения выручки по факторам": null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - if (run == 2): null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - DZO = "АО «Тываэнерго»": null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - Script1719551244403.CompareDZO(x = TyA, y = TyB, run, typeOfData, otobrajeniyeDannyh, todaysDate, vidget, DZO): null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - x1 = x: null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - y1 = y: null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - i1 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - if (verifyEqual(x, y) == true): null

10-01-2025T04:59:35 - [MESSAGE][PASSED] - Actual object '486  128' and expected object '486  128' are equal

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - DZO = "АО «Чеченэнерго»": null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - Script1719551244403.CompareDZO(x = ChA, y = ChB, run, typeOfData, otobrajeniyeDannyh, todaysDate, vidget, DZO): null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - x1 = x: null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - y1 = y: null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - i1 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:59:35 - [TEST_STEP][FAILED] - if (verifyEqual(x, y) == true): Unable to verify equal between actual object '4 079 47' and expected object '73 47' (Root cause: com.kms.katalon.core.exception.StepFailedException: Actual object '4 079 47' and expected object '73 47' are not equal
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.doCall(VerifyEqualKeyword.groovy:58)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.call(VerifyEqualKeyword.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:75)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.verifyEqual(VerifyEqualKeyword.groovy:63)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.execute(VerifyEqualKeyword.groovy:44)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:74)
	at com.kms.katalon.core.keyword.BuiltinKeywords.verifyEqual(BuiltinKeywords.groovy:146)
	at jdk.internal.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at Факторный анализ сверка дашбордов.CompareDZO(Факторный анализ сверка дашбордов:703)
	at Факторный анализ сверка дашбордов.Test(Факторный анализ сверка дашбордов:617)
	at Факторный анализ сверка дашбордов.run(Факторный анализ сверка дашбордов:44)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:448)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:439)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:418)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:410)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:285)
	at com.kms.katalon.core.common.CommonExecutor.accessTestCaseMainPhase(CommonExecutor.java:65)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:150)
	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:106)
	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:180)
	at TempTestSuite1736466949911.run(TempTestSuite1736466949911.groovy:35)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
)

10-01-2025T04:59:35 - [MESSAGE][FAILED] - Unable to verify equal between actual object '4 079 47' and expected object '73 47' (Root cause: com.kms.katalon.core.exception.StepFailedException: Actual object '4 079 47' and expected object '73 47' are not equal
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.doCall(VerifyEqualKeyword.groovy:58)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.call(VerifyEqualKeyword.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:75)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.verifyEqual(VerifyEqualKeyword.groovy:63)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.execute(VerifyEqualKeyword.groovy:44)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:74)
	at com.kms.katalon.core.keyword.BuiltinKeywords.verifyEqual(BuiltinKeywords.groovy:146)
	at jdk.internal.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at Факторный анализ сверка дашбордов.CompareDZO(Факторный анализ сверка дашбордов:703)
	at Факторный анализ сверка дашбордов.Test(Факторный анализ сверка дашбордов:617)
	at Факторный анализ сверка дашбордов.run(Факторный анализ сверка дашбордов:44)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:448)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:439)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:418)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:410)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:285)
	at com.kms.katalon.core.common.CommonExecutor.accessTestCaseMainPhase(CommonExecutor.java:65)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:150)
	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:106)
	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:180)
	at TempTestSuite1736466949911.run(TempTestSuite1736466949911.groovy:35)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
)

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - else: null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - otobrajeniyeDannyh = "Все": null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - vidget = "Всего отклонения по факторам": null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - Script1719551244403.WriteToExcel(todaysDate, typeOfData, otobrajeniyeDannyh, x, y, vidget, DZO): null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - sheetName = "Sheet1": null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - data = findTestData("PlanFact"): null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - n = data.getRowNumbers() + 1: null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - period = getText(findTestObject("Факторный анализ/Фильтр Период")): Text of object 'Object Repository/Факторный анализ/Фильтр Период' is: 'Октябрь, Ноябрь и 1, 2, 3 кв. 2024 года'

10-01-2025T04:59:35 - [MESSAGE][PASSED] - Text of object 'Object Repository/Факторный анализ/Фильтр Период' is: 'Октябрь, Ноябрь и 1, 2, 3 кв. 2024 года'

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - println(period): null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - dashboardName = "Факторный анализ": null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - workbook01 = getWorkbook(excelFilePath): null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - sheet01 = getExcelSheet(workbook01, sheetName): null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 0, dashboardName): null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 1, DZO): null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 2, vidget): null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 3, typeOfData): null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 4, otobrajeniyeDannyh): null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 5, period): null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 6, todaysDate): null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - n = n + 1: null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - saveWorkbook(excelFilePath, workbook01): null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - DZO = "Россети Волга": null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - Script1719551244403.CompareDZO(x = VA, y = VB, run, typeOfData, otobrajeniyeDannyh, todaysDate, vidget, DZO): null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - x1 = x: null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - y1 = y: null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - i1 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:59:35 - [TEST_STEP][FAILED] - if (verifyEqual(x, y) == true): Unable to verify equal between actual object '3 530 93 13 669  135 8 434 67  16 427 1 202  16 583  569  6 101  216 5 275 152' and expected object '224 93 833  135 340 67  380 1 202  471  569  276  216  156 152' (Root cause: com.kms.katalon.core.exception.StepFailedException: Actual object '3 530 93 13 669  135 8 434 67  16 427 1 202  16 583  569  6 101  216 5 275 152' and expected object '224 93 833  135 340 67  380 1 202  471  569  276  216  156 152' are not equal
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.doCall(VerifyEqualKeyword.groovy:58)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.call(VerifyEqualKeyword.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:75)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.verifyEqual(VerifyEqualKeyword.groovy:63)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.execute(VerifyEqualKeyword.groovy:44)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:74)
	at com.kms.katalon.core.keyword.BuiltinKeywords.verifyEqual(BuiltinKeywords.groovy:146)
	at jdk.internal.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at Факторный анализ сверка дашбордов.CompareDZO(Факторный анализ сверка дашбордов:703)
	at Факторный анализ сверка дашбордов.Test(Факторный анализ сверка дашбордов:621)
	at Факторный анализ сверка дашбордов.run(Факторный анализ сверка дашбордов:44)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:448)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:439)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:418)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:410)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:285)
	at com.kms.katalon.core.common.CommonExecutor.accessTestCaseMainPhase(CommonExecutor.java:65)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:150)
	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:106)
	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:180)
	at TempTestSuite1736466949911.run(TempTestSuite1736466949911.groovy:35)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
)

10-01-2025T04:59:35 - [MESSAGE][FAILED] - Unable to verify equal between actual object '3 530 93 13 669  135 8 434 67  16 427 1 202  16 583  569  6 101  216 5 275 152' and expected object '224 93 833  135 340 67  380 1 202  471  569  276  216  156 152' (Root cause: com.kms.katalon.core.exception.StepFailedException: Actual object '3 530 93 13 669  135 8 434 67  16 427 1 202  16 583  569  6 101  216 5 275 152' and expected object '224 93 833  135 340 67  380 1 202  471  569  276  216  156 152' are not equal
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.doCall(VerifyEqualKeyword.groovy:58)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.call(VerifyEqualKeyword.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:75)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.verifyEqual(VerifyEqualKeyword.groovy:63)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.execute(VerifyEqualKeyword.groovy:44)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:74)
	at com.kms.katalon.core.keyword.BuiltinKeywords.verifyEqual(BuiltinKeywords.groovy:146)
	at jdk.internal.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at Факторный анализ сверка дашбордов.CompareDZO(Факторный анализ сверка дашбордов:703)
	at Факторный анализ сверка дашбордов.Test(Факторный анализ сверка дашбордов:621)
	at Факторный анализ сверка дашбордов.run(Факторный анализ сверка дашбордов:44)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:448)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:439)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:418)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:410)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:285)
	at com.kms.katalon.core.common.CommonExecutor.accessTestCaseMainPhase(CommonExecutor.java:65)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:150)
	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:106)
	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:180)
	at TempTestSuite1736466949911.run(TempTestSuite1736466949911.groovy:35)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
)

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - else: null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - otobrajeniyeDannyh = "Все": null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - vidget = "Всего отклонения по факторам": null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - Script1719551244403.WriteToExcel(todaysDate, typeOfData, otobrajeniyeDannyh, x, y, vidget, DZO): null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - sheetName = "Sheet1": null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - data = findTestData("PlanFact"): null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - n = data.getRowNumbers() + 1: null

10-01-2025T04:59:35 - [TEST_STEP][PASSED] - period = getText(findTestObject("Факторный анализ/Фильтр Период")): Text of object 'Object Repository/Факторный анализ/Фильтр Период' is: 'Октябрь, Ноябрь и 1, 2, 3 кв. 2024 года'

10-01-2025T04:59:36 - [MESSAGE][PASSED] - Text of object 'Object Repository/Факторный анализ/Фильтр Период' is: 'Октябрь, Ноябрь и 1, 2, 3 кв. 2024 года'

10-01-2025T04:59:36 - [TEST_STEP][PASSED] - println(period): null

10-01-2025T04:59:36 - [TEST_STEP][PASSED] - dashboardName = "Факторный анализ": null

10-01-2025T04:59:36 - [TEST_STEP][PASSED] - workbook01 = getWorkbook(excelFilePath): null

10-01-2025T04:59:36 - [TEST_STEP][PASSED] - sheet01 = getExcelSheet(workbook01, sheetName): null

10-01-2025T04:59:36 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 0, dashboardName): null

10-01-2025T04:59:36 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 1, DZO): null

10-01-2025T04:59:36 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 2, vidget): null

10-01-2025T04:59:36 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 3, typeOfData): null

10-01-2025T04:59:36 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 4, otobrajeniyeDannyh): null

10-01-2025T04:59:36 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 5, period): null

10-01-2025T04:59:36 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 6, todaysDate): null

10-01-2025T04:59:36 - [TEST_STEP][PASSED] - n = n + 1: null

10-01-2025T04:59:36 - [TEST_STEP][PASSED] - saveWorkbook(excelFilePath, workbook01): null

10-01-2025T04:59:36 - [TEST_STEP][PASSED] - DZO = "Россети Кубань": null

10-01-2025T04:59:36 - [TEST_STEP][PASSED] - Script1719551244403.CompareDZO(x = KuA, y = KuB, run, typeOfData, otobrajeniyeDannyh, todaysDate, vidget, DZO): null

10-01-2025T04:59:36 - [TEST_STEP][PASSED] - x1 = x: null

10-01-2025T04:59:36 - [TEST_STEP][PASSED] - y1 = y: null

10-01-2025T04:59:36 - [TEST_STEP][PASSED] - i1 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:59:36 - [TEST_STEP][FAILED] - if (verifyEqual(x, y) == true): Unable to verify equal between actual object '64 770 599' and expected object '3 908 599' (Root cause: com.kms.katalon.core.exception.StepFailedException: Actual object '64 770 599' and expected object '3 908 599' are not equal
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.doCall(VerifyEqualKeyword.groovy:58)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.call(VerifyEqualKeyword.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:75)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.verifyEqual(VerifyEqualKeyword.groovy:63)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.execute(VerifyEqualKeyword.groovy:44)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:74)
	at com.kms.katalon.core.keyword.BuiltinKeywords.verifyEqual(BuiltinKeywords.groovy:146)
	at jdk.internal.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at Факторный анализ сверка дашбордов.CompareDZO(Факторный анализ сверка дашбордов:703)
	at Факторный анализ сверка дашбордов.Test(Факторный анализ сверка дашбордов:625)
	at Факторный анализ сверка дашбордов.run(Факторный анализ сверка дашбордов:44)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:448)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:439)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:418)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:410)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:285)
	at com.kms.katalon.core.common.CommonExecutor.accessTestCaseMainPhase(CommonExecutor.java:65)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:150)
	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:106)
	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:180)
	at TempTestSuite1736466949911.run(TempTestSuite1736466949911.groovy:35)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
)

10-01-2025T04:59:36 - [MESSAGE][FAILED] - Unable to verify equal between actual object '64 770 599' and expected object '3 908 599' (Root cause: com.kms.katalon.core.exception.StepFailedException: Actual object '64 770 599' and expected object '3 908 599' are not equal
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.doCall(VerifyEqualKeyword.groovy:58)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.call(VerifyEqualKeyword.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:75)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.verifyEqual(VerifyEqualKeyword.groovy:63)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.execute(VerifyEqualKeyword.groovy:44)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:74)
	at com.kms.katalon.core.keyword.BuiltinKeywords.verifyEqual(BuiltinKeywords.groovy:146)
	at jdk.internal.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at Факторный анализ сверка дашбордов.CompareDZO(Факторный анализ сверка дашбордов:703)
	at Факторный анализ сверка дашбордов.Test(Факторный анализ сверка дашбордов:625)
	at Факторный анализ сверка дашбордов.run(Факторный анализ сверка дашбордов:44)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:448)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:439)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:418)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:410)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:285)
	at com.kms.katalon.core.common.CommonExecutor.accessTestCaseMainPhase(CommonExecutor.java:65)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:150)
	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:106)
	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:180)
	at TempTestSuite1736466949911.run(TempTestSuite1736466949911.groovy:35)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
)

10-01-2025T04:59:36 - [TEST_STEP][PASSED] - else: null

10-01-2025T04:59:36 - [TEST_STEP][PASSED] - otobrajeniyeDannyh = "Все": null

10-01-2025T04:59:36 - [TEST_STEP][PASSED] - vidget = "Всего отклонения по факторам": null

10-01-2025T04:59:36 - [TEST_STEP][PASSED] - Script1719551244403.WriteToExcel(todaysDate, typeOfData, otobrajeniyeDannyh, x, y, vidget, DZO): null

10-01-2025T04:59:36 - [TEST_STEP][PASSED] - sheetName = "Sheet1": null

10-01-2025T04:59:36 - [TEST_STEP][PASSED] - data = findTestData("PlanFact"): null

10-01-2025T04:59:36 - [TEST_STEP][PASSED] - n = data.getRowNumbers() + 1: null

10-01-2025T04:59:36 - [TEST_STEP][PASSED] - period = getText(findTestObject("Факторный анализ/Фильтр Период")): Text of object 'Object Repository/Факторный анализ/Фильтр Период' is: 'Октябрь, Ноябрь и 1, 2, 3 кв. 2024 года'

10-01-2025T04:59:36 - [MESSAGE][PASSED] - Text of object 'Object Repository/Факторный анализ/Фильтр Период' is: 'Октябрь, Ноябрь и 1, 2, 3 кв. 2024 года'

10-01-2025T04:59:36 - [TEST_STEP][PASSED] - println(period): null

10-01-2025T04:59:36 - [TEST_STEP][PASSED] - dashboardName = "Факторный анализ": null

10-01-2025T04:59:36 - [TEST_STEP][PASSED] - workbook01 = getWorkbook(excelFilePath): null

10-01-2025T04:59:36 - [TEST_STEP][PASSED] - sheet01 = getExcelSheet(workbook01, sheetName): null

10-01-2025T04:59:36 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 0, dashboardName): null

10-01-2025T04:59:36 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 1, DZO): null

10-01-2025T04:59:36 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 2, vidget): null

10-01-2025T04:59:36 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 3, typeOfData): null

10-01-2025T04:59:36 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 4, otobrajeniyeDannyh): null

10-01-2025T04:59:36 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 5, period): null

10-01-2025T04:59:36 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 6, todaysDate): null

10-01-2025T04:59:36 - [TEST_STEP][PASSED] - n = n + 1: null

10-01-2025T04:59:36 - [TEST_STEP][PASSED] - saveWorkbook(excelFilePath, workbook01): null

10-01-2025T04:59:37 - [TEST_STEP][PASSED] - DZO = "Московский регион": null

10-01-2025T04:59:37 - [TEST_STEP][PASSED] - Script1719551244403.CompareDZO(x = MosA, y = MosB, run, typeOfData, otobrajeniyeDannyh, todaysDate, vidget, DZO): null

10-01-2025T04:59:37 - [TEST_STEP][PASSED] - x1 = x: null

10-01-2025T04:59:37 - [TEST_STEP][PASSED] - y1 = y: null

10-01-2025T04:59:37 - [TEST_STEP][PASSED] - i1 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:59:37 - [TEST_STEP][PASSED] - if (verifyEqual(x, y) == true): null

10-01-2025T04:59:37 - [MESSAGE][PASSED] - Actual object '5 429  877  4 012 10' and expected object '5 429  877  4 012 10' are equal

10-01-2025T04:59:37 - [TEST_STEP][PASSED] - DZO = "Россети Ленэнерго (ГК)": null

10-01-2025T04:59:37 - [TEST_STEP][PASSED] - Script1719551244403.CompareDZO(x = LenA, y = LenB, run, typeOfData, otobrajeniyeDannyh, todaysDate, vidget, DZO): null

10-01-2025T04:59:37 - [TEST_STEP][PASSED] - x1 = x: null

10-01-2025T04:59:37 - [TEST_STEP][PASSED] - y1 = y: null

10-01-2025T04:59:37 - [TEST_STEP][PASSED] - i1 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:59:37 - [TEST_STEP][FAILED] - if (verifyEqual(x, y) == true): Unable to verify equal between actual object '36 803 1 111  51 373  108' and expected object '1 472 1 111  2 698  108' (Root cause: com.kms.katalon.core.exception.StepFailedException: Actual object '36 803 1 111  51 373  108' and expected object '1 472 1 111  2 698  108' are not equal
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.doCall(VerifyEqualKeyword.groovy:58)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.call(VerifyEqualKeyword.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:75)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.verifyEqual(VerifyEqualKeyword.groovy:63)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.execute(VerifyEqualKeyword.groovy:44)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:74)
	at com.kms.katalon.core.keyword.BuiltinKeywords.verifyEqual(BuiltinKeywords.groovy:146)
	at jdk.internal.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at Факторный анализ сверка дашбордов.CompareDZO(Факторный анализ сверка дашбордов:703)
	at Факторный анализ сверка дашбордов.Test(Факторный анализ сверка дашбордов:633)
	at Факторный анализ сверка дашбордов.run(Факторный анализ сверка дашбордов:44)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:448)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:439)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:418)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:410)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:285)
	at com.kms.katalon.core.common.CommonExecutor.accessTestCaseMainPhase(CommonExecutor.java:65)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:150)
	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:106)
	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:180)
	at TempTestSuite1736466949911.run(TempTestSuite1736466949911.groovy:35)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
)

10-01-2025T04:59:37 - [MESSAGE][FAILED] - Unable to verify equal between actual object '36 803 1 111  51 373  108' and expected object '1 472 1 111  2 698  108' (Root cause: com.kms.katalon.core.exception.StepFailedException: Actual object '36 803 1 111  51 373  108' and expected object '1 472 1 111  2 698  108' are not equal
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.doCall(VerifyEqualKeyword.groovy:58)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.call(VerifyEqualKeyword.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:75)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.verifyEqual(VerifyEqualKeyword.groovy:63)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.execute(VerifyEqualKeyword.groovy:44)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:74)
	at com.kms.katalon.core.keyword.BuiltinKeywords.verifyEqual(BuiltinKeywords.groovy:146)
	at jdk.internal.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at Факторный анализ сверка дашбордов.CompareDZO(Факторный анализ сверка дашбордов:703)
	at Факторный анализ сверка дашбордов.Test(Факторный анализ сверка дашбордов:633)
	at Факторный анализ сверка дашбордов.run(Факторный анализ сверка дашбордов:44)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:448)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:439)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:418)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:410)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:285)
	at com.kms.katalon.core.common.CommonExecutor.accessTestCaseMainPhase(CommonExecutor.java:65)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:150)
	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:106)
	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:180)
	at TempTestSuite1736466949911.run(TempTestSuite1736466949911.groovy:35)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
)

10-01-2025T04:59:37 - [TEST_STEP][PASSED] - else: null

10-01-2025T04:59:37 - [TEST_STEP][PASSED] - otobrajeniyeDannyh = "Все": null

10-01-2025T04:59:37 - [TEST_STEP][PASSED] - vidget = "Всего отклонения по факторам": null

10-01-2025T04:59:37 - [TEST_STEP][PASSED] - Script1719551244403.WriteToExcel(todaysDate, typeOfData, otobrajeniyeDannyh, x, y, vidget, DZO): null

10-01-2025T04:59:37 - [TEST_STEP][PASSED] - sheetName = "Sheet1": null

10-01-2025T04:59:37 - [TEST_STEP][PASSED] - data = findTestData("PlanFact"): null

10-01-2025T04:59:37 - [TEST_STEP][PASSED] - n = data.getRowNumbers() + 1: null

10-01-2025T04:59:37 - [TEST_STEP][PASSED] - period = getText(findTestObject("Факторный анализ/Фильтр Период")): Text of object 'Object Repository/Факторный анализ/Фильтр Период' is: 'Октябрь, Ноябрь и 1, 2, 3 кв. 2024 года'

10-01-2025T04:59:37 - [MESSAGE][PASSED] - Text of object 'Object Repository/Факторный анализ/Фильтр Период' is: 'Октябрь, Ноябрь и 1, 2, 3 кв. 2024 года'

10-01-2025T04:59:37 - [TEST_STEP][PASSED] - println(period): null

10-01-2025T04:59:37 - [TEST_STEP][PASSED] - dashboardName = "Факторный анализ": null

10-01-2025T04:59:37 - [TEST_STEP][PASSED] - workbook01 = getWorkbook(excelFilePath): null

10-01-2025T04:59:37 - [TEST_STEP][PASSED] - sheet01 = getExcelSheet(workbook01, sheetName): null

10-01-2025T04:59:37 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 0, dashboardName): null

10-01-2025T04:59:37 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 1, DZO): null

10-01-2025T04:59:37 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 2, vidget): null

10-01-2025T04:59:37 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 3, typeOfData): null

10-01-2025T04:59:37 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 4, otobrajeniyeDannyh): null

10-01-2025T04:59:37 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 5, period): null

10-01-2025T04:59:37 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 6, todaysDate): null

10-01-2025T04:59:37 - [TEST_STEP][PASSED] - n = n + 1: null

10-01-2025T04:59:37 - [TEST_STEP][PASSED] - saveWorkbook(excelFilePath, workbook01): null

10-01-2025T04:59:37 - [TEST_STEP][PASSED] - DZO = "Россети Северный Кавказ (ГК)": null

10-01-2025T04:59:37 - [TEST_STEP][PASSED] - Script1719551244403.CompareDZO(x = SKA, y = SKB, run, typeOfData, otobrajeniyeDannyh, todaysDate, vidget, DZO): null

10-01-2025T04:59:37 - [TEST_STEP][PASSED] - x1 = x: null

10-01-2025T04:59:37 - [TEST_STEP][PASSED] - y1 = y: null

10-01-2025T04:59:37 - [TEST_STEP][PASSED] - i1 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:59:37 - [TEST_STEP][FAILED] - if (verifyEqual(x, y) == true): Unable to verify equal between actual object '111 69 8 053 589 1 797 137 3 286 70 2 129 13 3 775 172 10 373  198' and expected object '0 0  635 589  207 154 286 70 155 13  404 172 281  198' (Root cause: com.kms.katalon.core.exception.StepFailedException: Actual object '111 69 8 053 589 1 797 137 3 286 70 2 129 13 3 775 172 10 373  198' and expected object '0 0  635 589  207 154 286 70 155 13  404 172 281  198' are not equal
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.doCall(VerifyEqualKeyword.groovy:58)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.call(VerifyEqualKeyword.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:75)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.verifyEqual(VerifyEqualKeyword.groovy:63)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.execute(VerifyEqualKeyword.groovy:44)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:74)
	at com.kms.katalon.core.keyword.BuiltinKeywords.verifyEqual(BuiltinKeywords.groovy:146)
	at jdk.internal.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at Факторный анализ сверка дашбордов.CompareDZO(Факторный анализ сверка дашбордов:703)
	at Факторный анализ сверка дашбордов.Test(Факторный анализ сверка дашбордов:637)
	at Факторный анализ сверка дашбордов.run(Факторный анализ сверка дашбордов:44)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:448)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:439)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:418)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:410)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:285)
	at com.kms.katalon.core.common.CommonExecutor.accessTestCaseMainPhase(CommonExecutor.java:65)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:150)
	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:106)
	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:180)
	at TempTestSuite1736466949911.run(TempTestSuite1736466949911.groovy:35)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
)

10-01-2025T04:59:37 - [MESSAGE][FAILED] - Unable to verify equal between actual object '111 69 8 053 589 1 797 137 3 286 70 2 129 13 3 775 172 10 373  198' and expected object '0 0  635 589  207 154 286 70 155 13  404 172 281  198' (Root cause: com.kms.katalon.core.exception.StepFailedException: Actual object '111 69 8 053 589 1 797 137 3 286 70 2 129 13 3 775 172 10 373  198' and expected object '0 0  635 589  207 154 286 70 155 13  404 172 281  198' are not equal
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.doCall(VerifyEqualKeyword.groovy:58)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.call(VerifyEqualKeyword.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:75)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.verifyEqual(VerifyEqualKeyword.groovy:63)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.execute(VerifyEqualKeyword.groovy:44)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:74)
	at com.kms.katalon.core.keyword.BuiltinKeywords.verifyEqual(BuiltinKeywords.groovy:146)
	at jdk.internal.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at Факторный анализ сверка дашбордов.CompareDZO(Факторный анализ сверка дашбордов:703)
	at Факторный анализ сверка дашбордов.Test(Факторный анализ сверка дашбордов:637)
	at Факторный анализ сверка дашбордов.run(Факторный анализ сверка дашбордов:44)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:448)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:439)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:418)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:410)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:285)
	at com.kms.katalon.core.common.CommonExecutor.accessTestCaseMainPhase(CommonExecutor.java:65)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:150)
	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:106)
	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:180)
	at TempTestSuite1736466949911.run(TempTestSuite1736466949911.groovy:35)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
)

10-01-2025T04:59:37 - [TEST_STEP][PASSED] - else: null

10-01-2025T04:59:37 - [TEST_STEP][PASSED] - otobrajeniyeDannyh = "Все": null

10-01-2025T04:59:37 - [TEST_STEP][PASSED] - vidget = "Всего отклонения по факторам": null

10-01-2025T04:59:37 - [TEST_STEP][PASSED] - Script1719551244403.WriteToExcel(todaysDate, typeOfData, otobrajeniyeDannyh, x, y, vidget, DZO): null

10-01-2025T04:59:37 - [TEST_STEP][PASSED] - sheetName = "Sheet1": null

10-01-2025T04:59:37 - [TEST_STEP][PASSED] - data = findTestData("PlanFact"): null

10-01-2025T04:59:37 - [TEST_STEP][PASSED] - n = data.getRowNumbers() + 1: null

10-01-2025T04:59:37 - [TEST_STEP][PASSED] - period = getText(findTestObject("Факторный анализ/Фильтр Период")): Text of object 'Object Repository/Факторный анализ/Фильтр Период' is: 'Октябрь, Ноябрь и 1, 2, 3 кв. 2024 года'

10-01-2025T04:59:38 - [MESSAGE][PASSED] - Text of object 'Object Repository/Факторный анализ/Фильтр Период' is: 'Октябрь, Ноябрь и 1, 2, 3 кв. 2024 года'

10-01-2025T04:59:38 - [TEST_STEP][PASSED] - println(period): null

10-01-2025T04:59:38 - [TEST_STEP][PASSED] - dashboardName = "Факторный анализ": null

10-01-2025T04:59:38 - [TEST_STEP][PASSED] - workbook01 = getWorkbook(excelFilePath): null

10-01-2025T04:59:38 - [TEST_STEP][PASSED] - sheet01 = getExcelSheet(workbook01, sheetName): null

10-01-2025T04:59:38 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 0, dashboardName): null

10-01-2025T04:59:38 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 1, DZO): null

10-01-2025T04:59:38 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 2, vidget): null

10-01-2025T04:59:38 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 3, typeOfData): null

10-01-2025T04:59:38 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 4, otobrajeniyeDannyh): null

10-01-2025T04:59:38 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 5, period): null

10-01-2025T04:59:38 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 6, todaysDate): null

10-01-2025T04:59:38 - [TEST_STEP][PASSED] - n = n + 1: null

10-01-2025T04:59:38 - [TEST_STEP][PASSED] - saveWorkbook(excelFilePath, workbook01): null

10-01-2025T04:59:38 - [TEST_STEP][PASSED] - DZO = "Россети Северо-Запад": null

10-01-2025T04:59:38 - [TEST_STEP][PASSED] - Script1719551244403.CompareDZO(x = SZA, y = SZB, run, typeOfData, otobrajeniyeDannyh, todaysDate, vidget, DZO): null

10-01-2025T04:59:38 - [TEST_STEP][PASSED] - x1 = x: null

10-01-2025T04:59:38 - [TEST_STEP][PASSED] - y1 = y: null

10-01-2025T04:59:38 - [TEST_STEP][PASSED] - i1 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:59:38 - [TEST_STEP][FAILED] - if (verifyEqual(x, y) == true): Unable to verify equal between actual object '10 373  198    74  112  277 8  91 186  102 46  227 48  151 15    63 41' and expected object '281  198    74  112  277 8  91 186  102 46  227 48  151 15    63 41' (Root cause: com.kms.katalon.core.exception.StepFailedException: Actual object '10 373  198    74  112  277 8  91 186  102 46  227 48  151 15    63 41' and expected object '281  198    74  112  277 8  91 186  102 46  227 48  151 15    63 41' are not equal
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.doCall(VerifyEqualKeyword.groovy:58)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.call(VerifyEqualKeyword.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:75)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.verifyEqual(VerifyEqualKeyword.groovy:63)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.execute(VerifyEqualKeyword.groovy:44)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:74)
	at com.kms.katalon.core.keyword.BuiltinKeywords.verifyEqual(BuiltinKeywords.groovy:146)
	at jdk.internal.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at Факторный анализ сверка дашбордов.CompareDZO(Факторный анализ сверка дашбордов:703)
	at Факторный анализ сверка дашбордов.Test(Факторный анализ сверка дашбордов:641)
	at Факторный анализ сверка дашбордов.run(Факторный анализ сверка дашбордов:44)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:448)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:439)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:418)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:410)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:285)
	at com.kms.katalon.core.common.CommonExecutor.accessTestCaseMainPhase(CommonExecutor.java:65)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:150)
	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:106)
	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:180)
	at TempTestSuite1736466949911.run(TempTestSuite1736466949911.groovy:35)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
)

10-01-2025T04:59:38 - [MESSAGE][FAILED] - Unable to verify equal between actual object '10 373  198    74  112  277 8  91 186  102 46  227 48  151 15    63 41' and expected object '281  198    74  112  277 8  91 186  102 46  227 48  151 15    63 41' (Root cause: com.kms.katalon.core.exception.StepFailedException: Actual object '10 373  198    74  112  277 8  91 186  102 46  227 48  151 15    63 41' and expected object '281  198    74  112  277 8  91 186  102 46  227 48  151 15    63 41' are not equal
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.doCall(VerifyEqualKeyword.groovy:58)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.call(VerifyEqualKeyword.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:75)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.verifyEqual(VerifyEqualKeyword.groovy:63)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.execute(VerifyEqualKeyword.groovy:44)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:74)
	at com.kms.katalon.core.keyword.BuiltinKeywords.verifyEqual(BuiltinKeywords.groovy:146)
	at jdk.internal.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at Факторный анализ сверка дашбордов.CompareDZO(Факторный анализ сверка дашбордов:703)
	at Факторный анализ сверка дашбордов.Test(Факторный анализ сверка дашбордов:641)
	at Факторный анализ сверка дашбордов.run(Факторный анализ сверка дашбордов:44)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:448)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:439)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:418)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:410)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:285)
	at com.kms.katalon.core.common.CommonExecutor.accessTestCaseMainPhase(CommonExecutor.java:65)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:150)
	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:106)
	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:180)
	at TempTestSuite1736466949911.run(TempTestSuite1736466949911.groovy:35)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
)

10-01-2025T04:59:38 - [TEST_STEP][PASSED] - else: null

10-01-2025T04:59:38 - [TEST_STEP][PASSED] - otobrajeniyeDannyh = "Все": null

10-01-2025T04:59:38 - [TEST_STEP][PASSED] - vidget = "Всего отклонения по факторам": null

10-01-2025T04:59:38 - [TEST_STEP][PASSED] - Script1719551244403.WriteToExcel(todaysDate, typeOfData, otobrajeniyeDannyh, x, y, vidget, DZO): null

10-01-2025T04:59:38 - [TEST_STEP][PASSED] - sheetName = "Sheet1": null

10-01-2025T04:59:38 - [TEST_STEP][PASSED] - data = findTestData("PlanFact"): null

10-01-2025T04:59:38 - [TEST_STEP][PASSED] - n = data.getRowNumbers() + 1: null

10-01-2025T04:59:38 - [TEST_STEP][PASSED] - period = getText(findTestObject("Факторный анализ/Фильтр Период")): Text of object 'Object Repository/Факторный анализ/Фильтр Период' is: 'Октябрь, Ноябрь и 1, 2, 3 кв. 2024 года'

10-01-2025T04:59:38 - [MESSAGE][PASSED] - Text of object 'Object Repository/Факторный анализ/Фильтр Период' is: 'Октябрь, Ноябрь и 1, 2, 3 кв. 2024 года'

10-01-2025T04:59:38 - [TEST_STEP][PASSED] - println(period): null

10-01-2025T04:59:38 - [TEST_STEP][PASSED] - dashboardName = "Факторный анализ": null

10-01-2025T04:59:38 - [TEST_STEP][PASSED] - workbook01 = getWorkbook(excelFilePath): null

10-01-2025T04:59:38 - [TEST_STEP][PASSED] - sheet01 = getExcelSheet(workbook01, sheetName): null

10-01-2025T04:59:38 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 0, dashboardName): null

10-01-2025T04:59:38 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 1, DZO): null

10-01-2025T04:59:38 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 2, vidget): null

10-01-2025T04:59:38 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 3, typeOfData): null

10-01-2025T04:59:38 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 4, otobrajeniyeDannyh): null

10-01-2025T04:59:38 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 5, period): null

10-01-2025T04:59:38 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 6, todaysDate): null

10-01-2025T04:59:38 - [TEST_STEP][PASSED] - n = n + 1: null

10-01-2025T04:59:38 - [TEST_STEP][PASSED] - saveWorkbook(excelFilePath, workbook01): null

10-01-2025T04:59:38 - [TEST_STEP][PASSED] - DZO = "Россети Сибирь (ГК)": null

10-01-2025T04:59:38 - [TEST_STEP][PASSED] - Script1719551244403.CompareDZO(x = SiA, y = SiB, run, typeOfData, otobrajeniyeDannyh, todaysDate, vidget, DZO): null

10-01-2025T04:59:38 - [TEST_STEP][PASSED] - x1 = x: null

10-01-2025T04:59:38 - [TEST_STEP][PASSED] - y1 = y: null

10-01-2025T04:59:38 - [TEST_STEP][PASSED] - i1 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:59:38 - [TEST_STEP][PASSED] - if (verifyEqual(x, y) == true): null

10-01-2025T04:59:38 - [MESSAGE][PASSED] - Actual object '63 41    332 333  119 329 153 21 1 368  676  461 932 188 70 422  442 77 206' and expected object '63 41    332 333  119 329 153 21 1 368  676  461 932 188 70 422  442 77 206' are equal

10-01-2025T04:59:38 - [TEST_STEP][PASSED] - DZO = "Россети Томск": null

10-01-2025T04:59:38 - [TEST_STEP][PASSED] - Script1719551244403.CompareDZO(x = ToA, y = ToB, run, typeOfData, otobrajeniyeDannyh, todaysDate, vidget, DZO): null

10-01-2025T04:59:38 - [TEST_STEP][PASSED] - x1 = x: null

10-01-2025T04:59:38 - [TEST_STEP][PASSED] - y1 = y: null

10-01-2025T04:59:38 - [TEST_STEP][PASSED] - i1 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:59:38 - [TEST_STEP][FAILED] - if (verifyEqual(x, y) == true): Unable to verify equal between actual object '77 206     8 299  146' and expected object '77 206     387  146' (Root cause: com.kms.katalon.core.exception.StepFailedException: Actual object '77 206     8 299  146' and expected object '77 206     387  146' are not equal
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.doCall(VerifyEqualKeyword.groovy:58)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.call(VerifyEqualKeyword.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:75)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.verifyEqual(VerifyEqualKeyword.groovy:63)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.execute(VerifyEqualKeyword.groovy:44)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:74)
	at com.kms.katalon.core.keyword.BuiltinKeywords.verifyEqual(BuiltinKeywords.groovy:146)
	at jdk.internal.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at Факторный анализ сверка дашбордов.CompareDZO(Факторный анализ сверка дашбордов:703)
	at Факторный анализ сверка дашбордов.Test(Факторный анализ сверка дашбордов:649)
	at Факторный анализ сверка дашбордов.run(Факторный анализ сверка дашбордов:44)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:448)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:439)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:418)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:410)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:285)
	at com.kms.katalon.core.common.CommonExecutor.accessTestCaseMainPhase(CommonExecutor.java:65)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:150)
	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:106)
	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:180)
	at TempTestSuite1736466949911.run(TempTestSuite1736466949911.groovy:35)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
)

10-01-2025T04:59:38 - [MESSAGE][FAILED] - Unable to verify equal between actual object '77 206     8 299  146' and expected object '77 206     387  146' (Root cause: com.kms.katalon.core.exception.StepFailedException: Actual object '77 206     8 299  146' and expected object '77 206     387  146' are not equal
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.doCall(VerifyEqualKeyword.groovy:58)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.call(VerifyEqualKeyword.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:75)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.verifyEqual(VerifyEqualKeyword.groovy:63)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.execute(VerifyEqualKeyword.groovy:44)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:74)
	at com.kms.katalon.core.keyword.BuiltinKeywords.verifyEqual(BuiltinKeywords.groovy:146)
	at jdk.internal.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at Факторный анализ сверка дашбордов.CompareDZO(Факторный анализ сверка дашбордов:703)
	at Факторный анализ сверка дашбордов.Test(Факторный анализ сверка дашбордов:649)
	at Факторный анализ сверка дашбордов.run(Факторный анализ сверка дашбордов:44)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:448)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:439)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:418)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:410)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:285)
	at com.kms.katalon.core.common.CommonExecutor.accessTestCaseMainPhase(CommonExecutor.java:65)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:150)
	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:106)
	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:180)
	at TempTestSuite1736466949911.run(TempTestSuite1736466949911.groovy:35)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
)

10-01-2025T04:59:38 - [TEST_STEP][PASSED] - else: null

10-01-2025T04:59:38 - [TEST_STEP][PASSED] - otobrajeniyeDannyh = "Все": null

10-01-2025T04:59:38 - [TEST_STEP][PASSED] - vidget = "Всего отклонения по факторам": null

10-01-2025T04:59:38 - [TEST_STEP][PASSED] - Script1719551244403.WriteToExcel(todaysDate, typeOfData, otobrajeniyeDannyh, x, y, vidget, DZO): null

10-01-2025T04:59:38 - [TEST_STEP][PASSED] - sheetName = "Sheet1": null

10-01-2025T04:59:38 - [TEST_STEP][PASSED] - data = findTestData("PlanFact"): null

10-01-2025T04:59:38 - [TEST_STEP][PASSED] - n = data.getRowNumbers() + 1: null

10-01-2025T04:59:38 - [TEST_STEP][PASSED] - period = getText(findTestObject("Факторный анализ/Фильтр Период")): Text of object 'Object Repository/Факторный анализ/Фильтр Период' is: 'Октябрь, Ноябрь и 1, 2, 3 кв. 2024 года'

10-01-2025T04:59:39 - [MESSAGE][PASSED] - Text of object 'Object Repository/Факторный анализ/Фильтр Период' is: 'Октябрь, Ноябрь и 1, 2, 3 кв. 2024 года'

10-01-2025T04:59:39 - [TEST_STEP][PASSED] - println(period): null

10-01-2025T04:59:39 - [TEST_STEP][PASSED] - dashboardName = "Факторный анализ": null

10-01-2025T04:59:39 - [TEST_STEP][PASSED] - workbook01 = getWorkbook(excelFilePath): null

10-01-2025T04:59:39 - [TEST_STEP][PASSED] - sheet01 = getExcelSheet(workbook01, sheetName): null

10-01-2025T04:59:39 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 0, dashboardName): null

10-01-2025T04:59:39 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 1, DZO): null

10-01-2025T04:59:39 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 2, vidget): null

10-01-2025T04:59:39 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 3, typeOfData): null

10-01-2025T04:59:39 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 4, otobrajeniyeDannyh): null

10-01-2025T04:59:39 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 5, period): null

10-01-2025T04:59:39 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 6, todaysDate): null

10-01-2025T04:59:39 - [TEST_STEP][PASSED] - n = n + 1: null

10-01-2025T04:59:39 - [TEST_STEP][PASSED] - saveWorkbook(excelFilePath, workbook01): null

10-01-2025T04:59:39 - [TEST_STEP][PASSED] - DZO = "Россети Тюмень": null

10-01-2025T04:59:39 - [TEST_STEP][PASSED] - Script1719551244403.CompareDZO(x = TyuA, y = TyuB, run, typeOfData, otobrajeniyeDannyh, todaysDate, vidget, DZO): null

10-01-2025T04:59:39 - [TEST_STEP][PASSED] - x1 = x: null

10-01-2025T04:59:39 - [TEST_STEP][PASSED] - y1 = y: null

10-01-2025T04:59:39 - [TEST_STEP][PASSED] - i1 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:59:39 - [TEST_STEP][FAILED] - if (verifyEqual(x, y) == true): Unable to verify equal between actual object '8 299  146' and expected object '387  146' (Root cause: com.kms.katalon.core.exception.StepFailedException: Actual object '8 299  146' and expected object '387  146' are not equal
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.doCall(VerifyEqualKeyword.groovy:58)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.call(VerifyEqualKeyword.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:75)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.verifyEqual(VerifyEqualKeyword.groovy:63)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.execute(VerifyEqualKeyword.groovy:44)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:74)
	at com.kms.katalon.core.keyword.BuiltinKeywords.verifyEqual(BuiltinKeywords.groovy:146)
	at jdk.internal.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at Факторный анализ сверка дашбордов.CompareDZO(Факторный анализ сверка дашбордов:703)
	at Факторный анализ сверка дашбордов.Test(Факторный анализ сверка дашбордов:653)
	at Факторный анализ сверка дашбордов.run(Факторный анализ сверка дашбордов:44)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:448)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:439)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:418)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:410)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:285)
	at com.kms.katalon.core.common.CommonExecutor.accessTestCaseMainPhase(CommonExecutor.java:65)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:150)
	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:106)
	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:180)
	at TempTestSuite1736466949911.run(TempTestSuite1736466949911.groovy:35)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
)

10-01-2025T04:59:39 - [MESSAGE][FAILED] - Unable to verify equal between actual object '8 299  146' and expected object '387  146' (Root cause: com.kms.katalon.core.exception.StepFailedException: Actual object '8 299  146' and expected object '387  146' are not equal
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.doCall(VerifyEqualKeyword.groovy:58)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.call(VerifyEqualKeyword.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:75)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.verifyEqual(VerifyEqualKeyword.groovy:63)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.execute(VerifyEqualKeyword.groovy:44)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:74)
	at com.kms.katalon.core.keyword.BuiltinKeywords.verifyEqual(BuiltinKeywords.groovy:146)
	at jdk.internal.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at Факторный анализ сверка дашбордов.CompareDZO(Факторный анализ сверка дашбордов:703)
	at Факторный анализ сверка дашбордов.Test(Факторный анализ сверка дашбордов:653)
	at Факторный анализ сверка дашбордов.run(Факторный анализ сверка дашбордов:44)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:448)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:439)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:418)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:410)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:285)
	at com.kms.katalon.core.common.CommonExecutor.accessTestCaseMainPhase(CommonExecutor.java:65)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:150)
	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:106)
	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:180)
	at TempTestSuite1736466949911.run(TempTestSuite1736466949911.groovy:35)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
)

10-01-2025T04:59:39 - [TEST_STEP][PASSED] - else: null

10-01-2025T04:59:39 - [TEST_STEP][PASSED] - otobrajeniyeDannyh = "Все": null

10-01-2025T04:59:39 - [TEST_STEP][PASSED] - vidget = "Всего отклонения по факторам": null

10-01-2025T04:59:39 - [TEST_STEP][PASSED] - Script1719551244403.WriteToExcel(todaysDate, typeOfData, otobrajeniyeDannyh, x, y, vidget, DZO): null

10-01-2025T04:59:39 - [TEST_STEP][PASSED] - sheetName = "Sheet1": null

10-01-2025T04:59:39 - [TEST_STEP][PASSED] - data = findTestData("PlanFact"): null

10-01-2025T04:59:39 - [TEST_STEP][PASSED] - n = data.getRowNumbers() + 1: null

10-01-2025T04:59:39 - [TEST_STEP][PASSED] - period = getText(findTestObject("Факторный анализ/Фильтр Период")): Text of object 'Object Repository/Факторный анализ/Фильтр Период' is: 'Октябрь, Ноябрь и 1, 2, 3 кв. 2024 года'

10-01-2025T04:59:39 - [MESSAGE][PASSED] - Text of object 'Object Repository/Факторный анализ/Фильтр Период' is: 'Октябрь, Ноябрь и 1, 2, 3 кв. 2024 года'

10-01-2025T04:59:39 - [TEST_STEP][PASSED] - println(period): null

10-01-2025T04:59:39 - [TEST_STEP][PASSED] - dashboardName = "Факторный анализ": null

10-01-2025T04:59:39 - [TEST_STEP][PASSED] - workbook01 = getWorkbook(excelFilePath): null

10-01-2025T04:59:39 - [TEST_STEP][PASSED] - sheet01 = getExcelSheet(workbook01, sheetName): null

10-01-2025T04:59:39 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 0, dashboardName): null

10-01-2025T04:59:39 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 1, DZO): null

10-01-2025T04:59:39 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 2, vidget): null

10-01-2025T04:59:39 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 3, typeOfData): null

10-01-2025T04:59:39 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 4, otobrajeniyeDannyh): null

10-01-2025T04:59:39 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 5, period): null

10-01-2025T04:59:39 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 6, todaysDate): null

10-01-2025T04:59:39 - [TEST_STEP][PASSED] - n = n + 1: null

10-01-2025T04:59:39 - [TEST_STEP][PASSED] - saveWorkbook(excelFilePath, workbook01): null

10-01-2025T04:59:40 - [TEST_STEP][PASSED] - DZO = "Россети Урал (ГК)": null

10-01-2025T04:59:40 - [TEST_STEP][PASSED] - Script1719551244403.CompareDZO(x = UrA, y = UrB, run, typeOfData, otobrajeniyeDannyh, todaysDate, vidget, DZO): null

10-01-2025T04:59:40 - [TEST_STEP][PASSED] - x1 = x: null

10-01-2025T04:59:40 - [TEST_STEP][PASSED] - y1 = y: null

10-01-2025T04:59:40 - [TEST_STEP][PASSED] - i1 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:59:40 - [TEST_STEP][FAILED] - if (verifyEqual(x, y) == true): Unable to verify equal between actual object '82 026  638    669  246 964 315 1 045  720' and expected object '5 414  638    669  246 964 315 1 045  720' (Root cause: com.kms.katalon.core.exception.StepFailedException: Actual object '82 026  638    669  246 964 315 1 045  720' and expected object '5 414  638    669  246 964 315 1 045  720' are not equal
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.doCall(VerifyEqualKeyword.groovy:58)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.call(VerifyEqualKeyword.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:75)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.verifyEqual(VerifyEqualKeyword.groovy:63)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.execute(VerifyEqualKeyword.groovy:44)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:74)
	at com.kms.katalon.core.keyword.BuiltinKeywords.verifyEqual(BuiltinKeywords.groovy:146)
	at jdk.internal.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at Факторный анализ сверка дашбордов.CompareDZO(Факторный анализ сверка дашбордов:703)
	at Факторный анализ сверка дашбордов.Test(Факторный анализ сверка дашбордов:657)
	at Факторный анализ сверка дашбордов.run(Факторный анализ сверка дашбордов:44)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:448)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:439)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:418)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:410)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:285)
	at com.kms.katalon.core.common.CommonExecutor.accessTestCaseMainPhase(CommonExecutor.java:65)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:150)
	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:106)
	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:180)
	at TempTestSuite1736466949911.run(TempTestSuite1736466949911.groovy:35)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
)

10-01-2025T04:59:40 - [MESSAGE][FAILED] - Unable to verify equal between actual object '82 026  638    669  246 964 315 1 045  720' and expected object '5 414  638    669  246 964 315 1 045  720' (Root cause: com.kms.katalon.core.exception.StepFailedException: Actual object '82 026  638    669  246 964 315 1 045  720' and expected object '5 414  638    669  246 964 315 1 045  720' are not equal
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.doCall(VerifyEqualKeyword.groovy:58)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.call(VerifyEqualKeyword.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:75)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.verifyEqual(VerifyEqualKeyword.groovy:63)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.execute(VerifyEqualKeyword.groovy:44)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:74)
	at com.kms.katalon.core.keyword.BuiltinKeywords.verifyEqual(BuiltinKeywords.groovy:146)
	at jdk.internal.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at Факторный анализ сверка дашбордов.CompareDZO(Факторный анализ сверка дашбордов:703)
	at Факторный анализ сверка дашбордов.Test(Факторный анализ сверка дашбордов:657)
	at Факторный анализ сверка дашбордов.run(Факторный анализ сверка дашбордов:44)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:448)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:439)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:418)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:410)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:285)
	at com.kms.katalon.core.common.CommonExecutor.accessTestCaseMainPhase(CommonExecutor.java:65)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:150)
	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:106)
	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:180)
	at TempTestSuite1736466949911.run(TempTestSuite1736466949911.groovy:35)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
)

10-01-2025T04:59:40 - [TEST_STEP][PASSED] - else: null

10-01-2025T04:59:40 - [TEST_STEP][PASSED] - otobrajeniyeDannyh = "Все": null

10-01-2025T04:59:40 - [TEST_STEP][PASSED] - vidget = "Всего отклонения по факторам": null

10-01-2025T04:59:40 - [TEST_STEP][PASSED] - Script1719551244403.WriteToExcel(todaysDate, typeOfData, otobrajeniyeDannyh, x, y, vidget, DZO): null

10-01-2025T04:59:40 - [TEST_STEP][PASSED] - sheetName = "Sheet1": null

10-01-2025T04:59:40 - [TEST_STEP][PASSED] - data = findTestData("PlanFact"): null

10-01-2025T04:59:40 - [TEST_STEP][PASSED] - n = data.getRowNumbers() + 1: null

10-01-2025T04:59:40 - [TEST_STEP][PASSED] - period = getText(findTestObject("Факторный анализ/Фильтр Период")): Text of object 'Object Repository/Факторный анализ/Фильтр Период' is: 'Октябрь, Ноябрь и 1, 2, 3 кв. 2024 года'

10-01-2025T04:59:40 - [MESSAGE][PASSED] - Text of object 'Object Repository/Факторный анализ/Фильтр Период' is: 'Октябрь, Ноябрь и 1, 2, 3 кв. 2024 года'

10-01-2025T04:59:40 - [TEST_STEP][PASSED] - println(period): null

10-01-2025T04:59:40 - [TEST_STEP][PASSED] - dashboardName = "Факторный анализ": null

10-01-2025T04:59:40 - [TEST_STEP][PASSED] - workbook01 = getWorkbook(excelFilePath): null

10-01-2025T04:59:40 - [TEST_STEP][PASSED] - sheet01 = getExcelSheet(workbook01, sheetName): null

10-01-2025T04:59:40 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 0, dashboardName): null

10-01-2025T04:59:40 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 1, DZO): null

10-01-2025T04:59:40 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 2, vidget): null

10-01-2025T04:59:40 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 3, typeOfData): null

10-01-2025T04:59:40 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 4, otobrajeniyeDannyh): null

10-01-2025T04:59:40 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 5, period): null

10-01-2025T04:59:40 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 6, todaysDate): null

10-01-2025T04:59:40 - [TEST_STEP][PASSED] - n = n + 1: null

10-01-2025T04:59:40 - [TEST_STEP][PASSED] - saveWorkbook(excelFilePath, workbook01): null

10-01-2025T04:59:40 - [TEST_STEP][PASSED] - DZO = "Россети ФСК ЕЭС": null

10-01-2025T04:59:40 - [TEST_STEP][PASSED] - Script1719551244403.CompareDZO(x = FSKA, y = FSKB, run, typeOfData, otobrajeniyeDannyh, todaysDate, vidget, DZO): null

10-01-2025T04:59:40 - [TEST_STEP][PASSED] - x1 = x: null

10-01-2025T04:59:40 - [TEST_STEP][PASSED] - y1 = y: null

10-01-2025T04:59:40 - [TEST_STEP][PASSED] - i1 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:59:40 - [TEST_STEP][PASSED] - if (verifyEqual(x, y) == true): null

10-01-2025T04:59:40 - [MESSAGE][PASSED] - Actual object '1 045  720       17 684 6 088' and expected object '1 045  720       17 684 6 088' are equal

10-01-2025T04:59:40 - [TEST_STEP][PASSED] - DZO = "Центр": null

10-01-2025T04:59:40 - [TEST_STEP][PASSED] - Script1719551244403.CompareDZO(x = CenA, y = CenB, run, typeOfData, otobrajeniyeDannyh, todaysDate, vidget, DZO): null

10-01-2025T04:59:40 - [TEST_STEP][PASSED] - x1 = x: null

10-01-2025T04:59:40 - [TEST_STEP][PASSED] - y1 = y: null

10-01-2025T04:59:40 - [TEST_STEP][PASSED] - i1 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:59:40 - [TEST_STEP][FAILED] - if (verifyEqual(x, y) == true): Unable to verify equal between actual object '17 684 6 088   347 138 5 765 17 15 652 167 127 11 2 510 157 853  381 4 613 57 8 540 48 6 716 12 376 192 6 276 95' and expected object '17 684 6 088   347 138 78 9 667 130 127 11 6 84 853  381 158 52 34 48 307 12 376 192 630 15' (Root cause: com.kms.katalon.core.exception.StepFailedException: Actual object '17 684 6 088   347 138 5 765 17 15 652 167 127 11 2 510 157 853  381 4 613 57 8 540 48 6 716 12 376 192 6 276 95' and expected object '17 684 6 088   347 138 78 9 667 130 127 11 6 84 853  381 158 52 34 48 307 12 376 192 630 15' are not equal
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.doCall(VerifyEqualKeyword.groovy:58)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.call(VerifyEqualKeyword.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:75)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.verifyEqual(VerifyEqualKeyword.groovy:63)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.execute(VerifyEqualKeyword.groovy:44)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:74)
	at com.kms.katalon.core.keyword.BuiltinKeywords.verifyEqual(BuiltinKeywords.groovy:146)
	at jdk.internal.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at Факторный анализ сверка дашбордов.CompareDZO(Факторный анализ сверка дашбордов:703)
	at Факторный анализ сверка дашбордов.Test(Факторный анализ сверка дашбордов:665)
	at Факторный анализ сверка дашбордов.run(Факторный анализ сверка дашбордов:44)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:448)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:439)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:418)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:410)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:285)
	at com.kms.katalon.core.common.CommonExecutor.accessTestCaseMainPhase(CommonExecutor.java:65)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:150)
	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:106)
	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:180)
	at TempTestSuite1736466949911.run(TempTestSuite1736466949911.groovy:35)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
)

10-01-2025T04:59:40 - [MESSAGE][FAILED] - Unable to verify equal between actual object '17 684 6 088   347 138 5 765 17 15 652 167 127 11 2 510 157 853  381 4 613 57 8 540 48 6 716 12 376 192 6 276 95' and expected object '17 684 6 088   347 138 78 9 667 130 127 11 6 84 853  381 158 52 34 48 307 12 376 192 630 15' (Root cause: com.kms.katalon.core.exception.StepFailedException: Actual object '17 684 6 088   347 138 5 765 17 15 652 167 127 11 2 510 157 853  381 4 613 57 8 540 48 6 716 12 376 192 6 276 95' and expected object '17 684 6 088   347 138 78 9 667 130 127 11 6 84 853  381 158 52 34 48 307 12 376 192 630 15' are not equal
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.doCall(VerifyEqualKeyword.groovy:58)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.call(VerifyEqualKeyword.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:75)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.verifyEqual(VerifyEqualKeyword.groovy:63)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.execute(VerifyEqualKeyword.groovy:44)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:74)
	at com.kms.katalon.core.keyword.BuiltinKeywords.verifyEqual(BuiltinKeywords.groovy:146)
	at jdk.internal.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at Факторный анализ сверка дашбордов.CompareDZO(Факторный анализ сверка дашбордов:703)
	at Факторный анализ сверка дашбордов.Test(Факторный анализ сверка дашбордов:665)
	at Факторный анализ сверка дашбордов.run(Факторный анализ сверка дашбордов:44)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:448)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:439)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:418)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:410)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:285)
	at com.kms.katalon.core.common.CommonExecutor.accessTestCaseMainPhase(CommonExecutor.java:65)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:150)
	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:106)
	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:180)
	at TempTestSuite1736466949911.run(TempTestSuite1736466949911.groovy:35)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
)

10-01-2025T04:59:40 - [TEST_STEP][PASSED] - else: null

10-01-2025T04:59:40 - [TEST_STEP][PASSED] - otobrajeniyeDannyh = "Все": null

10-01-2025T04:59:40 - [TEST_STEP][PASSED] - vidget = "Всего отклонения по факторам": null

10-01-2025T04:59:40 - [TEST_STEP][PASSED] - Script1719551244403.WriteToExcel(todaysDate, typeOfData, otobrajeniyeDannyh, x, y, vidget, DZO): null

10-01-2025T04:59:40 - [TEST_STEP][PASSED] - sheetName = "Sheet1": null

10-01-2025T04:59:40 - [TEST_STEP][PASSED] - data = findTestData("PlanFact"): null

10-01-2025T04:59:40 - [TEST_STEP][PASSED] - n = data.getRowNumbers() + 1: null

10-01-2025T04:59:40 - [TEST_STEP][PASSED] - period = getText(findTestObject("Факторный анализ/Фильтр Период")): Text of object 'Object Repository/Факторный анализ/Фильтр Период' is: 'Октябрь, Ноябрь и 1, 2, 3 кв. 2024 года'

10-01-2025T04:59:41 - [MESSAGE][PASSED] - Text of object 'Object Repository/Факторный анализ/Фильтр Период' is: 'Октябрь, Ноябрь и 1, 2, 3 кв. 2024 года'

10-01-2025T04:59:41 - [TEST_STEP][PASSED] - println(period): null

10-01-2025T04:59:41 - [TEST_STEP][PASSED] - dashboardName = "Факторный анализ": null

10-01-2025T04:59:41 - [TEST_STEP][PASSED] - workbook01 = getWorkbook(excelFilePath): null

10-01-2025T04:59:41 - [TEST_STEP][PASSED] - sheet01 = getExcelSheet(workbook01, sheetName): null

10-01-2025T04:59:41 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 0, dashboardName): null

10-01-2025T04:59:41 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 1, DZO): null

10-01-2025T04:59:41 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 2, vidget): null

10-01-2025T04:59:41 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 3, typeOfData): null

10-01-2025T04:59:41 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 4, otobrajeniyeDannyh): null

10-01-2025T04:59:41 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 5, period): null

10-01-2025T04:59:41 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 6, todaysDate): null

10-01-2025T04:59:41 - [TEST_STEP][PASSED] - n = n + 1: null

10-01-2025T04:59:41 - [TEST_STEP][PASSED] - saveWorkbook(excelFilePath, workbook01): null

10-01-2025T04:59:41 - [TEST_STEP][PASSED] - DZO = "Центр и Приволжье (ГК)": null

10-01-2025T04:59:41 - [TEST_STEP][PASSED] - Script1719551244403.CompareDZO(x = CiPA, y = CiPB, run, typeOfData, otobrajeniyeDannyh, todaysDate, vidget, DZO): null

10-01-2025T04:59:41 - [TEST_STEP][PASSED] - x1 = x: null

10-01-2025T04:59:41 - [TEST_STEP][PASSED] - y1 = y: null

10-01-2025T04:59:41 - [TEST_STEP][PASSED] - i1 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:59:41 - [TEST_STEP][FAILED] - if (verifyEqual(x, y) == true): Unable to verify equal between actual object '6 276 95      574 64 201 62 706 61 511 30 189 23 849 359 229 70 877  292 401 20' and expected object '630 15      574 64 201 62 706 61 511 30 189 23 849 359 229 70 877  292 401 20' (Root cause: com.kms.katalon.core.exception.StepFailedException: Actual object '6 276 95      574 64 201 62 706 61 511 30 189 23 849 359 229 70 877  292 401 20' and expected object '630 15      574 64 201 62 706 61 511 30 189 23 849 359 229 70 877  292 401 20' are not equal
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.doCall(VerifyEqualKeyword.groovy:58)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.call(VerifyEqualKeyword.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:75)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.verifyEqual(VerifyEqualKeyword.groovy:63)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.execute(VerifyEqualKeyword.groovy:44)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:74)
	at com.kms.katalon.core.keyword.BuiltinKeywords.verifyEqual(BuiltinKeywords.groovy:146)
	at jdk.internal.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at Факторный анализ сверка дашбордов.CompareDZO(Факторный анализ сверка дашбордов:703)
	at Факторный анализ сверка дашбордов.Test(Факторный анализ сверка дашбордов:669)
	at Факторный анализ сверка дашбордов.run(Факторный анализ сверка дашбордов:44)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:448)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:439)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:418)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:410)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:285)
	at com.kms.katalon.core.common.CommonExecutor.accessTestCaseMainPhase(CommonExecutor.java:65)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:150)
	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:106)
	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:180)
	at TempTestSuite1736466949911.run(TempTestSuite1736466949911.groovy:35)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
)

10-01-2025T04:59:41 - [MESSAGE][FAILED] - Unable to verify equal between actual object '6 276 95      574 64 201 62 706 61 511 30 189 23 849 359 229 70 877  292 401 20' and expected object '630 15      574 64 201 62 706 61 511 30 189 23 849 359 229 70 877  292 401 20' (Root cause: com.kms.katalon.core.exception.StepFailedException: Actual object '6 276 95      574 64 201 62 706 61 511 30 189 23 849 359 229 70 877  292 401 20' and expected object '630 15      574 64 201 62 706 61 511 30 189 23 849 359 229 70 877  292 401 20' are not equal
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.doCall(VerifyEqualKeyword.groovy:58)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.call(VerifyEqualKeyword.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:75)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.verifyEqual(VerifyEqualKeyword.groovy:63)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.execute(VerifyEqualKeyword.groovy:44)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:74)
	at com.kms.katalon.core.keyword.BuiltinKeywords.verifyEqual(BuiltinKeywords.groovy:146)
	at jdk.internal.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at Факторный анализ сверка дашбордов.CompareDZO(Факторный анализ сверка дашбордов:703)
	at Факторный анализ сверка дашбордов.Test(Факторный анализ сверка дашбордов:669)
	at Факторный анализ сверка дашбордов.run(Факторный анализ сверка дашбордов:44)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:448)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:439)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:418)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:410)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:285)
	at com.kms.katalon.core.common.CommonExecutor.accessTestCaseMainPhase(CommonExecutor.java:65)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:150)
	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:106)
	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:180)
	at TempTestSuite1736466949911.run(TempTestSuite1736466949911.groovy:35)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
)

10-01-2025T04:59:41 - [TEST_STEP][PASSED] - else: null

10-01-2025T04:59:41 - [TEST_STEP][PASSED] - otobrajeniyeDannyh = "Все": null

10-01-2025T04:59:41 - [TEST_STEP][PASSED] - vidget = "Всего отклонения по факторам": null

10-01-2025T04:59:41 - [TEST_STEP][PASSED] - Script1719551244403.WriteToExcel(todaysDate, typeOfData, otobrajeniyeDannyh, x, y, vidget, DZO): null

10-01-2025T04:59:41 - [TEST_STEP][PASSED] - sheetName = "Sheet1": null

10-01-2025T04:59:41 - [TEST_STEP][PASSED] - data = findTestData("PlanFact"): null

10-01-2025T04:59:41 - [TEST_STEP][PASSED] - n = data.getRowNumbers() + 1: null

10-01-2025T04:59:41 - [TEST_STEP][PASSED] - period = getText(findTestObject("Факторный анализ/Фильтр Период")): Text of object 'Object Repository/Факторный анализ/Фильтр Период' is: 'Октябрь, Ноябрь и 1, 2, 3 кв. 2024 года'

10-01-2025T04:59:41 - [MESSAGE][PASSED] - Text of object 'Object Repository/Факторный анализ/Фильтр Период' is: 'Октябрь, Ноябрь и 1, 2, 3 кв. 2024 года'

10-01-2025T04:59:41 - [TEST_STEP][PASSED] - println(period): null

10-01-2025T04:59:41 - [TEST_STEP][PASSED] - dashboardName = "Факторный анализ": null

10-01-2025T04:59:41 - [TEST_STEP][PASSED] - workbook01 = getWorkbook(excelFilePath): null

10-01-2025T04:59:41 - [TEST_STEP][PASSED] - sheet01 = getExcelSheet(workbook01, sheetName): null

10-01-2025T04:59:41 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 0, dashboardName): null

10-01-2025T04:59:41 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 1, DZO): null

10-01-2025T04:59:41 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 2, vidget): null

10-01-2025T04:59:41 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 3, typeOfData): null

10-01-2025T04:59:41 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 4, otobrajeniyeDannyh): null

10-01-2025T04:59:41 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 5, period): null

10-01-2025T04:59:41 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 6, todaysDate): null

10-01-2025T04:59:41 - [TEST_STEP][PASSED] - n = n + 1: null

10-01-2025T04:59:41 - [TEST_STEP][PASSED] - saveWorkbook(excelFilePath, workbook01): null

10-01-2025T04:59:42 - [TEST_STEP][PASSED] - DZO = "Россети Юг (ГК)": null

10-01-2025T04:59:42 - [TEST_STEP][PASSED] - Script1719551244403.CompareDZO(x = UgA, y = UgB, run, typeOfData, otobrajeniyeDannyh, todaysDate, vidget, DZO): null

10-01-2025T04:59:42 - [TEST_STEP][PASSED] - x1 = x: null

10-01-2025T04:59:42 - [TEST_STEP][PASSED] - y1 = y: null

10-01-2025T04:59:42 - [TEST_STEP][PASSED] - i1 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:59:42 - [TEST_STEP][FAILED] - if (verifyEqual(x, y) == true): Unable to verify equal between actual object '401 20     4 225 59 6 426 68 11 043  400 1 859 2 22 464 75' and expected object '401 20     151 59 38 68 447  400 25 2 868 75' (Root cause: com.kms.katalon.core.exception.StepFailedException: Actual object '401 20     4 225 59 6 426 68 11 043  400 1 859 2 22 464 75' and expected object '401 20     151 59 38 68 447  400 25 2 868 75' are not equal
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.doCall(VerifyEqualKeyword.groovy:58)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.call(VerifyEqualKeyword.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:75)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.verifyEqual(VerifyEqualKeyword.groovy:63)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.execute(VerifyEqualKeyword.groovy:44)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:74)
	at com.kms.katalon.core.keyword.BuiltinKeywords.verifyEqual(BuiltinKeywords.groovy:146)
	at jdk.internal.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at Факторный анализ сверка дашбордов.CompareDZO(Факторный анализ сверка дашбордов:703)
	at Факторный анализ сверка дашбордов.Test(Факторный анализ сверка дашбордов:673)
	at Факторный анализ сверка дашбордов.run(Факторный анализ сверка дашбордов:44)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:448)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:439)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:418)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:410)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:285)
	at com.kms.katalon.core.common.CommonExecutor.accessTestCaseMainPhase(CommonExecutor.java:65)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:150)
	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:106)
	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:180)
	at TempTestSuite1736466949911.run(TempTestSuite1736466949911.groovy:35)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
)

10-01-2025T04:59:42 - [MESSAGE][FAILED] - Unable to verify equal between actual object '401 20     4 225 59 6 426 68 11 043  400 1 859 2 22 464 75' and expected object '401 20     151 59 38 68 447  400 25 2 868 75' (Root cause: com.kms.katalon.core.exception.StepFailedException: Actual object '401 20     4 225 59 6 426 68 11 043  400 1 859 2 22 464 75' and expected object '401 20     151 59 38 68 447  400 25 2 868 75' are not equal
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.doCall(VerifyEqualKeyword.groovy:58)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.call(VerifyEqualKeyword.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:75)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.verifyEqual(VerifyEqualKeyword.groovy:63)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.execute(VerifyEqualKeyword.groovy:44)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:74)
	at com.kms.katalon.core.keyword.BuiltinKeywords.verifyEqual(BuiltinKeywords.groovy:146)
	at jdk.internal.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at Факторный анализ сверка дашбордов.CompareDZO(Факторный анализ сверка дашбордов:703)
	at Факторный анализ сверка дашбордов.Test(Факторный анализ сверка дашбордов:673)
	at Факторный анализ сверка дашбордов.run(Факторный анализ сверка дашбордов:44)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:448)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:439)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:418)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:410)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:285)
	at com.kms.katalon.core.common.CommonExecutor.accessTestCaseMainPhase(CommonExecutor.java:65)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:150)
	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:106)
	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:180)
	at TempTestSuite1736466949911.run(TempTestSuite1736466949911.groovy:35)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
)

10-01-2025T04:59:42 - [TEST_STEP][PASSED] - else: null

10-01-2025T04:59:42 - [TEST_STEP][PASSED] - otobrajeniyeDannyh = "Все": null

10-01-2025T04:59:42 - [TEST_STEP][PASSED] - vidget = "Всего отклонения по факторам": null

10-01-2025T04:59:42 - [TEST_STEP][PASSED] - Script1719551244403.WriteToExcel(todaysDate, typeOfData, otobrajeniyeDannyh, x, y, vidget, DZO): null

10-01-2025T04:59:42 - [TEST_STEP][PASSED] - sheetName = "Sheet1": null

10-01-2025T04:59:42 - [TEST_STEP][PASSED] - data = findTestData("PlanFact"): null

10-01-2025T04:59:42 - [TEST_STEP][PASSED] - n = data.getRowNumbers() + 1: null

10-01-2025T04:59:42 - [TEST_STEP][PASSED] - period = getText(findTestObject("Факторный анализ/Фильтр Период")): Text of object 'Object Repository/Факторный анализ/Фильтр Период' is: 'Октябрь, Ноябрь и 1, 2, 3 кв. 2024 года'

10-01-2025T04:59:42 - [MESSAGE][PASSED] - Text of object 'Object Repository/Факторный анализ/Фильтр Период' is: 'Октябрь, Ноябрь и 1, 2, 3 кв. 2024 года'

10-01-2025T04:59:42 - [TEST_STEP][PASSED] - println(period): null

10-01-2025T04:59:42 - [TEST_STEP][PASSED] - dashboardName = "Факторный анализ": null

10-01-2025T04:59:42 - [TEST_STEP][PASSED] - workbook01 = getWorkbook(excelFilePath): null

10-01-2025T04:59:42 - [TEST_STEP][PASSED] - sheet01 = getExcelSheet(workbook01, sheetName): null

10-01-2025T04:59:42 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 0, dashboardName): null

10-01-2025T04:59:42 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 1, DZO): null

10-01-2025T04:59:42 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 2, vidget): null

10-01-2025T04:59:42 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 3, typeOfData): null

10-01-2025T04:59:42 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 4, otobrajeniyeDannyh): null

10-01-2025T04:59:42 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 5, period): null

10-01-2025T04:59:42 - [TEST_STEP][PASSED] - setValueToCellByIndex(sheet01, n, 6, todaysDate): null

10-01-2025T04:59:42 - [TEST_STEP][PASSED] - n = n + 1: null

10-01-2025T04:59:42 - [TEST_STEP][PASSED] - saveWorkbook(excelFilePath, workbook01): null

10-01-2025T04:59:42 - [TEST_STEP][PASSED] - DZO = "Россети Янтарь": null

10-01-2025T04:59:42 - [TEST_STEP][PASSED] - Script1719551244403.CompareDZO(x = YaA, y = YaB, run, typeOfData, otobrajeniyeDannyh, todaysDate, vidget, DZO): null

10-01-2025T04:59:42 - [TEST_STEP][PASSED] - x1 = x: null

10-01-2025T04:59:42 - [TEST_STEP][PASSED] - y1 = y: null

10-01-2025T04:59:42 - [TEST_STEP][PASSED] - i1 = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

10-01-2025T04:59:42 - [TEST_STEP][PASSED] - if (verifyEqual(x, y) == true): Actual object '419 47' and expected object '419 47' are equal

10-01-2025T04:59:42 - [MESSAGE][PASSED] - Actual object '419 47' and expected object '419 47' are equal

10-01-2025T04:59:42 - [TEST_STEP][PASSED] - closeBrowser(): Browser is closed

10-01-2025T04:59:42 - [MESSAGE][PASSED] - Browser is closed]]></system-out>
         <system-err><![CDATA[10-01-2025T04:56:23 - [TEST_CASE][FAILED] - Test Cases/Сверки дашбордов/Факторный анализ сверка дашбордов: Test Cases/Сверки дашбордов/Факторный анализ сверка дашбордов FAILED.
Reason:
com.kms.katalon.core.exception.StepFailedException: Unable to verify equal between actual object '-1291521' and expected object '-1252328' (Root cause: com.kms.katalon.core.exception.StepFailedException: Actual object '-1291521' and expected object '-1252328' are not equal
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.doCall(VerifyEqualKeyword.groovy:58)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.call(VerifyEqualKeyword.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:75)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.verifyEqual(VerifyEqualKeyword.groovy:63)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.execute(VerifyEqualKeyword.groovy:44)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:74)
	at com.kms.katalon.core.keyword.BuiltinKeywords.verifyEqual(BuiltinKeywords.groovy:146)
	at jdk.internal.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at Факторный анализ сверка дашбордов.Compare(Факторный анализ сверка дашбордов:682)
	at Факторный анализ сверка дашбордов.Test(Факторный анализ сверка дашбордов:446)
	at Факторный анализ сверка дашбордов.run(Факторный анализ сверка дашбордов:44)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:448)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:439)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:418)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:410)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:285)
	at com.kms.katalon.core.common.CommonExecutor.accessTestCaseMainPhase(CommonExecutor.java:65)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:150)
	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:106)
	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:180)
	at TempTestSuite1736466949911.run(TempTestSuite1736466949911.groovy:35)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
)
	at com.kms.katalon.core.keyword.internal.KeywordMain.stepFailed(KeywordMain.groovy:39)
	at com.kms.katalon.core.keyword.internal.KeywordMain.stepFailed(KeywordMain.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:77)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.verifyEqual(VerifyEqualKeyword.groovy:63)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword.execute(VerifyEqualKeyword.groovy:44)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:74)
	at com.kms.katalon.core.keyword.BuiltinKeywords.verifyEqual(BuiltinKeywords.groovy:146)
	at jdk.internal.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at Факторный анализ сверка дашбордов.Compare(Факторный анализ сверка дашбордов:682)
	at Факторный анализ сверка дашбордов.Test(Факторный анализ сверка дашбордов:446)
	at Факторный анализ сверка дашбордов.run(Факторный анализ сверка дашбордов:44)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:448)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:439)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:418)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:410)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:285)
	at com.kms.katalon.core.common.CommonExecutor.accessTestCaseMainPhase(CommonExecutor.java:65)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:150)
	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:106)
	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:180)
	at TempTestSuite1736466949911.run(TempTestSuite1736466949911.groovy:35)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
Caused by: com.kms.katalon.core.exception.StepFailedException: Actual object '-1291521' and expected object '-1252328' are not equal
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.doCall(VerifyEqualKeyword.groovy:58)
	at com.kms.katalon.core.keyword.builtin.VerifyEqualKeyword$_verifyEqual_closure1.call(VerifyEqualKeyword.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:75)
	... 24 more]]></system-err>
      </testcase>
      <system-out><![CDATA[10-01-2025T02:55:54 - [TEST_SUITE][FAILED] - Сверка дашбордов из разных блоков: Test Cases/Сверки дашбордов/Выполнение бизнес-плана сверка дашбордов FAILED.
Reason:
com.kms.katalon.core.exception.StepFailedException: Unable to verify object is present (Root cause: com.kms.katalon.core.exception.StepFailedException: Unable to verify object is present
	at com.kms.katalon.core.webui.keyword.internal.WebUIKeywordMain.stepFailed(WebUIKeywordMain.groovy:64)
	at com.kms.katalon.core.webui.keyword.internal.WebUIKeywordMain.runKeyword(WebUIKeywordMain.groovy:26)
	at com.kms.katalon.core.webui.keyword.builtin.VerifyElementPresentKeyword.verifyElementPresent(VerifyElementPresentKeyword.groovy:92)
	at com.kms.katalon.core.webui.keyword.builtin.VerifyElementPresentKeyword.execute(VerifyElementPresentKeyword.groovy:68)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:74)
	at com.kms.katalon.core.webui.keyword.WebUiBuiltInKeywords.verifyElementPresent(WebUiBuiltInKeywords.groovy:1503)
	at Выполнение бизнес-плана сверка дашбордов.GetAllPAOData(Выполнение бизнес-плана сверка дашбордов:862)
	at Выполнение бизнес-плана сверка дашбордов.run(Выполнение бизнес-плана сверка дашбордов:362)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:448)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:439)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:418)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:410)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:285)
	at com.kms.katalon.core.common.CommonExecutor.accessTestCaseMainPhase(CommonExecutor.java:65)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:150)
	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:106)
	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:180)
	at TempTestSuite1736466949911.run(TempTestSuite1736466949911.groovy:35)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
Caused by: java.lang.IllegalArgumentException: Object is null
	at com.kms.katalon.core.helper.KeywordHelper.checkTestObjectParameter(KeywordHelper.java:33)
	at com.kms.katalon.core.webui.keyword.builtin.VerifyElementPresentKeyword$_verifyElementPresent_closure1.doCall(VerifyElementPresentKeyword.groovy:76)
	at com.kms.katalon.core.webui.keyword.builtin.VerifyElementPresentKeyword$_verifyElementPresent_closure1.call(VerifyElementPresentKeyword.groovy)
	at com.kms.katalon.core.webui.keyword.internal.WebUIKeywordMain.runKeyword(WebUIKeywordMain.groovy:20)
	at com.kms.katalon.core.webui.keyword.builtin.VerifyElementPresentKeyword.verifyElementPresent(VerifyElementPresentKeyword.groovy:92)
	at com.kms.katalon.core.webui.keyword.builtin.VerifyElementPresentKeyword.execute(VerifyElementPresentKeyword.groovy:68)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:74)
	at com.kms.katalon.core.webui.keyword.WebUiBuiltInKeywords.verifyElementPresent(WebUiBuiltInKeywords.groovy:1503)
	at Script1719299571342.GetAllPAOData(Script1719299571342.groovy:862)
	at Script1719299571342.run(Script1719299571342.groovy:362)
	... 15 more
)
	at com.kms.katalon.core.keyword.internal.KeywordMain.stepFailed(KeywordMain.groovy:39)
	at com.kms.katalon.core.webui.keyword.internal.WebUIKeywordMain.stepFailed(WebUIKeywordMain.groovy:64)
	at com.kms.katalon.core.webui.keyword.internal.WebUIKeywordMain.runKeyword(WebUIKeywordMain.groovy:26)
	at com.kms.katalon.core.webui.keyword.builtin.VerifyElementPresentKeyword.verifyElementPresent(VerifyElementPresentKeyword.groovy:92)
	at com.kms.katalon.core.webui.keyword.builtin.VerifyElementPresentKeyword.execute(VerifyElementPresentKeyword.groovy:68)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:74)
	at com.kms.katalon.core.webui.keyword.WebUiBuiltInKeywords.verifyElementPresent(WebUiBuiltInKeywords.groovy:1503)
	at Выполнение бизнес-плана сверка дашбордов.GetAllPAOData(Выполнение бизнес-плана сверка дашбордов:862)
	at Выполнение бизнес-плана сверка дашбордов.run(Выполнение бизнес-плана сверка дашбордов:362)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:448)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:439)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:418)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:410)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:285)
	at com.kms.katalon.core.common.CommonExecutor.accessTestCaseMainPhase(CommonExecutor.java:65)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:150)
	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:106)
	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:180)
	at TempTestSuite1736466949911.run(TempTestSuite1736466949911.groovy:35)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
Caused by: com.kms.katalon.core.exception.StepFailedException: Unable to verify object is present
	... 23 more
Caused by: java.lang.IllegalArgumentException: Object is null
	at com.kms.katalon.core.helper.KeywordHelper.checkTestObjectParameter(KeywordHelper.java:33)
	at com.kms.katalon.core.webui.keyword.builtin.VerifyElementPresentKeyword$_verifyElementPresent_closure1.doCall(VerifyElementPresentKeyword.groovy:76)
	at com.kms.katalon.core.webui.keyword.builtin.VerifyElementPresentKeyword$_verifyElementPresent_closure1.call(VerifyElementPresentKeyword.groovy)
	at com.kms.katalon.core.webui.keyword.internal.WebUIKeywordMain.runKeyword(WebUIKeywordMain.groovy:20)
	... 21 more]]></system-out>
      <system-err><![CDATA[10-01-2025T02:55:54 - [TEST_SUITE][FAILED] - Сверка дашбордов из разных блоков: Test Cases/Сверки дашбордов/Выполнение бизнес-плана сверка дашбордов FAILED.
Reason:
com.kms.katalon.core.exception.StepFailedException: Unable to verify object is present (Root cause: com.kms.katalon.core.exception.StepFailedException: Unable to verify object is present
	at com.kms.katalon.core.webui.keyword.internal.WebUIKeywordMain.stepFailed(WebUIKeywordMain.groovy:64)
	at com.kms.katalon.core.webui.keyword.internal.WebUIKeywordMain.runKeyword(WebUIKeywordMain.groovy:26)
	at com.kms.katalon.core.webui.keyword.builtin.VerifyElementPresentKeyword.verifyElementPresent(VerifyElementPresentKeyword.groovy:92)
	at com.kms.katalon.core.webui.keyword.builtin.VerifyElementPresentKeyword.execute(VerifyElementPresentKeyword.groovy:68)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:74)
	at com.kms.katalon.core.webui.keyword.WebUiBuiltInKeywords.verifyElementPresent(WebUiBuiltInKeywords.groovy:1503)
	at Выполнение бизнес-плана сверка дашбордов.GetAllPAOData(Выполнение бизнес-плана сверка дашбордов:862)
	at Выполнение бизнес-плана сверка дашбордов.run(Выполнение бизнес-плана сверка дашбордов:362)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:448)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:439)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:418)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:410)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:285)
	at com.kms.katalon.core.common.CommonExecutor.accessTestCaseMainPhase(CommonExecutor.java:65)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:150)
	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:106)
	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:180)
	at TempTestSuite1736466949911.run(TempTestSuite1736466949911.groovy:35)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
Caused by: java.lang.IllegalArgumentException: Object is null
	at com.kms.katalon.core.helper.KeywordHelper.checkTestObjectParameter(KeywordHelper.java:33)
	at com.kms.katalon.core.webui.keyword.builtin.VerifyElementPresentKeyword$_verifyElementPresent_closure1.doCall(VerifyElementPresentKeyword.groovy:76)
	at com.kms.katalon.core.webui.keyword.builtin.VerifyElementPresentKeyword$_verifyElementPresent_closure1.call(VerifyElementPresentKeyword.groovy)
	at com.kms.katalon.core.webui.keyword.internal.WebUIKeywordMain.runKeyword(WebUIKeywordMain.groovy:20)
	at com.kms.katalon.core.webui.keyword.builtin.VerifyElementPresentKeyword.verifyElementPresent(VerifyElementPresentKeyword.groovy:92)
	at com.kms.katalon.core.webui.keyword.builtin.VerifyElementPresentKeyword.execute(VerifyElementPresentKeyword.groovy:68)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:74)
	at com.kms.katalon.core.webui.keyword.WebUiBuiltInKeywords.verifyElementPresent(WebUiBuiltInKeywords.groovy:1503)
	at Script1719299571342.GetAllPAOData(Script1719299571342.groovy:862)
	at Script1719299571342.run(Script1719299571342.groovy:362)
	... 15 more
)
	at com.kms.katalon.core.keyword.internal.KeywordMain.stepFailed(KeywordMain.groovy:39)
	at com.kms.katalon.core.webui.keyword.internal.WebUIKeywordMain.stepFailed(WebUIKeywordMain.groovy:64)
	at com.kms.katalon.core.webui.keyword.internal.WebUIKeywordMain.runKeyword(WebUIKeywordMain.groovy:26)
	at com.kms.katalon.core.webui.keyword.builtin.VerifyElementPresentKeyword.verifyElementPresent(VerifyElementPresentKeyword.groovy:92)
	at com.kms.katalon.core.webui.keyword.builtin.VerifyElementPresentKeyword.execute(VerifyElementPresentKeyword.groovy:68)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:74)
	at com.kms.katalon.core.webui.keyword.WebUiBuiltInKeywords.verifyElementPresent(WebUiBuiltInKeywords.groovy:1503)
	at Выполнение бизнес-плана сверка дашбордов.GetAllPAOData(Выполнение бизнес-плана сверка дашбордов:862)
	at Выполнение бизнес-плана сверка дашбордов.run(Выполнение бизнес-плана сверка дашбордов:362)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:448)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:439)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:418)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:410)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:285)
	at com.kms.katalon.core.common.CommonExecutor.accessTestCaseMainPhase(CommonExecutor.java:65)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:150)
	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:106)
	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:180)
	at TempTestSuite1736466949911.run(TempTestSuite1736466949911.groovy:35)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
Caused by: com.kms.katalon.core.exception.StepFailedException: Unable to verify object is present
	... 23 more
Caused by: java.lang.IllegalArgumentException: Object is null
	at com.kms.katalon.core.helper.KeywordHelper.checkTestObjectParameter(KeywordHelper.java:33)
	at com.kms.katalon.core.webui.keyword.builtin.VerifyElementPresentKeyword$_verifyElementPresent_closure1.doCall(VerifyElementPresentKeyword.groovy:76)
	at com.kms.katalon.core.webui.keyword.builtin.VerifyElementPresentKeyword$_verifyElementPresent_closure1.call(VerifyElementPresentKeyword.groovy)
	at com.kms.katalon.core.webui.keyword.internal.WebUIKeywordMain.runKeyword(WebUIKeywordMain.groovy:20)
	... 21 more]]></system-err>
   </testsuite>
</testsuites>
